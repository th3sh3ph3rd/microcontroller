<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="23:RadioScannerAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f9ed012a020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f9ed0178720"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f9ed0178720"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f9ed0176e20"/></to>
    </wire>
    <wire loc="24:RadioScannerAppC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f9ed0119980"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f9ecfaa8220"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f9ecfaa8220"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f9ecfa77bf0"/></to>
    </wire>
    <wire loc="25:RadioScannerAppC.nc">
      <from><interface-ref name="Lcd" scoped="" ref="0x7f9ed0112340"/></from>
      <to><interface-ref name="BufferedLcd" scoped="" ref="0x7f9ecef7d590"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <from><interface-ref name="BufferedLcd" scoped="" ref="0x7f9ecef7d590"/></from>
      <to><interface-ref name="BufferedLcd" scoped="" ref="0x7f9ecede7020"/></to>
    </wire>
    <wire loc="26:RadioScannerAppC.nc">
      <from><interface-ref name="DBInit" scoped="" ref="0x7f9ed0118320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ecff1fb70"/></to>
    </wire>
    <wire loc="32:Database/DatabaseC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9ecff1fb70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ecff060c0"/></to>
    </wire>
    <wire loc="27:RadioScannerAppC.nc">
      <from><interface-ref name="DB" scoped="" ref="0x7f9ed0109aa0"/></from>
      <to><interface-ref name="Database" scoped="" ref="0x7f9ecff1e2d0"/></to>
    </wire>
    <wire loc="33:Database/DatabaseC.nc">
      <from><interface-ref name="Database" scoped="" ref="0x7f9ecff1e2d0"/></from>
      <to><interface-ref name="Database" scoped="" ref="0x7f9ecff066f0"/></to>
    </wire>
    <wire loc="28:RadioScannerAppC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x7f9ed0117980"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ecf5130c0"/></to>
    </wire>
    <wire loc="26:FMClick/FMClickC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9ecf5130c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ecf511440"/></to>
    </wire>
    <wire loc="29:RadioScannerAppC.nc">
      <from><interface-ref name="Radio" scoped="" ref="0x7f9ed00fe6a0"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7f9ecf5136e0"/></to>
    </wire>
    <wire loc="27:FMClick/FMClickC.nc">
      <from><interface-ref name="FMClick" scoped="" ref="0x7f9ecf5136e0"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7f9ecf511a60"/></to>
    </wire>
    <wire loc="30:RadioScannerAppC.nc">
      <from><interface-ref name="Keyboard" scoped="" ref="0x7f9ed0107020"/></from>
      <to><interface-ref name="PS2" scoped="" ref="0x7f9ecefefe60"/></to>
    </wire>
    <wire loc="20:PS2/PS2C.nc">
      <from><interface-ref name="PS2" scoped="" ref="0x7f9ecefefe60"/></from>
      <to><interface-ref name="PS2" scoped="" ref="0x7f9ecefc5860"/></to>
    </wire>
    <wire loc="31:RadioScannerAppC.nc">
      <from><interface-ref name="volumeKnob" scoped="" ref="0x7f9ed00f8c30"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f9ecef7c3e0"/></to>
    </wire>
    <wire loc="22:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f9ecef7c3e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f9ecee29be0"/></to>
    </wire>
    <wire loc="32:RadioScannerAppC.nc">
      <from><interface-ref name="VolumeTimer" scoped="" ref="0x7f9ed00ede50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9ecedc1d00"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9ecedc1d00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9ecfd15aa0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:RadioScannerAppC.nc">
      <from><interface-ref name="ErrorTimer" scoped="" ref="0x7f9ed00e9310"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9ecedba750"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9ecedba750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9ecfd15aa0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:RadioScannerAppC.nc">
      <from><interface-ref name="RDSTimer" scoped="" ref="0x7f9ed00e4810"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9ecedb3060"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9ecedb3060"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9ecfd15aa0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9ed0177bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9eceddb7c0"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9ed0177bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ecede1c30"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9ed0177bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ece360c00"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9ed0177bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ece85e620"/></to>
    </wire>
    <wire loc="96:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9ed0177bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ece90c4c0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9ed0177bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ecfa75020"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9ed0177bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ecfd0e7a0"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9ed0177bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ecfd53020"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9ed0177bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ecfe2e470"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f9ed01484b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f9ed0305a20"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f9ed0305a20"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f9ed0206990"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f9ed0147020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ed017ad00"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9ed017ad00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ed016c0c0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9ed0147720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f9ed0177bf0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f9ed0174d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ecef48830"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9ed0174020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9ed015a020"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f9ed016b020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ed015b860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f9ed016c7a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ecf23dab0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f9ed016c7a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f9ed0164020"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f9ed01646f0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f9ed0174d50"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02059e0"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f9ed02000d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f9ed021e080"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9ed01e3de0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9ecfc5a020"/></to>
    </wire>
    <wire loc="121:RadioScannerP.nc">
      <from><interface-ref name="inputTuneChannel" scoped="" ref="0x7f9ed00d12b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:RadioScannerP.nc">
      <from><interface-ref name="handleChar" scoped="" ref="0x7f9ed00bfc80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:RadioScannerP.nc">
      <from><interface-ref name="setVolume" scoped="" ref="0x7f9ed00cd2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:RadioScannerP.nc">
      <from><interface-ref name="startSeekUp" scoped="" ref="0x7f9ed00cb2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:RadioScannerP.nc">
      <from><interface-ref name="displayHardError" scoped="" ref="0x7f9ed00c52b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:RadioScannerP.nc">
      <from><interface-ref name="inputNote" scoped="" ref="0x7f9ed00d02a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:RadioScannerP.nc">
      <from><interface-ref name="startTune" scoped="" ref="0x7f9ed00c82a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:RadioScannerP.nc">
      <from><interface-ref name="displayChannelInfo" scoped="" ref="0x7f9ed00cf4b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:RadioScannerP.nc">
      <from><interface-ref name="addChannel" scoped="" ref="0x7f9ed00c72a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:RadioScannerP.nc">
      <from><interface-ref name="displayRDS" scoped="" ref="0x7f9ed00ce3c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:RadioScannerP.nc">
      <from><interface-ref name="startSeekDown" scoped="" ref="0x7f9ed00ca2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:RadioScannerP.nc">
      <from><interface-ref name="displaySoftError" scoped="" ref="0x7f9ed00c42b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:RadioScannerP.nc">
      <from><interface-ref name="startSeekBand" scoped="" ref="0x7f9ed00c92a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="Mac" scoped="" ref="0x7f9ecfdd3990"/></from>
      <to><interface-ref name="Mac" scoped="" ref="0x7f9ecfddaca0"/></to>
    </wire>
    <wire loc="35:Database/DatabaseC.nc">
      <from><interface-ref name="Mac" scoped="" ref="0x7f9ecfdd3990"/></from>
      <to><interface-ref name="Mac" scoped="" ref="0x7f9ecfaa96f0"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="Mac" scoped="" ref="0x7f9ecfaa96f0"/></from>
      <to><interface-ref name="Mac" scoped="" ref="0x7f9ecf7ceb00"/></to>
    </wire>
    <wire loc="37:Database/DatabaseC.nc">
      <from><interface-ref name="UdpSend" scoped="" ref="0x7f9ecfefca10"/></from>
      <to><interface-ref name="UdpSend" scoped="" ref="0x7f9ecf56a1f0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <from><interface-ref name="UdpSend" scoped="" ref="0x7f9ecf56a1f0"/></from>
      <to><interface-ref name="UdpSend" scoped="" ref="0x7f9ece8a0c50"/></to>
    </wire>
    <wire loc="38:Database/DatabaseC.nc">
      <from><interface-ref name="UdpReceive" scoped="" ref="0x7f9ecfefac30"/></from>
      <to><interface-ref name="UdpReceive" scoped="" ref="0x7f9ecf56a990"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <from><interface-ref name="UdpReceive" scoped="" ref="0x7f9ecf56a990"/></from>
      <to><interface-ref name="UdpReceive" scoped="" ref="0x7f9ecf563330"/>
      <arguments>
        <value cst="I:50000">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:Database/DatabaseC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7f9ecfef5bb0"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7f9ecfe3f390"/></to>
    </wire>
    <wire loc="28:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7f9ecfe3f390"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7f9ecfe31990"/></to>
    </wire>
    <wire loc="40:Database/DatabaseC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x7f9ecfef8020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f9ecf7d0330"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f9ecf7d0330"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f9ecf793cf0"/></to>
    </wire>
    <wire loc="42:Database/DatabaseC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f9ecfef8ad0"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f9ecfaa8220"/></to>
    </wire>
    <wire loc="79:Database/DatabaseP.nc">
      <from><interface-ref name="fetchList" scoped="" ref="0x7f9ecfee5bc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:Database/DatabaseP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f9ecfee8e00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:Database/DatabaseP.nc">
      <from><interface-ref name="recvTask" scoped="" ref="0x7f9ecfee6ce0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfe41ba0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfe34740"/></to>
    </wire>
    <wire loc="32:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpPacket" scoped="" ref="0x7f9ecfe3c020"/></from>
      <to><interface-ref name="IpPacket" scoped="" ref="0x7f9ecfe2eae0"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f9ecfe3dcc0"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f9ecfe31320"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7f9ecfe2b860"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7f9ecfde6930"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7f9ecfde6930"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7f9eced92490"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f9ecfe292f0"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f9ecfd6c120"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f9ecfd6c120"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f9ecfde0890"/>
      <arguments>
        <value cst="I:2048">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="Arp" scoped="" ref="0x7f9ecfe21c60"/></from>
      <to><interface-ref name="Arp" scoped="" ref="0x7f9ecfd6b3f0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="Arp" scoped="" ref="0x7f9ecfd6b3f0"/></from>
      <to><interface-ref name="Arp" scoped="" ref="0x7f9ecfd672d0"/></to>
    </wire>
    <wire loc="30:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7f9ecfd6bbf0"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7f9ecfe31990"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcQueue" scoped="" ref="0x7f9eced92c30"/></from>
      <to><interface-ref name="LlcQueue" scoped="" ref="0x7f9ecfdb2410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfde4c80"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfddc6c0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f9ecfde0890"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f9ecfdd3360"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="MacControl" scoped="" ref="0x7f9ecfdd8550"/></from>
      <to><interface-ref name="MacControl" scoped="" ref="0x7f9ecfdd2640"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <from><interface-ref name="LlcQueue" scoped="" ref="0x7f9ecfdb2410"/></from>
      <to><interface-ref name="LlcQueue" scoped="" ref="0x7f9ecfd7da00"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfd80020"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfde4c80"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecfd7a4f0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecfd82060"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecfd82060"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f9eced894a0"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9eced861e0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfd80020"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f9eced837e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="Timeout" scoped="" ref="0x7f9ecfd602f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9ecfb5e140"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9ecfb5e140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9ecfd15aa0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="ClearCacheTimeout" scoped="" ref="0x7f9ecfd5b8a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9ecfb58b00"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9ecfb58b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9ecfd15aa0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7f9ecfd56ae0"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7f9ecfb51700"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7f9ecfb51700"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7f9ececfa510"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f9ecfd55320"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f9ecfb50020"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f9ecfb50020"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f9ecfde0890"/>
      <arguments>
        <value cst="I:2054">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7f9ecfd55990"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7f9ecfd6bbf0"/></to>
    </wire>
    <wire loc="28:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="MacControl" scoped="" ref="0x7f9ecfd54960"/></from>
      <to><interface-ref name="MacControl" scoped="" ref="0x7f9ecfdd8550"/></to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecfd624a0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecfb4e4a0"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecfb4e4a0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f9ececf10b0"/></to>
    </wire>
    <wire loc="30:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfb4b360"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfd67c90"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f9ecfd15aa0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9ecfd0b5a0"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f9ecfd0b5a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9ecfb7f150"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9ecfd0e7a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ecfd017a0"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f9ecfd04020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f9ecfb70790"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9ecfd017a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ecfbfeba0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f9ecfb79640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9ecfbce830"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f9ecfbc9cd0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f9ecfcfd440"/></to>
    </wire>
    <wire loc="35:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f9ecfcfd440"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9ecfbfd4b0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9ecfb6fa60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f9ecfceeb40"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f9ecfceeb40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9ecfbf98d0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9ecfbf98d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9eced61650"/></to>
    </wire>
    <wire loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9ecfbfeba0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9eced668f0"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f9ecfbfd4b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9eced65140"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9eced5ea90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9ecfc74190"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9ecfc74190"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9ecfc65270"/></to>
    </wire>
    <wire loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f9eced59c90"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f9ecfc6f570"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f9ecfc6f570"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f9ecfc607b0"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f9eced57020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9ecfc6e9d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f9ecfc6e9d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9ecfc5fb60"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7f9eced502c0"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7f9ecfc6ad60"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7f9ecfc6ad60"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7f9ecfc5a750"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f9ecfbc4020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f9ecfb74a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcQueue" scoped="" ref="0x7f9ececfacb0"/></from>
      <to><interface-ref name="LlcQueue" scoped="" ref="0x7f9ecfdb2410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9ececf0dd0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfb4b360"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f9ececed4e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:PingC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7f9ecfab17a0"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7f9ecfb3e5f0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7f9ecfb3e5f0"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7f9ececdb630"/></to>
    </wire>
    <wire loc="19:PingC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7f9ecfab1130"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7f9ecfb3ed90"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7f9ecfb3ed90"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7f9ecfb2e610"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpQueue" scoped="" ref="0x7f9ececdbdd0"/></from>
      <to><interface-ref name="IcmpQueue" scoped="" ref="0x7f9ecface410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfb399e0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfafa290"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7f9ecfb2e610"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7f9ecfaf9df0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f9ecfaf7c90"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f9ecfb2bbd0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f9ecfb2bbd0"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f9ecfe3dcc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7f9ecfaf7490"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7f9ecfb2b430"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7f9ecfb2b430"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7f9ececd53f0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpQueue" scoped="" ref="0x7f9ececd5b90"/></from>
      <to><interface-ref name="IpQueue" scoped="" ref="0x7f9ecfb1ad60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <from><interface-ref name="IpQueue" scoped="" ref="0x7f9ecfb1ad60"/></from>
      <to><interface-ref name="IpQueue" scoped="" ref="0x7f9ecfb0f9f0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecfb0b4e0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecfb14060"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecfb14060"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f9ececcda00"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfb12020"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfe41ba0"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9ececca770"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfb12020"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f9ececc9d60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <from><interface-ref name="IcmpQueue" scoped="" ref="0x7f9ecface410"/></from>
      <to><interface-ref name="IcmpQueue" scoped="" ref="0x7f9ecfac4450"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecfac4e30"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecfaccae0"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecfaccae0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f9ececb1e30"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfac99d0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfb399e0"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9ececaebd0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfac99d0"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f9ececac290"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Hpl" scoped="" ref="0x7f9ecfa6e640"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7f9ecfaa6640"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="HplKS0108" scoped="" ref="0x7f9ecfaa6640"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7f9ecf9ffbe0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_0" scoped="" ref="0x7f9ecf9f57b0"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x7f9ecf992350"/></to>
    </wire>
    <wire loc="175:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f9ecf992350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ecf8ef020"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_1" scoped="" ref="0x7f9ecf9fb9c0"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x7f9ecf991670"/></to>
    </wire>
    <wire loc="176:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f9ecf991670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ecf8ee2b0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RS" scoped="" ref="0x7f9ecf9f4cd0"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7f9ecf990990"/></to>
    </wire>
    <wire loc="177:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f9ecf990990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ecf8ed440"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RW" scoped="" ref="0x7f9ecf9f2020"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7f9ecf98fcb0"/></to>
    </wire>
    <wire loc="178:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f9ecf98fcb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ecf8ec5d0"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="EN" scoped="" ref="0x7f9ecf9f1370"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f9ecf98d020"/></to>
    </wire>
    <wire loc="179:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f9ecf98d020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ecf8eb760"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RST" scoped="" ref="0x7f9ecf9f0690"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7f9ecf98c350"/></to>
    </wire>
    <wire loc="180:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f9ecf98c350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ecf8ea8f0"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="Data" scoped="" ref="0x7f9ecf9ee060"/></from>
      <to><interface-ref name="PortA" scoped="" ref="0x7f9ecf845c40"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortA" scoped="" ref="0x7f9ecf845c40"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf82ec90"/></to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f9ecf9e4910"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f9ecf7dd2e0"/></to>
    </wire>
    <wire loc="191:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f9ecf981020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf8916d0"/></to>
    </wire>
    <wire loc="165:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f9ecf99e800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ecf901c10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ecf901c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceb1ee20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ecf8ee2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceaac3f0"/></to>
    </wire>
    <wire loc="185:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f9ecf987020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ecf8df5d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ecf8df5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecea3e3f0"/></to>
    </wire>
    <wire loc="196:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f9ecf97a350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf877c90"/></to>
    </wire>
    <wire loc="143:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f9ecf9b5990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ecf929a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ecf929a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecec4e9b0"/></to>
    </wire>
    <wire loc="183:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f9ecf98a990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ecf8e12b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ecf8e12b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecea45e20"/></to>
    </wire>
    <wire loc="146:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f9ecf9b2020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ecf9203f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ecf9203f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecebf7a60"/></to>
    </wire>
    <wire loc="157:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f9ecf9a6020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ecf90fa80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ecf90fa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceb850a0"/></to>
    </wire>
    <wire loc="168:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f9ecf999060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ecf8fd2b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ecf8fd2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceb146d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ecf8eb760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceaa2e20"/></to>
    </wire>
    <wire loc="138:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f9ecf9bcb20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ecf92f2b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ecf92f2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecec689b0"/></to>
    </wire>
    <wire loc="149:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f9ecf9af990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ecf91d8f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ecf91d8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecebed3f0"/></to>
    </wire>
    <wire loc="160:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f9ecf9a3990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ecf90b020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ecf90b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceb7b9b0"/></to>
    </wire>
    <wire loc="171:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f9ecf996990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ecf8f9760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ecf8f9760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceb090a0"/></to>
    </wire>
    <wire loc="188:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f9ecf984990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ecf8dca80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ecf8dca80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecea34e20"/></to>
    </wire>
    <wire loc="194:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f9ecf97ecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf8816d0"/></to>
    </wire>
    <wire loc="174:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f9ecf993020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ecf8f2e60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ecf8f2e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceab3e20"/></to>
    </wire>
    <wire loc="141:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f9ecf9b8350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ecf92b760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ecf92b760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecec5d3f0"/></to>
    </wire>
    <wire loc="152:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f9ecf9ab350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ecf91ada0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ecf91ada0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecebe3e20"/></to>
    </wire>
    <wire loc="192:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f9ecf980670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf88c160"/></to>
    </wire>
    <wire loc="155:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f9ecf9a9990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ecf9117a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ecf9117a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceb8cc90"/></to>
    </wire>
    <wire loc="166:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f9ecf99db20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ecf900da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ecf900da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceb1a0a0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ecf8ed440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceaa96d0"/></to>
    </wire>
    <wire loc="186:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f9ecf986350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ecf8de760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ecf8de760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecea3b6d0"/></to>
    </wire>
    <wire loc="144:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f9ecf9b4cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ecf928c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ecf928c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecec4be20"/></to>
    </wire>
    <wire loc="147:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f9ecf9b1350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ecf91f5d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ecf91f5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecebf4e20"/></to>
    </wire>
    <wire loc="158:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f9ecf9a5350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ecf90ec10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ecf90ec10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceb823f0"/></to>
    </wire>
    <wire loc="169:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f9ecf998350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ecf8fb440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ecf8fb440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceb109b0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ecf8ea8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecea9e0a0"/></to>
    </wire>
    <wire loc="139:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f9ecf9bbe40"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ecf92d440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ecf92d440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecec65e20"/></to>
    </wire>
    <wire loc="150:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f9ecf9aecb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ecf91ca80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ecf91ca80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecebe96d0"/></to>
    </wire>
    <wire loc="161:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f9ecf9a2cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ecf90a2b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ecf90a2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceb78e20"/></to>
    </wire>
    <wire loc="189:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f9ecf983cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ecf8dbc10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ecf8dbc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecea300a0"/></to>
    </wire>
    <wire loc="164:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f9ecf99f350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ecf902a20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ecf902a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceb21c90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ecf8ef020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceaaf0a0"/></to>
    </wire>
    <wire loc="184:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f9ecf989cb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ecf8e0440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ecf8e0440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecea410a0"/></to>
    </wire>
    <wire loc="195:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f9ecf97b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf87c160"/></to>
    </wire>
    <wire loc="142:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f9ecf9b7670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ecf92a8f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ecf92a8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecec5a6d0"/></to>
    </wire>
    <wire loc="153:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f9ecf9aa670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ecf918020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ecf918020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecebdf0a0"/></to>
    </wire>
    <wire loc="182:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f9ecf98b670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ecf8e2020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ecf8e2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecea48c90"/></to>
    </wire>
    <wire loc="156:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f9ecf9a8cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ecf9108f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ecf9108f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceb89e20"/></to>
    </wire>
    <wire loc="167:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f9ecf99ce40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ecf8fe020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ecf8fe020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceb173f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ecf8ec5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceaa59b0"/></to>
    </wire>
    <wire loc="187:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f9ecf985670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ecf8dd8f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ecf8dd8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecea389b0"/></to>
    </wire>
    <wire loc="137:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f9ecf9bf860"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ecf930140"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ecf930140"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecec6b6d0"/></to>
    </wire>
    <wire loc="148:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f9ecf9b0670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ecf91e760"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ecf91e760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecebf00a0"/></to>
    </wire>
    <wire loc="159:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f9ecf9a4670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ecf90dda0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ecf90dda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceb7e6d0"/></to>
    </wire>
    <wire loc="170:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f9ecf997670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ecf8fa5d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ecf8fa5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceb0de20"/></to>
    </wire>
    <wire loc="193:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f9ecf97f990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf887c90"/></to>
    </wire>
    <wire loc="173:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f9ecf995cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ecf8f3d30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ecf8f3d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceab6c90"/></to>
    </wire>
    <wire loc="162:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f9ecf9a0020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ecf909440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ecf909440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9eceb740a0"/></to>
    </wire>
    <wire loc="140:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f9ecf9b9060"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ecf92c5d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ecf92c5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecec600a0"/></to>
    </wire>
    <wire loc="151:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f9ecf9ac020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ecf91bc10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ecf91bc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecebe69b0"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortL" scoped="" ref="0x7f9ecf837870"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf7eac90"/></to>
    </wire>
    <wire loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortD" scoped="" ref="0x7f9ecf840e80"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf80bcd0"/></to>
    </wire>
    <wire loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortG" scoped="" ref="0x7f9ecf83c1d0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf7fccd0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortJ" scoped="" ref="0x7f9ecf839550"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf7f3c90"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortB" scoped="" ref="0x7f9ecf842d20"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf815390"/></to>
    </wire>
    <wire loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortE" scoped="" ref="0x7f9ecf83e020"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf806390"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortH" scoped="" ref="0x7f9ecf83b3c0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf7f8c90"/></to>
    </wire>
    <wire loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortK" scoped="" ref="0x7f9ecf8386e0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf7eec90"/></to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortC" scoped="" ref="0x7f9ecf841de0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf810910"/></to>
    </wire>
    <wire loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortF" scoped="" ref="0x7f9ecf83d100"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf801910"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="Enc28j60Control" scoped="" ref="0x7f9ecf79bba0"/></from>
      <to><interface-ref name="Enc28j60Control" scoped="" ref="0x7f9ecf78e880"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f9ecf78d430"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f9ecf722b00"/></to>
    </wire>
    <wire loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f9ecf722b00"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f9ecf713340"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9ecf793020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9ecf721bd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="ssETH" scoped="" ref="0x7f9ecf7996c0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f9ecf9b2020"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="rstETH" scoped="" ref="0x7f9ecf7989d0"/></from>
      <to><interface-ref name="PortB4" scoped="" ref="0x7f9ecf9aecb0"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="intETH" scoped="" ref="0x7f9ecf78f620"/></from>
      <to><interface-ref name="Int2" scoped="" ref="0x7f9ecf5d9b70"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f9ecf5d9b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9ecf592c90"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="intPin" scoped="" ref="0x7f9ecf797cf0"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f9ecf99db20"/></to>
    </wire>
    <wire loc="179:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <from><interface-ref name="checkInterruptflag" scoped="" ref="0x7f9ecf7575d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f9ecf716e60"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f9ecf7125f0"/></to>
    </wire>
    <wire loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9ecf728300"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ecf714670"/></to>
    </wire>
    <wire loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f9ecf71e400"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f9ecf713980"/></to>
    </wire>
    <wire loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9ecf721bd0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9ecf710320"/></to>
    </wire>
    <wire loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="SpiControl" scoped="" ref="0x7f9ecf7224a0"/></from>
      <to><interface-ref name="SpiControl" scoped="" ref="0x7f9ecf714cb0"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f9ecf6f3740"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9ecf5e7520"/></to>
    </wire>
    <wire loc="98:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9ecf5e7520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9ece90a9d0"/></to>
    </wire>
    <wire loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ecf6efcd0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ecf5e5b20"/></to>
    </wire>
    <wire loc="100:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ecf5e5b20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ece908020"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f9ecf6f4340"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f9ecf69f100"/></to>
    </wire>
    <wire loc="83:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f9ecf69f100"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f9ecf699060"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f9ecf6f1510"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f9ed01e45a0"/></to>
    </wire>
    <wire loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f9ecf6cdde0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f9ecf690b30"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f9ed01e45a0"/></to>
    </wire>
    <wire loc="86:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f9ecf695020"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f9ecf9b2020"/></to>
    </wire>
    <wire loc="87:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f9ecf694330"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f9ecf9b1350"/></to>
    </wire>
    <wire loc="88:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f9ecf6924e0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f9ecf9b0670"/></to>
    </wire>
    <wire loc="89:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f9ecf6917f0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f9ecf9af990"/></to>
    </wire>
    <wire loc="99:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f9ecf5e53a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f9ece909850"/></to>
    </wire>
    <wire loc="101:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ece908910"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ecf5e4570"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f9ece907120"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f9ece90cad0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f9ece907c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7f9ecf5d5b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9ecf581c90"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f9ecf5dab70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9ecf597da0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7f9ecf5d7b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9ecf589c90"/></to>
    </wire>
    <wire loc="78:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7f9ecf5d4b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9ecf57cc90"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7f9ecf5d6b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9ecf585c90"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f9ecf5ddb20"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9ecf5ae060"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f9ecf5d8b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9ecf58ec90"/></to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9ecf5aee80"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f9ecf5cda00"/></to>
    </wire>
    <wire loc="81:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9ecf595c20"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f9ecf5cf230"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9ecf591b40"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f9ecf5cf9b0"/></to>
    </wire>
    <wire loc="83:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9ecf58db40"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7f9ecf5ce150"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9ecf588b40"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7f9ecf5ce8d0"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9ecf584b40"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7f9ecf5cb0b0"/></to>
    </wire>
    <wire loc="86:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9ecf580b40"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7f9ecf5cb830"/></to>
    </wire>
    <wire loc="87:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9ecf57bb40"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7f9ecf5ca020"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <from><interface-ref name="UdpQueue" scoped="" ref="0x7f9ece89f440"/></from>
      <to><interface-ref name="UdpQueue" scoped="" ref="0x7f9ecf5331d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:UdpTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9ecf566710"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9ecf560b70"/></to>
    </wire>
    <wire loc="23:UdpTransceiverC.nc">
      <from><interface-ref name="UdpReceive" scoped="" ref="0x7f9ecf563330"/></from>
      <to><interface-ref name="UdpReceive" scoped="" ref="0x7f9ecf55b730"/></to>
    </wire>
    <wire loc="21:UdpTransceiverC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7f9ecf55ac70"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7f9ecf55fe60"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7f9ecf55fe60"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7f9ece892b10"/></to>
    </wire>
    <wire loc="24:UdpTransceiverC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f9ecf55a600"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f9ecf5612b0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f9ecf5612b0"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f9ecfe3dcc0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:UdpTransceiverC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7f9ecf55bd80"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7f9ecf5629d0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7f9ecf5629d0"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7f9ece8990c0"/></to>
    </wire>
    <wire loc="26:UdpTransceiverC.nc">
      <from><interface-ref name="IpPacket" scoped="" ref="0x7f9ecf5594a0"/></from>
      <to><interface-ref name="IpPacket" scoped="" ref="0x7f9ecfe3c020"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpQueue" scoped="" ref="0x7f9ece899860"/></from>
      <to><interface-ref name="IpQueue" scoped="" ref="0x7f9ecfb1ad60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7f9ecf55e630"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7f9ecfb2e610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpQueue" scoped="" ref="0x7f9ece891440"/></from>
      <to><interface-ref name="IcmpQueue" scoped="" ref="0x7f9ecface410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <from><interface-ref name="UdpQueue" scoped="" ref="0x7f9ecf5331d0"/></from>
      <to><interface-ref name="UdpQueue" scoped="" ref="0x7f9ecf5281d0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecf528bb0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecf531790"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecf531790"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f9ece8850b0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9ecf52e620"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9ecf566710"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9ece883dd0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9ecf52e620"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f9ece8814e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:FMClick/FMClickC.nc">
      <from><interface-ref name="Int" scoped="" ref="0x7f9ecf50d020"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7f9ecf5d8b70"/></to>
    </wire>
    <wire loc="31:FMClick/FMClickC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7f9ecf50c020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9ecf3feaf0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9ecf3feaf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9ecf3f29b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:FMClick/FMClickC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f9ecf4fdb50"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9ecf21b890"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f9ecf21b890"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9ecf3ee020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:FMClick/FMClickC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9ecf4faa80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9ecf215b80"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9ecf215b80"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9ecfd15aa0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:FMClick/FMClickC.nc">
      <from><interface-ref name="RSTPin" scoped="" ref="0x7f9ecf4f5df0"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f9ecf1ec670"/></to>
    </wire>
    <wire loc="250:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f9ecf1ec670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ecf16d440"/></to>
    </wire>
    <wire loc="37:FMClick/FMClickC.nc">
      <from><interface-ref name="SDIOPin" scoped="" ref="0x7f9ecf4f3020"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f9ecf1ed350"/></to>
    </wire>
    <wire loc="249:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f9ecf1ed350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ecf16e2b0"/></to>
    </wire>
    <wire loc="38:FMClick/FMClickC.nc">
      <from><interface-ref name="INTPin" scoped="" ref="0x7f9ecf4f2350"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7f9ecf1eb990"/></to>
    </wire>
    <wire loc="251:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f9ecf1eb990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ecf16c5d0"/></to>
    </wire>
    <wire loc="40:FMClick/FMClickC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f9ecf4f15c0"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f9ecfaa8220"/></to>
    </wire>
    <wire loc="187:FMClick/FMClickP.nc">
      <from><interface-ref name="seek" scoped="" ref="0x7f9ecf4de020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:FMClick/FMClickP.nc">
      <from><interface-ref name="writeI2C" scoped="" ref="0x7f9ecf4d82a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="193:FMClick/FMClickP.nc">
      <from><interface-ref name="registerWriteback" scoped="" ref="0x7f9ecf4d62b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:FMClick/FMClickP.nc">
      <from><interface-ref name="readRegisters" scoped="" ref="0x7f9ecf4db510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:FMClick/FMClickP.nc">
      <from><interface-ref name="init" scoped="" ref="0x7f9ecf4e0120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:FMClick/FMClickP.nc">
      <from><interface-ref name="decodeRDS" scoped="" ref="0x7f9ecf4dc020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:FMClick/FMClickP.nc">
      <from><interface-ref name="writeRegisters" scoped="" ref="0x7f9ecf4d92b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:FMClick/FMClickP.nc">
      <from><interface-ref name="readI2C" scoped="" ref="0x7f9ecf4da3c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:FMClick/FMClickP.nc">
      <from><interface-ref name="tune" scoped="" ref="0x7f9ecf4df020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9ecf3f29b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9ecf333020"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f9ecf3ee020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9ecf332020"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f9ecf32ee40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9ecf380e60"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9ecf380e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9ece85be40"/></to>
    </wire>
    <wire loc="64:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f9ecf32cc40"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9ecf2b8c00"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7f9ecf3288e0"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7f9ecf2b38e0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9ecf379550"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9ecf2b8340"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ecf36d2f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ecf37e400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ecf37e400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ece859400"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f9ecf2b2020"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f9ecf2a70e0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f9ecf2a70e0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f9ecf2a3a70"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f9ecf2b0ac0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9ecf235980"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f9ecf2ae160"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9ecf235980"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f9ecf37fbf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f9ece85abd0"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ecf37d060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ece858060"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ece858950"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ecf37d930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f9ece857130"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f9ece85ec30"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f9ece8542f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f9ecf2ad7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7f9ecf29e540"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7f9ecf99f350"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7f9ecf29d810"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f9ecf99e800"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f9ecf2674a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9ecf263dc0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9ecf23dab0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ecf2637c0"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f9ecf25f550"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f9ecf2401d0"/></to>
    </wire>
    <wire loc="57:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f9ecf2401d0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f9ecf9bf860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f9ecf25e7f0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f9ecf23f510"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f9ecf23f510"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f9ecf9bcb20"/></to>
    </wire>
    <wire loc="56:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f9ecf25db10"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f9ecf23e830"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f9ecf23e830"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f9ecf9bbe40"/></to>
    </wire>
    <wire loc="275:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f9ecf1d1cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf1166d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ecf16e2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece635e20"/></to>
    </wire>
    <wire loc="260:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f9ecf1e1350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ecf15d8f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ecf15d8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece5c33f0"/></to>
    </wire>
    <wire loc="269:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f9ecf1d8cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ecf14ec10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ecf14ec10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece5583f0"/></to>
    </wire>
    <wire loc="280:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f9ecf1ca060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf0fcc90"/></to>
    </wire>
    <wire loc="284:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH2" scoped="" ref="0x7f9ecf1c7990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf0d6c90"/></to>
    </wire>
    <wire loc="289:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH7" scoped="" ref="0x7f9ecf1c1990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf0bd9b0"/></to>
    </wire>
    <wire loc="297:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ6" scoped="" ref="0x7f9ecf1b7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf09a180"/></to>
    </wire>
    <wire loc="300:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK0" scoped="" ref="0x7f9ecf1b5670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf090c90"/></to>
    </wire>
    <wire loc="311:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL2" scoped="" ref="0x7f9ecf1a9670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf05e180"/></to>
    </wire>
    <wire loc="227:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f9ecf205350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ecf1972b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ecf1972b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece76a0a0"/></to>
    </wire>
    <wire loc="267:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f9ecf1da670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ecf1508f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ecf1508f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece55fe20"/></to>
    </wire>
    <wire loc="230:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f9ecf203990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ecf18fa20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ecf18fa20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece70e060"/></to>
    </wire>
    <wire loc="241:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f9ecf1f7990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ecf17c020"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ecf17c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece69c0a0"/></to>
    </wire>
    <wire loc="252:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f9ecf1eacb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ecf16b760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ecf16b760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece62b6d0"/></to>
    </wire>
    <wire loc="263:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f9ecf1decb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ecf15ada0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ecf15ada0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece5b9e20"/></to>
    </wire>
    <wire loc="222:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f9ecf20b4e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ecf19d8f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ecf19d8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece77b0a0"/></to>
    </wire>
    <wire loc="233:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f9ecf1ff350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ecf18b020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ecf18b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece7059b0"/></to>
    </wire>
    <wire loc="244:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f9ecf1f2350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ecf1795d0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ecf1795d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece6929b0"/></to>
    </wire>
    <wire loc="255:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f9ecf1e6670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ecf168c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ecf168c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece6200a0"/></to>
    </wire>
    <wire loc="272:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f9ecf1d3670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ecf1492b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ecf1492b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece54ee20"/></to>
    </wire>
    <wire loc="278:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f9ecf1cdb20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf1066d0"/></to>
    </wire>
    <wire loc="282:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH0" scoped="" ref="0x7f9ecf1c9350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf0e0020"/></to>
    </wire>
    <wire loc="258:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f9ecf1e4cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ecf15f5d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ecf15f5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece5cae20"/></to>
    </wire>
    <wire loc="287:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH5" scoped="" ref="0x7f9ecf1c3350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf0c7e20"/></to>
    </wire>
    <wire loc="292:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ1" scoped="" ref="0x7f9ecf1be020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf0b36d0"/></to>
    </wire>
    <wire loc="295:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ4" scoped="" ref="0x7f9ecf1bb990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf0a46d0"/></to>
    </wire>
    <wire loc="303:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK3" scoped="" ref="0x7f9ecf1b1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf081c90"/></to>
    </wire>
    <wire loc="306:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK6" scoped="" ref="0x7f9ecf1ae990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf072c90"/></to>
    </wire>
    <wire loc="309:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL0" scoped="" ref="0x7f9ecf1ab020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf0686d0"/></to>
    </wire>
    <wire loc="314:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL5" scoped="" ref="0x7f9ecf1a5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf04f6d0"/></to>
    </wire>
    <wire loc="225:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f9ecf208e40"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ecf19ada0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ecf19ada0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece7719b0"/></to>
    </wire>
    <wire loc="236:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f9ecf1fccb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ecf1875d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ecf1875d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece6fa3f0"/></to>
    </wire>
    <wire loc="276:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f9ecf1cf4e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf111160"/></to>
    </wire>
    <wire loc="239:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f9ecf1f9350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ecf180d30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ecf180d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece6a3a60"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ecf16d440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece6310a0"/></to>
    </wire>
    <wire loc="261:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f9ecf1e0670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ecf15ca80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ecf15ca80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece5c06d0"/></to>
    </wire>
    <wire loc="270:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f9ecf1d5020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ecf14cda0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ecf14cda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece5556d0"/></to>
    </wire>
    <wire loc="285:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH3" scoped="" ref="0x7f9ecf1c6cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf0d1180"/></to>
    </wire>
    <wire loc="298:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ7" scoped="" ref="0x7f9ecf1b6350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf0956d0"/></to>
    </wire>
    <wire loc="301:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK1" scoped="" ref="0x7f9ecf1b4990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf08b180"/></to>
    </wire>
    <wire loc="312:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL3" scoped="" ref="0x7f9ecf1a8990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf0596d0"/></to>
    </wire>
    <wire loc="293:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ2" scoped="" ref="0x7f9ecf1bd350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf0aec90"/></to>
    </wire>
    <wire loc="228:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f9ecf204670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ecf195440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ecf195440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece7673f0"/></to>
    </wire>
    <wire loc="304:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK4" scoped="" ref="0x7f9ecf1b0350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf07c180"/></to>
    </wire>
    <wire loc="315:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL6" scoped="" ref="0x7f9ecf1a4350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf04ac90"/></to>
    </wire>
    <wire loc="231:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f9ecf202cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ecf18ec10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ecf18ec10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece70b3f0"/></to>
    </wire>
    <wire loc="242:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f9ecf1f6cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ecf17b2b0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ecf17b2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece6993f0"/></to>
    </wire>
    <wire loc="253:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f9ecf1e8020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ecf16a8f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ecf16a8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece6279b0"/></to>
    </wire>
    <wire loc="264:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f9ecf1dc020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ecf157020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ecf157020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece5b50a0"/></to>
    </wire>
    <wire loc="223:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f9ecf20a800"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ecf19ca80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ecf19ca80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece7783f0"/></to>
    </wire>
    <wire loc="234:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f9ecf1fe670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ecf1892b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ecf1892b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece701e20"/></to>
    </wire>
    <wire loc="245:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f9ecf1f1670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ecf178760"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ecf178760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece68fe20"/></to>
    </wire>
    <wire loc="273:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f9ecf1d2990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ecf148440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ecf148440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece54a0a0"/></to>
    </wire>
    <wire loc="283:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH1" scoped="" ref="0x7f9ecf1c8670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf0db6d0"/></to>
    </wire>
    <wire loc="248:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f9ecf1efcb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ecf16f020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ecf16f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece638c90"/></to>
    </wire>
    <wire loc="259:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f9ecf1e2020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ecf15e760"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ecf15e760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece5c60a0"/></to>
    </wire>
    <wire loc="268:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f9ecf1d9990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ecf14fa80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ecf14fa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece55b0a0"/></to>
    </wire>
    <wire loc="279:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f9ecf1cce40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf101160"/></to>
    </wire>
    <wire loc="288:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH6" scoped="" ref="0x7f9ecf1c2670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf0c2460"/></to>
    </wire>
    <wire loc="296:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ5" scoped="" ref="0x7f9ecf1b9cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf09fc90"/></to>
    </wire>
    <wire loc="307:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK7" scoped="" ref="0x7f9ecf1adcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf06d180"/></to>
    </wire>
    <wire loc="310:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL1" scoped="" ref="0x7f9ecf1aa350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf063c90"/></to>
    </wire>
    <wire loc="226:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f9ecf206060"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ecf198020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ecf198020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece76ee20"/></to>
    </wire>
    <wire loc="237:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f9ecf1fa020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ecf186760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ecf186760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece6f76d0"/></to>
    </wire>
    <wire loc="266:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f9ecf1db350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ecf1517a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ecf1517a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece562c90"/></to>
    </wire>
    <wire loc="240:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f9ecf1f8670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ecf17ee60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ecf17ee60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece6a0e20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ecf16c5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece62e3f0"/></to>
    </wire>
    <wire loc="262:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f9ecf1df990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ecf15bc10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ecf15bc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece5bc9b0"/></to>
    </wire>
    <wire loc="271:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f9ecf1d4350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ecf14a020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ecf14a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece5529b0"/></to>
    </wire>
    <wire loc="221:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f9ecf20c1e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ecf19e7a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ecf19e7a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece77fda0"/></to>
    </wire>
    <wire loc="232:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f9ecf200020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ecf18dda0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ecf18dda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece7086d0"/></to>
    </wire>
    <wire loc="243:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f9ecf1f3020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ecf17a440"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ecf17a440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece6956d0"/></to>
    </wire>
    <wire loc="254:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f9ecf1e7350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ecf169a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ecf169a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece624e20"/></to>
    </wire>
    <wire loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f9ecf1ce800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf10cc90"/></to>
    </wire>
    <wire loc="286:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH4" scoped="" ref="0x7f9ecf1c4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf0cc830"/></to>
    </wire>
    <wire loc="291:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ0" scoped="" ref="0x7f9ecf1c0cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf0b8160"/></to>
    </wire>
    <wire loc="257:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f9ecf1e5990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ecf1603f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ecf1603f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece5cdc90"/></to>
    </wire>
    <wire loc="294:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ3" scoped="" ref="0x7f9ecf1bc670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf0a9180"/></to>
    </wire>
    <wire loc="302:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK2" scoped="" ref="0x7f9ecf1b3cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf0866d0"/></to>
    </wire>
    <wire loc="305:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK5" scoped="" ref="0x7f9ecf1af670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf0776d0"/></to>
    </wire>
    <wire loc="313:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL4" scoped="" ref="0x7f9ecf1a7cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf0530a0"/></to>
    </wire>
    <wire loc="316:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL7" scoped="" ref="0x7f9ecf1a3670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ecf045180"/></to>
    </wire>
    <wire loc="246:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f9ecf1f0990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ecf1778f0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ecf1778f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece68b0a0"/></to>
    </wire>
    <wire loc="224:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f9ecf209b20"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ecf19bc10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ecf19bc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece7746d0"/></to>
    </wire>
    <wire loc="235:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f9ecf1fd990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ecf188440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ecf188440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ece6fd0a0"/></to>
    </wire>
    <wire loc="21:PS2/PS2C.nc">
      <from><interface-ref name="ClockIRQ" scoped="" ref="0x7f9ecefbdd90"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x7f9ecefeaca0"/></to>
    </wire>
    <wire loc="23:PS2/PS2C.nc">
      <from><interface-ref name="ClockPin" scoped="" ref="0x7f9ecefc21c0"/></from>
      <to><interface-ref name="PortK7" scoped="" ref="0x7f9ecf1adcb0"/></to>
    </wire>
    <wire loc="24:PS2/PS2C.nc">
      <from><interface-ref name="DataPin" scoped="" ref="0x7f9ecefbc4f0"/></from>
      <to><interface-ref name="PortK6" scoped="" ref="0x7f9ecf1ae990"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f9ecee29be0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f9ecef64920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="VolumePin" scoped="" ref="0x7f9ecef77700"/></from>
      <to><interface-ref name="PortF0" scoped="" ref="0x7f9ecf1db350"/></to>
    </wire>
    <wire loc="26:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f9ecee26320"/></from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f9ecef73470"/></to>
    </wire>
    <wire loc="27:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ecee26c10"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ecef73e10"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f9ecef5f6d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f9ecee26320"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9ecef5b5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9ecef57280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ecef54210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ecee26c10"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f9ecef64920"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f9ecee4b150"/></to>
    </wire>
    <wire loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f9ecef5d8f0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f9ecee751d0"/></to>
    </wire>
    <wire loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9ecee30300"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9ecef5b5e0"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f9ecee73a10"/></from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f9ecef5f6d0"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f9ecee33af0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f9ecee78410"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f9ecee749f0"/></from>
      <to><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f9ecef50780"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f9ecef50780"/></from>
      <to><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f9ecef47830"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f9ecee72740"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f9ecf7dd2e0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9ecef57280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9ecee93e70"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9ecee93e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9ece35d4d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f9ecef4a420"/></from>
      <to><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f9ecef46330"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ecee90930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ecef54210"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f9ecef36710"/></from>
      <to><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f9ecef03460"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <from><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f9ecef03460"/></from>
      <to><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f9eceefe7d0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9ecef44be0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9ed0174020"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9ecee8b020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9ecef47020"/></to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ecee8bd50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ecee91400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ecee91400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ece35cb20"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f9eceefcc10"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f9ed01e45a0"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f9ecee92c00"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f9ece35c3a0"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ecee90060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ece35a8b0"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ece359210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ecee90930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f9ece3599d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f9ece35f2b0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f9ece357c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9ece324660"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9ecee8b020"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f9ece324dc0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f9ecee8b780"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ece3233d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ecee8bd50"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ece322020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ecee82990"/></to>
    </wire>
    <wire loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7f9ecee60820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9ecede6020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9ecee1f560"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9ecee1f560"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9ecfd15aa0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <from><interface-ref name="Lcd" scoped="" ref="0x7f9ecede1490"/></from>
      <to><interface-ref name="HplLcd" scoped="" ref="0x7f9eceddc100"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <from><interface-ref name="HplLcd" scoped="" ref="0x7f9eceddc100"/></from>
      <to><interface-ref name="HplLcd" scoped="" ref="0x7f9eceddbe10"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <from><interface-ref name="refresh" scoped="" ref="0x7f9ecede02f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <from><interface-ref name="Port" scoped="" ref="0x7f9ecedd86e0"/></from>
      <to><interface-ref name="PortC" scoped="" ref="0x7f9ecf841de0"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f9ecedd7aa0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f9ecf7dd2e0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../tinyos_ws18/tos/system/MainC.nc">
      <documentation loc="45:../tinyos_ws18/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <documentation loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../tinyos_ws18/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../tinyos_ws18/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../tinyos_ws18/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc" safe="">
      <documentation loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioScannerP" loc="27:RadioScannerP.nc">
      <module/>
    </component>
    <component qname="DatabaseC" loc="14:Database/DatabaseC.nc">
      <configuration/>
    </component>
    <component qname="DatabaseP" loc="22:Database/DatabaseP.nc">
      <module/>
    </component>
    <component qname="IpTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IpTransceiverP" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <module/>
    </component>
    <component qname="IpTransceiverC.LlcC" loc="10(IpTransceiverC.LlcC):../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LlcC"/>
        <arguments>
          <value cst="I:2048">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LlcTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LlcTransceiverP" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IpTransceiverC.LlcC.LlcP" loc="10(IpTransceiverC.LlcC.LlcP):../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LlcP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LlcQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LlcQueueC.PacketQueueC" loc="8(LlcQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9ecfe35b60"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f9ecfe34180"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LlcQueueC.PacketQueueC.PacketQueueP" loc="11(LlcQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="0">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f9ecfdae1c0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LlcQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ArpC" loc="8:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ArpP" loc="11:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ArpC.TimerMilliC" loc="44(ArpC.TimerMilliC):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <documentation loc="11:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC" loc="32(AlarmCounterMilliP.Atm1280AlarmSyncC):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:124">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP" loc="33(AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f9ecfcecc70"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280Timer2SyncC" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <documentation loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280Timer2SyncP" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc" safe="">
      <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changed to sync mode&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10; &#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ArpC.ClearCacheTimeoutC" loc="44(ArpC.ClearCacheTimeoutC):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArpC.LlcC" loc="10(ArpC.LlcC):../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LlcC"/>
        <arguments>
          <value cst="I:2054">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ArpC.LlcC.LlcP" loc="10(ArpC.LlcC.LlcP):../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LlcP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ArpC.PacketQueueC" loc="8(ArpC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f9ecfe24080"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f9ecfe24970"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ArpC.PacketQueueC.PacketQueueP" loc="11(ArpC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="1">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f9ecfdae1c0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PingC.IcmpC" loc="10(PingC.IcmpC):../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <instance number="0">
        <component-ref qname="IcmpC"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IcmpTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IcmpTransceiverC.IpC" loc="10(IcmpTransceiverC.IpC):../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IpC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IcmpTransceiverC.IpC.IpP" loc="10(IcmpTransceiverC.IpC.IpP):../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IpQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IpQueueC.PacketQueueC" loc="8(IpQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f9ecff147c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f9ecff14d40"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IpQueueC.PacketQueueC.PacketQueueP" loc="11(IpQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="2">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f9ecfdae1c0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IpQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IcmpTransceiverP" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PingC.IcmpC.IcmpP" loc="10(PingC.IcmpC.IcmpP):../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IcmpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IcmpQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IcmpQueueC.PacketQueueC" loc="8(IcmpQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f9ecfb3bb40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f9ecfb3a230"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IcmpQueueC.PacketQueueC.PacketQueueP" loc="11(IcmpQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="3">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f9ecfdae1c0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IcmpQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PingP" loc="8:PingP.nc">
      <documentation loc="1:PingP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="GlcdC" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
        <short>&#10; High level implementation for KS0108 Glcd&#10; </short>
        <long>&#10; High level implementation for KS0108 Glcd&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="GlcdP" loc="41:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <module/>
    </component>
    <component qname="HplKS0108C" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
        <short>&#10; Configuration for KS0108 GLCD Display&#10; </short>
        <long>&#10; Configuration for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplKS0108P" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
        <short>&#10; Hpl implementation for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl implementation for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10; Based on an implementation of Andreas Hagmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC" loc="6:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortAP" loc="6(HplAtm128GeneralIOFastPortC.PortAP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortBP" loc="6(HplAtm128GeneralIOFastPortC.PortBP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortCP" loc="6(HplAtm128GeneralIOFastPortC.PortCP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortDP" loc="6(HplAtm128GeneralIOFastPortC.PortDP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortEP" loc="6(HplAtm128GeneralIOFastPortC.PortEP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortFP" loc="6(HplAtm128GeneralIOFastPortC.PortFP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortGP" loc="6(HplAtm128GeneralIOFastPortC.PortGP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortHP" loc="6(HplAtm128GeneralIOFastPortC.PortHP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortJP" loc="6(HplAtm128GeneralIOFastPortC.PortJP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortKP" loc="6(HplAtm128GeneralIOFastPortC.PortKP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortLP" loc="6(HplAtm128GeneralIOFastPortC.PortLP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:9">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="38:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc" safe="">
      <documentation loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Enc28j60C" loc="7:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Harald Glanzer, 0727156 TU Wien&#10;&#10; overhauled by Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Enc28j60P" loc="9:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/enc28j60/enc28j60.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Harald Glanzer, 0727156 TU Wien&#10;&#10; overhauled by Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm1280SpiC" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <documentation loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280SpiP" loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc" safe="">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.h">
        <short>&#10; </short>
        <long>&#10; @author Markus Hartmann e988811@student.tuwien.ac.at&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm1280SpiC.Arbiter" loc="83(Atm1280SpiC.Arbiter):../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280SpiC.Arbiter.Queue" loc="42(Atm1280SpiC.Arbiter.Queue):../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280SpiC.Arbiter.Arbiter" loc="49(Atm1280SpiC.Arbiter.Arbiter):../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DatabaseC.UdpC" loc="10(DatabaseC.UdpC):../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="UdpC"/>
        <arguments>
          <value cst="I:50000">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC" loc="10:UdpTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC.IpC" loc="10(UdpTransceiverC.IpC):../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="IpC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC.IpC.IpP" loc="10(UdpTransceiverC.IpC.IpP):../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="IpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UdpTransceiverP" loc="10:UdpTransceiverP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UdpTransceiverC.IcmpC" loc="10(UdpTransceiverC.IcmpC):../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <instance number="1">
        <component-ref qname="IcmpC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC.IcmpC.IcmpP" loc="10(UdpTransceiverC.IcmpC.IcmpP):../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="IcmpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DatabaseC.UdpC.UdpP" loc="10(DatabaseC.UdpC.UdpP):../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="UdpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UdpQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UdpQueueC.PacketQueueC" loc="8(UdpQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9ecfeff2c0"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f9ecfeff8f0"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpQueueC.PacketQueueC.PacketQueueP" loc="11(UdpQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="4">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f9ecfdae1c0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UdpQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC" loc="11:FMClick/FMClickC.nc">
      <documentation loc="1:FMClick/FMClickC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; Configuration of the FMClick module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="FMClickP" loc="17:FMClick/FMClickP.nc">
      <documentation loc="1:FMClick/FMClickP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; FMClick module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC.I2C" loc="43(FMClickC.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../tinyos_ws18/tos/system/LedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc" safe="">
      <documentation loc="35:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../tinyos_ws18/tos/system/NoLedsC.nc">
      <documentation loc="35:../tinyos_ws18/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC.Timer" loc="44(FMClickC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; Changed for Atm1280&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA" loc="40(HplAtm1280GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit0" loc="41(HplAtm1280GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="48">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit1" loc="41(HplAtm1280GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="49">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit2" loc="41(HplAtm1280GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="50">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit3" loc="41(HplAtm1280GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="51">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit4" loc="41(HplAtm1280GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="52">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit5" loc="41(HplAtm1280GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="53">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit6" loc="41(HplAtm1280GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="54">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit7" loc="41(HplAtm1280GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="55">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB" loc="40(HplAtm1280GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit0" loc="41(HplAtm1280GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="56">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit1" loc="41(HplAtm1280GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="57">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit2" loc="41(HplAtm1280GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="58">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit3" loc="41(HplAtm1280GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="59">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit4" loc="41(HplAtm1280GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="60">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit5" loc="41(HplAtm1280GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="61">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit6" loc="41(HplAtm1280GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="62">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit7" loc="41(HplAtm1280GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="63">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC" loc="40(HplAtm1280GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit0" loc="41(HplAtm1280GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="64">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit1" loc="41(HplAtm1280GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="65">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit2" loc="41(HplAtm1280GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="66">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit3" loc="41(HplAtm1280GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="67">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit4" loc="41(HplAtm1280GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="68">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit5" loc="41(HplAtm1280GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="69">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit6" loc="41(HplAtm1280GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="70">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit7" loc="41(HplAtm1280GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="71">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD" loc="40(HplAtm1280GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit0" loc="41(HplAtm1280GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="72">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit1" loc="41(HplAtm1280GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="73">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit2" loc="41(HplAtm1280GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="74">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit3" loc="41(HplAtm1280GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="75">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit4" loc="41(HplAtm1280GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="76">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit5" loc="41(HplAtm1280GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="77">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit6" loc="41(HplAtm1280GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="78">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit7" loc="41(HplAtm1280GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="79">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE" loc="40(HplAtm1280GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit0" loc="41(HplAtm1280GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="80">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit1" loc="41(HplAtm1280GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="81">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit2" loc="41(HplAtm1280GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="82">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit3" loc="41(HplAtm1280GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="83">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit4" loc="41(HplAtm1280GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="84">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit5" loc="41(HplAtm1280GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="85">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit6" loc="41(HplAtm1280GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="86">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit7" loc="41(HplAtm1280GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="87">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF" loc="40(HplAtm1280GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit0" loc="41(HplAtm1280GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="88">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit1" loc="41(HplAtm1280GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="89">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit2" loc="41(HplAtm1280GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="90">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit3" loc="41(HplAtm1280GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="91">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit4" loc="41(HplAtm1280GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="92">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit5" loc="41(HplAtm1280GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="93">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit6" loc="41(HplAtm1280GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="94">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit7" loc="41(HplAtm1280GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="95">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F0" loc="42(HplAtm1280GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F1" loc="42(HplAtm1280GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F2" loc="42(HplAtm1280GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F3" loc="42(HplAtm1280GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F4" loc="42(HplAtm1280GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F5" loc="42(HplAtm1280GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F6" loc="42(HplAtm1280GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F7" loc="42(HplAtm1280GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G0" loc="42(HplAtm1280GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G1" loc="42(HplAtm1280GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G2" loc="42(HplAtm1280GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G3" loc="42(HplAtm1280GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G4" loc="42(HplAtm1280GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G5" loc="42(HplAtm1280GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H0" loc="42(HplAtm1280GeneralIOC.H0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H1" loc="42(HplAtm1280GeneralIOC.H1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H2" loc="42(HplAtm1280GeneralIOC.H2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H3" loc="42(HplAtm1280GeneralIOC.H3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H4" loc="42(HplAtm1280GeneralIOC.H4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H5" loc="42(HplAtm1280GeneralIOC.H5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H6" loc="42(HplAtm1280GeneralIOC.H6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H7" loc="42(HplAtm1280GeneralIOC.H7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J0" loc="42(HplAtm1280GeneralIOC.J0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J1" loc="42(HplAtm1280GeneralIOC.J1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J2" loc="42(HplAtm1280GeneralIOC.J2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J3" loc="42(HplAtm1280GeneralIOC.J3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J4" loc="42(HplAtm1280GeneralIOC.J4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J5" loc="42(HplAtm1280GeneralIOC.J5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J6" loc="42(HplAtm1280GeneralIOC.J6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J7" loc="42(HplAtm1280GeneralIOC.J7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K0" loc="42(HplAtm1280GeneralIOC.K0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K1" loc="42(HplAtm1280GeneralIOC.K1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K2" loc="42(HplAtm1280GeneralIOC.K2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K3" loc="42(HplAtm1280GeneralIOC.K3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K4" loc="42(HplAtm1280GeneralIOC.K4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K5" loc="42(HplAtm1280GeneralIOC.K5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K6" loc="42(HplAtm1280GeneralIOC.K6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K7" loc="42(HplAtm1280GeneralIOC.K7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L0" loc="42(HplAtm1280GeneralIOC.L0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L1" loc="42(HplAtm1280GeneralIOC.L1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L2" loc="42(HplAtm1280GeneralIOC.L2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L3" loc="42(HplAtm1280GeneralIOC.L3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L4" loc="42(HplAtm1280GeneralIOC.L4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L5" loc="42(HplAtm1280GeneralIOC.L5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L6" loc="42(HplAtm1280GeneralIOC.L6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L7" loc="42(HplAtm1280GeneralIOC.L7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PS2C" loc="11:PS2/PS2C.nc">
      <documentation loc="1:PS2/PS2C.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file    PS2C.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; Configuration of the PS2 module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PS2P" loc="18:PS2/PS2P.nc">
      <module/>
    </component>
    <component qname="HplAtmegaPinChange2C" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtmegaPinChange2C.nc">
      <module/>
    </component>
    <component qname="VolumeAdcC" loc="13:VolumeAdc/VolumeAdcC.nc">
      <documentation loc="1:VolumeAdc/VolumeAdcC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file VolumeAdcC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; Configuration of the VolumeAdc module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="VolumeAdcP" loc="13:VolumeAdc/VolumeAdcP.nc">
      <documentation loc="1:VolumeAdc/VolumeAdcP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file VolumeAdcP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; VolumeAdc module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="VolumeAdcC.Adc" loc="21(VolumeAdcC.Adc):../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.  Users of this component must link it to an&#10; implementation of Atm1280AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <documentation loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280AdcP" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc" safe="">
      <documentation loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
        <short>&#10; Internal component of the Atmega1280 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1280 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm1280AdcC" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
        <short>&#10; HPL for the Atmega1280 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1280 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280AdcP" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc" safe="">
      <documentation loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
        <short>&#10; HPL for the Atmega1280 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1280 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter" loc="89(Atm1280AdcC.AdcArbiter):../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter.Queue" loc="42(Atm1280AdcC.AdcArbiter.Queue):../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter.Arbiter" loc="52(Atm1280AdcC.AdcArbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280AdcC.PM" loc="67(Atm1280AdcC.PM):../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC.PM.PowerManager" loc="58(Atm1280AdcC.PM.PowerManager):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc" safe="">
      <documentation loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
        <short>&#10; Convert ATmega1280 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega1280 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BufferedLcdC" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BufferedLcdC.Timer" loc="44(BufferedLcdC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BufferedLcdC.BufferedLcdP" loc="6(BufferedLcdC.BufferedLcdP):../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BufferedLcdP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplLcdC" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplLcdP" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioScannerAppC.VolumeTimer" loc="44(RadioScannerAppC.VolumeTimer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioScannerAppC.ErrorTimer" loc="44(RadioScannerAppC.ErrorTimer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioScannerAppC.RDSTimer" loc="44(RadioScannerAppC.RDSTimer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LlcC" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="ETHER_TYPE" ref="0x7f9ecfe3a9d0" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
          <component-ref qname="LlcC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LlcP" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="ETHER_TYPE" ref="0x7f9ecfde2bb0" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
          <component-ref qname="LlcP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PacketQueueC" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <typedef name="ITEM_TYPE" ref="0x7f9ecfdae1c0" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
          <component-ref qname="PacketQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f9ecfdae1c0"/></type-var>
        </typedef>
        <constant name="LEN" ref="0x7f9ecfdae4f0" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
          <component-ref qname="PacketQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc" abstract="">
      <parameters>
        <typedef name="ITEM_TYPE" ref="0x7f9ecfda1020" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
          <component-ref qname="PacketQueueP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f9ecfda1020"/></type-var>
        </typedef>
        <constant name="QUEUE_LEN" ref="0x7f9ecfda1390" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
          <component-ref qname="PacketQueueP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../tinyos_ws18/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncC" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc" abstract="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f9ecfcecc70" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f9ecfcecc70"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7f9ecfce9060" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7f9ecfce93f0" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncP" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f9ecfcdc020" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f9ecfcdc020"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7f9ecfcdc3b0" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7f9ecfcdc740" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9ecfbf2160" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9ecfbf2160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9ecfbc0230" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9ecfbc0230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f9ecfbc0560" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9ecfb72de0" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9ecfb72de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="IcmpC" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc" abstract="">
      <parameters>
        <constant name="TYPE" ref="0x7f9ecfb3a650" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
          <component-ref qname="IcmpC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IpC" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PROTOCOL" ref="0x7f9ecfb2d6b0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
          <component-ref qname="IpC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IpP" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PROTOCOL" ref="0x7f9ecfb29650" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
          <component-ref qname="IpP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="IcmpP" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="TYPE" ref="0x7f9ecfadc020" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
          <component-ref qname="IcmpP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9ecf977900" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9ecf977c70" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9ecf974020" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9ecf969d00" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9ecf9660d0" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9ecf966460" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f9ecf9667b0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9ecf8d4890" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9ecf8d4c20" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9ecf8d0020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f9ecf8d0370" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortP" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9ecf82fba0" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9ecf82c020" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9ecf82c390" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f9ecf646e40" loc="83:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f9ecf636210" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../tinyos_ws18/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f9ecf5ad3d0" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f9ecf5ad760" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f9ecf5adaf0" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f9ecf5ade40" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="UdpC" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PORT" ref="0x7f9ecf56c450" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
          <component-ref qname="UdpC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="UdpP" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PORT" ref="0x7f9ecf543e70" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
          <component-ref qname="UdpP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f9ecf3e8c20" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbiterP" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f9ecf3d8a00" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9ecf0f54c0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9ecf0f5860" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9ecf0f5c00" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f9ecf0f4020" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.  Users of this component must link it to an&#10; implementation of Atm1280AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f9eceec15c0" loc="89:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f9eceebbe80" loc="42:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadC" loc="23:../tinyos_ws18/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7f9ecee4a1f0" loc="23:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7f9ecee4a1f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="BufferedLcdP" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <parameters>
        <constant name="LINES" ref="0x7f9ecee19b70" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
          <component-ref qname="BufferedLcdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
        <constant name="LINE_WIDTH" ref="0x7f9ecee16020" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
          <component-ref qname="BufferedLcdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f9ed0177bf0" loc="58:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f9ed0177bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ed017a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f9ed0178720" loc="57:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f9ed0178720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f9ed0178aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f9ed0174d50" loc="52:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f9ed0174d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ed0173100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ed017ad00" loc="46:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ed017ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ed01750a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f9ed0174020" loc="50:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9ed0174020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f9ed01743a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f9ed0174530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f9ed01746c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f9ed0174850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f9ed01749e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f9ed016c7a0" loc="45:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f9ed016c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ed016cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ed016c0c0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ed016c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ed016c440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f9ed016b020" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f9ed016b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ed016b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f9ed01646f0" loc="4:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f9ed01646f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ed0164a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f9ed0164020" loc="3:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f9ed0164020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ed01643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ed015b860" loc="51:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ed015b860"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9ed03073a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9ed03073a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ed015bbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f9ed015a020" loc="52:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9ed015a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f9ed015a3a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f9ed015a530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f9ed015a6c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f9ed015a850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f9ed015a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f9ed0147720" loc="60:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f9ed0147720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ed0147aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f9ed0176e20" loc="57:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f9ed0176e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f9ed01481c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f9ed0147020" loc="59:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f9ed0147020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ed01473a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f9ed01484b0" loc="58:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f9ed01484b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ed0148830"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f9ed01489c0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f9ed0148b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f9ed02fbbd0" loc="48:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02fbbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ed032f020"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ed032f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f9ed0305a20" loc="47:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f9ed0305a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ed0305da0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f9ed0cb3020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f9ed0cb31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f9ed02059e0" loc="56:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f9ed02059e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ed0205d60"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ed0203020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f9ed02000d0" loc="57:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f9ed02000d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f9ed0200450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f9ed0206990" loc="55:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f9ed0206990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ed0206d10"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f9ed0205020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f9ed02051b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f9ed01e3de0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9ed01e3de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f9ed01e6180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f9ed021e080" loc="84:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f9ed021e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f9ed021e400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f9ed01e45a0" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f9ed01e45a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f9ed01e4920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RDSTimer" ref="0x7f9ed00e4810" loc="41:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RDSTimer" scoped="" ref="0x7f9ed00e4810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ed00e0cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ed00e2300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ed00e00d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ed00e2c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ed00df660"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ed00df1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ed00e2780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ed00e3480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ed00e06e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ed00e3950"/>
        <function-ref name="stop" scoped="" ref="0x7f9ed00e3e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DB" ref="0x7f9ed0109aa0" loc="34:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DB" scoped="" ref="0x7f9ed0109aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Database"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannelList" scoped="" ref="0x7f9ed0109e20"/>
        <function-ref name="receivedChannelEntry" scoped="" ref="0x7f9ed0117020"/>
        <function-ref name="saveChannel" scoped="" ref="0x7f9ed01171b0"/>
        <function-ref name="savedChannel" scoped="" ref="0x7f9ed0117340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9ed01174d0"/>
        <function-ref name="purgeChannelList" scoped="" ref="0x7f9ed0117660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x7f9ed0117980" loc="35:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x7f9ed0117980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ed0117d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f9ed012a020" loc="30:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f9ed012a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f9ed012a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="volumeKnob" ref="0x7f9ed00f8c30" loc="38:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="volumeKnob" scoped="" ref="0x7f9ed00f8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ed00fd860"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ed00fdce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="inputTuneChannel" ref="0x7f9ed00d12b0" loc="121:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="inputTuneChannel" scoped="" ref="0x7f9ed00d12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ed00d1730"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ed00d18c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="handleChar" ref="0x7f9ed00bfc80" loc="146:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="handleChar" scoped="" ref="0x7f9ed00bfc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ed00be410"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ed00be5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Keyboard" ref="0x7f9ed0107020" loc="37:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Keyboard" scoped="" ref="0x7f9ed0107020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ed01073a0"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f9ed0107530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="setVolume" ref="0x7f9ed00cd2a0" loc="125:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="setVolume" scoped="" ref="0x7f9ed00cd2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ed00cd620"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ed00cd7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumeTimer" ref="0x7f9ed00ede50" loc="39:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeTimer" scoped="" ref="0x7f9ed00ede50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ed00ea390"/>
        <function-ref name="fired" scoped="" ref="0x7f9ed00f6970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ed00ec720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ed00ec2a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ed00eac90"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ed00ea810"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ed00f6df0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ed00f7a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ed00ecd30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ed00f6020"/>
        <function-ref name="stop" scoped="" ref="0x7f9ed00f64f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startSeekUp" ref="0x7f9ed00cb2a0" loc="126:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startSeekUp" scoped="" ref="0x7f9ed00cb2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ed00cb620"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ed00cb7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DBInit" ref="0x7f9ed0118320" loc="33:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DBInit" scoped="" ref="0x7f9ed0118320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ed01186a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="displayHardError" ref="0x7f9ed00c52b0" loc="131:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="displayHardError" scoped="" ref="0x7f9ed00c52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ed00c5630"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ed00c57c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="inputNote" ref="0x7f9ed00d02a0" loc="122:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="inputNote" scoped="" ref="0x7f9ed00d02a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ed00d0620"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ed00d07b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lcd" ref="0x7f9ed0112340" loc="32:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lcd" scoped="" ref="0x7f9ed0112340"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferedLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ed01126c0"/>
        <function-ref name="forceRefresh" scoped="" ref="0x7f9ed0112850"/>
        <function-ref name="goTo" scoped="" ref="0x7f9ed01129e0"/>
        <function-ref name="write" scoped="" ref="0x7f9ed0112b70"/>
        <function-ref name="autoRefresh" scoped="" ref="0x7f9ed0112d00"/>
        <function-ref name="write_P" scoped="" ref="0x7f9ed0118020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ErrorTimer" ref="0x7f9ed00e9310" loc="40:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ErrorTimer" scoped="" ref="0x7f9ed00e9310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ed00e5870"/>
        <function-ref name="fired" scoped="" ref="0x7f9ed00e8e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ed00e7c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ed00e7780"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ed00e41e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ed00e5cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ed00e7300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ed00e8020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ed00e5260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ed00e84f0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ed00e89c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTune" ref="0x7f9ed00c82a0" loc="129:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTune" scoped="" ref="0x7f9ed00c82a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ed00c8620"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ed00c87b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Radio" ref="0x7f9ed00fe6a0" loc="36:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Radio" scoped="" ref="0x7f9ed00fe6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f9ed01087f0"/>
        <function-ref name="initDone" scoped="" ref="0x7f9ed00febb0"/>
        <function-ref name="setVolume" scoped="" ref="0x7f9ed00fed40"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f9ed0108020"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f9ed01081b0"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f9ed0108340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9ed01084d0"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f9ed0108660"/>
        <function-ref name="seek" scoped="" ref="0x7f9ed00fea20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="displayChannelInfo" ref="0x7f9ed00cf4b0" loc="123:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="displayChannelInfo" scoped="" ref="0x7f9ed00cf4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ed00cf830"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ed00cf9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="addChannel" ref="0x7f9ed00c72a0" loc="130:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="addChannel" scoped="" ref="0x7f9ed00c72a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ed00c7620"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ed00c77b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="displayRDS" ref="0x7f9ed00ce3c0" loc="124:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="displayRDS" scoped="" ref="0x7f9ed00ce3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ed00ce740"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ed00ce8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startSeekDown" ref="0x7f9ed00ca2a0" loc="127:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startSeekDown" scoped="" ref="0x7f9ed00ca2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ed00ca620"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ed00ca7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="displaySoftError" ref="0x7f9ed00c42b0" loc="132:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="displaySoftError" scoped="" ref="0x7f9ed00c42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ed00c4630"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ed00c47c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f9ed0119980" loc="31:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f9ed0119980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f9ed0129b10"/>
        <function-ref name="drawRect" scoped="" ref="0x7f9ed0129020"/>
        <function-ref name="drawLine" scoped="" ref="0x7f9ed01291b0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f9ed0129340"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f9ed01294d0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f9ed0129660"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f9ed01297f0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f9ed0119d00"/>
        <function-ref name="drawText" scoped="" ref="0x7f9ed0129980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startSeekBand" ref="0x7f9ed00c92a0" loc="128:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startSeekBand" scoped="" ref="0x7f9ed00c92a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ed00c9620"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ed00c97b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ecff1fb70" loc="17:Database/DatabaseC.nc">
      <component-ref qname="DatabaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ecff1fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ecff1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Database" ref="0x7f9ecff1e2d0" loc="18:Database/DatabaseC.nc">
      <component-ref qname="DatabaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Database" scoped="" ref="0x7f9ecff1e2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Database"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannelList" scoped="" ref="0x7f9ecff1e650"/>
        <function-ref name="receivedChannelEntry" scoped="" ref="0x7f9ecff1e7e0"/>
        <function-ref name="saveChannel" scoped="" ref="0x7f9ecff1e970"/>
        <function-ref name="savedChannel" scoped="" ref="0x7f9ecff1eb00"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9ecff1ec90"/>
        <function-ref name="purgeChannelList" scoped="" ref="0x7f9ecff1ee20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fetchList" ref="0x7f9ecfee5bc0" loc="79:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fetchList" scoped="" ref="0x7f9ecfee5bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ecfee4020"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ecfee41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpControl" ref="0x7f9ecfef5bb0" loc="32:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f9ecfef5bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f9ecfef9020"/>
        <function-ref name="getGateway" scoped="" ref="0x7f9ecfef91b0"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f9ecfef9340"/>
        <function-ref name="getIp" scoped="" ref="0x7f9ecfef94d0"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f9ecfef9660"/>
        <function-ref name="setIp" scoped="" ref="0x7f9ecfef97f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f9ecfee8e00" loc="77:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f9ecfee8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ecfee61c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ecfee6350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ecff060c0" loc="25:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ecff060c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ecff06440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Database" ref="0x7f9ecff066f0" loc="26:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Database" scoped="" ref="0x7f9ecff066f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Database"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannelList" scoped="" ref="0x7f9ecff06a70"/>
        <function-ref name="receivedChannelEntry" scoped="" ref="0x7f9ecff06c00"/>
        <function-ref name="saveChannel" scoped="" ref="0x7f9ecff06d90"/>
        <function-ref name="savedChannel" scoped="" ref="0x7f9ecff05020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9ecff051b0"/>
        <function-ref name="purgeChannelList" scoped="" ref="0x7f9ecff05340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UdpSend" ref="0x7f9ecfefca10" loc="30:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpSend" scoped="" ref="0x7f9ecfefca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfefcd90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecff03020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Control" ref="0x7f9ecfef8020" loc="33:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Control" scoped="" ref="0x7f9ecfef8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9ecfef83a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9ecfef8530"/>
        <function-ref name="start" scoped="" ref="0x7f9ecfef86c0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecfef8850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UdpReceive" ref="0x7f9ecfefac30" loc="31:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7f9ecfefac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecff02020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f9ecfef8ad0" loc="35:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f9ecfef8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f9ecfef3b10"/>
        <function-ref name="drawRect" scoped="" ref="0x7f9ecfef3020"/>
        <function-ref name="drawLine" scoped="" ref="0x7f9ecfef31b0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f9ecfef3340"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f9ecfef34d0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f9ecfef3660"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f9ecfef37f0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f9ecfef8e50"/>
        <function-ref name="drawText" scoped="" ref="0x7f9ecfef3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="recvTask" ref="0x7f9ecfee6ce0" loc="78:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="recvTask" scoped="" ref="0x7f9ecfee6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ecfee50a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ecfee5230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f9ecfe41ba0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfe41ba0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9ed03073a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9ed03073a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f9ecff147c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f9ecff14d40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfe447b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfe44cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpControl" ref="0x7f9ecfe3f390" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f9ecfe3f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f9ecfe3f710"/>
        <function-ref name="getGateway" scoped="" ref="0x7f9ecfe3f8a0"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f9ecfe3fa30"/>
        <function-ref name="getIp" scoped="" ref="0x7f9ecfe3fbc0"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f9ecfe3fd50"/>
        <function-ref name="setIp" scoped="" ref="0x7f9ecfe3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpPacket" ref="0x7f9ecfe3c020" loc="14:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpPacket" scoped="" ref="0x7f9ecfe3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacket" scoped="" ref="0x7f9ecfe3c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7f9ecfe3dcc0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f9ecfe3dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecfe3f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f9ecfe34740" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfe34740"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f9ecff147c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f9ecff14d40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfe32390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfe328a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcReceive" ref="0x7f9ecfe292f0" loc="16:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f9ecfe292f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecfe29670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpControl" ref="0x7f9ecfe31990" loc="14:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f9ecfe31990"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f9ecfe31d10"/>
        <function-ref name="getGateway" scoped="" ref="0x7f9ecfe30020"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f9ecfe301b0"/>
        <function-ref name="getIp" scoped="" ref="0x7f9ecfe30340"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f9ecfe304d0"/>
        <function-ref name="setIp" scoped="" ref="0x7f9ecfe30660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcSend" ref="0x7f9ecfe2b860" loc="15:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f9ecfe2b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfe2bbe0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfe2bd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Arp" ref="0x7f9ecfe21c60" loc="17:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Arp" scoped="" ref="0x7f9ecfe21c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Arp"/>
      </instance>
      <interface-functions>
        <function-ref name="resolve" scoped="" ref="0x7f9ecfe2e020"/>
        <function-ref name="resolved" scoped="" ref="0x7f9ecfe2e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ecfe2e470" loc="18:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ecfe2e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ecfe2e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpPacket" ref="0x7f9ecfe2eae0" loc="19:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpPacket" scoped="" ref="0x7f9ecfe2eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacket" scoped="" ref="0x7f9ecfe2ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7f9ecfe31320" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f9ecfe31320"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecfe316a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7f9ecfd6c120" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="IpTransceiverC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f9ecfd6c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecfd6c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7f9ecfde6930" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="IpTransceiverC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f9ecfde6930"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfde6cb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfde6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f9ecfde4c80" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfde4c80"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9ed03073a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9ed03073a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9ecfe35b60"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f9ecfe34180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfde18a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfde1db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7f9ecfde0890" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f9ecfde0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecfde0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MacControl" ref="0x7f9ecfdd8550" loc="14:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MacControl" scoped="" ref="0x7f9ecfdd8550"/></type-interface>
      <instance>
        <interfacedef-ref qname="MacControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getMac" scoped="" ref="0x7f9ecfdd88d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mac" ref="0x7f9ecfddaca0" loc="13:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7f9ecfddaca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfddd0a0"/>
        <function-ref name="received" scoped="" ref="0x7f9ecfddd230"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfddd3c0"/>
        <function-ref name="getMac" scoped="" ref="0x7f9ecfddd550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f9ecfddc6c0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfddc6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9ecfe35b60"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f9ecfe34180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfdd4390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfdd48a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7f9ecfdd3360" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f9ecfdd3360"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecfdd36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MacControl" ref="0x7f9ecfdd2640" loc="14:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MacControl" scoped="" ref="0x7f9ecfdd2640"/></type-interface>
      <instance>
        <interfacedef-ref qname="MacControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getMac" scoped="" ref="0x7f9ecfdd29c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mac" ref="0x7f9ecfdd3990" loc="13:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7f9ecfdd3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfdd3d10"/>
        <function-ref name="received" scoped="" ref="0x7f9ecfdd2020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfdd21b0"/>
        <function-ref name="getMac" scoped="" ref="0x7f9ecfdd2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7f9eced92490" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="IpTransceiverC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f9eced92490"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9eced92810"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9eced929a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcQueue" ref="0x7f9eced92c30" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="IpTransceiverC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7f9eced92c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9eced91020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9eced911b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcQueue" ref="0x7f9ecfdb2410" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <component-ref qname="LlcQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7f9ecfdb2410"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfdb2790"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfdb2920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f9ecfd80020" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="LlcQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfd80020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9ed03073a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9ed03073a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9ecfe35b60"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f9ecfe34180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfd80c10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfd7e170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f9ecfd82060" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="LlcQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecfd82060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9ecfe35b60"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f9ecfe34180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfd811b0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9ecfd82c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfd81680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f9eced861e0" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="LlcQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9eced861e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9ecfe35b60"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f9ecfe34180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9eced86dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9eced83320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f9eced894a0" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="LlcQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9eced894a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9ecfe35b60"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f9ecfe34180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9eced875e0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9eced870d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9eced87ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f9eced837e0" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="LlcQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f9eced837e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9eced83b60"/>
        <function-ref name="runTask" scoped="" ref="0x7f9eced83cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f9ecfd7a4f0" loc="13:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueP.nc">
      <component-ref qname="LlcQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecfd7a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9ecfe35b60"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f9ecfe34180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfd79620"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9ecfd79110"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfd79af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcQueue" ref="0x7f9ecfd7da00" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueP.nc">
      <component-ref qname="LlcQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7f9ecfd7da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfd7dd80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfd7a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpControl" ref="0x7f9ecfd6bbf0" loc="10:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <component-ref qname="ArpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f9ecfd6bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f9ecfd68020"/>
        <function-ref name="getGateway" scoped="" ref="0x7f9ecfd681b0"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f9ecfd68340"/>
        <function-ref name="getIp" scoped="" ref="0x7f9ecfd684d0"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f9ecfd68660"/>
        <function-ref name="setIp" scoped="" ref="0x7f9ecfd687f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Arp" ref="0x7f9ecfd6b3f0" loc="9:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <component-ref qname="ArpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Arp" scoped="" ref="0x7f9ecfd6b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Arp"/>
      </instance>
      <interface-functions>
        <function-ref name="resolve" scoped="" ref="0x7f9ecfd6b770"/>
        <function-ref name="resolved" scoped="" ref="0x7f9ecfd6b900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f9ecfd67c90" loc="13:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfd67c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f9ecfe24080"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f9ecfe24970"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfd648a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfd64db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timeout" ref="0x7f9ecfd602f0" loc="15:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timeout" scoped="" ref="0x7f9ecfd602f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ecfd5c870"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecfd5fe40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ecfd5dc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ecfd5d780"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ecfd5b1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ecfd5ccf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ecfd5d300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ecfd5f020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ecfd5c260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ecfd5f4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecfd5f9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClearCacheTimeout" ref="0x7f9ecfd5b8a0" loc="16:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClearCacheTimeout" scoped="" ref="0x7f9ecfd5b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ecfd57cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecfd59310"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ecfd570d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ecfd59c10"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ecfd56660"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ecfd561e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ecfd59790"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ecfd5a4c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ecfd576e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ecfd5a990"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecfd5ae60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcReceive" ref="0x7f9ecfd55320" loc="18:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f9ecfd55320"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecfd556a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f9ecfd624a0" loc="14:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecfd624a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f9ecfe24080"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f9ecfe24970"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfd615e0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9ecfd610d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfd61ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Arp" ref="0x7f9ecfd672d0" loc="12:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Arp" scoped="" ref="0x7f9ecfd672d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Arp"/>
      </instance>
      <interface-functions>
        <function-ref name="resolve" scoped="" ref="0x7f9ecfd67650"/>
        <function-ref name="resolved" scoped="" ref="0x7f9ecfd677e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcSend" ref="0x7f9ecfd56ae0" loc="17:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f9ecfd56ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfd56e60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfd55020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpControl" ref="0x7f9ecfd55990" loc="19:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f9ecfd55990"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f9ecfd55d10"/>
        <function-ref name="getGateway" scoped="" ref="0x7f9ecfd54020"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f9ecfd541b0"/>
        <function-ref name="getIp" scoped="" ref="0x7f9ecfd54340"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f9ecfd544d0"/>
        <function-ref name="setIp" scoped="" ref="0x7f9ecfd54660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MacControl" ref="0x7f9ecfd54960" loc="20:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MacControl" scoped="" ref="0x7f9ecfd54960"/></type-interface>
      <instance>
        <interfacedef-ref qname="MacControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getMac" scoped="" ref="0x7f9ecfd54ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ecfd53020" loc="21:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ecfd53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ecfd533a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9ecfb5e140" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="ArpC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9ecfb5e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ecfb5b630"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecfb5db70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ecfb5c920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ecfb5c4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ecfb59020"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ecfb5bab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ecfb5c020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ecfb5ed30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ecfb5b020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ecfb5d220"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecfb5d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f9ecfd15aa0" loc="49:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f9ecfd15aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ecfd10020"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecfd12510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ecfd11300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ecfd12e10"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ecfd10920"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ecfd104a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ecfd12990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ecfd136b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ecfd11910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ecfd13b80"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecfd12090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f9ecfd0b5a0" loc="46:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f9ecfd0b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ecfd07a80"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecfd08090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ecfd08e10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ecfd08990"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ecfd064a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ecfd06020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ecfd08510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ecfd0a200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ecfd07470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ecfd0a6d0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecfd0aba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f9ecfd04020" loc="47:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f9ecfd04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9ecfd04c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ecfd0e7a0" loc="45:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ecfd0e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ecfd0eb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f9ecfceeb40" loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f9ecfceeb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9ecfcf3970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9ecfcf2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9ecfcf3e30"/>
        <function-ref name="overflow" scoped="" ref="0x7f9ecfcf2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ecfd017a0" loc="27:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ecfd017a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ecfd01b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f9ecfcfd440" loc="28:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f9ecfcfd440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ecfcf5db0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecfcf6da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f9ecfcf5760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ecfcf52a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9ecfcf42a0"/>
        <function-ref name="start" scoped="" ref="0x7f9ecfcf63d0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecfcf68e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9ecfbfd4b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f9ecfbfd4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ecfbfadb0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecfbfcda0"/>
        <function-ref name="startAt" scoped="" ref="0x7f9ecfbfa760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ecfbfa2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9ecfbf92a0"/>
        <function-ref name="start" scoped="" ref="0x7f9ecfbfc3d0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecfbfc8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ecfbfeba0" loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ecfbfeba0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f9ed0307020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f9ed0307020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ecfbfd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9ecfbf98d0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9ecfbf98d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9ecfbf8780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9ecfbf7150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9ecfbf8c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f9ecfbf7610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f9eced59c90" loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9eced59c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9eced580a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9eced58230"/>
        <function-ref name="getControlA" scoped="" ref="0x7f9eced583c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f9eced58550"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9eced586e0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9eced58870"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9eced58a00"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9eced58b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9eced65140" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f9eced65140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9eced62b30"/>
        <function-ref name="fired" scoped="" ref="0x7f9eced639f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f9eced624e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9eced62020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9eced61020"/>
        <function-ref name="start" scoped="" ref="0x7f9eced63020"/>
        <function-ref name="stop" scoped="" ref="0x7f9eced63530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9eced668f0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9eced668f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9eced66c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9eced61650" loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9eced61650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9eced605b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9eced5e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9eced60a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f9eced5e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x7f9eced502c0" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f9eced502c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f9eced50640"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f9eced507d0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f9eced50960"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f9eced50af0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f9eced50c80"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f9eced50e10"/>
        <function-ref name="getAssr" scoped="" ref="0x7f9eced4f020"/>
        <function-ref name="setAssr" scoped="" ref="0x7f9eced4f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f9eced57020" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f9eced57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9eced559a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9eced56660"/>
        <function-ref name="get" scoped="" ref="0x7f9eced57c50"/>
        <function-ref name="reset" scoped="" ref="0x7f9eced56b20"/>
        <function-ref name="isOn" scoped="" ref="0x7f9eced55e60"/>
        <function-ref name="set" scoped="" ref="0x7f9eced56150"/>
        <function-ref name="start" scoped="" ref="0x7f9eced55020"/>
        <function-ref name="stop" scoped="" ref="0x7f9eced554e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9eced5ea90" loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9eced5ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9eced5be60"/>
        <function-ref name="test" scoped="" ref="0x7f9eced5b4e0"/>
        <function-ref name="get" scoped="" ref="0x7f9eced5d6f0"/>
        <function-ref name="setScale" scoped="" ref="0x7f9eced59350"/>
        <function-ref name="getScale" scoped="" ref="0x7f9eced59860"/>
        <function-ref name="reset" scoped="" ref="0x7f9eced5c5d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9eced5c110"/>
        <function-ref name="isOn" scoped="" ref="0x7f9eced5b9a0"/>
        <function-ref name="set" scoped="" ref="0x7f9eced5dbb0"/>
        <function-ref name="start" scoped="" ref="0x7f9eced5ca90"/>
        <function-ref name="stop" scoped="" ref="0x7f9eced5b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f9ecfc6f570" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9ecfc6f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9ecfc6f8f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9ecfc6fa80"/>
        <function-ref name="getControlA" scoped="" ref="0x7f9ecfc6fc10"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f9ecfc6fda0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9ecfc6e020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9ecfc6e1b0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9ecfc6e340"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9ecfc6e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7f9ecfc6ad60" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f9ecfc6ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f9ecfc69180"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f9ecfc69310"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f9ecfc694a0"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f9ecfc69630"/>
        <function-ref name="countBusy" scoped="" ref="0x7f9ecfc697c0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f9ecfc69950"/>
        <function-ref name="getAssr" scoped="" ref="0x7f9ecfc69ae0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f9ecfc69c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9ecfc6e9d0" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f9ecfc6e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9ecfc6a350"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecfc6c020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecfc6d630"/>
        <function-ref name="reset" scoped="" ref="0x7f9ecfc6c4e0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9ecfc6a810"/>
        <function-ref name="set" scoped="" ref="0x7f9ecfc6daf0"/>
        <function-ref name="start" scoped="" ref="0x7f9ecfc6c9a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecfc6ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9ecfc74190" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9ecfc74190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9ecfc704e0"/>
        <function-ref name="test" scoped="" ref="0x7f9ecfc72b30"/>
        <function-ref name="get" scoped="" ref="0x7f9ecfc74dc0"/>
        <function-ref name="setScale" scoped="" ref="0x7f9ecfc709a0"/>
        <function-ref name="getScale" scoped="" ref="0x7f9ecfc6f020"/>
        <function-ref name="reset" scoped="" ref="0x7f9ecfc73cb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9ecfc737f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9ecfc70020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecfc732e0"/>
        <function-ref name="start" scoped="" ref="0x7f9ecfc721b0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecfc72670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f9ecfc607b0" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9ecfc607b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9ecfc60b30"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9ecfc60cc0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f9ecfc60e50"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f9ecfc5f020"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9ecfc5f1b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9ecfc5f340"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9ecfc5f4d0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9ecfc5f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f9ecfc5a020" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9ecfc5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f9ecfc5a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7f9ecfc5a750" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f9ecfc5a750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f9ecfc5aad0"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f9ecfc5ac60"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f9ecfc5adf0"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f9ecfc59020"/>
        <function-ref name="countBusy" scoped="" ref="0x7f9ecfc591b0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f9ecfc59340"/>
        <function-ref name="getAssr" scoped="" ref="0x7f9ecfc594d0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f9ecfc59660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9ecfc5fb60" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f9ecfc5fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9ecfc5b550"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecfc5c1f0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecfc5e7d0"/>
        <function-ref name="reset" scoped="" ref="0x7f9ecfc5c6b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9ecfc5ba10"/>
        <function-ref name="set" scoped="" ref="0x7f9ecfc5ec90"/>
        <function-ref name="start" scoped="" ref="0x7f9ecfc5cb70"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecfc5b090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9ecfc65270" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9ecfc65270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9ecfc61810"/>
        <function-ref name="test" scoped="" ref="0x7f9ecfc63e60"/>
        <function-ref name="get" scoped="" ref="0x7f9ecfc64020"/>
        <function-ref name="setScale" scoped="" ref="0x7f9ecfc61cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f9ecfc60260"/>
        <function-ref name="reset" scoped="" ref="0x7f9ecfc63020"/>
        <function-ref name="overflow" scoped="" ref="0x7f9ecfc649f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9ecfc61350"/>
        <function-ref name="set" scoped="" ref="0x7f9ecfc644e0"/>
        <function-ref name="start" scoped="" ref="0x7f9ecfc634e0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecfc639a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f9ecfbc4020" loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f9ecfbc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ecfbc43a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ecfbc4530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f9ecfbc9cd0" loc="49:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f9ecfbc9cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ecfbc5670"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecfbc6550"/>
        <function-ref name="startAt" scoped="" ref="0x7f9ecfbc5020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ecfbc6a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9ecfbc5b30"/>
        <function-ref name="start" scoped="" ref="0x7f9ecfbc8b60"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecfbc6090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9ecfbce830" loc="48:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9ecfbce830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ecfbcacf0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecfbcb300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ecfbca0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ecfbcbc00"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ecfbc9660"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ecfbc91e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ecfbcb780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ecfbcd480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ecfbca6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ecfbcd950"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecfbcde20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f9ecfb74a00" loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f9ecfb74a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ecfb74d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ecfb73020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f9ecfb79640" loc="49:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f9ecfb79640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ecfb75c40"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecfb761e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ecfb75020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ecfb76ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ecfb74590"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ecfb74110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ecfb76660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ecfb78390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ecfb75630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ecfb78860"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecfb78d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9ecfb7f150" loc="48:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9ecfb7f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ecfb7b700"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecfb7ec30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ecfb7ca50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ecfb7c5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ecfb79090"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ecfb7bba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ecfb7c110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ecfb7fd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ecfb7b0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ecfb7e2a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecfb7e790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f9ecfb70790" loc="48:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f9ecfb70790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9ecfb6f3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f9ecfb6fa60" loc="49:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9ecfb6fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9ecfb65890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9ecfb64260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9ecfb65d50"/>
        <function-ref name="overflow" scoped="" ref="0x7f9ecfb64720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9ecfb58b00" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="ArpC.ClearCacheTimeoutC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9ecfb58b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ecfb53110"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecfb565b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ecfb554a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ecfb55020"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ecfb53a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ecfb53590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ecfb56a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ecfb57750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ecfb55ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ecfb57c20"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecfb56130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7f9ecfb50020" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="ArpC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f9ecfb50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecfb503a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7f9ecfb51700" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="ArpC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f9ecfb51700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfb51a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfb51c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7f9ececfa510" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="ArpC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f9ececfa510"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ececfa890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ececfaa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcQueue" ref="0x7f9ececfacb0" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="ArpC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7f9ececfacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ececf90a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ececf9230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f9ecfb4b360" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="ArpC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfb4b360"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9ed03073a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9ed03073a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f9ecfe24080"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f9ecfe24970"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfb4a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfb4a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f9ecfb4e4a0" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="ArpC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecfb4e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f9ecfe24080"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f9ecfe24970"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfb4d5e0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9ecfb4d0d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfb4dab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f9ececf0dd0" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="ArpC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9ececf0dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f9ecfe24080"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f9ecfe24970"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ececeea80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ececed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f9ececf10b0" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="ArpC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9ececf10b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f9ecfe24080"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f9ecfe24970"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ececf0220"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9ececf1ca0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ececf06f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f9ececed4e0" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="ArpC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f9ececed4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ececed860"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ececed9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7f9ecfb3ed90" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="PingC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f9ecfb3ed90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecfab4180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7f9ecfb3e5f0" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="PingC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f9ecfb3e5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfb3e970"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfb3eb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f9ecfb399e0" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <component-ref qname="IcmpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfb399e0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9ed03073a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9ed03073a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f9ecfb3bb40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f9ecfb3a230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfb2f670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfb2fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7f9ecfb2e610" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <component-ref qname="IcmpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f9ecfb2e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecfb2e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7f9ecfb2b430" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="IcmpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f9ecfb2b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfb2b7b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfb2b940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7f9ecfb2bbd0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="IcmpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f9ecfb2bbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecfafd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7f9ececd53f0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="IcmpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f9ececd53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ececd5770"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ececd5900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpQueue" ref="0x7f9ececd5b90" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="IcmpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7f9ececd5b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ececd4020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ececd41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpQueue" ref="0x7f9ecfb1ad60" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <component-ref qname="IpQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7f9ecfb1ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfb17180"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfb17310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f9ecfb12020" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfb12020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9ed03073a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9ed03073a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f9ecff147c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f9ecff14d40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfb12c10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfb10170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f9ecfb14060" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecfb14060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f9ecff147c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f9ecff14d40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfb131b0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9ecfb14c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfb13680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f9ececca770" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9ececca770"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f9ecff147c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f9ecff14d40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ececc9390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ececc98a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f9ececcda00" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9ececcda00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f9ecff147c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f9ecff14d40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ececcbb80"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9ececcb670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ececca090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f9ececc9d60" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f9ececc9d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ececc7180"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ececc7310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpQueue" ref="0x7f9ecfb0f9f0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpQueueP.nc">
      <component-ref qname="IpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7f9ecfb0f9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfb0fd70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfb0b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f9ecfb0b4e0" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpQueueP.nc">
      <component-ref qname="IpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecfb0b4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f9ecff147c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f9ecff14d40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfb0a620"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9ecfb0a110"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfb0aaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f9ecfafa290" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfafa290"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f9ecfb3bb40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f9ecfb3a230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfafae80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfaf93b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpSend" ref="0x7f9ecfaf7490" loc="13:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f9ecfaf7490"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfaf7810"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfaf79a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7f9ecfaf9df0" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f9ecfaf9df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecfaf71c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpReceive" ref="0x7f9ecfaf7c90" loc="14:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f9ecfaf7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecfaf60a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpQueue" ref="0x7f9ececdbdd0" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="PingC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7f9ececdbdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ececda180"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ececda310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7f9ececdb630" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="PingC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f9ececdb630"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ececdb9b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ececdbb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpQueue" ref="0x7f9ecface410" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <component-ref qname="IcmpQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7f9ecface410"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecface790"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecface920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f9ecfac99d0" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9ecfac99d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9ed03073a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9ed03073a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f9ecfb3bb40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f9ecfb3a230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfac85f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfac8b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f9ecfaccae0" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecfaccae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f9ecfb3bb40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f9ecfb3a230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfacbc60"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9ecfacb750"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfac9170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f9ececaebd0" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9ececaebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f9ecfb3bb40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f9ecfb3a230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ececad860"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ececadd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f9ececb1e30" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9ececb1e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f9ecfb3bb40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f9ecfb3a230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ececae020"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9ececb0a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ececae4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f9ececac290" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f9ececac290"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ececac610"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ececac7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpQueue" ref="0x7f9ecfac4450" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueP.nc">
      <component-ref qname="IcmpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7f9ecfac4450"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfac47d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfac4960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f9ecfac4e30" loc="13:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueP.nc">
      <component-ref qname="IcmpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecfac4e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f9ecfb3bb40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f9ecfb3a230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfac1020"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9ecfac2a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfac14f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpReceive" ref="0x7f9ecfab1130" loc="9:PingP.nc">
      <component-ref qname="PingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f9ecfab1130"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecfab14b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpSend" ref="0x7f9ecfab17a0" loc="10:PingP.nc">
      <component-ref qname="PingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f9ecfab17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfab1b20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfab1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7f9ecfaa8220" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <component-ref qname="GlcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f9ecfaa8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f9ecfaa7340"/>
        <function-ref name="drawRect" scoped="" ref="0x7f9ecfaa8730"/>
        <function-ref name="drawLine" scoped="" ref="0x7f9ecfaa88c0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f9ecfaa8a50"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f9ecfaa8be0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f9ecfaa8d70"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f9ecfaa7020"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f9ecfaa85a0"/>
        <function-ref name="drawText" scoped="" ref="0x7f9ecfaa71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ecfa75020" loc="44:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ecfa75020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ecfa753a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hpl" ref="0x7f9ecfa6e640" loc="45:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hpl" scoped="" ref="0x7f9ecfa6e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f9ecfa6e9c0"/>
        <function-ref name="init" scoped="" ref="0x7f9ecfa6eb50"/>
        <function-ref name="dataRead" scoped="" ref="0x7f9ecfa6ece0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f9ecfa6ee70"/>
        <function-ref name="controlRead" scoped="" ref="0x7f9ecfa74030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7f9ecfa77bf0" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f9ecfa77bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f9ecfa76ca0"/>
        <function-ref name="drawRect" scoped="" ref="0x7f9ecfa761b0"/>
        <function-ref name="drawLine" scoped="" ref="0x7f9ecfa76340"/>
        <function-ref name="setPixel" scoped="" ref="0x7f9ecfa764d0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f9ecfa76660"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f9ecfa767f0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f9ecfa76980"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f9ecfa76020"/>
        <function-ref name="drawText" scoped="" ref="0x7f9ecfa76b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7f9ecfaa6640" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <component-ref qname="HplKS0108C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7f9ecfaa6640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f9ecfaa69c0"/>
        <function-ref name="init" scoped="" ref="0x7f9ecfaa6b50"/>
        <function-ref name="dataRead" scoped="" ref="0x7f9ecfaa6ce0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f9ecfaa6e70"/>
        <function-ref name="controlRead" scoped="" ref="0x7f9ecf9ff030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EN" ref="0x7f9ecf9f1370" loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EN" scoped="" ref="0x7f9ecf9f1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9f16f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9f1880"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9f1a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9f1ba0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9f1d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9f0020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9f01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9f0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f9ecf9e4910" loc="34:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f9ecf9e4910"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed024f5c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9ed024f930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f9ecf9e7780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_0" ref="0x7f9ecf9f57b0" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_0" scoped="" ref="0x7f9ecf9f57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9f5b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9f5cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9f5e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9fb020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9fb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9fb340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9fb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9fb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RST" ref="0x7f9ecf9f0690" loc="30:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RST" scoped="" ref="0x7f9ecf9f0690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9f0a10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9f0ba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9f0d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9ef020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9ef1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9ef340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9ef4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9ef660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RS" ref="0x7f9ecf9f4cd0" loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RS" scoped="" ref="0x7f9ecf9f4cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9f30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9f3230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9f33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9f3550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9f36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9f3870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9f3a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9f3b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_1" ref="0x7f9ecf9fb9c0" loc="26:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_1" scoped="" ref="0x7f9ecf9fb9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9fbd40"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9f4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9f41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9f4340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9f44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9f4660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9f47f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9f4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7f9ecf9ffbe0" loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7f9ecf9ffbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f9ecf9fc020"/>
        <function-ref name="init" scoped="" ref="0x7f9ecf9fc1b0"/>
        <function-ref name="dataRead" scoped="" ref="0x7f9ecf9fc340"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f9ecf9fc4d0"/>
        <function-ref name="controlRead" scoped="" ref="0x7f9ecf9fc660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RW" ref="0x7f9ecf9f2020" loc="28:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RW" scoped="" ref="0x7f9ecf9f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9f23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9f2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9f26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9f2850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9f29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9f2b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9f2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9f1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Data" ref="0x7f9ecf9ee060" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Data" scoped="" ref="0x7f9ecf9ee060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9ee3e0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf9ee570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9ee700"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9ee890"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf9eea20"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf9eebb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9eed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f9ecf981020" loc="98:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f9ecf981020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9817a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf981930"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf981ac0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf981c50"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf981de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf980020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9801b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf980340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f9ecf99e800" loc="72:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f9ecf99e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf99eb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf99ed10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf99d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf99d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf99d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf99d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf99d660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf99d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f9ecf991670" loc="83:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f9ecf991670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9919f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf991b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf991d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf990020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9901b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf990340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9904d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf990660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f9ecf987020" loc="92:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f9ecf987020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9873a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf987530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9876c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf987850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9879e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf987b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf987d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf986020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f9ecf97a350" loc="103:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f9ecf97a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf97a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf97a860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf97a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf97ab80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf97ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf979020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9791b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf979340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f9ecf9b5990" loc="50:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f9ecf9b5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9b5d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9b4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9b41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9b4340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9b44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9b4660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9b47f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9b4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f9ecf98a990" loc="90:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f9ecf98a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf98ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf989020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9891b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf989340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9894d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf989660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9897f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf989980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f9ecf9b2020" loc="53:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f9ecf9b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9b23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9b2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9b26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9b2850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9b29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9b2b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9b2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f9ecf9a6020" loc="64:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f9ecf9a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9a63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9a6530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9a66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9a6850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9a69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9a6b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9a6d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f9ecf999060" loc="75:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f9ecf999060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9993e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf999570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf999700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf999890"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf999a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf999bb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf999d40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf998020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f9ecf98d020" loc="86:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f9ecf98d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf98d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf98d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf98d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf98d850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf98d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf98db70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf98dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf98c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f9ecf9bcb20" loc="45:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f9ecf9bcb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9bb020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9bb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9bb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9bb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9bb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9bb7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9bb980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9bbb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f9ecf9af990" loc="56:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f9ecf9af990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9afd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9ae020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9ae1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9ae340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9ae4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9ae660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9ae7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9ae980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f9ecf9a3990" loc="67:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f9ecf9a3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9a3d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9a2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9a21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9a2340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9a24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9a2660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9a27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9a2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f9ecf996990" loc="78:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f9ecf996990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf996d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf995020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9951b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf995340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9954d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf995660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9957f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf995980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f9ecf984990" loc="95:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f9ecf984990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf984d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf983020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9831b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf983340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9834d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf983660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9837f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf983980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f9ecf97ecb0" loc="101:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f9ecf97ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf97c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf97c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf97c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf97c550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf97c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf97c870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf97ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf97cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f9ecf993020" loc="81:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f9ecf993020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9933a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf993530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9936c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf993850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9939e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf993b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf993d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf992020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f9ecf9b8350" loc="48:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f9ecf9b8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9b86d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9b8860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9b89f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9b8b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9b8d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9b7020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9b71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9b7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f9ecf9ab350" loc="59:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f9ecf9ab350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9ab6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9ab860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9ab9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9abb80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9abd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9aa020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9aa1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9aa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f9ecf980670" loc="99:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f9ecf980670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9809f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf980b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf980d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf97f020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf97f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf97f340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf97f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf97f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f9ecf9a9990" loc="62:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f9ecf9a9990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9a9d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9a8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9a81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9a8340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9a84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9a8660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9a87f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9a8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f9ecf99db20" loc="73:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f9ecf99db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf99c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf99c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf99c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf99c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf99c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf99c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf99c980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf99cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f9ecf990990" loc="84:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f9ecf990990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf990d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf98f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf98f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf98f340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf98f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf98f660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf98f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf98f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f9ecf986350" loc="93:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f9ecf986350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9866d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf986860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9869f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf986b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf986d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf985020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9851b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf985340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f9ecf9b4cb0" loc="51:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f9ecf9b4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9b30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9b3230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9b33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9b3550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9b36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9b3870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9b3a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9b3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f9ecf9b1350" loc="54:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f9ecf9b1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9b16d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9b1860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9b19f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9b1b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9b1d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9b0020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9b01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9b0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f9ecf9a5350" loc="65:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f9ecf9a5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9a56d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9a5860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9a59f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9a5b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9a5d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9a4020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9a41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9a4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f9ecf998350" loc="76:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f9ecf998350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9986d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf998860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9989f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf998b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf998d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf997020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9971b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf997340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f9ecf98c350" loc="87:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f9ecf98c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf98c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf98c860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf98c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf98cb80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf98cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf98b020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf98b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf98b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f9ecf9bbe40" loc="46:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f9ecf9bbe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9ba1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9ba370"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9ba500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9ba690"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9ba820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9ba9b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9bab40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9bacd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f9ecf9aecb0" loc="57:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f9ecf9aecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9ad180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9ad310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9ad4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9ad630"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9ad7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9ad950"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9adae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9adc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f9ecf9a2cb0" loc="68:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f9ecf9a2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9a10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9a1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9a13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9a1550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9a16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9a1870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9a1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9a1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f9ecf983cb0" loc="96:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f9ecf983cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9820a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf982230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9823c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf982550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9826e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf982870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf982a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf982b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f9ecf99f350" loc="71:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f9ecf99f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf99f8d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf99fa60"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf99fbf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf99fd80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf99e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf99e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf99e340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf99e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f9ecf992350" loc="82:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f9ecf992350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9926d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf992860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9929f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf992b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf992d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf991020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9911b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf991340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f9ecf989cb0" loc="91:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f9ecf989cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9880a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf988230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9883c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf988550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9886e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf988870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf988a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf988b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f9ecf97b020" loc="102:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f9ecf97b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf97b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf97b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf97b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf97b850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf97b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf97bb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf97bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf97a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f9ecf9b7670" loc="49:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f9ecf9b7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9b79f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9b7b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9b7d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9b5020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9b51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9b5340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9b54d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9b5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f9ecf9aa670" loc="60:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f9ecf9aa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9aa9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9aab80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9aad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9a9020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9a91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9a9340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9a94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9a9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f9ecf98b670" loc="89:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f9ecf98b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf98b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf98bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf98bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf98a020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf98a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf98a340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf98a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf98a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f9ecf9a8cb0" loc="63:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f9ecf9a8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9a70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9a7230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9a73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9a7550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9a76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9a7870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9a7a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9a7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f9ecf99ce40" loc="74:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f9ecf99ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf99b1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf99b370"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf99b500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf99b690"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf99b820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf99b9b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf99bb40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf99bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f9ecf98fcb0" loc="85:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f9ecf98fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf98e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf98e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf98e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf98e550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf98e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf98e870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf98ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf98eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f9ecf985670" loc="94:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f9ecf985670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9859f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf985b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf985d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf984020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9841b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf984340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9844d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf984660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f9ecf9bf860" loc="44:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f9ecf9bf860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9bfbe0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9bfd70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9bc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9bc1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9bc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9bc4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9bc660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9bc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f9ecf9b0670" loc="55:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f9ecf9b0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9b09f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9b0b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9b0d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9af020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9af1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9af340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9af4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9af660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f9ecf9a4670" loc="66:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f9ecf9a4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9a49f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9a4b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9a4d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9a3020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9a31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9a3340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9a34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9a3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f9ecf997670" loc="77:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f9ecf997670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9979f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf997b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf997d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf996020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9961b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf996340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9964d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf996660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f9ecf97f990" loc="100:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f9ecf97f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf97fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf97e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf97e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf97e340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf97e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf97e660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf97e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf97e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f9ecf995cb0" loc="80:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f9ecf995cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9940a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf994230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9943c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf994550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9946e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf994870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf994a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf994b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f9ecf9a0020" loc="69:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f9ecf9a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9a03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9a0530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9a06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9a0850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9a09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9a0b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9a0d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf99f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f9ecf9b9060" loc="47:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f9ecf9b9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9b93e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9b9570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9b9700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9b9890"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9b9a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9b9bb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9b9d40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f9ecf9ac020" loc="58:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f9ecf9ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9ac3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9ac530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9ac6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9ac850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9ac9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9acb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9acd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ecf92d440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ecf92d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf92d7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf92d950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf92dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf92dc70"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf92de00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf92c020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf92c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf92c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ecf92a8f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ecf92a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf92ac70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf92ae00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf929020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9291b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf929340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9294d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf929660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9297f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ecf930140" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ecf930140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9304c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf930650"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9307e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf930970"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf930b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf930c90"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf930e20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf92f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ecf92c5d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ecf92c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf92c950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf92cae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf92cc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf92ce00"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf92b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf92b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf92b340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf92b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ecf929a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ecf929a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf929e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf928020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9281b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf928340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9284d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf928660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9287f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf928980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ecf92f2b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ecf92f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf92f630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf92f7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf92f950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf92fae0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf92fc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf92fe00"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf92d020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf92d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ecf92b760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ecf92b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf92bae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf92bc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf92be00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf92a020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf92a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf92a340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf92a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf92a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ecf928c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ecf928c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf927020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9271b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf927340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9274d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf927660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9277f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf927980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf927b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecec6b6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecec6b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecec6ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecec6bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecec6bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecec6a020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecec6a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecec6a340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecec6a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecec6a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecec689b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecec689b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecec68d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecec67020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecec671b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecec67340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecec674d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecec67660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecec677f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecec67980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecec65e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecec65e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecec631c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecec63350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecec634e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecec63670"/>
        <function-ref name="get" scoped="" ref="0x7f9ecec63800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecec63990"/>
        <function-ref name="set" scoped="" ref="0x7f9ecec63b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecec63cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecec600a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecec600a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecec60420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecec605b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecec60740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecec608d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecec60a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecec60bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecec60d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecec5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecec5d3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecec5d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecec5d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecec5d900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecec5da90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecec5dc20"/>
        <function-ref name="get" scoped="" ref="0x7f9ecec5ddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecec5c020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecec5c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecec5c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecec5a6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecec5a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecec5aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecec5abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecec5ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecec59020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecec591b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecec59340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecec594d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecec59660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecec4e9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecec4e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecec4ed30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecec4d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecec4d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecec4d340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecec4d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecec4d660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecec4d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecec4d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecec4be20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecec4be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecec4a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecec4a350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecec4a4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecec4a670"/>
        <function-ref name="get" scoped="" ref="0x7f9ecec4a800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecec4a990"/>
        <function-ref name="set" scoped="" ref="0x7f9ecec4ab20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecec4acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ecf91e760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ecf91e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf91eae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf91ec70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf91ee00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf91d020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf91d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf91d340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf91d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf91d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ecf91bc10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ecf91bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf91a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf91a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf91a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf91a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf91a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf91a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf91a980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf91ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ecf9203f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ecf9203f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf920770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf920900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf920a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf920c20"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf920db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf91f020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf91f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf91f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ecf91d8f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ecf91d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf91dc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf91de00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf91c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf91c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf91c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf91c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf91c660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf91c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ecf91ada0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ecf91ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf919180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf919310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9194a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf919630"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9197c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf919950"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf919ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf919c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ecf91f5d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ecf91f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf91f950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf91fae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf91fc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf91fe00"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf91e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf91e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf91e340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf91e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ecf91ca80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ecf91ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf91ce00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf91b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf91b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf91b340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf91b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf91b660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf91b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf91b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ecf918020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ecf918020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9183a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf918530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9186c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf918850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9189e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf918b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf918d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf917020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecebf7a60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecebf7a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecebf7de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecebf6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecebf61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecebf6340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecebf64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecebf6660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecebf67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecebf6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecebf4e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecebf4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecebf31c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecebf3350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecebf34e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecebf3670"/>
        <function-ref name="get" scoped="" ref="0x7f9ecebf3800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecebf3990"/>
        <function-ref name="set" scoped="" ref="0x7f9ecebf3b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecebf3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecebf00a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecebf00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecebf0420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecebf05b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecebf0740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecebf08d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecebf0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecebf0bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecebf0d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecebef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecebed3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecebed3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecebed770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecebed900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecebeda90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecebedc20"/>
        <function-ref name="get" scoped="" ref="0x7f9ecebeddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecebeb020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecebeb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecebeb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecebe96d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecebe96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecebe9a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecebe9be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecebe9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecebe8020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecebe81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecebe8340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecebe84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecebe8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecebe69b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecebe69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecebe6d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecebe5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecebe51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecebe5340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecebe54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecebe5660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecebe57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecebe5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecebe3e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecebe3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecebe21c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecebe2350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecebe24e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecebe2670"/>
        <function-ref name="get" scoped="" ref="0x7f9ecebe2800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecebe2990"/>
        <function-ref name="set" scoped="" ref="0x7f9ecebe2b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecebe2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecebdf0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecebdf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecebdf420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecebdf5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecebdf740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecebdf8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecebdfa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecebdfbf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecebdfd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecebde020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ecf90fa80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ecf90fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf90fe00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf90e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf90e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf90e340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf90e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf90e660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf90e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf90e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ecf90b020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ecf90b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf90b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf90b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf90b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf90b850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf90b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf90bb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf90bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf90a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ecf9117a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ecf9117a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf911b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf911cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf911e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf910020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9101b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf910340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9104d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf910660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ecf90ec10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ecf90ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf90d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf90d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf90d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf90d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf90d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf90d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf90d980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf90db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ecf90a2b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ecf90a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf90a630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf90a7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf90a950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf90aae0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf90ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf90ae00"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf909020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf9091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ecf9108f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ecf9108f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf910c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf910e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf90f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf90f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf90f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf90f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf90f660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf90f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ecf90dda0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ecf90dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf90c180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf90c310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf90c4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf90c630"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf90c7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf90c950"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf90cae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf90cc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ecf909440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ecf909440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf9097c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf909950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf909ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf909c70"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf909e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf907020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9071b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf907340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceb8cc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceb8cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceb8b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceb8b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceb8b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceb8b550"/>
        <function-ref name="get" scoped="" ref="0x7f9eceb8b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceb8b870"/>
        <function-ref name="set" scoped="" ref="0x7f9eceb8ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceb8bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceb89e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceb89e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceb881c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceb88350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceb884e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceb88670"/>
        <function-ref name="get" scoped="" ref="0x7f9eceb88800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceb88990"/>
        <function-ref name="set" scoped="" ref="0x7f9eceb88b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceb88cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceb850a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceb850a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceb85420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceb855b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceb85740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceb858d0"/>
        <function-ref name="get" scoped="" ref="0x7f9eceb85a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceb85bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9eceb85d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceb84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceb823f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceb823f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceb82770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceb82900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceb82a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceb82c20"/>
        <function-ref name="get" scoped="" ref="0x7f9eceb82db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceb80020"/>
        <function-ref name="set" scoped="" ref="0x7f9eceb801b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceb80340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceb7e6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceb7e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceb7ea50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceb7ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceb7ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceb7d020"/>
        <function-ref name="get" scoped="" ref="0x7f9eceb7d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceb7d340"/>
        <function-ref name="set" scoped="" ref="0x7f9eceb7d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceb7d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceb7b9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceb7b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceb7bd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceb7a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceb7a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceb7a340"/>
        <function-ref name="get" scoped="" ref="0x7f9eceb7a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceb7a660"/>
        <function-ref name="set" scoped="" ref="0x7f9eceb7a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceb7a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceb78e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceb78e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceb771c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceb77350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceb774e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceb77670"/>
        <function-ref name="get" scoped="" ref="0x7f9eceb77800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceb77990"/>
        <function-ref name="set" scoped="" ref="0x7f9eceb77b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceb77cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceb740a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceb740a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceb74420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceb745b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceb74740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceb748d0"/>
        <function-ref name="get" scoped="" ref="0x7f9eceb74a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceb74bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9eceb74d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceb73020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ecf900da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ecf900da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8ff180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8ff310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8ff4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8ff630"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8ff7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8ff950"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8ffae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8ffc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ecf8fb440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ecf8fb440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8fb7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8fb950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8fbae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8fbc70"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8fbe00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8fa020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8fa1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8fa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ecf902a20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ecf902a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf902da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf901020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf9011b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf901340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf9014d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf901660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf9017f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf901980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ecf8fe020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ecf8fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8fe3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8fe530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8fe6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8fe850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8fe9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8feb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8fed00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ecf8fa5d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ecf8fa5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8fa950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8faae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8fac70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8fae00"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8f9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8f91b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8f9340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ecf901c10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ecf901c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf900020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf9001b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf900340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf9004d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf900660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf9007f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf900980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf900b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ecf8fd2b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ecf8fd2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8fd630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8fd7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8fd950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8fdae0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8fdc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8fde00"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8fb020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ecf8f9760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ecf8f9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8f9ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8f9c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8f9e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8f8020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8f81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8f8340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8f84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8f8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceb21c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceb21c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceb200a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceb20230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceb203c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceb20550"/>
        <function-ref name="get" scoped="" ref="0x7f9eceb206e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceb20870"/>
        <function-ref name="set" scoped="" ref="0x7f9eceb20a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceb20b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceb1ee20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceb1ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceb1d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceb1d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceb1d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceb1d670"/>
        <function-ref name="get" scoped="" ref="0x7f9eceb1d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceb1d990"/>
        <function-ref name="set" scoped="" ref="0x7f9eceb1db20"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceb1dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceb1a0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceb1a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceb1a420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceb1a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceb1a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceb1a8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9eceb1aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceb1abf0"/>
        <function-ref name="set" scoped="" ref="0x7f9eceb1ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceb19020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceb173f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceb173f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceb17770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceb17900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceb17a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceb17c20"/>
        <function-ref name="get" scoped="" ref="0x7f9eceb17db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceb16020"/>
        <function-ref name="set" scoped="" ref="0x7f9eceb161b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceb16340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceb146d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceb146d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceb14a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceb14be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceb14d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceb12020"/>
        <function-ref name="get" scoped="" ref="0x7f9eceb121b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceb12340"/>
        <function-ref name="set" scoped="" ref="0x7f9eceb124d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceb12660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceb109b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceb109b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceb10d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceb0f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceb0f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceb0f340"/>
        <function-ref name="get" scoped="" ref="0x7f9eceb0f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceb0f660"/>
        <function-ref name="set" scoped="" ref="0x7f9eceb0f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceb0f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceb0de20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceb0de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceb0c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceb0c350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceb0c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceb0c670"/>
        <function-ref name="get" scoped="" ref="0x7f9eceb0c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceb0c990"/>
        <function-ref name="set" scoped="" ref="0x7f9eceb0cb20"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceb0ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceb090a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceb090a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceb09420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceb095b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceb09740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceb098d0"/>
        <function-ref name="get" scoped="" ref="0x7f9eceb09a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceb09bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9eceb09d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceb08020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ecf8ef020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ecf8ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8ef3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8ef530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8ef6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8ef850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8ef9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8efb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8efd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8ee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ecf8ec5d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ecf8ec5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8ec950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8ecae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8ecc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8ece00"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8eb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8eb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8eb340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8eb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ecf8f3d30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ecf8f3d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8f20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8f2270"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8f2400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8f2590"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8f2720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8f28b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8f2a40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8f2bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ecf8ee2b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ecf8ee2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8ee630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8ee7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8ee950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8eeae0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8eec70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8eee00"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8ed020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8ed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ecf8eb760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ecf8eb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8ebae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8ebc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8ebe00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8ea020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8ea1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8ea340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8ea4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8ea660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ecf8f2e60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ecf8f2e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8f0210"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8f03a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8f0530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8f06c0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8f0850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8f09e0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8f0b70"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8f0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ecf8ed440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ecf8ed440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8ed7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8ed950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8edae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8edc70"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8ede00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8ec020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8ec1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8ec340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ecf8ea8f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ecf8ea8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8eac70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8eae00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8e9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8e91b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8e9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8e94d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8e9660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8e97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceab6c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceab6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceab50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceab5230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceab53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceab5550"/>
        <function-ref name="get" scoped="" ref="0x7f9eceab56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceab5870"/>
        <function-ref name="set" scoped="" ref="0x7f9eceab5a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceab5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceab3e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceab3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceab21c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceab2350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceab24e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceab2670"/>
        <function-ref name="get" scoped="" ref="0x7f9eceab2800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceab2990"/>
        <function-ref name="set" scoped="" ref="0x7f9eceab2b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceab2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceaaf0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceaaf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceaaf420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceaaf5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceaaf740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceaaf8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9eceaafa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceaafbf0"/>
        <function-ref name="set" scoped="" ref="0x7f9eceaafd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceaae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceaac3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceaac3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceaac770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceaac900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceaaca90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceaacc20"/>
        <function-ref name="get" scoped="" ref="0x7f9eceaacdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceaab020"/>
        <function-ref name="set" scoped="" ref="0x7f9eceaab1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceaab340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceaa96d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceaa96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceaa9a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceaa9be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceaa9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceaa7020"/>
        <function-ref name="get" scoped="" ref="0x7f9eceaa71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceaa7340"/>
        <function-ref name="set" scoped="" ref="0x7f9eceaa74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceaa7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceaa59b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceaa59b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceaa5d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceaa4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceaa41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceaa4340"/>
        <function-ref name="get" scoped="" ref="0x7f9eceaa44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceaa4660"/>
        <function-ref name="set" scoped="" ref="0x7f9eceaa47f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceaa4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9eceaa2e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9eceaa2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9eceaa11c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9eceaa1350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9eceaa14e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9eceaa1670"/>
        <function-ref name="get" scoped="" ref="0x7f9eceaa1800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9eceaa1990"/>
        <function-ref name="set" scoped="" ref="0x7f9eceaa1b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9eceaa1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecea9e0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecea9e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecea9e420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecea9e5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecea9e740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecea9e8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecea9ea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecea9ebf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecea9ed80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecea9d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ecf8e0440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ecf8e0440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8e07c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8e0950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8e0ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8e0c70"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8e0e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8df020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8df1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8df340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ecf8dd8f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ecf8dd8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8ddc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8dde00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8dc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8dc1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8dc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8dc4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8dc660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8dc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ecf8e2020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ecf8e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8e23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8e2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8e26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8e2850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8e29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8e2b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8e2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ecf8df5d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ecf8df5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8df950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8dfae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8dfc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8dfe00"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8de020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8de1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8de340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8de4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ecf8dca80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ecf8dca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8dce00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8db020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8db1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8db340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8db4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8db660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8db7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8db980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ecf8e12b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ecf8e12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8e1630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8e17c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8e1950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8e1ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8e1c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8e1e00"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8e0020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ecf8de760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ecf8de760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8deae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8dec70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8dee00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8dd020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8dd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8dd340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8dd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8dd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ecf8dbc10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ecf8dbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8da020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8da1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8da340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8da4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8da660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8da7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8da980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8dab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecea48c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecea48c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecea470a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecea47230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecea473c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecea47550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecea476e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecea47870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecea47a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecea47b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecea45e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecea45e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecea441c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecea44350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecea444e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecea44670"/>
        <function-ref name="get" scoped="" ref="0x7f9ecea44800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecea44990"/>
        <function-ref name="set" scoped="" ref="0x7f9ecea44b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecea44cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecea410a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecea410a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecea41420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecea415b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecea41740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecea418d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecea41a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecea41bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecea41d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecea40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecea3e3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecea3e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecea3e770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecea3e900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecea3ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecea3ec20"/>
        <function-ref name="get" scoped="" ref="0x7f9ecea3edb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecea3d020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecea3d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecea3d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecea3b6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecea3b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecea3ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecea3bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecea3bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecea3a020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecea3a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecea3a340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecea3a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecea3a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecea389b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecea389b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecea38d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecea36020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecea361b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecea36340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecea364d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecea36660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecea367f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecea36980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecea34e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecea34e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecea331c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecea33350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecea334e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecea33670"/>
        <function-ref name="get" scoped="" ref="0x7f9ecea33800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecea33990"/>
        <function-ref name="set" scoped="" ref="0x7f9ecea33b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecea33cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecea300a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecea300a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecea30420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecea305b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecea30740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecea308d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecea30a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecea30bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecea30d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecea2f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf8d1260" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf8d1260"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8d15e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8d1770"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8d1900"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8d1a90"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8d1c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8d1db0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8ba020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8ba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf8b7d00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf8b7d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8b60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8b6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8b63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8b6550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8b66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8b6870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8b6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8b6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf8b16d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf8b16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8b1a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8b1be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8b1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8b0020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8b01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8b0340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8b04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8b0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf8ab160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf8ab160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8ab4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8ab670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8ab800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8ab990"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8abb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8abcb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8abe40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf8a7c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf8a7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8a60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8a6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8a63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8a6550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8a66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8a6870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8a6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8a6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf8a16d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf8a16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8a1a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf8a1be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8a1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf8a0020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8a01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8a0340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8a04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf8a0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf89c270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf89c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf89c5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf89c780"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf89c910"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf89caa0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf89cc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf89cdc0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf89a020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf89a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf897d00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf897d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8960a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf896230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8963c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf896550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8966e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf896870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf896a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf896b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf8916d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf8916d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf891a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf891be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf891d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf890020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8901b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf890340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8904d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf890660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf88c160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf88c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf88c4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf88c670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf88c800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf88c990"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf88cb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf88ccb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf88ce40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf88a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf887c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf887c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8860a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf886230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8863c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf886550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8866e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf886870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf886a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf886b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf8816d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf8816d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf881a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf881be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf881d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf880020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8801b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf880340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8804d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf880660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf87c160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf87c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf87c4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf87c670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf87c800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf87c990"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf87cb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf87ccb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf87ce40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf87b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf877c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf877c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8760a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf876230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8763c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf876550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf8766e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf876870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf876a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf876b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA" ref="0x7f9ecf845c40" loc="7:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA" scoped="" ref="0x7f9ecf845c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf842020"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf8421b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf842340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8424d0"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf842660"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf8427f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf842980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL" ref="0x7f9ecf837870" loc="18:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL" scoped="" ref="0x7f9ecf837870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf837bf0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf837d80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf831020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8311b0"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf831340"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf8314d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf831660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD" ref="0x7f9ecf840e80" loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD" scoped="" ref="0x7f9ecf840e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf83f220"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf83f3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf83f540"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf83f6d0"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf83f860"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf83f9f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf83fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG" ref="0x7f9ecf83c1d0" loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG" scoped="" ref="0x7f9ecf83c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf83c550"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf83c6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf83c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf83ca00"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf83cb90"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf83cd20"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf83b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ" ref="0x7f9ecf839550" loc="16:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ" scoped="" ref="0x7f9ecf839550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8398d0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf839a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf839bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf839d80"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf838020"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf8381b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf838340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB" ref="0x7f9ecf842d20" loc="8:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB" scoped="" ref="0x7f9ecf842d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf8410e0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf841270"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf841400"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf841590"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf841720"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf8418b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf841a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE" ref="0x7f9ecf83e020" loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE" scoped="" ref="0x7f9ecf83e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf83e3a0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf83e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf83e6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf83e850"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf83e9e0"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf83eb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf83ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH" ref="0x7f9ecf83b3c0" loc="15:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH" scoped="" ref="0x7f9ecf83b3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf83b740"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf83b8d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf83ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf83bbf0"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf83bd80"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf839020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8391b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK" ref="0x7f9ecf8386e0" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK" scoped="" ref="0x7f9ecf8386e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf838a60"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf838bf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf838d80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf837020"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf8371b0"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf837340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8374d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC" ref="0x7f9ecf841de0" loc="9:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC" scoped="" ref="0x7f9ecf841de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf840180"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf840310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf8404a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf840630"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf8407c0"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf840950"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf840ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF" ref="0x7f9ecf83d100" loc="12:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF" scoped="" ref="0x7f9ecf83d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf83d480"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf83d610"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf83d7a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf83d930"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf83dac0"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf83dc50"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf83dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ecf82ec90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortAP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf82ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf82d0a0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf82d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf82d3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf82d550"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf82d6e0"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf82d870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf82da00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ecf815390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortBP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf815390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf815710"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf8158a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf815a30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf815bc0"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf815d50"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf813020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ecf810910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf810910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf810c90"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf810e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf80f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf80f1b0"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf80f340"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf80f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf80f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ecf80bcd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf80bcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf80a0a0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf80a230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf80a3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf80a550"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf80a6e0"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf80a870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf80aa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ecf806390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortEP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf806390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf806710"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf8068a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf806a30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf806bc0"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf806d50"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf804020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf8041b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ecf801910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortFP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf801910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf801c90"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf801e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf800020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf8001b0"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf800340"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf8004d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf800660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ecf7fccd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortGP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf7fccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf7fb0a0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf7fb230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf7fb3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf7fb550"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf7fb6e0"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf7fb870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf7fba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ecf7f8c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortHP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf7f8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf7f70a0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf7f7230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf7f73c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf7f7550"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf7f76e0"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf7f7870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf7f7a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ecf7f3c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortJP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf7f3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf7f20a0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf7f2230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf7f23c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf7f2550"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf7f26e0"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf7f2870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf7f2a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ecf7eec90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortKP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf7eec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf7ed0a0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf7ed230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf7ed3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf7ed550"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf7ed6e0"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf7ed870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf7eda00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ecf7eac90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortLP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ecf7eac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf7e90a0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecf7e9230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf7e93c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf7e9550"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf7e96e0"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf7e9870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf7e9a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f9ecf7dd2e0" loc="40:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f9ecf7dd2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed024f5c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9ed024f930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f9ecf7dc110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f9ecf7d0330" loc="9:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <component-ref qname="Enc28j60C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f9ecf7d0330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9ecf7d06b0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9ecf7d0840"/>
        <function-ref name="start" scoped="" ref="0x7f9ecf7d09d0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecf7d0b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Enc28j60Control" ref="0x7f9ecf79bba0" loc="10:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <component-ref qname="Enc28j60C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Enc28j60Control" scoped="" ref="0x7f9ecf79bba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Enc28j60Control"/>
      </instance>
      <interface-functions>
        <function-ref name="linkChange" scoped="" ref="0x7f9ecf7ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mac" ref="0x7f9ecfaa96f0" loc="8:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <component-ref qname="Enc28j60C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7f9ecfaa96f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecfaa9a70"/>
        <function-ref name="received" scoped="" ref="0x7f9ecfaa9c00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecfaa9d90"/>
        <function-ref name="getMac" scoped="" ref="0x7f9ecf7d0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="intPin" ref="0x7f9ecf797cf0" loc="13:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="intPin" scoped="" ref="0x7f9ecf797cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf7960a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf796230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf7963c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf796550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf7966e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf796870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf796a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf796b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f9ecf793cf0" loc="17:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f9ecf793cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9ecf78e0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9ecf78e230"/>
        <function-ref name="start" scoped="" ref="0x7f9ecf78e3c0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecf78e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Enc28j60Control" ref="0x7f9ecf78e880" loc="18:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Enc28j60Control" scoped="" ref="0x7f9ecf78e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Enc28j60Control"/>
      </instance>
      <interface-functions>
        <function-ref name="linkChange" scoped="" ref="0x7f9ecf78ec00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f9ecf78d430" loc="15:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f9ecf78d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f9ecf78d7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mac" ref="0x7f9ecf7ceb00" loc="10:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7f9ecf7ceb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecf7cee80"/>
        <function-ref name="received" scoped="" ref="0x7f9ecf799030"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecf7991c0"/>
        <function-ref name="getMac" scoped="" ref="0x7f9ecf799350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ssETH" ref="0x7f9ecf7996c0" loc="11:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ssETH" scoped="" ref="0x7f9ecf7996c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf799a40"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf799bd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf799d60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf798020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf7981b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf798340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf7984d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf798660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="rstETH" ref="0x7f9ecf7989d0" loc="12:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="rstETH" scoped="" ref="0x7f9ecf7989d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf798d50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf797020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf7971b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf797340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf7974d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf797660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf7977f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf797980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="intETH" ref="0x7f9ecf78f620" loc="14:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="intETH" scoped="" ref="0x7f9ecf78f620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ecf78f9a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecf78fb30"/>
        <function-ref name="disable" scoped="" ref="0x7f9ecf78fcc0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ecf78fe50"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf794020"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ecf7941b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="checkInterruptflag" ref="0x7f9ecf7575d0" loc="179:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="checkInterruptflag" scoped="" ref="0x7f9ecf7575d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ecf757950"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ecf757ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f9ecf793020" loc="16:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9ecf793020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ecf7933a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ecf793530"/>
        <function-ref name="request" scoped="" ref="0x7f9ecf7936c0"/>
        <function-ref name="granted" scoped="" ref="0x7f9ecf793850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ecf7939e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f9ecf716e60" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f9ecf716e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecf721210"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecf7213a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f9ecf722b00" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f9ecf722b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f9ecf722e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ecf728300" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ecf728300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ecf728680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f9ecf71e400" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f9ecf71e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f9ecf71e780"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f9ecf71e910"/>
        <function-ref name="splitRead" scoped="" ref="0x7f9ecf71eaa0"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf71ec30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9ecf721bd0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9ecf721bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ecf71d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ecf71d1b0"/>
        <function-ref name="request" scoped="" ref="0x7f9ecf71d340"/>
        <function-ref name="granted" scoped="" ref="0x7f9ecf71d4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ecf71d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiControl" ref="0x7f9ecf7224a0" loc="84:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiControl" scoped="" ref="0x7f9ecf7224a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setClock" scoped="" ref="0x7f9ecf722820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f9ecf6f1510" loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f9ecf6f1510"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f9ecf6f1890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f9ecf6cdde0" loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f9ecf6cdde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ecf6cb180"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ecf6cb310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f9ecf7125f0" loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f9ecf7125f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecf712970"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecf712b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f9ecf6f3740" loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f9ecf6f3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ecf6f3ac0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ecf6f3c50"/>
        <function-ref name="request" scoped="" ref="0x7f9ecf6f3de0"/>
        <function-ref name="granted" scoped="" ref="0x7f9ecf6f2020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ecf6f21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f9ecf713340" loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f9ecf713340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f9ecf7136c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ecf714670" loc="94:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ecf714670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ecf7149f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f9ecf6f4340" loc="102:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f9ecf6f4340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f9ecf6f46c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f9ecf70dca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f9ecf6f49e0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9ecf70de30"/>
        <function-ref name="initMaster" scoped="" ref="0x7f9ecf6f4d00"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f9ecf70e020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f9ecf70e1b0"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf70e340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f9ecf70e4d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f9ecf70e660"/>
        <function-ref name="setClock" scoped="" ref="0x7f9ecf70e7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9ecf70e980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f9ecf70eb10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f9ecf70eda0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f9ecf70d020"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf70d1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f9ecf70d340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f9ecf70d4d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f9ecf70d660"/>
        <function-ref name="getClock" scoped="" ref="0x7f9ecf70d7f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f9ecf70d980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f9ecf6f4850"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f9ecf6f4b70"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f9ecf70db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f9ecf713980" loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f9ecf713980"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f9ecf713d00"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f9ecf712020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f9ecf7121b0"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf712340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9ecf710320" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9ecf710320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ecf7106a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ecf710830"/>
        <function-ref name="request" scoped="" ref="0x7f9ecf7109c0"/>
        <function-ref name="granted" scoped="" ref="0x7f9ecf710b50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ecf710ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f9ecf6efcd0" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ecf6efcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9ecf6f10a0"/>
        <function-ref name="userId" scoped="" ref="0x7f9ecf6f1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiControl" ref="0x7f9ecf714cb0" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiControl" scoped="" ref="0x7f9ecf714cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setClock" scoped="" ref="0x7f9ecf7130a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f9ecf69f100" loc="76:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f9ecf69f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f9ecf69f480"/>
        <function-ref name="sleep" scoped="" ref="0x7f9ecf69d980"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f9ecf69f7a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9ecf69db10"/>
        <function-ref name="initMaster" scoped="" ref="0x7f9ecf69fac0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f9ecf69fc50"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f9ecf69fde0"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf69e020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f9ecf69e1b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f9ecf69e340"/>
        <function-ref name="setClock" scoped="" ref="0x7f9ecf69e4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9ecf69e660"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f9ecf69e7f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f9ecf69ea80"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f9ecf69ec10"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf69eda0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f9ecf69d020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f9ecf69d1b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f9ecf69d340"/>
        <function-ref name="getClock" scoped="" ref="0x7f9ecf69d4d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f9ecf69d660"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f9ecf69f610"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f9ecf69f930"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f9ecf69d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f9ecf6917f0" loc="81:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f9ecf6917f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf691b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf691d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf690020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf6901b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf690340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf6904d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf690660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf6907f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f9ecf694330" loc="79:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f9ecf694330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf6946b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf694840"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf6949d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf694b60"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf694cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf694e80"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf692030"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf6921c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f9ecf695020" loc="78:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f9ecf695020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf6953a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf695530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf6956c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf695850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf6959e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf695b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf695d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf694020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f9ecf693770" loc="75:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9ecf693770"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9ecf693af0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecf693c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f9ecf690b30" loc="82:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f9ecf690b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f9ecf68f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f9ecf699060" loc="74:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f9ecf699060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f9ecf6993e0"/>
        <function-ref name="sleep" scoped="" ref="0x7f9ecf697980"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f9ecf699700"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9ecf697b10"/>
        <function-ref name="initMaster" scoped="" ref="0x7f9ecf699a20"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f9ecf699bb0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f9ecf699d40"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf698020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f9ecf6981b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f9ecf698340"/>
        <function-ref name="setClock" scoped="" ref="0x7f9ecf6984d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9ecf698660"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f9ecf6987f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f9ecf698a80"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f9ecf698c10"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf698da0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f9ecf697020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f9ecf6971b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f9ecf697340"/>
        <function-ref name="getClock" scoped="" ref="0x7f9ecf6974d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f9ecf697660"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f9ecf699570"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f9ecf699890"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f9ecf6977f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f9ecf6924e0" loc="80:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f9ecf6924e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf692860"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf6929f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf692b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf692d10"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf691020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf6911b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf691340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf6914d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9ecf5e53a0" loc="86:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9ecf5e53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9ecf5e5740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9ecf5e58d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9ecf5e4570" loc="89:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ecf5e4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9ecf5e4910"/>
        <function-ref name="configure" scoped="" ref="0x7f9ecf5e4aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9ecf5e7520" loc="85:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9ecf5e7520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ecf5e78c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ecf5e7a50"/>
        <function-ref name="request" scoped="" ref="0x7f9ecf5e7be0"/>
        <function-ref name="granted" scoped="" ref="0x7f9ecf5e7d70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ecf5e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9ecf5e5b20" loc="87:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ecf5e5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9ecf5e4020"/>
        <function-ref name="userId" scoped="" ref="0x7f9ecf5e41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ece90c4c0" loc="44:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ece90c4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ece90c840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f9ece90cad0" loc="45:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f9ece90cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9ece90ce50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9ece90b020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f9ece90b1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9ece90b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9ece909850" loc="52:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9ece909850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9ece909bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9ece909d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9ece908910" loc="56:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ece908910"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9ece908cb0"/>
        <function-ref name="configure" scoped="" ref="0x7f9ece908e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f9ece907120" loc="57:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f9ece907120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9ece9074a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9ece907630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f9ece9077c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9ece907950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9ece90a9d0" loc="51:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9ece90a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ece90ad70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ece909020"/>
        <function-ref name="request" scoped="" ref="0x7f9ece9091b0"/>
        <function-ref name="granted" scoped="" ref="0x7f9ece909340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ece9094d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9ece908020" loc="53:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ece908020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9ece9083a0"/>
        <function-ref name="userId" scoped="" ref="0x7f9ece908530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f9ece907c20" loc="68:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f9ece907c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ece905020"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ece9051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7f9ecf5d5b70" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7f9ecf5d5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ecf5d4020"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecf5d41b0"/>
        <function-ref name="disable" scoped="" ref="0x7f9ecf5d4340"/>
        <function-ref name="edge" scoped="" ref="0x7f9ecf5d44d0"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf5d4660"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ecf5d47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f9ecf5dab70" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f9ecf5dab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ecf5d9020"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecf5d91b0"/>
        <function-ref name="disable" scoped="" ref="0x7f9ecf5d9340"/>
        <function-ref name="edge" scoped="" ref="0x7f9ecf5d94d0"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf5d9660"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ecf5d97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7f9ecf5d7b70" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7f9ecf5d7b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ecf5d6020"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecf5d61b0"/>
        <function-ref name="disable" scoped="" ref="0x7f9ecf5d6340"/>
        <function-ref name="edge" scoped="" ref="0x7f9ecf5d64d0"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf5d6660"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ecf5d67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7f9ecf5d4b70" loc="52:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7f9ecf5d4b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ecf5d3020"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecf5d31b0"/>
        <function-ref name="disable" scoped="" ref="0x7f9ecf5d3340"/>
        <function-ref name="edge" scoped="" ref="0x7f9ecf5d34d0"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf5d3660"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ecf5d37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f9ecf5d9b70" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f9ecf5d9b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ecf5d8020"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecf5d81b0"/>
        <function-ref name="disable" scoped="" ref="0x7f9ecf5d8340"/>
        <function-ref name="edge" scoped="" ref="0x7f9ecf5d84d0"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf5d8660"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ecf5d87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7f9ecf5d6b70" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7f9ecf5d6b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ecf5d5020"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecf5d51b0"/>
        <function-ref name="disable" scoped="" ref="0x7f9ecf5d5340"/>
        <function-ref name="edge" scoped="" ref="0x7f9ecf5d54d0"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf5d5660"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ecf5d57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f9ecf5ddb20" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f9ecf5ddb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ecf5da020"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecf5da1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f9ecf5da340"/>
        <function-ref name="edge" scoped="" ref="0x7f9ecf5da4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf5da660"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ecf5da7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f9ecf5d8b70" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f9ecf5d8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ecf5d7020"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecf5d71b0"/>
        <function-ref name="disable" scoped="" ref="0x7f9ecf5d7340"/>
        <function-ref name="edge" scoped="" ref="0x7f9ecf5d74d0"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf5d7660"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ecf5d77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7f9ecf5cb830" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7f9ecf5cb830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ecf5cbbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f9ecf5cf230" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f9ecf5cf230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ecf5cf5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7f9ecf5ce8d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7f9ecf5ce8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ecf5cec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7f9ecf5ca020" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7f9ecf5ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ecf5ca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f9ecf5cf9b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f9ecf5cf9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ecf5cfd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7f9ecf5cb0b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7f9ecf5cb0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ecf5cb430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f9ecf5cda00" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f9ecf5cda00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ecf5cdd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7f9ecf5ce150" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7f9ecf5ce150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ecf5ce4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9ecf5ae060" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9ecf5ae060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ecf5ae3e0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecf5ae570"/>
        <function-ref name="disable" scoped="" ref="0x7f9ecf5ae700"/>
        <function-ref name="edge" scoped="" ref="0x7f9ecf5ae890"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf5aea20"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ecf5aebb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9ecf5aee80" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9ecf5aee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ecf599220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9ecf597da0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9ecf597da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ecf595180"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecf595310"/>
        <function-ref name="disable" scoped="" ref="0x7f9ecf5954a0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ecf595630"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf5957c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ecf595950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9ecf595c20" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9ecf595c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ecf594020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9ecf592c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9ecf592c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ecf5910a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecf591230"/>
        <function-ref name="disable" scoped="" ref="0x7f9ecf5913c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ecf591550"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf5916e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ecf591870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9ecf591b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9ecf591b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ecf590020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9ecf58ec90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9ecf58ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ecf58d0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecf58d230"/>
        <function-ref name="disable" scoped="" ref="0x7f9ecf58d3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ecf58d550"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf58d6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ecf58d870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9ecf58db40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9ecf58db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ecf58c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9ecf589c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9ecf589c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ecf5880a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecf588230"/>
        <function-ref name="disable" scoped="" ref="0x7f9ecf5883c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ecf588550"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf5886e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ecf588870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9ecf588b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9ecf588b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ecf587020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9ecf585c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9ecf585c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ecf5840a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecf584230"/>
        <function-ref name="disable" scoped="" ref="0x7f9ecf5843c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ecf584550"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf5846e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ecf584870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9ecf584b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9ecf584b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ecf583020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9ecf581c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9ecf581c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ecf5800a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecf580230"/>
        <function-ref name="disable" scoped="" ref="0x7f9ecf5803c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ecf580550"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf5806e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ecf580870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9ecf580b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9ecf580b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ecf57e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9ecf57cc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9ecf57cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ecf57b0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecf57b230"/>
        <function-ref name="disable" scoped="" ref="0x7f9ecf57b3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ecf57b550"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf57b6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ecf57b870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9ecf57bb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9ecf57bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ecf57a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpSend" ref="0x7f9ecf56a1f0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <component-ref qname="DatabaseC.UdpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpSend" scoped="" ref="0x7f9ecf56a1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecf56a570"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecf56a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpReceive" ref="0x7f9ecf56a990" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <component-ref qname="DatabaseC.UdpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7f9ecf56a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecf56ad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f9ecf566710" loc="11:UdpTransceiverC.nc">
      <component-ref qname="UdpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9ecf566710"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9ed03073a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9ed03073a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9ecfeff2c0"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f9ecfeff8f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecf565390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecf5658a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpReceive" ref="0x7f9ecf563330" loc="12:UdpTransceiverC.nc">
      <component-ref qname="UdpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7f9ecf563330"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecf5636b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7f9ecf5629d0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="UdpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f9ecf5629d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecf562d50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecf561020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7f9ecf5612b0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="UdpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f9ecf5612b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecf561630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7f9ece8990c0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="UdpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f9ece8990c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ece899440"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ece8995d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpQueue" ref="0x7f9ece899860" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="UdpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7f9ece899860"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ece899be0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ece899d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f9ecf560b70" loc="11:UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9ecf560b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9ecfeff2c0"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f9ecfeff8f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecf55d790"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecf55dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpSend" ref="0x7f9ecf55bd80" loc="13:UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f9ecf55bd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecf55a180"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecf55a310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpPacket" ref="0x7f9ecf5594a0" loc="16:UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpPacket" scoped="" ref="0x7f9ecf5594a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacket" scoped="" ref="0x7f9ecf559820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpReceive" ref="0x7f9ecf55b730" loc="12:UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7f9ecf55b730"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecf55bab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpSend" ref="0x7f9ecf55ac70" loc="15:UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f9ecf55ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecf559020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecf5591b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpReceive" ref="0x7f9ecf55a600" loc="14:UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f9ecf55a600"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecf55a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7f9ecf55e630" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="UdpTransceiverC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f9ecf55e630"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9ecf55e9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7f9ecf55fe60" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="UdpTransceiverC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f9ecf55fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecf55e210"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecf55e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpQueue" ref="0x7f9ece891440" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="UdpTransceiverC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7f9ece891440"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ece8917c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ece891950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7f9ece892b10" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="UdpTransceiverC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f9ece892b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ece891020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ece8911b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpSend" ref="0x7f9ece8a0c50" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
      <component-ref qname="DatabaseC.UdpC.UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpSend" scoped="" ref="0x7f9ece8a0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ece89f020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ece89f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UdpQueue" ref="0x7f9ece89f440" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
      <component-ref qname="DatabaseC.UdpC.UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpQueue" scoped="" ref="0x7f9ece89f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ece89f7c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ece89f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpQueue" ref="0x7f9ecf5331d0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <component-ref qname="UdpQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpQueue" scoped="" ref="0x7f9ecf5331d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecf533550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecf5336e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f9ecf52e620" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="UdpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9ecf52e620"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9ed03073a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9ed03073a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9ecfeff2c0"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f9ecfeff8f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecf52d390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecf52d8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f9ecf531790" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="UdpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecf531790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9ecfeff2c0"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f9ecfeff8f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecf52f8c0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9ecf52f3b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecf52fd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f9ece883dd0" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="UdpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9ece883dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9ecfeff2c0"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f9ecfeff8f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ece882a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ece881020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f9ece8850b0" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="UdpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9ece8850b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9ecfeff2c0"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f9ecfeff8f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ece883220"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9ece885ca0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ece8836f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f9ece8814e0" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="UdpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f9ece8814e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ece881860"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ece8819f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f9ecf528bb0" loc="13:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueP.nc">
      <component-ref qname="UdpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9ecf528bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9ecfeff2c0"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f9ecfeff8f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecf527cf0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9ecf5277e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecf526220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpQueue" ref="0x7f9ecf5281d0" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueP.nc">
      <component-ref qname="UdpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpQueue" scoped="" ref="0x7f9ecf5281d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9ecf528550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9ecf5286e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ecf5130c0" loc="14:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ecf5130c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ecf513440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7f9ecf5136e0" loc="15:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7f9ecf5136e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f9ecf5127f0"/>
        <function-ref name="initDone" scoped="" ref="0x7f9ecf513bf0"/>
        <function-ref name="setVolume" scoped="" ref="0x7f9ecf513d80"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f9ecf512020"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f9ecf5121b0"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f9ecf512340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9ecf5124d0"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f9ecf512660"/>
        <function-ref name="seek" scoped="" ref="0x7f9ecf513a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="seek" ref="0x7f9ecf4de020" loc="187:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="seek" scoped="" ref="0x7f9ecf4de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ecf4de4a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ecf4de630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeI2C" ref="0x7f9ecf4d82a0" loc="192:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeI2C" scoped="" ref="0x7f9ecf4d82a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ecf4d8620"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ecf4d87b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SDIOPin" ref="0x7f9ecf4f3020" loc="30:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SDIOPin" scoped="" ref="0x7f9ecf4f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf4f33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf4f3530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf4f36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf4f3850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf4f39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf4f3b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf4f3d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf4f2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="INTPin" ref="0x7f9ecf4f2350" loc="31:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="INTPin" scoped="" ref="0x7f9ecf4f2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf4f26d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf4f2860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf4f29f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf4f2b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf4f2d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf4f1020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf4f11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf4f1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Int" ref="0x7f9ecf50d020" loc="25:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int" scoped="" ref="0x7f9ecf50d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ecf50d3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecf50d530"/>
        <function-ref name="disable" scoped="" ref="0x7f9ecf50d6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ecf50d850"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf50d9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ecf50db70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f9ecf4fdb50" loc="27:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f9ecf4fdb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9ecf509770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9ecf509a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ecf50b7d0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9ecf4fcca0"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf50a400"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ecf4fc090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="registerWriteback" ref="0x7f9ecf4d62b0" loc="193:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="registerWriteback" scoped="" ref="0x7f9ecf4d62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ecf4d6630"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ecf4d67c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readRegisters" ref="0x7f9ecf4db510" loc="189:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readRegisters" scoped="" ref="0x7f9ecf4db510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ecf4db890"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ecf4dba20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init" ref="0x7f9ecf4e0120" loc="185:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="init" scoped="" ref="0x7f9ecf4e0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ecf4e04a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ecf4e0630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="decodeRDS" ref="0x7f9ecf4dc020" loc="188:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="decodeRDS" scoped="" ref="0x7f9ecf4dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ecf4dc3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ecf4dc530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeRegisters" ref="0x7f9ecf4d92b0" loc="191:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeRegisters" scoped="" ref="0x7f9ecf4d92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ecf4d9630"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ecf4d97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ecf511440" loc="20:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ecf511440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ecf5117c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7f9ecf50c020" loc="26:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7f9ecf50c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ecf50c3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ecf50c530"/>
        <function-ref name="request" scoped="" ref="0x7f9ecf50c6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f9ecf50c850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ecf50c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTPin" ref="0x7f9ecf4f5df0" loc="29:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTPin" scoped="" ref="0x7f9ecf4f5df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf4f41c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf4f4350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf4f44e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf4f4670"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf4f4800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf4f4990"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf4f4b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf4f4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7f9ecf511a60" loc="21:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7f9ecf511a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f9ecf50eb10"/>
        <function-ref name="initDone" scoped="" ref="0x7f9ecf50e020"/>
        <function-ref name="setVolume" scoped="" ref="0x7f9ecf50e1b0"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f9ecf50e340"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f9ecf50e4d0"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f9ecf50e660"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9ecf50e7f0"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f9ecf50e980"/>
        <function-ref name="seek" scoped="" ref="0x7f9ecf511de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f9ecf4f15c0" loc="32:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f9ecf4f15c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f9ecf4f0660"/>
        <function-ref name="drawRect" scoped="" ref="0x7f9ecf4f1ad0"/>
        <function-ref name="drawLine" scoped="" ref="0x7f9ecf4f1c60"/>
        <function-ref name="setPixel" scoped="" ref="0x7f9ecf4f1df0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f9ecf4f0020"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f9ecf4f01b0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f9ecf4f0340"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f9ecf4f1940"/>
        <function-ref name="drawText" scoped="" ref="0x7f9ecf4f04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readI2C" ref="0x7f9ecf4da3c0" loc="190:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readI2C" scoped="" ref="0x7f9ecf4da3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ecf4da740"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ecf4da8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9ecf4faa80" loc="28:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9ecf4faa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ecf4f5020"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecf4f8510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ecf4f7300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ecf4f8e10"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ecf4f5920"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ecf4f54a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ecf4f8990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ecf4f96b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ecf4f7910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ecf4f9b80"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecf4f8090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tune" ref="0x7f9ecf4df020" loc="186:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tune" scoped="" ref="0x7f9ecf4df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ecf4df3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ecf4df530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9ecf3feaf0" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9ecf3feaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ecf3fee70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ecf21b030"/>
        <function-ref name="request" scoped="" ref="0x7f9ecf21b1c0"/>
        <function-ref name="granted" scoped="" ref="0x7f9ecf21b350"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ecf21b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f9ecf21b890" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9ecf21b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9ecf509770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9ecf509a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ecf21a500"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9ecf2189b0"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf219150"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ecf219d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9ecf3f29b0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9ecf3f29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ecf3f2d30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ecf3ef020"/>
        <function-ref name="request" scoped="" ref="0x7f9ecf3ef1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f9ecf3ef340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ecf3ef4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f9ecf3ee020" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9ecf3ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9ecf509770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9ecf509a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ecf3eec50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9ecf3ea150"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf3ec8c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ecf3eb510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9ecf37fbf0" loc="92:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9ecf37fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9ecf37e020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9ecf37e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9ecf37d930" loc="96:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ecf37d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9ecf37dcd0"/>
        <function-ref name="configure" scoped="" ref="0x7f9ecf37de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f9ecf37e400" loc="93:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ecf37e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ecf37e780"/>
        <function-ref name="requested" scoped="" ref="0x7f9ecf37e910"/>
        <function-ref name="granted" scoped="" ref="0x7f9ecf37eaa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ecf37ec30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9ecf37edc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9ecf380e60" loc="91:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9ecf380e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ecf37f230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ecf37f3c0"/>
        <function-ref name="request" scoped="" ref="0x7f9ecf37f550"/>
        <function-ref name="granted" scoped="" ref="0x7f9ecf37f6e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ecf37f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9ecf37d060" loc="94:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ecf37d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9ecf37d3e0"/>
        <function-ref name="userId" scoped="" ref="0x7f9ecf37d570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ece85e620" loc="44:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ece85e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ece85e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f9ece85ec30" loc="45:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f9ece85ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9ece85c020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9ece85c1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f9ece85c340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9ece85c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9ece85abd0" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9ece85abd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9ece859020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9ece8591b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9ece858950" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ece858950"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9ece858cf0"/>
        <function-ref name="configure" scoped="" ref="0x7f9ece858e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f9ece857130" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f9ece857130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9ece8574b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9ece857640"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f9ece8577d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9ece857960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f9ece859400" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ece859400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ece859780"/>
        <function-ref name="requested" scoped="" ref="0x7f9ece859910"/>
        <function-ref name="granted" scoped="" ref="0x7f9ece859aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ece859c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9ece859dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9ece857bb0" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9ece857bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9ece855020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9ece8551b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f9ece855340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9ece8554d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9ece855660"/>
        <function-ref name="get" scoped="" ref="0x7f9ece8557f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9ece855980"/>
        <function-ref name="led0On" scoped="" ref="0x7f9ece854020"/>
        <function-ref name="set" scoped="" ref="0x7f9ece855ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f9ece855b10"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9ece855e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9ece85be40" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9ece85be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ece85a210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ece85a3a0"/>
        <function-ref name="request" scoped="" ref="0x7f9ece85a530"/>
        <function-ref name="granted" scoped="" ref="0x7f9ece85a6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ece85a850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9ece858060" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ece858060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9ece8583e0"/>
        <function-ref name="userId" scoped="" ref="0x7f9ece858570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f9ece8542f0" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f9ece8542f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ece854670"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ece854800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f9ecf379cb0" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f9ecf379cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f9ecf36d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f9ecf36d2f0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ecf36d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ecf36d670"/>
        <function-ref name="requested" scoped="" ref="0x7f9ecf36d800"/>
        <function-ref name="granted" scoped="" ref="0x7f9ecf36d990"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ecf36db20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9ecf36dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f9ecf379550" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9ecf379550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9ecf3798d0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecf379a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f9ecf36c020" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ecf36c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9ecf36c3a0"/>
        <function-ref name="userId" scoped="" ref="0x7f9ecf36c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7f9ecf3288e0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f9ecf3288e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f9ecf328c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f9ecf32cc40" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f9ecf32cc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9ecf509770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9ecf509a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ecf32b8a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9ecf329d20"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf32a4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ecf329110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9ecf326020" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9ecf326020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9ecf3263a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9ecf326530"/>
        <function-ref name="led1On" scoped="" ref="0x7f9ecf3266c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9ecf326850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9ecf3269e0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf326b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9ecf326d00"/>
        <function-ref name="led2On" scoped="" ref="0x7f9ecf3254d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf3251b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9ecf325020"/>
        <function-ref name="led0On" scoped="" ref="0x7f9ecf325340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9ecf333020" loc="41:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9ecf333020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ecf3333c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ecf333550"/>
        <function-ref name="request" scoped="" ref="0x7f9ecf3336e0"/>
        <function-ref name="granted" scoped="" ref="0x7f9ecf333870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ecf333a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f9ecf332020" loc="42:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9ecf332020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9ecf509770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9ecf509a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ecf332c70"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9ecf32e170"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf3308c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ecf32f510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f9ecf32ee40" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f9ecf32ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ecf32c210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ecf32c3a0"/>
        <function-ref name="request" scoped="" ref="0x7f9ecf32c530"/>
        <function-ref name="granted" scoped="" ref="0x7f9ecf32c6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ecf32c850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7f9ecf2b38e0" loc="79:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f9ecf2b38e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f9ecf2b3c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f9ecf2b2020" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f9ecf2b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f9ecf2b23a0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f9ecf2b2530"/>
        <function-ref name="setStart" scoped="" ref="0x7f9ecf2b26c0"/>
        <function-ref name="status" scoped="" ref="0x7f9ecf2b2850"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f9ecf2b29e0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9ecf2b2b70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f9ecf2b2d00"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf2b1020"/>
        <function-ref name="init" scoped="" ref="0x7f9ecf2b11b0"/>
        <function-ref name="enableAck" scoped="" ref="0x7f9ecf2b1340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f9ecf2b14d0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f9ecf2b1660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9ecf2b17f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f9ecf2b1a80"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf2b1c10"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf2b1da0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f9ecf2b0020"/>
        <function-ref name="off" scoped="" ref="0x7f9ecf2b01b0"/>
        <function-ref name="setStop" scoped="" ref="0x7f9ecf2b0340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f9ecf2b04d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f9ecf2b0660"/>
        <function-ref name="hasStop" scoped="" ref="0x7f9ecf2b07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7f9ecf2b0ac0" loc="82:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f9ecf2b0ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9ecf2b0e40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9ecf2af020"/>
        <function-ref name="led1On" scoped="" ref="0x7f9ecf2af1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9ecf2af340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9ecf2af4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf2af660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9ecf2af7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f9ecf2afe30"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf2afb10"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9ecf2af980"/>
        <function-ref name="led0On" scoped="" ref="0x7f9ecf2afca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7f9ecf2ae160" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f9ecf2ae160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9ecf2ae4e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9ecf2ae670"/>
        <function-ref name="led1On" scoped="" ref="0x7f9ecf2ae800"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9ecf2ae990"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9ecf2aeb20"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf2aecb0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9ecf2aee40"/>
        <function-ref name="led2On" scoped="" ref="0x7f9ecf2ad4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf2ad1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9ecf2ad020"/>
        <function-ref name="led0On" scoped="" ref="0x7f9ecf2ad340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f9ecf2ad7a0" loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f9ecf2ad7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ecf2adb20"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ecf2adcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f9ecf2b8340" loc="77:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9ecf2b8340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9ecf2b86c0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecf2b8850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f9ecf2b8c00" loc="78:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9ecf2b8c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9ecf509770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9ecf509a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ecf2b78a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9ecf2b4d20"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf2b64d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ecf2b4110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f9ecf2a70e0" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f9ecf2a70e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f9ecf2a7460"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f9ecf2a75f0"/>
        <function-ref name="setStart" scoped="" ref="0x7f9ecf2a7780"/>
        <function-ref name="status" scoped="" ref="0x7f9ecf2a7910"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f9ecf2a7aa0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9ecf2a7c30"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f9ecf2a7dc0"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf2a6020"/>
        <function-ref name="init" scoped="" ref="0x7f9ecf2a61b0"/>
        <function-ref name="enableAck" scoped="" ref="0x7f9ecf2a6340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f9ecf2a64d0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f9ecf2a6660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9ecf2a67f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f9ecf2a6a80"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf2a6c10"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf2a6da0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f9ecf2a5020"/>
        <function-ref name="off" scoped="" ref="0x7f9ecf2a51b0"/>
        <function-ref name="setStop" scoped="" ref="0x7f9ecf2a5340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f9ecf2a54d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f9ecf2a5660"/>
        <function-ref name="hasStop" scoped="" ref="0x7f9ecf2a57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f9ecf2a3a70" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f9ecf2a3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f9ecf2a3df0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f9ecf2a0020"/>
        <function-ref name="setStart" scoped="" ref="0x7f9ecf2a01b0"/>
        <function-ref name="status" scoped="" ref="0x7f9ecf2a0340"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f9ecf2a04d0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9ecf2a0660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f9ecf2a07f0"/>
        <function-ref name="read" scoped="" ref="0x7f9ecf2a0980"/>
        <function-ref name="init" scoped="" ref="0x7f9ecf2a0b10"/>
        <function-ref name="enableAck" scoped="" ref="0x7f9ecf2a0ca0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f9ecf2a0e30"/>
        <function-ref name="hasStart" scoped="" ref="0x7f9ecf29f020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9ecf29f1b0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f9ecf29f440"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecf29f5d0"/>
        <function-ref name="write" scoped="" ref="0x7f9ecf29f760"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f9ecf29f8f0"/>
        <function-ref name="off" scoped="" ref="0x7f9ecf29fa80"/>
        <function-ref name="setStop" scoped="" ref="0x7f9ecf29fc10"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f9ecf29fda0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f9ecf29e020"/>
        <function-ref name="hasStop" scoped="" ref="0x7f9ecf29e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7f9ecf29e540" loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7f9ecf29e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf29e8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf29ea50"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf29ebe0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf29ed70"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf29d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf29d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf29d340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf29d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7f9ecf29d810" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7f9ecf29d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf29db90"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf29dd20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf29c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf29c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf29c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf29c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf29c660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf29c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f9ecf2674a0" loc="46:../tinyos_ws18/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9ecf2674a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9ecf267820"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9ecf2679b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f9ecf267b40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9ecf267cd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9ecf267e60"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf264020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9ecf2641b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9ecf2647f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf264340"/>
        <function-ref name="led0On" scoped="" ref="0x7f9ecf2644d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f9ecf264660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f9ecf25f550" loc="50:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f9ecf25f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf25f8d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf25fa60"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf25fbf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf25fd80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf25e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf25e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf25e340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf25e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ecf2637c0" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ecf2637c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ecf263b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f9ecf25e7f0" loc="51:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f9ecf25e7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf25eb70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf25ed00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf25d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf25d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf25d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf25d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf25d660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf25d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f9ecf263dc0" loc="47:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9ecf263dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9ecf260180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9ecf260310"/>
        <function-ref name="led1On" scoped="" ref="0x7f9ecf2604a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9ecf260630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9ecf2607c0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf260950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9ecf260ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9ecf25f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf260c70"/>
        <function-ref name="led0On" scoped="" ref="0x7f9ecf260e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f9ecf25f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f9ecf25db10" loc="52:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f9ecf25db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf25b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf25b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf25b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf25b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf25b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf25b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf25b980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf25bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f9ecf2401d0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f9ecf2401d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf240550"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf2406e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf240870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf240a00"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf240b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf240d20"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf23f020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf23f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f9ecf23f510" loc="45:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f9ecf23f510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf23f890"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf23fa20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf23fbb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf23fd40"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf23e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf23e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf23e340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf23e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f9ecf23dab0" loc="48:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ecf23dab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ecf23de30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f9ecf23e830" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f9ecf23e830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf23ebb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf23ed40"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf23d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf23d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf23d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf23d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf23d660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf23d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ecf235340" loc="46:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ecf235340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ecf2356c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f9ecf235980" loc="47:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9ecf235980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9ecf235d00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9ecf233020"/>
        <function-ref name="led1On" scoped="" ref="0x7f9ecf2331b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9ecf233340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9ecf2334d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf233660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9ecf2337f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9ecf233e30"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf233980"/>
        <function-ref name="led0On" scoped="" ref="0x7f9ecf233b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f9ecf233ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9ecf215b80" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="FMClickC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9ecf215b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ecf211110"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecf2135f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ecf2124a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ecf212020"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ecf211a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ecf211590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ecf213a70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ecf214790"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ecf212ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ecf214c60"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecf213170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f9ecf1d1cb0" loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f9ecf1d1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1d0610"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1d07a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1d0930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1d0ac0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1d0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1d0de0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1cf020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f9ecf1ed350" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f9ecf1ed350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1ed6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1ed860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1ed9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1edb80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1edd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1ec020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1ec1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1ec340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f9ecf1e1350" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f9ecf1e1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1e16d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1e1860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1e19f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1e1b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1e1d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1e0020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1e01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1e0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f9ecf1d8cb0" loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f9ecf1d8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1d60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1d6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1d63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1d6550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1d66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1d6870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1d6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1d6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f9ecf1ca060" loc="108:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f9ecf1ca060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1ca3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1ca570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1ca700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1ca890"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1caa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1cabb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1cad40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH2" ref="0x7f9ecf1c7990" loc="112:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH2" scoped="" ref="0x7f9ecf1c7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1c7d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1c6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1c61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1c6340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1c64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1c6660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1c67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1c6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH7" ref="0x7f9ecf1c1990" loc="117:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH7" scoped="" ref="0x7f9ecf1c1990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1c1d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1c0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1c01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1c0340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1c04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1c0660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1c07f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1c0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ6" ref="0x7f9ecf1b7020" loc="125:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ6" scoped="" ref="0x7f9ecf1b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1b73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1b7530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1b76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1b7850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1b79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1b7b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1b7d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK0" ref="0x7f9ecf1b5670" loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK0" scoped="" ref="0x7f9ecf1b5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1b59f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1b5b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1b5d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1b4020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1b41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1b4340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1b44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1b4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL2" ref="0x7f9ecf1a9670" loc="139:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL2" scoped="" ref="0x7f9ecf1a9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1a99f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1a9b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1a9d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1a8020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1a81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1a8340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1a84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1a8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f9ecf205350" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f9ecf205350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf2056d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf205860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf2059f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf205b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf205d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf204020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf2041b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf204340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f9ecf1da670" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f9ecf1da670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1da9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1dab80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1dad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1d9020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1d91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1d9340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1d94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1d9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f9ecf203990" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f9ecf203990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf203d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf202020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf2021b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf202340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf2024d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf202660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf2027f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf202980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f9ecf1f7990" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f9ecf1f7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1f7d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1f6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1f61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1f6340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1f64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1f6660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1f67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1f6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f9ecf1eacb0" loc="80:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f9ecf1eacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1e90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1e9230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1e93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1e9550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1e96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1e9870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1e9a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1e9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f9ecf1decb0" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f9ecf1decb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1dd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1dd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1dd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1dd550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1dd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1dd870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1dda00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1ddb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f9ecf20b4e0" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f9ecf20b4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf20b860"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf20b9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf20bb80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf20bd10"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf20a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf20a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf20a340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf20a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f9ecf1ff350" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f9ecf1ff350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1ff6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1ff860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1ff9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1ffb80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1ffd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1fe020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1fe1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1fe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f9ecf1f2350" loc="72:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f9ecf1f2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1f26d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1f2860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1f29f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1f2b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1f2d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1f1020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1f11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1f1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f9ecf1e6670" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f9ecf1e6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1e69f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1e6b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1e6d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1e5020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1e51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1e5340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1e54d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1e5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f9ecf1d3670" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f9ecf1d3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1d39f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1d3b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1d3d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1d2020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1d21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1d2340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1d24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1d2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f9ecf1cdb20" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f9ecf1cdb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1cc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1cc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1cc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1cc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1cc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1cc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1cc980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1ccb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH0" ref="0x7f9ecf1c9350" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH0" scoped="" ref="0x7f9ecf1c9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1c96d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1c9860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1c99f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1c9b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1c9d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1c8020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1c81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1c8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f9ecf1e4cb0" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f9ecf1e4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1e30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1e3230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1e33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1e3550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1e36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1e3870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1e3a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1e3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH5" ref="0x7f9ecf1c3350" loc="115:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH5" scoped="" ref="0x7f9ecf1c3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1c36d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1c3860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1c39f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1c3b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1c3d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1c2020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1c21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1c2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ1" ref="0x7f9ecf1be020" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ1" scoped="" ref="0x7f9ecf1be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1be3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1be530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1be6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1be850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1be9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1beb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1bed00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ4" ref="0x7f9ecf1bb990" loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ4" scoped="" ref="0x7f9ecf1bb990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1bbd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1b9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1b91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1b9340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1b94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1b9660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1b97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1b9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK3" ref="0x7f9ecf1b1020" loc="131:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK3" scoped="" ref="0x7f9ecf1b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1b13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1b1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1b16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1b1850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1b19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1b1b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1b1d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK6" ref="0x7f9ecf1ae990" loc="134:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK6" scoped="" ref="0x7f9ecf1ae990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1aed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1ad020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1ad1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1ad340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1ad4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1ad660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1ad7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1ad980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL0" ref="0x7f9ecf1ab020" loc="137:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL0" scoped="" ref="0x7f9ecf1ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1ab3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1ab530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1ab6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1ab850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1ab9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1abb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1abd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL5" ref="0x7f9ecf1a5020" loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL5" scoped="" ref="0x7f9ecf1a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1a53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1a5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1a56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1a5850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1a59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1a5b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1a5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f9ecf208e40" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f9ecf208e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf2071e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf207370"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf207500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf207690"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf207820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf2079b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf207b40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf207cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f9ecf1fccb0" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f9ecf1fccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1fb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1fb230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1fb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1fb550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1fb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1fb870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1fba00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1fbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f9ecf1cf4e0" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f9ecf1cf4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1cf860"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1cf9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1cfb80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1cfd10"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1ce020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1ce1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1ce340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1ce4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f9ecf1f9350" loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f9ecf1f9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1f96d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1f9860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1f99f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1f9b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1f9d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1f8020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1f81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1f8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f9ecf1ec670" loc="78:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f9ecf1ec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1ec9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1ecb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1ecd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1eb020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1eb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1eb340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1eb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1eb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f9ecf1e0670" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f9ecf1e0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1e09f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1e0b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1e0d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1df020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1df1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1df340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1df4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1df660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f9ecf1d5020" loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f9ecf1d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1d53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1d5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1d56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1d5850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1d59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1d5b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1d5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH3" ref="0x7f9ecf1c6cb0" loc="113:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH3" scoped="" ref="0x7f9ecf1c6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1c50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1c5230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1c53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1c5550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1c56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1c5870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1c5a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1c5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ7" ref="0x7f9ecf1b6350" loc="126:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ7" scoped="" ref="0x7f9ecf1b6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1b66d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1b6860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1b69f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1b6b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1b6d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1b5020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1b51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1b5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK1" ref="0x7f9ecf1b4990" loc="129:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK1" scoped="" ref="0x7f9ecf1b4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1b4d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1b3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1b31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1b3340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1b34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1b3660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1b37f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1b3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL3" ref="0x7f9ecf1a8990" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL3" scoped="" ref="0x7f9ecf1a8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1a8d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1a7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1a71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1a7340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1a74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1a7660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1a77f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1a7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ2" ref="0x7f9ecf1bd350" loc="121:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ2" scoped="" ref="0x7f9ecf1bd350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1bd6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1bd860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1bd9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1bdb80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1bdd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1bc020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1bc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1bc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f9ecf204670" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f9ecf204670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf2049f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf204b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf204d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf203020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf2031b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf203340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf2034d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf203660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK4" ref="0x7f9ecf1b0350" loc="132:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK4" scoped="" ref="0x7f9ecf1b0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1b06d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1b0860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1b09f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1b0b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1b0d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1af020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1af1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1af340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL6" ref="0x7f9ecf1a4350" loc="143:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL6" scoped="" ref="0x7f9ecf1a4350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1a46d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1a4860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1a49f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1a4b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1a4d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1a3020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1a31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1a3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f9ecf202cb0" loc="59:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f9ecf202cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf2010a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf201230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf2013c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf201550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf2016e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf201870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf201a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf201b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f9ecf1f6cb0" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f9ecf1f6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1f50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1f5230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1f53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1f5550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1f56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1f5870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1f5a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1f5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f9ecf1e8020" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f9ecf1e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1e83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1e8530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1e86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1e8850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1e89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1e8b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1e8d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f9ecf1dc020" loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f9ecf1dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1dc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1dc530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1dc6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1dc850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1dc9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1dcb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1dcd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f9ecf20a800" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f9ecf20a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf20ab80"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf20ad10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf209020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf2091b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf209340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf2094d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf209660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf2097f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f9ecf1fe670" loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f9ecf1fe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1feaf0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1fec80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1fee10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1fd020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1fd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1fd340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1fd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1fd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f9ecf1f1670" loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f9ecf1f1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1f19f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1f1b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1f1d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1f0020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1f01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1f0340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1f04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1f0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f9ecf1d2990" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f9ecf1d2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1d2d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1d1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1d11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1d1340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1d14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1d1660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1d17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1d1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH1" ref="0x7f9ecf1c8670" loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH1" scoped="" ref="0x7f9ecf1c8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1c89f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1c8b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1c8d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1c7020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1c71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1c7340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1c74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1c7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f9ecf1efcb0" loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f9ecf1efcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1ee410"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1ee5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1ee730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1ee8c0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1eea50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1eebe0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1eed70"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f9ecf1e2020" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f9ecf1e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1e23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1e2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1e26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1e2850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1e29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1e2b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1e2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f9ecf1d9990" loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f9ecf1d9990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1d9d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1d8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1d81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1d8340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1d84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1d8660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1d87f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1d8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f9ecf1cce40" loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f9ecf1cce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1cb1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1cb370"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1cb500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1cb690"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1cb820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1cb9b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1cbb40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1cbcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH6" ref="0x7f9ecf1c2670" loc="116:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH6" scoped="" ref="0x7f9ecf1c2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1c29f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1c2b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1c2d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1c1020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1c11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1c1340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1c14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1c1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ5" ref="0x7f9ecf1b9cb0" loc="124:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ5" scoped="" ref="0x7f9ecf1b9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1b80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1b8230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1b83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1b8550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1b86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1b8870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1b8a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1b8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK7" ref="0x7f9ecf1adcb0" loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK7" scoped="" ref="0x7f9ecf1adcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1ac0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1ac230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1ac3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1ac550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1ac6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1ac870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1aca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1acb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL1" ref="0x7f9ecf1aa350" loc="138:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL1" scoped="" ref="0x7f9ecf1aa350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1aa6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1aa860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1aa9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1aab80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1aad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1a9020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1a91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1a9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f9ecf206060" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f9ecf206060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf2063e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf206570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf206700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf206890"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf206a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf206bb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf206d40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf205020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f9ecf1fa020" loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f9ecf1fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1fa3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1fa530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1fa6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1fa850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1fa9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1fab70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1fad00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f9ecf1db350" loc="94:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f9ecf1db350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1db6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1db860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1db9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1dbb80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1dbd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1da020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1da1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1da340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f9ecf1f8670" loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f9ecf1f8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1f89f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1f8b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1f8d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1f7020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1f71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1f7340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1f74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1f7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f9ecf1eb990" loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f9ecf1eb990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1ebd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1ea020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1ea1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1ea340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1ea4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1ea660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1ea7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1ea980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f9ecf1df990" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f9ecf1df990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1dfd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1de020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1de1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1de340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1de4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1de660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1de7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1de980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f9ecf1d4350" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f9ecf1d4350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1d46d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1d4860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1d49f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1d4b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1d4d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1d3020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1d31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1d3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f9ecf20c1e0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f9ecf20c1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf20c560"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf20c6f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf20c880"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf20ca10"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf20cba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf20cd30"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf20b020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf20b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f9ecf200020" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f9ecf200020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf2003a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf200530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf2006c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf200850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf2009e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf200b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf200d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f9ecf1f3020" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f9ecf1f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1f33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1f3530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1f36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1f3850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1f39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1f3b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1f3d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f9ecf1e7350" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f9ecf1e7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1e76d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1e7860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1e79f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1e7b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1e7d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1e6020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1e61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1e6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f9ecf1ce800" loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f9ecf1ce800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1ceb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1ced10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1cd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1cd1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1cd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1cd4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1cd660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1cd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH4" ref="0x7f9ecf1c4020" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH4" scoped="" ref="0x7f9ecf1c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1c43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1c4530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1c46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1c4850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1c49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1c4b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1c4d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ0" ref="0x7f9ecf1c0cb0" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ0" scoped="" ref="0x7f9ecf1c0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1bf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1bf230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1bf3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1bf550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1bf6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1bf870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1bfa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1bfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f9ecf1e5990" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f9ecf1e5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1e5d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1e4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1e41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1e4340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1e44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1e4660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1e47f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1e4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ3" ref="0x7f9ecf1bc670" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ3" scoped="" ref="0x7f9ecf1bc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1bc9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1bcb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1bcd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1bb020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1bb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1bb340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1bb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1bb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK2" ref="0x7f9ecf1b3cb0" loc="130:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK2" scoped="" ref="0x7f9ecf1b3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1b20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1b2230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1b23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1b2550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1b26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1b2870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1b2a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1b2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK5" ref="0x7f9ecf1af670" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK5" scoped="" ref="0x7f9ecf1af670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1af9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1afb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1afd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1ae020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1ae1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1ae340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1ae4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1ae660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL4" ref="0x7f9ecf1a7cb0" loc="141:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL4" scoped="" ref="0x7f9ecf1a7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1a60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1a6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1a63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1a6550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1a66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1a6870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1a6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1a6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL7" ref="0x7f9ecf1a3670" loc="144:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL7" scoped="" ref="0x7f9ecf1a3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1a39f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1a3b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1a3d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1a2020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1a21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1a2340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1a24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1a2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f9ecf1f0990" loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f9ecf1f0990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1f0d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1ef020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1ef1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1ef340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1ef4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1ef660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1ef7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1ef980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f9ecf209b20" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f9ecf209b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf208020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf2081b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf208340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf2084d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf208660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf2087f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf208980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf208b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f9ecf1fd990" loc="63:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f9ecf1fd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1fdd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1fc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1fc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1fc340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1fc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1fc660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1fc7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1fc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ecf19ca80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ecf19ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf19ce00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf19b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf19b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf19b340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf19b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf19b660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf19b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf19b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ecf198020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ecf198020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1983a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf198530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1986c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf198850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1989e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf198b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf198d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf197020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ecf19e7a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ecf19e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf19eb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf19ecb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf19ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf19d020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf19d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf19d340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf19d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf19d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ecf19bc10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ecf19bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf19a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf19a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf19a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf19a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf19a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf19a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf19a980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf19ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ecf1972b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ecf1972b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf197630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1977c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf197950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf197ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf197c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf197e00"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf195020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ecf19d8f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ecf19d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf19dc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf19de00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf19c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf19c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf19c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf19c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf19c660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf19c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ecf19ada0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ecf19ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf199180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf199310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1994a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf199630"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1997c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf199950"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf199ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf199c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ecf195440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ecf195440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1957c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf195950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf195ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf195c70"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf195e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf194020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1941b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf194340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece77fda0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece77fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece77e180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece77e310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece77e4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece77e630"/>
        <function-ref name="get" scoped="" ref="0x7f9ece77e7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece77e950"/>
        <function-ref name="set" scoped="" ref="0x7f9ece77eae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece77ec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece77b0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece77b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece77b420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece77b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece77b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece77b8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ece77ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece77bbf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ece77bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece77a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece7783f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece7783f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece778770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece778900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece778a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece778c20"/>
        <function-ref name="get" scoped="" ref="0x7f9ece778db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece776020"/>
        <function-ref name="set" scoped="" ref="0x7f9ece7761b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece776340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece7746d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece7746d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece774a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece774be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece774d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece773020"/>
        <function-ref name="get" scoped="" ref="0x7f9ece7731b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece773340"/>
        <function-ref name="set" scoped="" ref="0x7f9ece7734d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece773660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece7719b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece7719b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece771d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece770020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece7701b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece770340"/>
        <function-ref name="get" scoped="" ref="0x7f9ece7704d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece770660"/>
        <function-ref name="set" scoped="" ref="0x7f9ece7707f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece770980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece76ee20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece76ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece76d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece76d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece76d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece76d670"/>
        <function-ref name="get" scoped="" ref="0x7f9ece76d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece76d990"/>
        <function-ref name="set" scoped="" ref="0x7f9ece76db20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece76dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece76a0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece76a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece76a420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece76a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece76a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece76a8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ece76aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece76abf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ece76ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece769020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece7673f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece7673f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece767770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece767900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece767a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece767c20"/>
        <function-ref name="get" scoped="" ref="0x7f9ece767db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece766020"/>
        <function-ref name="set" scoped="" ref="0x7f9ece7661b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece766340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ecf18dda0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ecf18dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf18c180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf18c310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf18c4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf18c630"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf18c7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf18c950"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf18cae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf18cc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ecf188440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ecf188440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1887c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf188950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf188ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf188c70"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf188e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf187020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1871b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf187340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ecf18fa20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ecf18fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf18fda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf18e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf18e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf18e340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf18e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf18e660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf18e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf18e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ecf18b020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ecf18b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf18b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf18b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf18b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf18b850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf18b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf18bb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf18bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf189020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ecf1875d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ecf1875d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf187950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf187ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf187c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf187e00"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf186020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1861b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf186340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1864d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ecf18ec10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ecf18ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf18d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf18d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf18d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf18d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf18d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf18d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf18d980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf18db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ecf1892b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ecf1892b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf189630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1897c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf189950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf189ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf189c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf189e00"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf188020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ecf186760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ecf186760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf186ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf186c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf186e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf185020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1851b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf185340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1854d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf185660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece70e060" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece70e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece70e3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece70e570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece70e700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece70e890"/>
        <function-ref name="get" scoped="" ref="0x7f9ece70ea20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece70ebb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ece70ed40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece70d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece70b3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece70b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece70b770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece70b900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece70ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece70bc20"/>
        <function-ref name="get" scoped="" ref="0x7f9ece70bdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece70a020"/>
        <function-ref name="set" scoped="" ref="0x7f9ece70a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece70a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece7086d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece7086d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece708a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece708be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece708d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece707020"/>
        <function-ref name="get" scoped="" ref="0x7f9ece7071b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece707340"/>
        <function-ref name="set" scoped="" ref="0x7f9ece7074d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece707660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece7059b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece7059b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece705d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece703020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece7031b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece703340"/>
        <function-ref name="get" scoped="" ref="0x7f9ece7034d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece703660"/>
        <function-ref name="set" scoped="" ref="0x7f9ece7037f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece703980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece701e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece701e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece7001c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece700350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece7004e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece700670"/>
        <function-ref name="get" scoped="" ref="0x7f9ece700800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece700990"/>
        <function-ref name="set" scoped="" ref="0x7f9ece700b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece700cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece6fd0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece6fd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece6fd420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece6fd5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece6fd740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece6fd8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ece6fda60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece6fdbf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ece6fdd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece6fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece6fa3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece6fa3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece6fa770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece6fa900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece6faa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece6fac20"/>
        <function-ref name="get" scoped="" ref="0x7f9ece6fadb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece6f9020"/>
        <function-ref name="set" scoped="" ref="0x7f9ece6f91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece6f9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece6f76d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece6f76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece6f7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece6f7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece6f7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece6f6020"/>
        <function-ref name="get" scoped="" ref="0x7f9ece6f61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece6f6340"/>
        <function-ref name="set" scoped="" ref="0x7f9ece6f64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece6f6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ecf17c020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ecf17c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf17c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf17c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf17c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf17c850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf17c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf17cb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf17cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf17b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ecf1795d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ecf1795d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf179950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf179ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf179c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf179e00"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf178020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1781b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf178340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1784d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ecf180d30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ecf180d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf17e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf17e270"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf17e400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf17e590"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf17e720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf17e8b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf17ea40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf17ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ecf17b2b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ecf17b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf17b630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf17b7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf17b950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf17bae0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf17bc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf17be00"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf17a020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf17a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ecf178760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ecf178760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf178ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf178c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf178e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf177020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1771b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf177340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1774d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf177660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ecf17ee60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ecf17ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf17d210"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf17d3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf17d530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf17d6c0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf17d850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf17d9e0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf17db70"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf17dd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ecf17a440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ecf17a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf17a7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf17a950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf17aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf17ac70"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf17ae00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf179020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1791b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf179340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ecf1778f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ecf1778f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf177c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf177e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf176020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1761b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf176340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1764d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf176660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1767f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece6a3a60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece6a3a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece6a3de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece6a2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece6a21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece6a2340"/>
        <function-ref name="get" scoped="" ref="0x7f9ece6a24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece6a2660"/>
        <function-ref name="set" scoped="" ref="0x7f9ece6a27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece6a2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece6a0e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece6a0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece69f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece69f350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece69f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece69f670"/>
        <function-ref name="get" scoped="" ref="0x7f9ece69f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece69f990"/>
        <function-ref name="set" scoped="" ref="0x7f9ece69fb20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece69fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece69c0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece69c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece69c420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece69c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece69c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece69c8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ece69ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece69cbf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ece69cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece69b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece6993f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece6993f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece699770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece699900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece699a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece699c20"/>
        <function-ref name="get" scoped="" ref="0x7f9ece699db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece697020"/>
        <function-ref name="set" scoped="" ref="0x7f9ece6971b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece697340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece6956d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece6956d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece695a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece695be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece695d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece694020"/>
        <function-ref name="get" scoped="" ref="0x7f9ece6941b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece694340"/>
        <function-ref name="set" scoped="" ref="0x7f9ece6944d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece694660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece6929b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece6929b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece692d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece691020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece6911b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece691340"/>
        <function-ref name="get" scoped="" ref="0x7f9ece6914d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece691660"/>
        <function-ref name="set" scoped="" ref="0x7f9ece6917f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece691980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece68fe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece68fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece68e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece68e350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece68e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece68e670"/>
        <function-ref name="get" scoped="" ref="0x7f9ece68e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece68e990"/>
        <function-ref name="set" scoped="" ref="0x7f9ece68eb20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece68ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece68b0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece68b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece68b420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece68b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece68b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece68b8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ece68ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece68bbf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ece68bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece68a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ecf16d440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ecf16d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf16d7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf16d950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf16dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf16dc70"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf16de00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf16c020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf16c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf16c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ecf16a8f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ecf16a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf16ac70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf16ae00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf169020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1691b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf169340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1694d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf169660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1697f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ecf16f020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ecf16f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf16f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf16f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf16f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf16f850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf16f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf16fb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf16fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf16e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ecf16c5d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ecf16c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf16c950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf16cae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf16cc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf16ce00"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf16b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf16b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf16b340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf16b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ecf169a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ecf169a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf169e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf168020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1681b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf168340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1684d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf168660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1687f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf168980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ecf16e2b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ecf16e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf16e630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf16e7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf16e950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf16eae0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf16ec70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf16ee00"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf16d020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf16d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ecf16b760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ecf16b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf16bae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf16bc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf16be00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf16a020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf16a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf16a340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf16a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf16a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ecf168c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ecf168c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf167020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1671b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf167340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf1674d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf167660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf1677f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf167980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf167b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece638c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece638c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece6370a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece637230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece6373c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece637550"/>
        <function-ref name="get" scoped="" ref="0x7f9ece6376e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece637870"/>
        <function-ref name="set" scoped="" ref="0x7f9ece637a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece637b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece635e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece635e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece6341c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece634350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece6344e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece634670"/>
        <function-ref name="get" scoped="" ref="0x7f9ece634800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece634990"/>
        <function-ref name="set" scoped="" ref="0x7f9ece634b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece634cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece6310a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece6310a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece631420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece6315b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece631740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece6318d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ece631a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece631bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ece631d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece630020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece62e3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece62e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece62e770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece62e900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece62ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece62ec20"/>
        <function-ref name="get" scoped="" ref="0x7f9ece62edb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece62d020"/>
        <function-ref name="set" scoped="" ref="0x7f9ece62d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece62d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece62b6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece62b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece62ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece62bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece62bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece629020"/>
        <function-ref name="get" scoped="" ref="0x7f9ece6291b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece629340"/>
        <function-ref name="set" scoped="" ref="0x7f9ece6294d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece629660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece6279b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece6279b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece627d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece626020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece6261b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece626340"/>
        <function-ref name="get" scoped="" ref="0x7f9ece6264d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece626660"/>
        <function-ref name="set" scoped="" ref="0x7f9ece6267f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece626980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece624e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece624e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece6231c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece623350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece6234e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece623670"/>
        <function-ref name="get" scoped="" ref="0x7f9ece623800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece623990"/>
        <function-ref name="set" scoped="" ref="0x7f9ece623b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece623cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece6200a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece6200a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece620420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece6205b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece620740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece6208d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ece620a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece620bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ece620d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece61f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ecf15e760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ecf15e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf15eae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf15ec70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf15ee00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf15d020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf15d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf15d340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf15d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf15d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ecf15bc10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ecf15bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf15a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf15a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf15a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf15a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf15a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf15a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf15a980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf15ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ecf1603f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ecf1603f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf160770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf160900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf160a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf160c20"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf160db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf15f020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf15f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf15f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ecf15d8f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ecf15d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf15dc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf15de00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf15c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf15c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf15c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf15c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf15c660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf15c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ecf15ada0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ecf15ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf158180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf158310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1584a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf158630"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1587c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf158950"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf158ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf158c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ecf15f5d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ecf15f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf15f950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf15fae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf15fc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf15fe00"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf15e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf15e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf15e340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf15e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ecf15ca80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ecf15ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf15ce00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf15b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf15b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf15b340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf15b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf15b660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf15b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf15b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ecf157020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ecf157020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1573a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf157530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1576c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf157850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1579e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf157b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf157d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf156020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece5cdc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece5cdc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece5cc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece5cc230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece5cc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece5cc550"/>
        <function-ref name="get" scoped="" ref="0x7f9ece5cc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece5cc870"/>
        <function-ref name="set" scoped="" ref="0x7f9ece5cca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece5ccb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece5cae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece5cae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece5c91c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece5c9350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece5c94e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece5c9670"/>
        <function-ref name="get" scoped="" ref="0x7f9ece5c9800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece5c9990"/>
        <function-ref name="set" scoped="" ref="0x7f9ece5c9b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece5c9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece5c60a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece5c60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece5c6420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece5c65b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece5c6740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece5c68d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ece5c6a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece5c6bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ece5c6d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece5c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece5c33f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece5c33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece5c3770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece5c3900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece5c3a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece5c3c20"/>
        <function-ref name="get" scoped="" ref="0x7f9ece5c3db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece5c2020"/>
        <function-ref name="set" scoped="" ref="0x7f9ece5c21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece5c2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece5c06d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece5c06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece5c0a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece5c0be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece5c0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece5be020"/>
        <function-ref name="get" scoped="" ref="0x7f9ece5be1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece5be340"/>
        <function-ref name="set" scoped="" ref="0x7f9ece5be4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece5be660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece5bc9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece5bc9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece5bcd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece5bb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece5bb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece5bb340"/>
        <function-ref name="get" scoped="" ref="0x7f9ece5bb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece5bb660"/>
        <function-ref name="set" scoped="" ref="0x7f9ece5bb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece5bb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece5b9e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece5b9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece5b81c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece5b8350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece5b84e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece5b8670"/>
        <function-ref name="get" scoped="" ref="0x7f9ece5b8800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece5b8990"/>
        <function-ref name="set" scoped="" ref="0x7f9ece5b8b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece5b8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece5b50a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece5b50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece5b5420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece5b55b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece5b5740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece5b58d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ece5b5a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece5b5bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ece5b5d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece5b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ecf14fa80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ecf14fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf14fe00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf14e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf14e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf14e340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf14e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf14e660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf14e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf14e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ecf14a020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ecf14a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf14a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf14a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf14a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf14a850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf14a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf14ab70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf14ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf149020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ecf1517a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ecf1517a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf151b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf151cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf151e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf150020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1501b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf150340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1504d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf150660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ecf14ec10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ecf14ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf14c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf14c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf14c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf14c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf14c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf14c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf14c980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf14cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ecf1492b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ecf1492b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf149630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf1497c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf149950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf149ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf149c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf149e00"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf148020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ecf1508f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ecf1508f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf150c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf150e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf14f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf14f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf14f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf14f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf14f660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf14f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ecf14cda0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ecf14cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf14b180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf14b310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf14b4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf14b630"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf14b7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf14b950"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf14bae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf14bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ecf148440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ecf148440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1487c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf148950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf148ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf148c70"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf148e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf147020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1471b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf147340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece562c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece562c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece5610a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece561230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece5613c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece561550"/>
        <function-ref name="get" scoped="" ref="0x7f9ece5616e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece561870"/>
        <function-ref name="set" scoped="" ref="0x7f9ece561a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece561b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece55fe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece55fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece55e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece55e350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece55e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece55e670"/>
        <function-ref name="get" scoped="" ref="0x7f9ece55e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece55e990"/>
        <function-ref name="set" scoped="" ref="0x7f9ece55eb20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece55ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece55b0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece55b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece55b420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece55b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece55b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece55b8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ece55ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece55bbf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ece55bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece55a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece5583f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece5583f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece558770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece558900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece558a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece558c20"/>
        <function-ref name="get" scoped="" ref="0x7f9ece558db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece557020"/>
        <function-ref name="set" scoped="" ref="0x7f9ece5571b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece557340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece5556d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece5556d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece555a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece555be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece555d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece554020"/>
        <function-ref name="get" scoped="" ref="0x7f9ece5541b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece554340"/>
        <function-ref name="set" scoped="" ref="0x7f9ece5544d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece554660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece5529b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece5529b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece552d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece550020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece5501b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece550340"/>
        <function-ref name="get" scoped="" ref="0x7f9ece5504d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece550660"/>
        <function-ref name="set" scoped="" ref="0x7f9ece5507f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece550980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece54ee20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece54ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece54d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece54d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece54d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece54d670"/>
        <function-ref name="get" scoped="" ref="0x7f9ece54d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece54d990"/>
        <function-ref name="set" scoped="" ref="0x7f9ece54db20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece54dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ece54a0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ece54a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ece54a420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ece54a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ece54a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ece54a8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ece54aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ece54abf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ece54ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ece549020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf142e20" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf142e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1401c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf140350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf1404e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf140670"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf140800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf140990"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf140b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf140cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf13c9b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf13c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf13cd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf13b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf13b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf13b340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf13b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf13b660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf13b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf13b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf1366d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf1366d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf136a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf136be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf136d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf135020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1351b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf135340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1354d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf135660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf131160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf131160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1314e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf131670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf131800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf131990"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf131b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf131cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf131e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf12f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf12cc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf12cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf12b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf12b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf12b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf12b550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf12b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf12b870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf12ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf12bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf1266d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf1266d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf126a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf126be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf126d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf125020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1251b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf125340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1254d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf125660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf121270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf121270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1215f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf121780"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf121910"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf121aa0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf121c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf121dc0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf120020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf1201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf11cd00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf11cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf11b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf11b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf11b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf11b550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf11b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf11b870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf11ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf11bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf1166d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf1166d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf116a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf116be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf116d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf115020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1151b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf115340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1154d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf115660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf111160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf111160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1114e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf111670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf111800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf111990"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf111b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf111cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf111e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf110020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf10cc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf10cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf10b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf10b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf10b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf10b550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf10b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf10b870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf10ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf10bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf1066d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf1066d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf106a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf106be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf106d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf105020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf1051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf105340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf1054d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf105660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf101160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf101160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf1014e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf101670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf101800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf101990"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf101b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf101cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf101e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf100020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf0fcc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf0fcc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf0fb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf0fb230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf0fb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf0fb550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0fb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf0fb870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf0fba00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf0fbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf0e0020" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf0e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf0e03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf0e0530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf0e06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf0e0850"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0e09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf0e0b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf0e0d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf0df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf0db6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf0db6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf0dba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf0dbbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf0dbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf0da020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0da1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf0da340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf0da4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf0da660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf0d6c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf0d6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf0d50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf0d5230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf0d53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf0d5550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0d56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf0d5870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf0d5a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf0d5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf0d1180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf0d1180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf0d1500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf0d1690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf0d1820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf0d19b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0d1b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf0d1cd0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf0d1e60"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf0d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf0cc830" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf0cc830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf0ccbb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf0ccd40"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf0cb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf0cb1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0cb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf0cb4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf0cb660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf0cb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf0c7e20" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf0c7e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf0c61c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf0c6350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf0c64e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf0c6670"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0c6800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf0c6990"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf0c6b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf0c6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf0c2460" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf0c2460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf0c27e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf0c2970"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf0c2b00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf0c2c90"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0c2e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf0c1020"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf0c11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf0c1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf0bd9b0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf0bd9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf0bdd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf0bc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf0bc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf0bc340"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0bc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf0bc660"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf0bc7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf0bc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf0b8160" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf0b8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf0b84e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf0b8670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf0b8800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf0b8990"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0b8b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf0b8cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf0b8e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf0b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf0b36d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf0b36d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf0b3a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf0b3be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf0b3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf0b2020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0b21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf0b2340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf0b24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf0b2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf0aec90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf0aec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf0ad0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf0ad230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf0ad3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf0ad550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0ad6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf0ad870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf0ada00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf0adb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf0a9180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf0a9180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf0a9500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf0a9690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf0a9820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf0a99b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0a9b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf0a9cd0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf0a9e60"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf0a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf0a46d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf0a46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf0a4a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf0a4be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf0a4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf0a3020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0a31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf0a3340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf0a34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf0a3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf09fc90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf09fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf09e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf09e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf09e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf09e550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf09e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf09e870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf09ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf09eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf09a180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf09a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf09a500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf09a690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf09a820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf09a9b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf09ab40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf09acd0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf09ae60"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf099020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf0956d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf0956d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf095a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf095be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf095d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf094020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0941b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf094340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf0944d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf094660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf090c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf090c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf08f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf08f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf08f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf08f550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf08f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf08f870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf08fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf08fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf08b180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf08b180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf08b500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf08b690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf08b820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf08b9b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf08bb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf08bcd0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf08be60"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf08a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf0866d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf0866d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf086a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf086be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf086d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf085020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0851b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf085340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf0854d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf085660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf081c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf081c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf0800a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf080230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf0803c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf080550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0806e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf080870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf080a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf080b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf07c180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf07c180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf07c500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf07c690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf07c820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf07c9b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf07cb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf07ccd0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf07ce60"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf07b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf0776d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf0776d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf077a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf077be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf077d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf076020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0761b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf076340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf0764d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf076660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf072c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf072c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf0710a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf071230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf0713c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf071550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0716e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf071870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf071a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf071b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf06d180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf06d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf06d500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf06d690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf06d820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf06d9b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf06db40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf06dcd0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf06de60"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf06c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf0686d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf0686d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf068a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf068be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf068d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf067020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0671b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf067340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf0674d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf067660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf063c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf063c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf0620a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf062230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf0623c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf062550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0626e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf062870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf062a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf062b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf05e180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf05e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf05e500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf05e690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf05e820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf05e9b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf05eb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf05ecd0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf05ee60"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf05d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf0596d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf0596d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf059a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf059be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf059d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf058020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0581b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf058340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf0584d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf058660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf0530a0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf0530a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf053420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf0535b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf053740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf0538d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf053a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf053bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf053d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf052020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf04f6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf04f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf04fa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf04fbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf04fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf04e020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf04e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf04e340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf04e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf04e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf04ac90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf04ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf0490a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf049230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf0493c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf049550"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf0496e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf049870"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf049a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf049b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ecf045180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ecf045180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecf045500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecf045690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecf045820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecf0459b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecf045b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecf045cd0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecf045e60"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecf043020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PS2" ref="0x7f9ecefefe60" loc="12:PS2/PS2C.nc">
      <component-ref qname="PS2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PS2" scoped="" ref="0x7f9ecefefe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ecefec210"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f9ecefec3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClockIRQ" ref="0x7f9ecefbdd90" loc="22:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClockIRQ" scoped="" ref="0x7f9ecefbdd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9ecefc3180"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecefc3310"/>
        <function-ref name="disable" scoped="" ref="0x7f9ecefc34a0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9ecefc3630"/>
        <function-ref name="reset" scoped="" ref="0x7f9ecefc37c0"/>
        <function-ref name="setMask" scoped="" ref="0x7f9ecefc3950"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecefc3ae0"/>
        <function-ref name="getPins" scoped="" ref="0x7f9ecefc3c70"/>
        <function-ref name="getMask" scoped="" ref="0x7f9ecefc3e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClockPin" ref="0x7f9ecefc21c0" loc="23:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClockPin" scoped="" ref="0x7f9ecefc21c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecefc2540"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecefc26d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecefc2860"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecefc29f0"/>
        <function-ref name="get" scoped="" ref="0x7f9ecefc2b80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecefc2d10"/>
        <function-ref name="set" scoped="" ref="0x7f9ecefbc020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecefbc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataPin" ref="0x7f9ecefbc4f0" loc="24:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataPin" scoped="" ref="0x7f9ecefbc4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecefbc870"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecefbca00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecefbcb90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecefbcd20"/>
        <function-ref name="get" scoped="" ref="0x7f9ecefbb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecefbb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ecefbb340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecefbb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PS2" ref="0x7f9ecefc5860" loc="19:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PS2" scoped="" ref="0x7f9ecefc5860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ecefc5be0"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f9ecefc5d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x7f9ecefeaca0" loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtmegaPinChange2C.nc">
      <component-ref qname="HplAtmegaPinChange2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x7f9ecefeaca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9ecef940a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecef94230"/>
        <function-ref name="disable" scoped="" ref="0x7f9ecef943c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9ecef94550"/>
        <function-ref name="reset" scoped="" ref="0x7f9ecef946e0"/>
        <function-ref name="setMask" scoped="" ref="0x7f9ecef94870"/>
        <function-ref name="enable" scoped="" ref="0x7f9ecef94a00"/>
        <function-ref name="getPins" scoped="" ref="0x7f9ecef94b90"/>
        <function-ref name="getMask" scoped="" ref="0x7f9ecef94d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f9ecef7c3e0" loc="14:VolumeAdc/VolumeAdcC.nc">
      <component-ref qname="VolumeAdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f9ecef7c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ecef7b020"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ecef7b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f9ecef73e10" loc="17:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ecef73e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9ecef771c0"/>
        <function-ref name="configure" scoped="" ref="0x7f9ecef77350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumePin" ref="0x7f9ecef77700" loc="19:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumePin" scoped="" ref="0x7f9ecef77700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecef77a80"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ecef77c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecef77da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ecef76020"/>
        <function-ref name="get" scoped="" ref="0x7f9ecef761b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecef76340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecef764d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ecef76660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcConfig" ref="0x7f9ecef73470" loc="16:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f9ecef73470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f9ecef737f0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9ecef73980"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f9ecef73b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9ecee26c10" loc="25:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ecee26c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9ecee25020"/>
        <function-ref name="configure" scoped="" ref="0x7f9ecee251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f9ecee29be0" loc="22:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f9ecee29be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ecee28860"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ecee28ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f9ecee26320" loc="24:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f9ecee26320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f9ecee266a0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9ecee26830"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f9ecee269c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f9ecef64920" loc="19:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f9ecef64920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ecef63560"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ecef639e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f9ecef5d8f0" loc="20:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f9ecef5d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ecef605a0"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ecef60a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f9ecef5b5e0" loc="24:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9ecef5b5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ecef5b960"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ecef5baf0"/>
        <function-ref name="request" scoped="" ref="0x7f9ecef5bc80"/>
        <function-ref name="granted" scoped="" ref="0x7f9ecef5be10"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ecef5a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f9ecef5f6d0" loc="23:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f9ecef5f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f9ecef5fa50"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9ecef5fbe0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f9ecef5fd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9ecef54210" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ecef54210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9ecef54590"/>
        <function-ref name="configure" scoped="" ref="0x7f9ecef54720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcSingle" ref="0x7f9ecef50780" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f9ecef50780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f9ecef50b00"/>
        <function-ref name="cancel" scoped="" ref="0x7f9ecef50c90"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9ecef50e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9ecef57280" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9ecef57280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ecef57600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ecef57790"/>
        <function-ref name="request" scoped="" ref="0x7f9ecef57920"/>
        <function-ref name="granted" scoped="" ref="0x7f9ecef57ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ecef57c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcMultiple" ref="0x7f9ecef4a420" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f9ecef4a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f9ecef4a7a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9ecef4a930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm1280Adc" ref="0x7f9ecef36710" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f9ecef36710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f9ecef36a90"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f9ecef36c20"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f9ecef36db0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9ecef45020"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f9ecef451b0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f9ecef45340"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f9ecef454d0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f9ecef45660"/>
        <function-ref name="cancel" scoped="" ref="0x7f9ecef457f0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f9ecef45980"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f9ecef45b10"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f9ecef45ca0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f9ecef45e30"/>
        <function-ref name="isStarted" scoped="" ref="0x7f9ecef44120"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f9ecef442b0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f9ecef44440"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f9ecef445d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ecef44760"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9ecef448f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcSingle" ref="0x7f9ecef47830" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f9ecef47830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f9ecef47bb0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9ecef47d40"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9ecef46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ecef48830" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ecef48830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ecef48bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f9ecef44be0" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9ecef44be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f9ecef35020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f9ecef351b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f9ecef35340"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f9ecef354d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f9ecef35660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f9ecef47020" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9ecef47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9ecef473a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecef47530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcMultiple" ref="0x7f9ecef46330" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f9ecef46330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f9ecef466b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9ecef46840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1280Adc" ref="0x7f9ecef03460" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <component-ref qname="HplAtm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f9ecef03460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f9ecef037e0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f9ecef03970"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f9ecef03b00"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9ecef03c90"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f9ecef03e20"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f9ecef02020"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f9ecef021b0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f9ecef02340"/>
        <function-ref name="cancel" scoped="" ref="0x7f9ecef024d0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f9ecef02660"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f9ecef027f0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f9ecef02980"/>
        <function-ref name="startConversion" scoped="" ref="0x7f9ecef02b10"/>
        <function-ref name="isStarted" scoped="" ref="0x7f9ecef02da0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f9ecef01020"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f9ecef011b0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f9ecef01340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ecef014d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9ecef01660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f9eceefcc10" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
      <component-ref qname="HplAtm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f9eceefcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f9eceefb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1280Adc" ref="0x7f9eceefe7d0" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
      <component-ref qname="HplAtm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f9eceefe7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f9eceefeb50"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f9eceefece0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f9eceefee70"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9eceefd030"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f9eceefd1c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f9eceefd350"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f9eceefd4e0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f9eceefd670"/>
        <function-ref name="cancel" scoped="" ref="0x7f9eceefd800"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f9eceefd990"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f9eceefdb20"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f9eceefdcb0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f9eceefde40"/>
        <function-ref name="isStarted" scoped="" ref="0x7f9eceefc120"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f9eceefc2b0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f9eceefc440"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f9eceefc5d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9eceefc760"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9eceefc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9ecee92c00" loc="92:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9ecee92c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9ecee91020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9ecee911b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9ecee90930" loc="96:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ecee90930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9ecee90cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f9ecee90e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f9ecee91400" loc="93:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ecee91400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ecee91780"/>
        <function-ref name="requested" scoped="" ref="0x7f9ecee91910"/>
        <function-ref name="granted" scoped="" ref="0x7f9ecee91aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ecee91c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9ecee91dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9ecee93e70" loc="91:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9ecee93e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ecee92240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ecee923d0"/>
        <function-ref name="request" scoped="" ref="0x7f9ecee92560"/>
        <function-ref name="granted" scoped="" ref="0x7f9ecee926f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ecee92880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9ecee90060" loc="94:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ecee90060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9ecee903e0"/>
        <function-ref name="userId" scoped="" ref="0x7f9ecee90570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ece360c00" loc="44:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ece360c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ece35f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f9ece35f2b0" loc="45:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f9ece35f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9ece35f630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9ece35f7c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f9ece35f950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9ece35fae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9ece35c3a0" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9ece35c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9ece35c740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9ece35c8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9ece359210" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ece359210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9ece3595b0"/>
        <function-ref name="configure" scoped="" ref="0x7f9ece359740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f9ece3599d0" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f9ece3599d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9ece359d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9ece358020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f9ece3581b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9ece358340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f9ece35cb20" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ece35cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ece35a020"/>
        <function-ref name="requested" scoped="" ref="0x7f9ece35a1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f9ece35a340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ece35a4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9ece35a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9ece358590" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9ece358590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9ece358910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9ece358aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f9ece358c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9ece358dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9ece357020"/>
        <function-ref name="get" scoped="" ref="0x7f9ece3571b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9ece357340"/>
        <function-ref name="led0On" scoped="" ref="0x7f9ece357980"/>
        <function-ref name="set" scoped="" ref="0x7f9ece357660"/>
        <function-ref name="led2On" scoped="" ref="0x7f9ece3574d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9ece3577f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9ece35d4d0" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9ece35d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ece35d870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ece35da00"/>
        <function-ref name="request" scoped="" ref="0x7f9ece35db90"/>
        <function-ref name="granted" scoped="" ref="0x7f9ece35dd20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ece35c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9ece35a8b0" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ece35a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9ece35ac30"/>
        <function-ref name="userId" scoped="" ref="0x7f9ece35adc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f9ece357c50" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f9ece357c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ece356020"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ece3561b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f9ecee8b780" loc="72:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f9ecee8b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f9ecee8bb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f9ecee8bd50" loc="73:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ecee8bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ecee82100"/>
        <function-ref name="requested" scoped="" ref="0x7f9ecee82290"/>
        <function-ref name="granted" scoped="" ref="0x7f9ecee82420"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ecee825b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9ecee82740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f9ecee8b020" loc="70:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9ecee8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9ecee8b3a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecee8b530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f9ecee82990" loc="74:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ecee82990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9ecee82d10"/>
        <function-ref name="userId" scoped="" ref="0x7f9ecee81020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f9ece324dc0" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f9ece324dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f9ece323180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f9ece3233d0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ece3233d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ece323750"/>
        <function-ref name="requested" scoped="" ref="0x7f9ece3238e0"/>
        <function-ref name="granted" scoped="" ref="0x7f9ece323a70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ece323c00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9ece323d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f9ece324660" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9ece324660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9ece3249e0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ece324b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f9ece322020" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ece322020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9ece3223a0"/>
        <function-ref name="userId" scoped="" ref="0x7f9ece322530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f9ecee72740" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f9ecee72740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed024f5c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9ed024f930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f9ecee715b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcSingle" ref="0x7f9ecee749f0" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f9ecee749f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f9ecee74d70"/>
        <function-ref name="cancel" scoped="" ref="0x7f9ecee73020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9ecee731b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f9ecee78410" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f9ecee78410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ecee77020"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ecee774a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f9ecee751d0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f9ecee751d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ecee75e00"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ecee74340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f9ecee73a10" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f9ecee73a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f9ecee73d90"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9ecee72020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f9ecee721b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7f9ecee60820" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7f9ecee60820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ecee60ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ecee60d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f9ecee4b150" loc="24:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f9ecee4b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ecee4bd60"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ecee33260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f9ecee33af0" loc="26:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f9ecee33af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ecee31750"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ecee31bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f9ecee30300" loc="27:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9ecee30300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ecee306a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ecee30830"/>
        <function-ref name="request" scoped="" ref="0x7f9ecee309c0"/>
        <function-ref name="granted" scoped="" ref="0x7f9ecee30b50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ecee30ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BufferedLcd" ref="0x7f9ecef7d590" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <component-ref qname="BufferedLcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BufferedLcd" scoped="" ref="0x7f9ecef7d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferedLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ecef7d910"/>
        <function-ref name="forceRefresh" scoped="" ref="0x7f9ecef7daa0"/>
        <function-ref name="goTo" scoped="" ref="0x7f9ecef7dc30"/>
        <function-ref name="write" scoped="" ref="0x7f9ecef7ddc0"/>
        <function-ref name="autoRefresh" scoped="" ref="0x7f9ecee20020"/>
        <function-ref name="write_P" scoped="" ref="0x7f9ecee201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9ecee1f560" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="BufferedLcdC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9ecee1f560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ecee1ba20"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecee1d020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ecee1dda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ecee1d920"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ecee1a4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ecee1a020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ecee1d4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ecee1e1b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ecee1b410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ecee1e680"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecee1eb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BufferedLcd" ref="0x7f9ecede7020" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <component-ref qname="BufferedLcdC.BufferedLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BufferedLcd" scoped="" ref="0x7f9ecede7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferedLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ecede73a0"/>
        <function-ref name="forceRefresh" scoped="" ref="0x7f9ecede7530"/>
        <function-ref name="goTo" scoped="" ref="0x7f9ecede76c0"/>
        <function-ref name="write" scoped="" ref="0x7f9ecede7850"/>
        <function-ref name="autoRefresh" scoped="" ref="0x7f9ecede79e0"/>
        <function-ref name="write_P" scoped="" ref="0x7f9ecede7b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ecede1c30" loc="10:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <component-ref qname="BufferedLcdC.BufferedLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ecede1c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ecede0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lcd" ref="0x7f9ecede1490" loc="9:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <component-ref qname="BufferedLcdC.BufferedLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lcd" scoped="" ref="0x7f9ecede1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="writeData" scoped="" ref="0x7f9ecede1810"/>
        <function-ref name="writeCommand" scoped="" ref="0x7f9ecede19a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="refresh" ref="0x7f9ecede02f0" loc="34:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <component-ref qname="BufferedLcdC.BufferedLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="refresh" scoped="" ref="0x7f9ecede02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ecede0670"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ecede0800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9ecede6020" loc="8:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <component-ref qname="BufferedLcdC.BufferedLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9ecede6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ecede3630"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecede5a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ecede4920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ecede44a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ecede1020"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ecede3ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ecede4020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ecede6c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ecede3020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ecede5110"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecede55e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplLcd" ref="0x7f9eceddc100" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <component-ref qname="HplLcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplLcd" scoped="" ref="0x7f9eceddc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="writeData" scoped="" ref="0x7f9eceddc480"/>
        <function-ref name="writeCommand" scoped="" ref="0x7f9eceddc610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f9ecedd7aa0" loc="10:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
      <component-ref qname="HplLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f9ecedd7aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed024f5c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9ed024f930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f9ecedd68d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9eceddb7c0" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
      <component-ref qname="HplLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9eceddb7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9eceddbb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplLcd" ref="0x7f9eceddbe10" loc="8:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
      <component-ref qname="HplLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplLcd" scoped="" ref="0x7f9eceddbe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="writeData" scoped="" ref="0x7f9ecedd81c0"/>
        <function-ref name="writeCommand" scoped="" ref="0x7f9ecedd8350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port" ref="0x7f9ecedd86e0" loc="9:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
      <component-ref qname="HplLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Port" scoped="" ref="0x7f9ecedd86e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ecedd8a60"/>
        <function-ref name="clear" scoped="" ref="0x7f9ecedd8bf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ecedd8d80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ecedd7020"/>
        <function-ref name="read" scoped="" ref="0x7f9ecedd71b0"/>
        <function-ref name="write" scoped="" ref="0x7f9ecedd7340"/>
        <function-ref name="set" scoped="" ref="0x7f9ecedd74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9ecedc1d00" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioScannerAppC.VolumeTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9ecedc1d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ecedbc220"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecedbf7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ecedbe590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ecedbe110"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ecedbcb20"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ecedbc6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ecedbfc40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ecedc0940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ecedbeba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ecedc0e10"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecedbf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9ecedba750" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioScannerAppC.ErrorTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9ecedba750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ecedb6c40"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecedb81e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ecedb6020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ecedb8ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ecedb5590"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ecedb5110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ecedb8660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ecedb9390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ecedb6630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ecedb9860"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecedb9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9ecedb3060" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioScannerAppC.RDSTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9ecedb3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed02511a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ed0251510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ecedaf630"/>
        <function-ref name="fired" scoped="" ref="0x7f9ecedb2ac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ecedb0920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ecedb04a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ecedae020"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ecedafab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ecedb0020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ecedb3c50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ecedaf020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ecedb2170"/>
        <function-ref name="stop" scoped="" ref="0x7f9ecedb2640"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../tinyos_ws18/tos/interfaces/Init.nc">
      <documentation loc="34:../tinyos_ws18/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f9ed0177740" loc="62:../tinyos_ws18/tos/interfaces/Init.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../tinyos_ws18/tos/interfaces/Boot.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f9ed0178350" loc="60:../tinyos_ws18/tos/interfaces/Boot.nc">
        <documentation loc="51:../tinyos_ws18/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f9ed016fb70" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f9ed016f8f0" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f9ed0172070" loc="31:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f9ed0172af0" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f9ed0172870" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f9ed0170630" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f9ed01703b0" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f9ed016f020" loc="53:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../tinyos_ws18/tos/interfaces/Scheduler.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f9ed03066c0" loc="57:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="54:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f9ed03056a0" loc="72:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f9ed0306e30" loc="65:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="59:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f9ed02fda30" loc="67:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f9ed02fb2b0" loc="75:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../tinyos_ws18/tos/interfaces/McuSleep.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f9ed0203d40" loc="76:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f9ed01e3940" loc="62:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f9ed0282470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f9ed01e41f0" loc="52:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9ed00fba70" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9ed00fba70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f9ed00ee7c0" loc="136:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="132:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9ed00f2070" loc="83:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f9ed00f1df0" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f9ed00f1820" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f9ed00f1b60" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f9ed00f1070" loc="98:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="94:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f9ed00ed8a0" loc="151:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="146:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f9ed00ed020" loc="144:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="138:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f9ed00f2850" loc="92:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="86:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f9ed00f5610" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9ed00f5390" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f9ed00f0dc0" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="116:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f9ed00f07f0" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f9ed00f0b30" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f9ed00f4110" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9ed00f5e50" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9ed00f4910" loc="78:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Database" loc="23:Database/Database.nc">
      <function command="" provided="0" name="getChannelList" ref="0x7f9ed010d7b0" loc="40:Database/Database.nc">
        <documentation loc="34:Database/Database.nc">
          <short>&#10; Request the channel list from the database server&#10; Received channels will be signaled through receivedChannelEntry&#10; </short>
          <long>&#10; Request the channel list from the database server&#10; Received channels will be signaled through receivedChannelEntry&#10; @param onlyFavorites tells server to send only the channels with a&#10;        registered quickDial number, if not zero&#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="onlyFavorites" ref="0x7f9ed010d530" loc="40:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedChannelEntry" ref="0x7f9ed010a850" loc="59:Database/Database.nc">
        <documentation loc="54:Database/Database.nc">
          <short>&#10; Received highscore entry from the server.</short>
          <long>&#10; Received highscore entry from the server.&#10; @param id The channel index from the database store&#10; @param channel The channel information, see channelInfo typedef&#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
            <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7f9ed0110790"/>
              <typename><typedef-ref name="channelInfo" ref="0x7f9ed0110dc0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f9ed010a240" loc="59:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f9ed010a5c0" loc="59:Database/Database.nc">
            <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7f9ed0110790"/>
              <typename><typedef-ref name="channelInfo" ref="0x7f9ed0110dc0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="saveChannel" ref="0x7f9ed010ec30" loc="31:Database/Database.nc">
        <documentation loc="25:Database/Database.nc">
          <short>&#10; Save a new channel, or change properties of an existing one.</short>
          <long>&#10; Save a new channel, or change properties of an existing one.&#10; @param id The channel index from the database store, 0xFF to autoselect,&#10;           must be between 0 and 15 if passed manually&#10; @param channel The channel information, see channelInfo typedef&#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7f9ed0110790"/>
                <typename><typedef-ref name="channelInfo" ref="0x7f9ed0110dc0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f9ed010e5e0" loc="31:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f9ed010e9a0" loc="31:Database/Database.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7f9ed0110790"/>
                <typename><typedef-ref name="channelInfo" ref="0x7f9ed0110dc0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="savedChannel" ref="0x7f9ed0109640" loc="67:Database/Database.nc">
        <documentation loc="61:Database/Database.nc">
          <short>&#10; Server proceesed our request to save a Channel&#10; </short>
          <long>&#10; Server proceesed our request to save a Channel&#10; @param id The channel index from the database store, the one we passed&#10;           or the which was choosen if 0xFF was passed.&#10; @param result 0 = OK, 1 = No free index (only ID auto choose), 2 = DB error &#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f9ed0109060" loc="67:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
          <variable name="result" ref="0x7f9ed01093b0" loc="67:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f9ed010c2a0" loc="46:Database/Database.nc">
        <documentation loc="42:Database/Database.nc">
          <short>&#10; Request the channel list from the database server&#10; Received channels will be signaled through receivedChannelEntry&#10;</short>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f9ed010c020" loc="46:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="purgeChannelList" ref="0x7f9ed010ca60" loc="52:Database/Database.nc">
        <documentation loc="48:Database/Database.nc">
          <short>&#10; Request that the Database purges all channels and their state&#10; Received channels will be signaled through receivedChannelEntry&#10;</short>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../tinyos_ws18/tos/interfaces/Read.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f9ed00fa020" loc="49:../tinyos_ws18/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f9ed00fa020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f9ed00fa8e0" loc="55:../tinyos_ws18/tos/interfaces/Read.nc">
        <documentation loc="50:../tinyos_ws18/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f9ed00f8680" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f9ed00fa020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f9ed00f80d0" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f9ed00f83f0" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f9ed00fa020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PS2" loc="1:PS2/PS2.nc">
      <function command="" provided="0" name="init" ref="0x7f9ed00fc270" loc="4:PS2/PS2.nc">
        <interfacedef-ref qname="PS2"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedChar" ref="0x7f9ed00fcc10" loc="7:PS2/PS2.nc">
        <interfacedef-ref qname="PS2"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="chr" ref="0x7f9ed00fc990" loc="7:PS2/PS2.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BufferedLcd" loc="8:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
      <documentation loc="44:/usr/lib/gcc/avr/4.9.1/../../../../avr/include/avr/pgmspace.h">
        <short> \defgroup avr_pgmspace &#60;avr/pgmspace.h>: Program Space Utilities&#10;\code&#10;#include &#60;avr/io.h>&#10;#include &#60;avr/pgmspace.h>&#10;\endcode&#10;The functions in this module provide interfaces for a program to access&#10;data stored in program space (flash memory) of the device.</short>
        <long> \defgroup avr_pgmspace &#60;avr/pgmspace.h>: Program Space Utilities&#10;\code&#10;#include &#60;avr/io.h>&#10;#include &#60;avr/pgmspace.h>&#10;\endcode&#10;The functions in this module provide interfaces for a program to access&#10;data stored in program space (flash memory) of the device.  In order to&#10;use these functions, the target device must support either the \c LPM or&#10;\c ELPM instructions.&#10;\note These functions are an attempt to provide some compatibility with&#10;header files that come with IAR C, to make porting applications between&#10;different compilers easier.  This is not 100% compatibility though (GCC&#10;does not have full support for multiple address spaces yet).&#10;\note If you are working with strings which are completely based in ram,&#10;use the standard string functions described in \ref avr_string.&#10;\note If possible, put your constant tables in the lower 64 KB and use&#10;pgm_read_byte_near() or pgm_read_word_near() instead of&#10;pgm_read_byte_far() or pgm_read_word_far() since it is more efficient that&#10;way, and you can still use the upper 64K for executable code.&#10;All functions that are suffixed with a \c _P \e require their&#10;arguments to be in the lower 64 KB of the flash ROM, as they do&#10;not use ELPM instructions.  This is normally not a big concern as&#10;the linker setup arranges any program space constants declared&#10;using the macros from this header file so they are placed right after&#10;the interrupt vectors, and in front of any executable code.  However,&#10;it can become a problem if there are too many of these constants, or&#10;for bootloaders on devices with more than 64 KB of ROM.&#10;&#60;em>All these functions will not work in that situation.&#60;/em>&#10;\note For &#60;b>Xmega&#60;/b> devices, make sure the NVM controller&#10;command register (\c NVM.CMD or \c NVM_CMD) is set to 0x00 (NOP)&#10;before using any of these functions.&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f9ed01169b0" loc="13:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="forceRefresh" ref="0x7f9ed0112020" loc="17:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="goTo" ref="0x7f9ed01138f0" loc="16:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="line" ref="0x7f9ed0113330" loc="16:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
          <variable name="col" ref="0x7f9ed0113660" loc="16:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f9ed01142e0" loc="14:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="string" ref="0x7f9ed0114060" loc="14:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="autoRefresh" ref="0x7f9ed01162a0" loc="12:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <documentation loc="9:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
          <short>&#10; </short>
          <long>&#10; @param period&#9;refresh period in ms, set to 0 to disable auto refresh&#10;</long>
        </documentation>
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="period" ref="0x7f9ed0116020" loc="12:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write_P" ref="0x7f9ed0114c40" loc="15:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="string" ref="0x7f9ed01149c0" loc="15:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FMClick" loc="19:FMClick/FMClick.nc">
      <function command="" provided="0" name="seek" ref="0x7f9ed0105df0" loc="22:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f9ed0111320"/>
              <typename><typedef-ref name="seekmode_t" ref="0x7f9ed0111d50"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f9ed0105b70" loc="22:FMClick/FMClick.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f9ed0111320"/>
              <typename><typedef-ref name="seekmode_t" ref="0x7f9ed0111d50"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x7f9ed01012a0" loc="30:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="res" ref="0x7f9ed0101020" loc="30:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setVolume" ref="0x7f9ed0103e80" loc="26:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7f9ed0103c00" loc="26:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rdsReceived" ref="0x7f9ed00fe360" loc="36:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f9ed0106020"/>
              <typename><typedef-ref name="RDSType" ref="0x7f9ed0106a20"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f9ed00ffd40" loc="36:FMClick/FMClick.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f9ed0106020"/>
              <typename><typedef-ref name="RDSType" ref="0x7f9ed0106a20"/></typename>
            </type-tag>
          </variable>
          <variable name="buf" ref="0x7f9ed00fe0d0" loc="36:FMClick/FMClick.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveRDS" ref="0x7f9ed0102820" loc="28:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f9ed01025a0" loc="28:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="tuneComplete" ref="0x7f9ed0101c60" loc="32:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f9ed01019e0" loc="32:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f9ed0103570" loc="24:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="seekComplete" ref="0x7f9ed00ff640" loc="34:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f9ed00ff3c0" loc="34:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tune" ref="0x7f9ed0105480" loc="20:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f9ed0105200" loc="20:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Glcd" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
      <function command="" provided="0" name="drawTextPgm" ref="0x7f9ed0119620" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="109:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawTextPgm&#10;&#10; </short>
          <long>&#10; drawTextPgm&#10;&#10; @param text stored in program memory&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7f9ed011ab50" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7f9ed0119020" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9ed0119380" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawRect" ref="0x7f9ed011e140" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw rectangle&#10;&#10; </short>
          <long>&#10; Draw rectangle&#10;&#10; @param upper left x&#10; @param upper left y&#10; @param lower right x&#10; @param lower right y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7f9ed011f3c0" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7f9ed011f730" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7f9ed011fac0" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7f9ed011fe30" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawLine" ref="0x7f9ed0120bc0" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="45:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw line&#10;&#10; </short>
          <long>&#10; Draw line&#10;&#10; @param first point x&#10; @param first point y&#10; @param second point x&#10; @param second point y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7f9ed0122e80" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7f9ed0120210" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7f9ed01205a0" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7f9ed0120910" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x7f9ed0124ab0" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="12:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Set pixel&#10;&#10; </short>
          <long>&#10; Set pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9ed01244c0" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9ed0124820" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="invertPixel" ref="0x7f9ed01226c0" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="34:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Invert pixel&#10;&#10; </short>
          <long>&#10; Invert pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9ed01220d0" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9ed0122430" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPixel" ref="0x7f9ed01238a0" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="23:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Clear pixel&#10;&#10; </short>
          <long>&#10; Clear pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9ed01232b0" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9ed0123610" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawEllipse" ref="0x7f9ed011d730" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw ellipse&#10;&#10; </short>
          <long>&#10; Draw ellipse&#10;&#10; @param center x&#10; @param center y&#10; @param radius horizontal&#10; @param radius vertical&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9ed011e930" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9ed011ec90" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_h" ref="0x7f9ed011d0d0" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_v" ref="0x7f9ed011d480" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawText" ref="0x7f9ed011a3b0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="97:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawText&#10;&#10; </short>
          <long>&#10; drawText&#10;&#10; @param text&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7f9ed011ca10" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7f9ed011cd70" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9ed011a110" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="fill" ref="0x7f9ed011c2a0" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="87:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Fill Display with pattern&#10;&#10; </short>
          <long>&#10; Fill Display with pattern&#10;&#10; @param pattern&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x7f9ed011c020" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpControl" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="setGateway" ref="0x7f9ecfef7840" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="gateway" ref="0x7f9ecfef75c0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGateway" ref="0x7f9ecfef5190" loc="14:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
              <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetmask" ref="0x7f9ecfef62a0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="netmask" ref="0x7f9ecfef6020" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIp" ref="0x7f9ecfef69f0" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
              <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetmask" ref="0x7f9ecfef5910" loc="15:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
              <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setIp" ref="0x7f9ecff02e50" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ip" ref="0x7f9ecff02bd0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UdpSend" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
      <function command="" provided="0" name="send" ref="0x7f9ecfefedf0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
        <interfacedef-ref qname="UdpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f9ecfefe110" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dstPort" ref="0x7f9ecfefe480" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9ecfefe800" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9ecfefeb40" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9ecfefc770" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
        <interfacedef-ref qname="UdpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9ecfefc4f0" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../tinyos_ws18/tos/interfaces/SplitControl.nc">
      <documentation loc="72:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f9ecfef1460" loc="113:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="106:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9ecfef11e0" loc="113:../tinyos_ws18/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f9ecfef0ab0" loc="138:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="132:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9ecfef0830" loc="138:../tinyos_ws18/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9ecfef27b0" loc="104:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="89:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9ecfef1cb0" loc="130:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="115:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UdpReceive" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7f9ecfefa990" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
        <interfacedef-ref qname="UdpReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcIp" ref="0x7f9ecff03c50" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="srcPort" ref="0x7f9ecfefa020" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9ecfefa3a0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9ecfefa6e0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketSender" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <typedef name="item_type_t" ref="0x7f9ecfe47c30" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
          <interfacedef-ref qname="PacketSender"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="item_type_t" scoped="" ref="0x7f9ecfe47c30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x7f9ecfe427e0" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
        <interfacedef-ref qname="PacketSender"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_type_t" scoped="" ref="0x7f9ecfe47c30"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7f9ecfe42560" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_type_t" scoped="" ref="0x7f9ecfe47c30"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9ecfe412a0" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
        <interfacedef-ref qname="PacketSender"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9ecfe41020" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpPacket" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpPacket.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpPacket.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPacket" ref="0x7f9ecfe3ecc0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpPacket.nc">
        <interfacedef-ref qname="IpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:540" alignment="I:1"><struct-ref ref="0x7f9ecff16810"/>
              <typename><typedef-ref name="ip_packet_t" ref="0x7f9ecff16c30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpReceive" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7f9ecfe3d480" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
        <interfacedef-ref qname="IpReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcIp" ref="0x7f9ecfe43b00" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f9ecfe43e80" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9ecfe3d1e0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LlcReceive" loc="8:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7f9ecfe29050" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
        <interfacedef-ref qname="LlcReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f9ecfe37080"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f9ecfe373f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcMac" ref="0x7f9ecfe2fa20" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f9ecfe37080"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f9ecfe373f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f9ecfe2fda0" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LlcSend" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9ecfe2dc60" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
        <interfacedef-ref qname="LlcSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f9ecfe37080"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f9ecfe373f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstMac" ref="0x7f9ecfe2d300" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f9ecfe37080"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f9ecfe373f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f9ecfe2d680" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9ecfe2d9c0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9ecfe2b5c0" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
        <interfacedef-ref qname="LlcSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9ecfe2b340" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Arp" loc="10:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
      <function command="" provided="0" name="resolve" ref="0x7f9ecfe21020" loc="11:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
        <interfacedef-ref qname="Arp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ip" ref="0x7f9ecfe22c50" loc="11:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resolved" ref="0x7f9ecfe219c0" loc="12:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
        <interfacedef-ref qname="Arp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f9ecfe37080"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f9ecfe373f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="macPtr" ref="0x7f9ecfe21740" loc="12:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f9ecfe37080"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f9ecfe373f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MacControl" loc="10:../tinyos_ws18/tos/lib_ecs/llc/MacControl.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMac" ref="0x7f9ecfdd82b0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/MacControl.nc">
        <interfacedef-ref qname="MacControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f9ecfe37080"/>
              <typename><typedef-ref name="mac_addr_t" ref="0x7f9ecfe373f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mac" loc="10:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9ecfddee60" loc="11:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7f9ecfe36af0"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7f9ecfe35020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9ecfdde890" loc="11:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7f9ecfe36af0"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7f9ecfe35020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9ecfddebd0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="received" ref="0x7f9ecfdda2a0" loc="13:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7f9ecfe36af0"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7f9ecfe35020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9ecfdda020" loc="13:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7f9ecfe36af0"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7f9ecfe35020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9ecfddb7d0" loc="12:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9ecfddb550" loc="12:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMac" ref="0x7f9ecfddaa00" loc="14:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f9ecfe37080"/>
              <typename><typedef-ref name="mac_addr_t" ref="0x7f9ecfe373f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LlcQueue" loc="8:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9ecfdba020" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
        <interfacedef-ref qname="LlcQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f9ecfe37080"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f9ecfe373f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstMac" ref="0x7f9ecfdbb240" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f9ecfe37080"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f9ecfe373f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etherType" ref="0x7f9ecfdbb5c0" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9ecfdbb940" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9ecfdbbc80" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9ecfdba960" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
        <interfacedef-ref qname="LlcQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9ecfdba6e0" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketQueue" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <typedef name="item_type" ref="0x7f9ecfdaee70" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
          <interfacedef-ref qname="PacketQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="item_type" scoped="" ref="0x7f9ecfdaee70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x7f9ecfda9390" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <interfacedef-ref qname="PacketQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x7f9ecfda9110" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getBuffer" ref="0x7f9ecfdaba30" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <interfacedef-ref qname="PacketQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="item_type" scoped="" ref="0x7f9ecfdaee70"/></type-var>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x7f9ecfdab770" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9ecfda8050" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <interfacedef-ref qname="PacketQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x7f9ecfda9a50" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f9ecfda9da0" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9ecfd02100" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9ecfd02100"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f9ecfd02a20" loc="61:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ed0c22170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9ecfcf1020" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9ecfcf1020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f9ecfcf1260" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ecfcf1260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f9ecfcf1b80" loc="64:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ecfcf1260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f9ecfcefc80" loc="76:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f9ecfcef420" loc="71:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f9ecfcee420" loc="82:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="78:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9ecfcfe690" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9ecfcfe690"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f9ecfcfe8d0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ecfcfe8d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f9ecfcf74a0" loc="109:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="105:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ecfcfe8d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9ecfcf94e0" loc="78:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f9ecfcf8ae0" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="90:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ecfcfe8d0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ecfcfe8d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f9ecfcf8510" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ecfcfe8d0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f9ecfcf8850" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ecfcfe8d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f9ecfcf9cc0" loc="88:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="81:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f9ecfcf7c90" loc="116:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="111:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ecfcfe8d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9ecfcfb4d0" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ecfcfe8d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9ecfcfb250" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ecfcfe8d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9ecfcfbd00" loc="73:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="68:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f9ecfcc0b20" loc="89:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f9ecfcc18e0" loc="85:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f9ecfcc45a0" loc="79:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f9ecfcc0350" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9ecfcc00d0" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f9ecfcc1110" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f9ecfcc2e30" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f9ecfcbf5c0" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f9ecfcbf340" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f9ecfcc4d40" loc="80:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f9ecfcc2710" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f9ecfcc2490" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280TimerSync" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
      <documentation loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changedto Sync for Atm1280&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer2Synchronous" ref="0x7f9ecfcb18e0" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Turn on timer 2 synchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBBusy" ref="0x7f9ecfcaf9c0" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f9ecfcb0910" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f9ecfcb00e0" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f9ecfcad270" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f9ecfcaf190" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f9ecfcb2620" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f9ed02344d0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f9ed02348f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f9ecfcb10b0" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f9ed02344d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f9ed02348f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9ecfcb2de0" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f9ed02344d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f9ed02348f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f9ecfcbc0d0" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ecfcbc0d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f9ecfcb99f0" loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9ecfcbbbf0" loc="58:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9ecfcbca10" loc="48:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ecfcbc0d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f9ecfcba390" loc="62:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f9ecfcb71f0" loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9ecfcbb440" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ecfcbc0d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f9ecfcbb1c0" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ecfcbc0d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9ecfcbab00" loc="65:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9ecfcb9270" loc="68:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f9ecfcd37b0" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9ecfcd37b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f9ecfccb070" loc="98:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f9ecfccc0e0" loc="87:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9ecfcd0120" loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9ecfcd37b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f9ecfccba50" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f9ecfccb7d0" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f9ecfcca270" loc="110:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f9ecfccfa40" loc="75:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f9ecfccf2b0" loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f9ecfccc8a0" loc="93:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9ecfcd0ad0" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9ecfcd37b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f9ecfcd0850" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9ecfcd37b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9ecfcce1f0" loc="78:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9ecfcce940" loc="81:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IcmpReceive" loc="8:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7f9ecfb32140" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
        <interfacedef-ref qname="IcmpReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcIp" ref="0x7f9ecfb33460" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="code" ref="0x7f9ecfb337a0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9ecfb33b20" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9ecfb33e60" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IcmpSend" loc="8:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9ecfb35620" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
        <interfacedef-ref qname="IcmpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f9ecfb37490" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0x7f9ecfb377d0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
          <variable name="code" ref="0x7f9ecfb37b10" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9ecfb35020" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9ecfb35360" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9ecfb34020" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
        <interfacedef-ref qname="IcmpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9ecfb35ce0" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpSend" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9ecfb28df0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
        <interfacedef-ref qname="IpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f9ecfb28490" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f9ecfb28810" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9ecfb28b50" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9ecfb26770" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
        <interfacedef-ref qname="IpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9ecfb264f0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpQueue" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9ecfb20990" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
        <interfacedef-ref qname="IpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f9ecfb23c50" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="protocol" ref="0x7f9ecfb20020" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9ecfb203a0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9ecfb206e0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9ecfb1f350" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
        <interfacedef-ref qname="IpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9ecfb1f0d0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IcmpQueue" loc="8:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9ecfad76d0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
        <interfacedef-ref qname="IcmpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f9ecfad9660" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0x7f9ecfad99a0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
          <variable name="code" ref="0x7f9ecfad9ce0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9ecfad70d0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9ecfad7410" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9ecfad6040" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
        <interfacedef-ref qname="IcmpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9ecfad7d90" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplKS0108" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <short>&#10; Hpl interface for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl interface for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="dataWrite" ref="0x7f9ecfa6e2b0" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="48:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write data&#10;&#10; </short>
          <long>&#10; Write data&#10;&#10; @param The controller to write to&#10; @param data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f9ecfa6fc40" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7f9ecfa6e020" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f9ecfa72030" loc="15:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="10:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Initialize GLCD&#10; &#10; </short>
          <long>&#10; Initialize GLCD&#10; &#10; @return SUCCESS&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataRead" ref="0x7f9ecfa6f440" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="38:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read data&#10;&#10; </short>
          <long>&#10; Read data&#10;&#10; @param The controller to be read from&#10; &#10; @return data&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f9ecfa6f1c0" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlWrite" ref="0x7f9ecfa70940" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write to controller&#10;&#10; </short>
          <long>&#10; Write to controller&#10;&#10; @param The controller to write to&#10; @param controller data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f9ecfa70330" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7f9ecfa706b0" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlRead" ref="0x7f9ecfa72ab0" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="17:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read controller state&#10;&#10; </short>
          <long>&#10; Read controller state&#10;&#10; @param The controller to be checked&#10; &#10; @return state of the controller&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f9ecfa72830" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f9ecf9f7e80" loc="44:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f9ecf9f65d0" loc="45:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f9ecf9f7070" loc="42:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f9ecf9f5480" loc="47:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9ecf9f7770" loc="43:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f9ecf9f6cf0" loc="46:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9ecf9f9270" loc="40:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f9ecf9f9940" loc="41:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9ecf9e5430" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9ecf9e5430"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f9ecf9e5670" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ecf9e5670"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f9ecf9e42a0" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ecf9e5670"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9ecf9e4020" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ecf9e5670"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIOPort" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f9ecf9eb020" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9ecf9ecca0" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f9ecf9ea2e0" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9ecf9ea060" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f9ecf9eac30" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9ecf9ea9b0" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f9ecf9ec5b0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9ecf9ec330" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f9ecf9e8ce0" loc="13:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f9ecf9e85b0" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9ecf9e8330" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9ecf9eb950" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9ecf9eb6d0" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Enc28j60Control" loc="11:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60Control.nc">
      <function event="" provided="0" name="linkChange" ref="0x7f9ecf79b900" loc="12:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60Control.nc">
        <interfacedef-ref qname="Enc28j60Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f9ecf7cb700"/>
              <typename><typedef-ref name="link_status_t" ref="0x7f9ecf7ca020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7f9ecf79b680" loc="12:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60Control.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f9ecf7cb700"/>
              <typename><typedef-ref name="link_status_t" ref="0x7f9ecf7ca020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../tinyos_ws18/tos/interfaces/SpiByte.nc">
      <documentation loc="34:../tinyos_ws18/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f9ecf78d0b0" loc="45:../tinyos_ws18/tos/interfaces/SpiByte.nc">
        <documentation loc="40:../tinyos_ws18/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f9ecf794de0" loc="45:../tinyos_ws18/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f9ecf792830" loc="56:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9ecf78f2b0" loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f9ecf7920e0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f9ecf790a60" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f9ecf7907e0" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f9ecf795960" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f9ecf790020" loc="63:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../tinyos_ws18/tos/interfaces/Resource.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f9ecf789120" loc="120:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f9ecf78a120" loc="97:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="90:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f9ecf78c770" loc="88:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f9ecf78a910" loc="102:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="99:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f9ecf789b80" loc="128:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="122:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9ecf71b600" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f9ecf726bb0" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f9ecf71b020" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9ecf71b360" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9ecf71ab80" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f9ecf719e50" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f9ecf71a220" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9ecf71a560" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f9ecf71a8d0" loc="83:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f9ecf7200b0" loc="62:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9ecf727dc0" loc="62:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f9ecf71f4d0" loc="74:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9ecf71f250" loc="74:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f9ecf720920" loc="68:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f9ecf71e020" loc="81:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9ecf71fc70" loc="81:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiControl" loc="8:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
      <function command="" provided="0" name="setClock" ref="0x7f9ecf722020" loc="26:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
        <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
          <short>&#10; Control Spi speed&#10; &#10; IMPORTANT NOTE: Speed is reset to default after each resource release.</short>
          <long>&#10; Control Spi speed&#10; &#10; IMPORTANT NOTE: Speed is reset to default after each resource release.&#10; &#10;&#10; @param speed Spi speed in Fosc/speed&#10;&#10;    SPI_SPEED_4   - Set to Fosc/4&#10;    SPI_SPEED_16  - Set to Fosc/16&#10;    SPI_SPEED_64  - Set to Fosc/64&#10;    SPI_SPEED_128 - Set to Fosc/128&#10;    SPI_SPEED_2   - Set to Fosc/2&#10;    SPI_SPEED_8   - Set to Fosc/8&#10;    SPI_SPEED_32  - Set to Fosc/32&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f9ecf728d10"/>
              <typename><typedef-ref name="spi_speed_t" ref="0x7f9ecf724540"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f9ecf724d60" loc="26:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f9ecf728d10"/>
              <typename><typedef-ref name="spi_speed_t" ref="0x7f9ecf724540"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f9ecf705cc0" loc="86:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f9ecf6fba70" loc="126:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f9ecf6fe4a0" loc="117:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f9ecf6f9530" loc="128:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f9ecf6f92b0" loc="128:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f9ecf705510" loc="83:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f9ecf6fc020" loc="122:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f9ecf6fdd50" loc="122:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f9ecf701b50" loc="113:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f9ecf7018d0" loc="113:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f9ecf703c70" loc="97:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f9ecf6f4020" loc="141:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f9ecf6f5d00" loc="141:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f9ecf700350" loc="114:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f9ecf6f8690" loc="131:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f9ecf6f8410" loc="131:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f9ecf6f7610" loc="136:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f9ecf6fb2e0" loc="125:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f9ecf6fb060" loc="125:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f9ecf6f55d0" loc="140:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f9ecf6fee60" loc="119:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f9ecf6febe0" loc="119:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f9ecf702680" loc="103:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9ecf702400" loc="103:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f9ecf700cd0" loc="116:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f9ecf700a50" loc="116:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f9ecf6fc890" loc="123:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f9ecf6f9ca0" loc="129:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f9ecf6f8df0" loc="132:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f9ecf6f7dc0" loc="138:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f9ecf6fd610" loc="120:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f9ecf7034a0" loc="89:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f9ecf7010b0" loc="109:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9ecf702e00" loc="109:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f9ecf6ef0e0" loc="90:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f9ecf6ef940" loc="98:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f9ecf696ab0" loc="95:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9ecf693350" loc="105:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f9ecf63e270" loc="53:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f9ecf63eba0" loc="61:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f9ecf63ab70" loc="65:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f9ecf63a350" loc="59:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f9ecf631c10" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f9ecf639cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f9ecf631990" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f9ecf639cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f9ecf635c50" loc="53:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f9ecf6327a0" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f9ecf639cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f9ecf632520" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f9ecf639cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f9ecf6310e0" loc="70:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f9ecf639cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f9ecf5cd680" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UdpQueue" loc="8:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9ecf53c620" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
        <interfacedef-ref qname="UdpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f9ecf53d4d0" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9ecff1a880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9ecff1aca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="srcPort" ref="0x7f9ecf53d840" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
          <variable name="dstPort" ref="0x7f9ecf53dbb0" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9ecf53c020" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9ecf53c360" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9ecf53b020" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
        <interfacedef-ref qname="UdpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9ecf53cce0" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7f9ecf507e30" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7f9ecf507e30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f9ecf505470" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f9ecf509e10"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f9ecf506770" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f9ecf509e10"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f9ecf506ac0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f9ecf506e10" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9ecf5051c0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f9ecf4ffd30" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9ecf4ff060" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f9ecf4ff3b0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f9ecf4ff700" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9ecf4ffa80" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f9ecf503310" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f9ecf509e10"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f9ecf504600" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f9ecf509e10"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f9ecf504950" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f9ecf504ca0" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9ecf503060" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f9ecf5000e0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9ecf5013a0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f9ecf5016f0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f9ecf501a40" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9ecf501dc0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f9ecf3df6c0" loc="56:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f9ecf3dd850" loc="73:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f9ecf3e2dd0" loc="46:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f9ecf3dd020" loc="65:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f9ecf3dc1f0" loc="81:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../tinyos_ws18/tos/interfaces/Leds.nc">
      <documentation loc="33:../tinyos_ws18/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f9ecf3c9390" loc="61:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f9ecf3c9b40" loc="67:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="63:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f9ecf3c7350" loc="72:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f9ecf3c62b0" loc="83:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="79:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f9ecf3c5a20" loc="100:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="96:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9ecf3c4270" loc="117:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="103:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f9ecf3c7ae0" loc="77:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="74:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9ecf3c4de0" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="120:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f9ecf3c4b60" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f9ecf3cabd0" loc="56:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f9ecf3c6a90" loc="89:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="86:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f9ecf3c5270" loc="94:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="91:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f9ecf374770" loc="62:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7f9ecf3582b0" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7f9ecf317bc0" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7f9ecf316350" loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7f9ecf3154a0" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f9ecf315220" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7f9ecf3174a0" loc="52:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7f9ecf312da0" loc="65:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f9ecf30db30" loc="84:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f9ecf311790" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f9ecf311510" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f9ecf30a420" loc="89:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f9ecf318660" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7f9ecf3183e0" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7f9ecf312670" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f9ecf3123f0" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f9ecf30f070" loc="68:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7f9ecf315be0" loc="61:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f9ecf30e070" loc="75:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7f9ecf316aa0" loc="56:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f9ecf30d3f0" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f9ecf30d170" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f9ecf30ccc0" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9ecf30ca40" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7f9ecf30f870" loc="72:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7f9ecf318d30" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7f9ecf313580" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f9ecf313300" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7f9ecf30ea90" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f9ecf30e810" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f9ecf30c350" loc="85:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7f9ecf313cb0" loc="63:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x7f9ecefc1270" loc="43:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9ecefc4ad0" loc="40:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f9ecefbf800" loc="54:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f9ecefbe020" loc="57:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f9ecefc1980" loc="46:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x7f9ecefbd2a0" loc="65:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f9ecefbd020" loc="65:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f9ecefbf0e0" loc="51:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x7f9ecefbda30" loc="70:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x7f9ecefbe7b0" loc="62:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcConfig" loc="19:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
      <documentation loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7f9ecef74880" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM1280_ADC_VREF_xxx values from Atm1280Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f9ecef74020" loc="25:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="20:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM1280_ADC_SNGL_xxx&#10;   or ATM1280_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7f9ecef73120" loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM1280_ADC_PRESCALE_xxx values from Atm1280Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../tinyos_ws18/tos/interfaces/ReadNow.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f9ecef617c0" loc="52:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f9ecef617c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f9ecef5e0e0" loc="58:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f9ecef5ee50" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f9ecef617c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f9ecef5e8a0" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ed02ff3a0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f9ecef5ebc0" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f9ecef617c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcSingle" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
      <documentation loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega1280 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega1280 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f9ecef539c0" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM1280_ADC_VREF_xxx constants in Atm1280ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM1280_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega1280 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f9ecef56b10" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f9ecef53020" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f9ecef533a0" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f9ecef53710" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f9ecef50350" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f9ecef51a40" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9ecef51470" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f9ecef517b0" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcMultiple" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
      <documentation loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm1280ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f9ecef4d020" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM1280_ADC_VREF_xxx constants in Atm1280ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM1280_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f9ecef4e1f0" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f9ecef4e570" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f9ecef4e8f0" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f9ecef4ec60" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f9ecef4ce00" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <documentation loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9ecef4dc50" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f9ecef4c020" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f9ecef4c380" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7f9ecef4c760" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7f9ecef4cb40" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280Adc" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <short>&#10; HPL interface to the Atmega1280 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega1280 A/D conversion subsystem. Please see the&#10; Atmega1280 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega1280 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7f9ecef3bc40" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7f9ecef438a0" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed025deb0"/>
            <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f9ed025c3a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7f9ecef38040" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM1280_ADC_PRESCALE_xxx&#10;   values from Atm1280Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f9ecef39da0" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f9ecef3a530" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="118:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7f9ecef3f650" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7f9ecef42350" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed025deb0"/>
              <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f9ed025c3a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7f9ecef420d0" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ed025deb0"/>
              <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f9ed025c3a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7f9ecef3e5a0" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7f9ecef39540" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f9ecef38840" loc="150:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7f9ecef3fdb0" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7f9ecef3d4f0" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7f9ecef3ed50" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f9ecef3dc80" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7f9ecef3ad00" loc="127:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ed0309500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7f9ecef40650" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f9ed0256cb0"/>
              <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f9ed0255440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7f9ecef403d0" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f9ed0256cb0"/>
              <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f9ed0255440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7f9ecef3b4f0" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7f9ecef42ba0" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f9ed0256cb0"/>
            <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f9ed0255440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f9ecef40e60" loc="75:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f9ecef36400" loc="156:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="152:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9ecef36180" loc="156:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ed0c23610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplLcd" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="writeData" ref="0x7f9ecee0b020" loc="8:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
        <interfacedef-ref qname="HplLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9ecee0dc50" loc="8:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="writeCommand" ref="0x7f9ecee0d5a0" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
        <interfacedef-ref qname="HplLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="com" ref="0x7f9ecee0d320" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ed0c24ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
