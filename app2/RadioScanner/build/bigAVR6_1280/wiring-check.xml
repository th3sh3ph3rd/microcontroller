<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="19:Test/FMClickTestAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f9ce49f2020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f9ce4a2e720"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f9ce4a2e720"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f9ce4a2ce20"/></to>
    </wire>
    <wire loc="20:Test/FMClickTestAppC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f9ce49e1980"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f9ce48ee980"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f9ce48ee980"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f9ce48b9580"/></to>
    </wire>
    <wire loc="21:Test/FMClickTestAppC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x7f9ce49f1e30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ce49c16a0"/></to>
    </wire>
    <wire loc="26:FMClick/FMClickC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9ce49c16a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ce49bc820"/></to>
    </wire>
    <wire loc="22:Test/FMClickTestAppC.nc">
      <from><interface-ref name="Radio" scoped="" ref="0x7f9ce49d8370"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7f9ce49c1cc0"/></to>
    </wire>
    <wire loc="27:FMClick/FMClickC.nc">
      <from><interface-ref name="FMClick" scoped="" ref="0x7f9ce49c1cc0"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7f9ce49bce40"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9ce4a2dbf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ce4396e60"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9ce4a2dbf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ce3be1810"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9ce4a2dbf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ce48b8920"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f9ce49fe4b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f9ce4bbaa20"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f9ce4bbaa20"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f9ce4abb120"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f9ce49fd020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ce4a30d00"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9ce4a30d00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ce4a220c0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9ce49fd720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f9ce4a2dbf0"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9ce4a2a020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9ce4a10020"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f9ce4a21020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ce4a11860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f9ce4a227a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ce43cdab0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f9ce4a227a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f9ce4a1a020"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f9ce4a1a6f0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f9ce4a2ad50"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f9ce4bb07b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ce4ab9020"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f9ce4ab6590"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f9ce4ad42d0"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9ce4a9b080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9ce42e14c0"/></to>
    </wire>
    <wire loc="39:Test/FMClickTestP.nc">
      <from><interface-ref name="tune2Station" scoped="" ref="0x7f9ce49d5380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ce4bb07b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:Test/FMClickTestP.nc">
      <from><interface-ref name="finishedTuning" scoped="" ref="0x7f9ce49cf600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ce4bb07b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:Test/FMClickTestP.nc">
      <from><interface-ref name="initFail" scoped="" ref="0x7f9ce49d1380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ce4bb07b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:FMClick/FMClickC.nc">
      <from><interface-ref name="Int" scoped="" ref="0x7f9ce49b27f0"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7f9ce46179e0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f9ce46179e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9ce45ccc90"/></to>
    </wire>
    <wire loc="31:FMClick/FMClickC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7f9ce49b6020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9ce45ae9f0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9ce45ae9f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9ce45a01d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:FMClick/FMClickC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f9ce49a0b50"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9ce43ac880"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f9ce43ac880"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9ce459f5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:FMClick/FMClickC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9ce49915f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9ce41e5140"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9ce41e5140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9ce439b020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:FMClick/FMClickC.nc">
      <from><interface-ref name="RSTPin" scoped="" ref="0x7f9ce49877c0"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f9ce41bdb20"/></to>
    </wire>
    <wire loc="250:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f9ce41bdb20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ce413e760"/></to>
    </wire>
    <wire loc="37:FMClick/FMClickC.nc">
      <from><interface-ref name="SDIOPin" scoped="" ref="0x7f9ce498d9a0"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f9ce41be800"/></to>
    </wire>
    <wire loc="249:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f9ce41be800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ce413f5d0"/></to>
    </wire>
    <wire loc="39:FMClick/FMClickC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f9ce498cc00"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f9ce48ee980"/></to>
    </wire>
    <wire loc="358:FMClick/FMClickP.nc">
      <from><interface-ref name="_tune" scoped="" ref="0x7f9ce494a550"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ce4bb07b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="230:FMClick/FMClickP.nc">
      <from><interface-ref name="_init" scoped="" ref="0x7f9ce4964020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ce4bb07b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Hpl" scoped="" ref="0x7f9ce48b6020"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7f9ce48e8bf0"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="HplKS0108" scoped="" ref="0x7f9ce48e8bf0"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7f9ce483f240"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_0" scoped="" ref="0x7f9ce483e020"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x7f9ce47da350"/></to>
    </wire>
    <wire loc="175:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f9ce47da350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ce4738020"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_1" scoped="" ref="0x7f9ce483d380"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x7f9ce47d9670"/></to>
    </wire>
    <wire loc="176:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f9ce47d9670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ce47372b0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RS" scoped="" ref="0x7f9ce483c690"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7f9ce47d8990"/></to>
    </wire>
    <wire loc="177:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f9ce47d8990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ce4735440"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RW" scoped="" ref="0x7f9ce483b9b0"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7f9ce47d7cb0"/></to>
    </wire>
    <wire loc="178:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f9ce47d7cb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ce47345d0"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="EN" scoped="" ref="0x7f9ce483acd0"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f9ce47d5020"/></to>
    </wire>
    <wire loc="179:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f9ce47d5020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ce4733760"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RST" scoped="" ref="0x7f9ce4837020"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7f9ce47d4350"/></to>
    </wire>
    <wire loc="180:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f9ce47d4350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ce47328f0"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="Data" scoped="" ref="0x7f9ce482fa80"/></from>
      <to><interface-ref name="PortA" scoped="" ref="0x7f9ce468ec40"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortA" scoped="" ref="0x7f9ce468ec40"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce4676c90"/></to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f9ce482c910"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f9ce46262e0"/></to>
    </wire>
    <wire loc="191:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f9ce47c9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce46da6d0"/></to>
    </wire>
    <wire loc="165:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f9ce47e6800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ce4749c10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ce4749c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3e39e20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ce47372b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3dc73f0"/></to>
    </wire>
    <wire loc="185:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f9ce47cf020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ce47275d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ce47275d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3d5c3f0"/></to>
    </wire>
    <wire loc="196:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f9ce47c3350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce46c0c90"/></to>
    </wire>
    <wire loc="143:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f9ce47fe990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ce4771a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ce4771a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3f6b6d0"/></to>
    </wire>
    <wire loc="183:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f9ce47d2990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ce47292b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ce47292b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3d63e20"/></to>
    </wire>
    <wire loc="146:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f9ce47fb020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ce47693f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ce47693f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3f14a60"/></to>
    </wire>
    <wire loc="157:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f9ce47ee020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ce4757a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ce4757a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3ea00a0"/></to>
    </wire>
    <wire loc="168:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f9ce47e2060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ce47452b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ce47452b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3e2f6d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ce4733760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3dbde20"/></to>
    </wire>
    <wire loc="138:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f9ce4804b20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ce47772b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ce47772b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3f816d0"/></to>
    </wire>
    <wire loc="149:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f9ce47f7990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ce47658f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ce47658f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3f0a3f0"/></to>
    </wire>
    <wire loc="160:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f9ce47eb990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ce4753020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ce4753020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3e969b0"/></to>
    </wire>
    <wire loc="171:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f9ce47df990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ce4741760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ce4741760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3e240a0"/></to>
    </wire>
    <wire loc="188:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f9ce47cc990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ce4724a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ce4724a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3d52e20"/></to>
    </wire>
    <wire loc="194:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f9ce47c6cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce46ca6d0"/></to>
    </wire>
    <wire loc="174:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f9ce47db020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ce473ae60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ce473ae60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3dcee20"/></to>
    </wire>
    <wire loc="141:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f9ce4800350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ce4773760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ce4773760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3f710a0"/></to>
    </wire>
    <wire loc="152:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f9ce47f3350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ce4762da0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ce4762da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3f00e20"/></to>
    </wire>
    <wire loc="192:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f9ce47c8670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce46d5160"/></to>
    </wire>
    <wire loc="155:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f9ce47f1990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ce47597a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ce47597a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3ea7c90"/></to>
    </wire>
    <wire loc="166:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f9ce47e5b20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ce4748da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ce4748da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3e350a0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ce4735440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3dc46d0"/></to>
    </wire>
    <wire loc="186:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f9ce47ce350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ce4726760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ce4726760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3d596d0"/></to>
    </wire>
    <wire loc="144:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f9ce47fdcb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ce4770c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ce4770c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3f689b0"/></to>
    </wire>
    <wire loc="147:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f9ce47fa350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ce47675d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ce47675d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3f11e20"/></to>
    </wire>
    <wire loc="158:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f9ce47ed350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ce4756c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ce4756c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3e9d3f0"/></to>
    </wire>
    <wire loc="169:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f9ce47e1350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ce4744440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ce4744440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3e2b9b0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ce47328f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3db90a0"/></to>
    </wire>
    <wire loc="139:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f9ce4803e40"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ce4776440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ce4776440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3f799b0"/></to>
    </wire>
    <wire loc="150:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f9ce47f6cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ce4764a80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ce4764a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3f066d0"/></to>
    </wire>
    <wire loc="161:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f9ce47eacb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ce47522b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ce47522b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3e93e20"/></to>
    </wire>
    <wire loc="189:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f9ce47cbcb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ce4723c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ce4723c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3d4e0a0"/></to>
    </wire>
    <wire loc="164:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f9ce47e7350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ce474aa20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ce474aa20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3e3cc90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ce4738020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3dca0a0"/></to>
    </wire>
    <wire loc="184:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f9ce47d1cb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ce4728440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ce4728440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3d5f0a0"/></to>
    </wire>
    <wire loc="195:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f9ce47c4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce46c5160"/></to>
    </wire>
    <wire loc="142:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f9ce47ff670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ce47728f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ce47728f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3f6e3f0"/></to>
    </wire>
    <wire loc="153:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f9ce47f2670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ce4760020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ce4760020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3efc0a0"/></to>
    </wire>
    <wire loc="182:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f9ce47d3670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ce472b020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ce472b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3d66c90"/></to>
    </wire>
    <wire loc="156:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f9ce47f0cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ce47588f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ce47588f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3ea4e20"/></to>
    </wire>
    <wire loc="167:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f9ce47e4e40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ce4746020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ce4746020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3e323f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ce47345d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3dc09b0"/></to>
    </wire>
    <wire loc="187:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f9ce47cd670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ce47258f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ce47258f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3d569b0"/></to>
    </wire>
    <wire loc="137:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f9ce4807860"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ce4778140"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ce4778140"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3f843f0"/></to>
    </wire>
    <wire loc="148:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f9ce47f8670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ce4766760"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ce4766760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3f0d0a0"/></to>
    </wire>
    <wire loc="159:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f9ce47ec670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ce4755da0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ce4755da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3e996d0"/></to>
    </wire>
    <wire loc="170:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f9ce47e0670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ce47435d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ce47435d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3e28e20"/></to>
    </wire>
    <wire loc="193:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f9ce47c7990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce46d0c90"/></to>
    </wire>
    <wire loc="173:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f9ce47decb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ce473bd30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ce473bd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3dd1c90"/></to>
    </wire>
    <wire loc="162:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f9ce47e8020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ce4751440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ce4751440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3e8f0a0"/></to>
    </wire>
    <wire loc="140:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f9ce4801060"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ce47755d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ce47755d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3f75e20"/></to>
    </wire>
    <wire loc="151:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f9ce47f4020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ce4763c10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ce4763c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3f039b0"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortL" scoped="" ref="0x7f9ce467b870"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce4632c90"/></to>
    </wire>
    <wire loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortD" scoped="" ref="0x7f9ce4683e80"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce4653cd0"/></to>
    </wire>
    <wire loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortG" scoped="" ref="0x7f9ce467f1d0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce4644cd0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortJ" scoped="" ref="0x7f9ce467d550"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce463bc90"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortB" scoped="" ref="0x7f9ce4685d20"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce465d390"/></to>
    </wire>
    <wire loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortE" scoped="" ref="0x7f9ce4681020"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce464e390"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortH" scoped="" ref="0x7f9ce467e3c0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce4640c90"/></to>
    </wire>
    <wire loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortK" scoped="" ref="0x7f9ce467c6e0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce4636c90"/></to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortC" scoped="" ref="0x7f9ce4684de0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce4658910"/></to>
    </wire>
    <wire loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortF" scoped="" ref="0x7f9ce4680100"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce4649910"/></to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7f9ce46139e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9ce45bfc90"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f9ce46199e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9ce45d5da0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7f9ce46159e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9ce45c8c90"/></to>
    </wire>
    <wire loc="78:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7f9ce46129e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9ce45bbc90"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f9ce46189e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9ce45d1c90"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7f9ce46149e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9ce45c3c90"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f9ce48ec9b0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9ce45ec060"/></to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9ce45ece80"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f9ce460b860"/></to>
    </wire>
    <wire loc="81:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9ce45d4c20"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f9ce460d020"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9ce45cfb40"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f9ce460d7a0"/></to>
    </wire>
    <wire loc="83:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9ce45cbb40"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7f9ce460c020"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9ce45c7b40"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7f9ce460c7a0"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9ce45c2b40"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7f9ce460a020"/></to>
    </wire>
    <wire loc="86:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9ce45beb40"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7f9ce460a7a0"/></to>
    </wire>
    <wire loc="87:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9ce45bab40"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7f9ce4609020"/></to>
    </wire>
    <wire loc="60:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9ce45a01d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9ce44f9470"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f9ce459f5e0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9ce44c2370"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f9ce44bd210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9ce4513e60"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9ce4513e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9ce3bdd020"/></to>
    </wire>
    <wire loc="64:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f9ce44bc020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9ce4448aa0"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7f9ce44b8cd0"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7f9ce44437f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9ce450cc40"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9ce44481e0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ce450b9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ce4510400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ce4510400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ce3bdc560"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f9ce4443e40"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f9ce443aab0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f9ce443aab0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f9ce4432440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f9ce44407a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9ce43c5980"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f9ce443fde0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9ce43c5980"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f9ce4512bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f9ce3bddd80"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ce450f060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ce3bdb270"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ce3bdbb60"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ce450f930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f9ce3bda440"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f9ce3be1e20"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f9ce3bd87a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ce4bb07b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f9ce443d480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ce4bb07b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7f9ce442f020"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7f9ce47e7350"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7f9ce442e360"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f9ce47e6800"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f9ce43f74a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9ce43f3dc0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9ce43cdab0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ce43f37c0"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f9ce43ef550"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f9ce43d01d0"/></to>
    </wire>
    <wire loc="57:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f9ce43d01d0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f9ce4807860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f9ce43ee7f0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f9ce43cf510"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f9ce43cf510"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f9ce4804b20"/></to>
    </wire>
    <wire loc="56:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f9ce43edb10"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f9ce43ce830"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f9ce43ce830"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f9ce4803e40"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f9ce439b020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9ce4392c30"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f9ce4392c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9ce4206150"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9ce4396e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ce4389c80"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f9ce4388500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f9ce41f8790"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9ce4389c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ce4285ba0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f9ce4200640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9ce4255830"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f9ce4250cd0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f9ce437d960"/></to>
    </wire>
    <wire loc="35:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f9ce437d960"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9ce42844b0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9ce41f7a60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f9ce437a020"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f9ce437a020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9ce42808d0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9ce42808d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9ce3b43d50"/></to>
    </wire>
    <wire loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9ce4285ba0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9ce3b461b0"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f9ce42844b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9ce3b469c0"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9ce3b3f020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9ce42fd8f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9ce42fd8f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9ce42eca10"/></to>
    </wire>
    <wire loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f9ce3b3a190"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f9ce42f6c10"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f9ce42f6c10"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f9ce42e7db0"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f9ce3b393e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9ce42f4060"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f9ce42f4060"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9ce42e51a0"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7f9ce3b35780"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7f9ce42f0570"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7f9ce42f0570"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7f9ce42e1bf0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f9ce424b020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ce4bb07b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f9ce41fba00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9ce4bb07b0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f9ce41a1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce40e76d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ce413f5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3950e20"/></to>
    </wire>
    <wire loc="260:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f9ce41b2670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ce412ec10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ce412ec10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce38de3f0"/></to>
    </wire>
    <wire loc="269:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f9ce41a8020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ce411e020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ce411e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce38733f0"/></to>
    </wire>
    <wire loc="280:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f9ce419b350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce40cdc90"/></to>
    </wire>
    <wire loc="284:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH2" scoped="" ref="0x7f9ce4198cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce40a7c90"/></to>
    </wire>
    <wire loc="289:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH7" scoped="" ref="0x7f9ce4192cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce408e9b0"/></to>
    </wire>
    <wire loc="297:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ6" scoped="" ref="0x7f9ce4188350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce406b180"/></to>
    </wire>
    <wire loc="300:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK0" scoped="" ref="0x7f9ce4186990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce4061c90"/></to>
    </wire>
    <wire loc="311:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL2" scoped="" ref="0x7f9ce417a990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce402f180"/></to>
    </wire>
    <wire loc="227:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f9ce41d6990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ce41685d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ce41685d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3a809b0"/></to>
    </wire>
    <wire loc="267:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f9ce41ab990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ce4121c10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ce4121c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce387ae20"/></to>
    </wire>
    <wire loc="230:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f9ce41d3020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ce4160d30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ce4160d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3a29a60"/></to>
    </wire>
    <wire loc="241:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f9ce41c7020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ce414d440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ce414d440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce39b70a0"/></to>
    </wire>
    <wire loc="252:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f9ce41ba060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ce413ca80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ce413ca80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce39456d0"/></to>
    </wire>
    <wire loc="263:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f9ce41ae020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ce412a2b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ce412a2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce38d4e20"/></to>
    </wire>
    <wire loc="222:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f9ce41dcb20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ce416ec10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ce416ec10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3a949b0"/></to>
    </wire>
    <wire loc="233:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f9ce41d0990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ce415c2b0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ce415c2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3a1e3f0"/></to>
    </wire>
    <wire loc="244:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f9ce41c4990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ce414a8f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ce414a8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce39ad9b0"/></to>
    </wire>
    <wire loc="255:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f9ce41b7990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ce4138020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ce4138020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce393b0a0"/></to>
    </wire>
    <wire loc="272:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f9ce41a4990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ce411a5d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ce411a5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3869e20"/></to>
    </wire>
    <wire loc="278:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f9ce419ecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce40d76d0"/></to>
    </wire>
    <wire loc="282:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH0" scoped="" ref="0x7f9ce419a670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce40b1020"/></to>
    </wire>
    <wire loc="258:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f9ce41b4020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ce41308f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ce41308f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce38e5e20"/></to>
    </wire>
    <wire loc="287:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH5" scoped="" ref="0x7f9ce4194670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce4099e20"/></to>
    </wire>
    <wire loc="292:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ1" scoped="" ref="0x7f9ce418f350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce40846d0"/></to>
    </wire>
    <wire loc="295:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ4" scoped="" ref="0x7f9ce418ccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce40756d0"/></to>
    </wire>
    <wire loc="303:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK3" scoped="" ref="0x7f9ce4182350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce4052c90"/></to>
    </wire>
    <wire loc="306:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK6" scoped="" ref="0x7f9ce417fcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce4043c90"/></to>
    </wire>
    <wire loc="309:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL0" scoped="" ref="0x7f9ce417c350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce40396d0"/></to>
    </wire>
    <wire loc="314:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL5" scoped="" ref="0x7f9ce4176350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce40206d0"/></to>
    </wire>
    <wire loc="225:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f9ce41d8350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ce416a2b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ce416a2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3a863f0"/></to>
    </wire>
    <wire loc="236:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f9ce41cc350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ce4158760"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ce4158760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3a15e20"/></to>
    </wire>
    <wire loc="276:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f9ce41a0670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce40e2160"/></to>
    </wire>
    <wire loc="239:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f9ce41ca990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ce4150020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ce4150020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce39bec90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ce413e760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce394c0a0"/></to>
    </wire>
    <wire loc="261:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f9ce41b1990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ce412dda0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ce412dda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce38da6d0"/></to>
    </wire>
    <wire loc="270:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f9ce41a7350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ce411c2b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ce411c2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce386f6d0"/></to>
    </wire>
    <wire loc="285:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH3" scoped="" ref="0x7f9ce4196020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce40a2180"/></to>
    </wire>
    <wire loc="298:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ7" scoped="" ref="0x7f9ce4187670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce40666d0"/></to>
    </wire>
    <wire loc="301:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK1" scoped="" ref="0x7f9ce4185cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce405c180"/></to>
    </wire>
    <wire loc="312:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL3" scoped="" ref="0x7f9ce4179cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce402a6d0"/></to>
    </wire>
    <wire loc="293:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ2" scoped="" ref="0x7f9ce418e670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce407fc90"/></to>
    </wire>
    <wire loc="228:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f9ce41d5cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ce4167760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ce4167760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3a7de20"/></to>
    </wire>
    <wire loc="304:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK4" scoped="" ref="0x7f9ce4181670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce404d180"/></to>
    </wire>
    <wire loc="315:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL6" scoped="" ref="0x7f9ce4175670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce401bc90"/></to>
    </wire>
    <wire loc="231:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f9ce41d2350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ce415fe60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ce415fe60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3a26e20"/></to>
    </wire>
    <wire loc="242:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f9ce41c6350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ce414c5d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ce414c5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce39b33f0"/></to>
    </wire>
    <wire loc="253:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f9ce41b9350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ce413bc10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ce413bc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce39429b0"/></to>
    </wire>
    <wire loc="264:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f9ce41ad350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ce4128440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ce4128440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce38d00a0"/></to>
    </wire>
    <wire loc="223:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f9ce41dbe40"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ce416dda0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ce416dda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3a8de20"/></to>
    </wire>
    <wire loc="234:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f9ce41cfcb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ce415b440"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ce415b440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3a1b6d0"/></to>
    </wire>
    <wire loc="245:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f9ce41c2cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ce4149a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ce4149a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce39aae20"/></to>
    </wire>
    <wire loc="273:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f9ce41a3cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ce4119760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ce4119760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce38650a0"/></to>
    </wire>
    <wire loc="283:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH1" scoped="" ref="0x7f9ce4199990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce40ac6d0"/></to>
    </wire>
    <wire loc="248:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f9ce41bf350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ce41403f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ce41403f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3953c90"/></to>
    </wire>
    <wire loc="259:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f9ce41b3350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ce412fa80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ce412fa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce38e10a0"/></to>
    </wire>
    <wire loc="268:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f9ce41aacb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ce4120da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ce4120da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce38760a0"/></to>
    </wire>
    <wire loc="279:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f9ce419c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce40d2160"/></to>
    </wire>
    <wire loc="288:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH6" scoped="" ref="0x7f9ce4193990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce4093460"/></to>
    </wire>
    <wire loc="296:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ5" scoped="" ref="0x7f9ce4189020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce4070c90"/></to>
    </wire>
    <wire loc="307:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK7" scoped="" ref="0x7f9ce417d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce403e180"/></to>
    </wire>
    <wire loc="310:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL1" scoped="" ref="0x7f9ce417b670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce4034c90"/></to>
    </wire>
    <wire loc="226:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f9ce41d7670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ce4169440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ce4169440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3a836d0"/></to>
    </wire>
    <wire loc="237:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f9ce41cb670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ce41578f0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ce41578f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3a110a0"/></to>
    </wire>
    <wire loc="266:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f9ce41ac670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ce4122a20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ce4122a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce387dc90"/></to>
    </wire>
    <wire loc="240:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f9ce41c9cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9ce414f2b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9ce414f2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce39bbe20"/></to>
    </wire>
    <wire loc="251:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f9ce41bce40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ce413d8f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ce413d8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce39483f0"/></to>
    </wire>
    <wire loc="262:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f9ce41b0cb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ce412b020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ce412b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce38d79b0"/></to>
    </wire>
    <wire loc="271:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f9ce41a5670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ce411b440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ce411b440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce386c9b0"/></to>
    </wire>
    <wire loc="221:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f9ce41df7f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ce416fa80"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ce416fa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3a976d0"/></to>
    </wire>
    <wire loc="232:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f9ce41d1670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9ce415d020"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9ce415d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3a210a0"/></to>
    </wire>
    <wire loc="243:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f9ce41c5670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9ce414b760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9ce414b760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce39b06d0"/></to>
    </wire>
    <wire loc="254:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f9ce41b8670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9ce413ada0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9ce413ada0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce393fe20"/></to>
    </wire>
    <wire loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f9ce419f990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce40ddc90"/></to>
    </wire>
    <wire loc="286:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH4" scoped="" ref="0x7f9ce4195350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce409d830"/></to>
    </wire>
    <wire loc="291:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ0" scoped="" ref="0x7f9ce4190020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce4089160"/></to>
    </wire>
    <wire loc="257:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f9ce41b6cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9ce41317a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9ce41317a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce38e8c90"/></to>
    </wire>
    <wire loc="294:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ3" scoped="" ref="0x7f9ce418d990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce407a180"/></to>
    </wire>
    <wire loc="302:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK2" scoped="" ref="0x7f9ce4183020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce40576d0"/></to>
    </wire>
    <wire loc="305:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK5" scoped="" ref="0x7f9ce4180990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce40486d0"/></to>
    </wire>
    <wire loc="313:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL4" scoped="" ref="0x7f9ce4177020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce40250a0"/></to>
    </wire>
    <wire loc="316:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL7" scoped="" ref="0x7f9ce4174990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce4016180"/></to>
    </wire>
    <wire loc="246:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f9ce41c0020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9ce4148c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9ce4148c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce39a60a0"/></to>
    </wire>
    <wire loc="224:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f9ce41d9060"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9ce416b020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9ce416b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3a890a0"/></to>
    </wire>
    <wire loc="235:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f9ce41cd020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9ce41595d0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9ce41595d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9ce3a189b0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../tinyos_ws18/tos/system/MainC.nc">
      <documentation loc="45:../tinyos_ws18/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <documentation loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../tinyos_ws18/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../tinyos_ws18/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../tinyos_ws18/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc" safe="">
      <documentation loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickTestP" loc="15:Test/FMClickTestP.nc">
      <documentation loc="1:Test/FMClickTestP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file RadioScannerAppC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; VolumeAdc test module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC" loc="11:FMClick/FMClickC.nc">
      <documentation loc="1:FMClick/FMClickC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; Configuration of the FMClick module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="FMClickP" loc="19:FMClick/FMClickP.nc">
      <documentation loc="1:FMClick/FMClickP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; FMClick module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="GlcdC" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
        <short>&#10; High level implementation for KS0108 Glcd&#10; </short>
        <long>&#10; High level implementation for KS0108 Glcd&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="GlcdP" loc="41:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <module/>
    </component>
    <component qname="HplKS0108C" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
        <short>&#10; Configuration for KS0108 GLCD Display&#10; </short>
        <long>&#10; Configuration for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplKS0108P" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
        <short>&#10; Hpl implementation for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl implementation for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10; Based on an implementation of Andreas Hagmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC" loc="6:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortAP" loc="6(HplAtm128GeneralIOFastPortC.PortAP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortBP" loc="6(HplAtm128GeneralIOFastPortC.PortBP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortCP" loc="6(HplAtm128GeneralIOFastPortC.PortCP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortDP" loc="6(HplAtm128GeneralIOFastPortC.PortDP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortEP" loc="6(HplAtm128GeneralIOFastPortC.PortEP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortFP" loc="6(HplAtm128GeneralIOFastPortC.PortFP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortGP" loc="6(HplAtm128GeneralIOFastPortC.PortGP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortHP" loc="6(HplAtm128GeneralIOFastPortC.PortHP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortJP" loc="6(HplAtm128GeneralIOFastPortC.PortJP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortKP" loc="6(HplAtm128GeneralIOFastPortC.PortKP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortLP" loc="6(HplAtm128GeneralIOFastPortC.PortLP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:9">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="38:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc" safe="">
      <documentation loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="FMClickC.I2C" loc="43(FMClickC.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../tinyos_ws18/tos/system/LedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc" safe="">
      <documentation loc="35:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../tinyos_ws18/tos/system/NoLedsC.nc">
      <documentation loc="35:../tinyos_ws18/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC.Timer" loc="44(FMClickC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <documentation loc="11:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC" loc="32(AlarmCounterMilliP.Atm1280AlarmSyncC):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:124">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP" loc="33(AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f9ce4370160"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280Timer2SyncC" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <documentation loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280Timer2SyncP" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc" safe="">
      <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changed to sync mode&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10; &#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; Changed for Atm1280&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA" loc="40(HplAtm1280GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit0" loc="41(HplAtm1280GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="48">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit1" loc="41(HplAtm1280GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="49">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit2" loc="41(HplAtm1280GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="50">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit3" loc="41(HplAtm1280GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="51">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit4" loc="41(HplAtm1280GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="52">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit5" loc="41(HplAtm1280GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="53">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit6" loc="41(HplAtm1280GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="54">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit7" loc="41(HplAtm1280GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="55">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB" loc="40(HplAtm1280GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit0" loc="41(HplAtm1280GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="56">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit1" loc="41(HplAtm1280GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="57">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit2" loc="41(HplAtm1280GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="58">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit3" loc="41(HplAtm1280GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="59">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit4" loc="41(HplAtm1280GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="60">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit5" loc="41(HplAtm1280GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="61">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit6" loc="41(HplAtm1280GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="62">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit7" loc="41(HplAtm1280GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="63">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC" loc="40(HplAtm1280GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit0" loc="41(HplAtm1280GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="64">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit1" loc="41(HplAtm1280GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="65">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit2" loc="41(HplAtm1280GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="66">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit3" loc="41(HplAtm1280GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="67">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit4" loc="41(HplAtm1280GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="68">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit5" loc="41(HplAtm1280GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="69">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit6" loc="41(HplAtm1280GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="70">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit7" loc="41(HplAtm1280GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="71">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD" loc="40(HplAtm1280GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit0" loc="41(HplAtm1280GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="72">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit1" loc="41(HplAtm1280GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="73">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit2" loc="41(HplAtm1280GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="74">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit3" loc="41(HplAtm1280GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="75">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit4" loc="41(HplAtm1280GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="76">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit5" loc="41(HplAtm1280GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="77">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit6" loc="41(HplAtm1280GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="78">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit7" loc="41(HplAtm1280GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="79">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE" loc="40(HplAtm1280GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit0" loc="41(HplAtm1280GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="80">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit1" loc="41(HplAtm1280GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="81">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit2" loc="41(HplAtm1280GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="82">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit3" loc="41(HplAtm1280GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="83">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit4" loc="41(HplAtm1280GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="84">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit5" loc="41(HplAtm1280GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="85">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit6" loc="41(HplAtm1280GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="86">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit7" loc="41(HplAtm1280GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="87">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF" loc="40(HplAtm1280GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit0" loc="41(HplAtm1280GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="88">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit1" loc="41(HplAtm1280GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="89">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit2" loc="41(HplAtm1280GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="90">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit3" loc="41(HplAtm1280GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="91">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit4" loc="41(HplAtm1280GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="92">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit5" loc="41(HplAtm1280GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="93">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit6" loc="41(HplAtm1280GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="94">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit7" loc="41(HplAtm1280GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="95">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F0" loc="42(HplAtm1280GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F1" loc="42(HplAtm1280GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F2" loc="42(HplAtm1280GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F3" loc="42(HplAtm1280GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F4" loc="42(HplAtm1280GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F5" loc="42(HplAtm1280GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F6" loc="42(HplAtm1280GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F7" loc="42(HplAtm1280GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G0" loc="42(HplAtm1280GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G1" loc="42(HplAtm1280GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G2" loc="42(HplAtm1280GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G3" loc="42(HplAtm1280GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G4" loc="42(HplAtm1280GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G5" loc="42(HplAtm1280GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H0" loc="42(HplAtm1280GeneralIOC.H0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H1" loc="42(HplAtm1280GeneralIOC.H1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H2" loc="42(HplAtm1280GeneralIOC.H2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H3" loc="42(HplAtm1280GeneralIOC.H3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H4" loc="42(HplAtm1280GeneralIOC.H4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H5" loc="42(HplAtm1280GeneralIOC.H5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H6" loc="42(HplAtm1280GeneralIOC.H6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H7" loc="42(HplAtm1280GeneralIOC.H7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J0" loc="42(HplAtm1280GeneralIOC.J0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J1" loc="42(HplAtm1280GeneralIOC.J1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J2" loc="42(HplAtm1280GeneralIOC.J2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J3" loc="42(HplAtm1280GeneralIOC.J3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J4" loc="42(HplAtm1280GeneralIOC.J4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J5" loc="42(HplAtm1280GeneralIOC.J5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J6" loc="42(HplAtm1280GeneralIOC.J6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J7" loc="42(HplAtm1280GeneralIOC.J7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K0" loc="42(HplAtm1280GeneralIOC.K0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K1" loc="42(HplAtm1280GeneralIOC.K1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K2" loc="42(HplAtm1280GeneralIOC.K2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K3" loc="42(HplAtm1280GeneralIOC.K3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K4" loc="42(HplAtm1280GeneralIOC.K4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K5" loc="42(HplAtm1280GeneralIOC.K5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K6" loc="42(HplAtm1280GeneralIOC.K6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K7" loc="42(HplAtm1280GeneralIOC.K7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L0" loc="42(HplAtm1280GeneralIOC.L0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L1" loc="42(HplAtm1280GeneralIOC.L1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L2" loc="42(HplAtm1280GeneralIOC.L2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L3" loc="42(HplAtm1280GeneralIOC.L3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L4" loc="42(HplAtm1280GeneralIOC.L4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L5" loc="42(HplAtm1280GeneralIOC.L5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L6" loc="42(HplAtm1280GeneralIOC.L6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L7" loc="42(HplAtm1280GeneralIOC.L7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9ce47bf900" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9ce47bfc70" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9ce47bc020" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9ce47b2d00" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9ce47ae0d0" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9ce47ae460" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f9ce47ae7b0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9ce471c890" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9ce471cc20" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9ce4719020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f9ce4719370" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortP" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9ce4677ba0" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9ce4674020" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9ce4674390" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f9ce45eb3d0" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f9ce45eb760" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f9ce45ebaf0" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f9ce45ebe40" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f9ce45965b0" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f9ce4583060" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f9ce4568800" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../tinyos_ws18/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncC" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc" abstract="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f9ce4370160" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f9ce4370160"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7f9ce43704f0" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7f9ce4370880" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncP" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f9ce4364200" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f9ce4364200"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7f9ce4364590" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7f9ce4364920" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9ce427a160" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9ce427a160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9ce4247230" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9ce4247230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f9ce4247560" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9ce41f9de0" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9ce41f9de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9ce40c64c0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9ce40c6860" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9ce40c6c00" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f9ce40c5020" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f9ce4a2dbf0" loc="58:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f9ce4a2dbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce4a30020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f9ce4a2e720" loc="57:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f9ce4a2e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f9ce4a2eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f9ce4a2ad50" loc="52:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f9ce4a2ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce4a29100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ce4a30d00" loc="46:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ce4a30d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce4a2b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f9ce4a2a020" loc="50:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9ce4a2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f9ce4a2a3a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f9ce4a2a530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f9ce4a2a6c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f9ce4a2a850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f9ce4a2a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f9ce4a227a0" loc="45:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f9ce4a227a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce4a22b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ce4a220c0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ce4a220c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce4a22440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f9ce4a21020" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f9ce4a21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce4a213a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f9ce4a1a6f0" loc="4:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f9ce4a1a6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce4a1aa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f9ce4a1a020" loc="3:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f9ce4a1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce4a1a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ce4a11860" loc="51:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ce4a11860"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9ce4bbc3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9ce4bbc3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce4a11be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f9ce4a10020" loc="52:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9ce4a10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f9ce4a103a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f9ce4a10530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f9ce4a106c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f9ce4a10850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f9ce4a109e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f9ce49fd720" loc="60:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f9ce49fd720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce49fdaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f9ce4a2ce20" loc="57:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f9ce4a2ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f9ce49fe1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f9ce49fd020" loc="59:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f9ce49fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce49fd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f9ce49fe4b0" loc="58:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f9ce49fe4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce49fe830"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f9ce49fe9c0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f9ce49feb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f9ce4bb07b0" loc="48:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f9ce4bb07b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ce4bb0b30"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ce4bb0cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f9ce4bbaa20" loc="47:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f9ce4bbaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce4bbada0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f9ce5568020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f9ce55681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f9ce4ab9020" loc="56:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f9ce4ab9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ce4ab93a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ce4ab9530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f9ce4ab6590" loc="57:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f9ce4ab6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f9ce4ab6910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f9ce4abb120" loc="55:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f9ce4abb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce4abb4a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f9ce4abb630"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f9ce4abb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f9ce4a9b080" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9ce4a9b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f9ce4a9b400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f9ce4ad42d0" loc="84:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f9ce4ad42d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f9ce4ad4650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f9ce4a9a7d0" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f9ce4a9a7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f9ce4a9ab50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f9ce49f2020" loc="18:Test/FMClickTestP.nc">
      <component-ref qname="FMClickTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f9ce49f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f9ce49f23a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x7f9ce49f1e30" loc="20:Test/FMClickTestP.nc">
      <component-ref qname="FMClickTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x7f9ce49f1e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce49f01e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tune2Station" ref="0x7f9ce49d5380" loc="39:Test/FMClickTestP.nc">
      <component-ref qname="FMClickTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tune2Station" scoped="" ref="0x7f9ce49d5380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ce49d5700"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ce49d5890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Radio" ref="0x7f9ce49d8370" loc="21:Test/FMClickTestP.nc">
      <component-ref qname="FMClickTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Radio" scoped="" ref="0x7f9ce49d8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f9ce49e0340"/>
        <function-ref name="initDone" scoped="" ref="0x7f9ce49d8880"/>
        <function-ref name="setVolume" scoped="" ref="0x7f9ce49d8a10"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f9ce49d8ba0"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f9ce49d8d30"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f9ce49e0020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9ce49e01b0"/>
        <function-ref name="seek" scoped="" ref="0x7f9ce49d86f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="finishedTuning" ref="0x7f9ce49cf600" loc="52:Test/FMClickTestP.nc">
      <component-ref qname="FMClickTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="finishedTuning" scoped="" ref="0x7f9ce49cf600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ce49cf980"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ce49cfb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initFail" ref="0x7f9ce49d1380" loc="47:Test/FMClickTestP.nc">
      <component-ref qname="FMClickTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="initFail" scoped="" ref="0x7f9ce49d1380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ce49d1700"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ce49d1890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f9ce49e1980" loc="19:Test/FMClickTestP.nc">
      <component-ref qname="FMClickTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f9ce49e1980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f9ce49f1b10"/>
        <function-ref name="drawRect" scoped="" ref="0x7f9ce49f1020"/>
        <function-ref name="drawLine" scoped="" ref="0x7f9ce49f11b0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f9ce49f1340"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f9ce49f14d0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f9ce49f1660"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f9ce49f17f0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f9ce49e1d00"/>
        <function-ref name="drawText" scoped="" ref="0x7f9ce49f1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ce49c16a0" loc="14:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ce49c16a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce49c1a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7f9ce49c1cc0" loc="15:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7f9ce49c1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f9ce49bdb90"/>
        <function-ref name="initDone" scoped="" ref="0x7f9ce49bd230"/>
        <function-ref name="setVolume" scoped="" ref="0x7f9ce49bd3c0"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f9ce49bd550"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f9ce49bd6e0"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f9ce49bd870"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9ce49bda00"/>
        <function-ref name="seek" scoped="" ref="0x7f9ce49bd0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SDIOPin" ref="0x7f9ce498d9a0" loc="32:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SDIOPin" scoped="" ref="0x7f9ce498d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce498dd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce498c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce498c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce498c340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce498c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce498c660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce498c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce498c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Int" ref="0x7f9ce49b27f0" loc="27:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int" scoped="" ref="0x7f9ce49b27f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ce49b2b70"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce49b2d00"/>
        <function-ref name="disable" scoped="" ref="0x7f9ce49b7020"/>
        <function-ref name="edge" scoped="" ref="0x7f9ce49b71b0"/>
        <function-ref name="enable" scoped="" ref="0x7f9ce49b7340"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ce49b74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f9ce49a0b50" loc="29:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f9ce49a0b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9ce49ab770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9ce49aba30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ce49b17d0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9ce499eca0"/>
        <function-ref name="write" scoped="" ref="0x7f9ce49ac400"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ce499e090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="_tune" ref="0x7f9ce494a550" loc="358:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="_tune" scoped="" ref="0x7f9ce494a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ce494a8d0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ce494aa60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ce49bc820" loc="22:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ce49bc820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce49bcba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="_init" ref="0x7f9ce4964020" loc="230:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="_init" scoped="" ref="0x7f9ce4964020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ce49643a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ce4964530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7f9ce49b6020" loc="28:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7f9ce49b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ce49b63a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ce49b6530"/>
        <function-ref name="request" scoped="" ref="0x7f9ce49b66c0"/>
        <function-ref name="granted" scoped="" ref="0x7f9ce49b6850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ce49b69e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTPin" ref="0x7f9ce49877c0" loc="31:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTPin" scoped="" ref="0x7f9ce49877c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4987b40"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4987cd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4987e60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce498d020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce498d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce498d340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce498d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce498d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7f9ce49bce40" loc="23:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7f9ce49bce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f9ce49b9cd0"/>
        <function-ref name="initDone" scoped="" ref="0x7f9ce49b9370"/>
        <function-ref name="setVolume" scoped="" ref="0x7f9ce49b9500"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f9ce49b9690"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f9ce49b9820"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f9ce49b99b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9ce49b9b40"/>
        <function-ref name="seek" scoped="" ref="0x7f9ce49b91e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f9ce498cc00" loc="33:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f9ce498cc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f9ce4986ca0"/>
        <function-ref name="drawRect" scoped="" ref="0x7f9ce49861b0"/>
        <function-ref name="drawLine" scoped="" ref="0x7f9ce4986340"/>
        <function-ref name="setPixel" scoped="" ref="0x7f9ce49864d0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f9ce4986660"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f9ce49867f0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f9ce4986980"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f9ce4986020"/>
        <function-ref name="drawText" scoped="" ref="0x7f9ce4986b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9ce49915f0" loc="30:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9ce49915f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ce4990a80"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce499b090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ce499be10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ce499b990"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ce498e4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ce498e020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ce499b510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ce499c210"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ce4990470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ce499c6e0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ce499cbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7f9ce48ee980" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <component-ref qname="GlcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f9ce48ee980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f9ce48ebb10"/>
        <function-ref name="drawRect" scoped="" ref="0x7f9ce48eb020"/>
        <function-ref name="drawLine" scoped="" ref="0x7f9ce48eb1b0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f9ce48eb340"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f9ce48eb4d0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f9ce48eb660"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f9ce48eb7f0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f9ce48eed00"/>
        <function-ref name="drawText" scoped="" ref="0x7f9ce48eb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ce48b8920" loc="44:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ce48b8920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce48b8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hpl" ref="0x7f9ce48b6020" loc="45:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hpl" scoped="" ref="0x7f9ce48b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f9ce48b63a0"/>
        <function-ref name="init" scoped="" ref="0x7f9ce48b6530"/>
        <function-ref name="dataRead" scoped="" ref="0x7f9ce48b66c0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f9ce48b6850"/>
        <function-ref name="controlRead" scoped="" ref="0x7f9ce48b69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7f9ce48b9580" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f9ce48b9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f9ce48b8660"/>
        <function-ref name="drawRect" scoped="" ref="0x7f9ce48b9a90"/>
        <function-ref name="drawLine" scoped="" ref="0x7f9ce48b9c20"/>
        <function-ref name="setPixel" scoped="" ref="0x7f9ce48b9db0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f9ce48b8020"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f9ce48b81b0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f9ce48b8340"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f9ce48b9900"/>
        <function-ref name="drawText" scoped="" ref="0x7f9ce48b84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7f9ce48e8bf0" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <component-ref qname="HplKS0108C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7f9ce48e8bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f9ce4842020"/>
        <function-ref name="init" scoped="" ref="0x7f9ce48421b0"/>
        <function-ref name="dataRead" scoped="" ref="0x7f9ce4842340"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f9ce48424d0"/>
        <function-ref name="controlRead" scoped="" ref="0x7f9ce4842660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EN" ref="0x7f9ce483acd0" loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EN" scoped="" ref="0x7f9ce483acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce48390a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4839230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce48393c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4839550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce48396e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4839870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4839a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4839b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f9ce482c910" loc="34:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f9ce482c910"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b05d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9ce4b03180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f9ce4834780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_0" ref="0x7f9ce483e020" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_0" scoped="" ref="0x7f9ce483e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce483e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce483e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce483e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce483e850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce483e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce483eb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce483ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce483d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RST" ref="0x7f9ce4837020" loc="30:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RST" scoped="" ref="0x7f9ce4837020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce48373a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4837530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce48376c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4837850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce48379e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4837b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4837d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4836020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RS" ref="0x7f9ce483c690" loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RS" scoped="" ref="0x7f9ce483c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce483ca10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce483cba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce483cd30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce483b020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce483b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce483b340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce483b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce483b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_1" ref="0x7f9ce483d380" loc="26:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_1" scoped="" ref="0x7f9ce483d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce483d700"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce483d890"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce483da20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce483dbb0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce483dd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce483c020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce483c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce483c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7f9ce483f240" loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7f9ce483f240"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f9ce483f5c0"/>
        <function-ref name="init" scoped="" ref="0x7f9ce483f750"/>
        <function-ref name="dataRead" scoped="" ref="0x7f9ce483f8e0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f9ce483fa70"/>
        <function-ref name="controlRead" scoped="" ref="0x7f9ce483fc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RW" ref="0x7f9ce483b9b0" loc="28:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RW" scoped="" ref="0x7f9ce483b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce483bd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce483a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce483a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce483a340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce483a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce483a660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce483a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce483a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Data" ref="0x7f9ce482fa80" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Data" scoped="" ref="0x7f9ce482fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce482fe00"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce4835020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce48351b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4835340"/>
        <function-ref name="read" scoped="" ref="0x7f9ce48354d0"/>
        <function-ref name="write" scoped="" ref="0x7f9ce4835660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce48357f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f9ce47c9020" loc="98:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f9ce47c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47c97a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47c9930"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47c9ac0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47c9c50"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47c9de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47c8020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47c81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47c8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f9ce47e6800" loc="72:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f9ce47e6800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47e6b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47e6d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47e5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47e51b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47e5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47e54d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47e5660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47e57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f9ce47d9670" loc="83:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f9ce47d9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47d99f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47d9b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47d9d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47d8020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47d81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47d8340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47d84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47d8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f9ce47cf020" loc="92:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f9ce47cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47cf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47cf530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47cf6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47cf850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47cf9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47cfb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47cfd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f9ce47c3350" loc="103:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f9ce47c3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47c36d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47c3860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47c39f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47c3b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47c3d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47c2020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47c21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47c2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f9ce47fe990" loc="50:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f9ce47fe990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47fed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47fd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47fd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47fd340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47fd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47fd660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47fd7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47fd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f9ce47d2990" loc="90:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f9ce47d2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47d2d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47d1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47d11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47d1340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47d14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47d1660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47d17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47d1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f9ce47fb020" loc="53:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f9ce47fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47fb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47fb530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47fb6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47fb850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47fb9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47fbb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47fbd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f9ce47ee020" loc="64:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f9ce47ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47ee3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47ee530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47ee6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47ee850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47ee9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47eeb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47eed00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f9ce47e2060" loc="75:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f9ce47e2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47e23e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47e2570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47e2700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47e2890"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47e2a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47e2bb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47e2d40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f9ce47d5020" loc="86:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f9ce47d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47d53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47d5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47d56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47d5850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47d59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47d5b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47d5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f9ce4804b20" loc="45:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f9ce4804b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4803020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce48031b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4803340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce48034d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4803660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce48037f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4803980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4803b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f9ce47f7990" loc="56:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f9ce47f7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47f7d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47f6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47f61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47f6340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47f64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47f6660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47f67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47f6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f9ce47eb990" loc="67:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f9ce47eb990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47ebd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47ea020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47ea1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47ea340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47ea4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47ea660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47ea7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47ea980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f9ce47df990" loc="78:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f9ce47df990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47dfd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47de020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47de1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47de340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47de4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47de660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47de7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47de980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f9ce47cc990" loc="95:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f9ce47cc990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47ccd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47cb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47cb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47cb340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47cb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47cb660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47cb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47cb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f9ce47c6cb0" loc="101:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f9ce47c6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47c50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47c5230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47c53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47c5550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47c56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47c5870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47c5a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47c5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f9ce47db020" loc="81:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f9ce47db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47db3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47db530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47db6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47db850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47db9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47dbb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47dbd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f9ce4800350" loc="48:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f9ce4800350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce48006d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4800860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce48009f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4800b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4800d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47ff020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47ff1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47ff340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f9ce47f3350" loc="59:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f9ce47f3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47f36d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47f3860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47f39f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47f3b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47f3d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47f2020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47f21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47f2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f9ce47c8670" loc="99:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f9ce47c8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47c89f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47c8b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47c8d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47c7020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47c71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47c7340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47c74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47c7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f9ce47f1990" loc="62:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f9ce47f1990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47f1d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47f0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47f01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47f0340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47f04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47f0660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47f07f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47f0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f9ce47e5b20" loc="73:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f9ce47e5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47e4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47e41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47e4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47e44d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47e4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47e47f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47e4980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47e4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f9ce47d8990" loc="84:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f9ce47d8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47d8d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47d7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47d71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47d7340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47d74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47d7660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47d77f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47d7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f9ce47ce350" loc="93:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f9ce47ce350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47ce6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47ce860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47ce9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47ceb80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47ced10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47cd020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47cd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47cd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f9ce47fdcb0" loc="51:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f9ce47fdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47fc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47fc230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47fc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47fc550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47fc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47fc870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47fca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47fcb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f9ce47fa350" loc="54:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f9ce47fa350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47fa6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47fa860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47fa9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47fab80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47fad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47f8020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47f81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47f8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f9ce47ed350" loc="65:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f9ce47ed350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47ed6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47ed860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47ed9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47edb80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47edd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47ec020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47ec1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47ec340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f9ce47e1350" loc="76:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f9ce47e1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47e16d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47e1860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47e19f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47e1b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47e1d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47e0020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47e01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47e0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f9ce47d4350" loc="87:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f9ce47d4350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47d46d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47d4860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47d49f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47d4b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47d4d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47d3020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47d31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47d3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f9ce4803e40" loc="46:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f9ce4803e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce48021e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4802370"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4802500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4802690"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4802820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce48029b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4802b40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4802cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f9ce47f6cb0" loc="57:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f9ce47f6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47f5180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47f5310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47f54a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47f5630"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47f57c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47f5950"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47f5ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47f5c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f9ce47eacb0" loc="68:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f9ce47eacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47e90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47e9230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47e93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47e9550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47e96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47e9870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47e9a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47e9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f9ce47cbcb0" loc="96:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f9ce47cbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47ca0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47ca230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47ca3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47ca550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47ca6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47ca870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47caa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47cab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f9ce47e7350" loc="71:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f9ce47e7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47e78d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47e7a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47e7bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47e7d80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47e6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47e61b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47e6340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47e64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f9ce47da350" loc="82:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f9ce47da350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47da6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47da860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47da9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47dab80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47dad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47d9020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47d91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47d9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f9ce47d1cb0" loc="91:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f9ce47d1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47d00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47d0230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47d03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47d0550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47d06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47d0870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47d0a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47d0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f9ce47c4020" loc="102:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f9ce47c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47c43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47c4530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47c46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47c4850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47c49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47c4b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47c4d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f9ce47ff670" loc="49:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f9ce47ff670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47ff9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47ffb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47ffd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47fe020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47fe1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47fe340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47fe4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47fe660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f9ce47f2670" loc="60:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f9ce47f2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47f29f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47f2b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47f2d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47f1020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47f11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47f1340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47f14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47f1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f9ce47d3670" loc="89:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f9ce47d3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47d39f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47d3b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47d3d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47d2020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47d21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47d2340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47d24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47d2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f9ce47f0cb0" loc="63:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f9ce47f0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47ef0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47ef230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47ef3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47ef550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47ef6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47ef870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47efa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47efb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f9ce47e4e40" loc="74:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f9ce47e4e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47e31e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47e3370"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47e3500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47e3690"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47e3820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47e39b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47e3b40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47e3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f9ce47d7cb0" loc="85:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f9ce47d7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47d60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47d6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47d63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47d6550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47d66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47d6870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47d6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47d6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f9ce47cd670" loc="94:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f9ce47cd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47cd9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47cdb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47cdd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47cc020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47cc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47cc340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47cc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47cc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f9ce4807860" loc="44:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f9ce4807860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4807be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4807d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4804020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce48041b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4804340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce48044d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4804660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce48047f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f9ce47f8670" loc="55:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f9ce47f8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47f89f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47f8b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47f8d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47f7020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47f71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47f7340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47f74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47f7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f9ce47ec670" loc="66:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f9ce47ec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47ec9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47ecb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47ecd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47eb020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47eb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47eb340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47eb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47eb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f9ce47e0670" loc="77:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f9ce47e0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47e09f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47e0b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47e0d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47df020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47df1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47df340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47df4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47df660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f9ce47c7990" loc="100:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f9ce47c7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47c7d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47c6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47c61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47c6340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47c64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47c6660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47c67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47c6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f9ce47decb0" loc="80:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f9ce47decb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47dc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47dc230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47dc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47dc550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47dc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47dc870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47dca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47dcb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f9ce47e8020" loc="69:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f9ce47e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47e83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47e8530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47e86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47e8850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47e89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47e8b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47e8d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f9ce4801060" loc="47:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f9ce4801060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce48013e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4801570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4801700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4801890"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4801a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4801bb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4801d40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4800020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f9ce47f4020" loc="58:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f9ce47f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47f43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47f4530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47f46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47f4850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47f49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47f4b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47f4d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ce4776440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ce4776440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47767c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4776950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4776ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4776c70"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4776e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4775020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47751b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4775340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ce47728f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ce47728f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4772c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4772e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4771020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47711b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4771340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47714d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4771660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47717f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ce4778140" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ce4778140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47784c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4778650"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47787e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4778970"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4778b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4778c90"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4778e20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4777020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ce47755d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ce47755d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4775950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4775ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4775c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4775e00"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4773020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47731b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4773340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47734d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ce4771a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ce4771a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4771e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4770020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47701b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4770340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47704d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4770660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47707f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4770980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ce47772b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ce47772b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4777630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47777c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4777950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4777ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4777c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4777e00"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4776020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47761b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ce4773760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ce4773760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4773ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4773c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4773e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4772020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47721b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4772340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47724d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4772660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ce4770c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ce4770c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce476f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce476f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce476f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce476f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce476f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce476f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce476f980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce476fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3f843f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3f843f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3f84770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3f84900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3f84a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3f84c20"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3f84db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3f83020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3f831b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3f83340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3f816d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3f816d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3f81a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3f81be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3f81d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3f7b020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3f7b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3f7b340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3f7b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3f7b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3f799b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3f799b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3f79d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3f77020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3f771b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3f77340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3f774d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3f77660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3f777f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3f77980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3f75e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3f75e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3f741c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3f74350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3f744e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3f74670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3f74800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3f74990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3f74b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3f74cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3f710a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3f710a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3f71420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3f715b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3f71740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3f718d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3f71a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3f71bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3f71d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3f70020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3f6e3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3f6e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3f6e770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3f6e900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3f6ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3f6ec20"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3f6edb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3f6d020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3f6d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3f6d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3f6b6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3f6b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3f6ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3f6bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3f6bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3f6a020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3f6a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3f6a340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3f6a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3f6a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3f689b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3f689b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3f68d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3f67020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3f671b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3f67340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3f674d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3f67660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3f677f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3f67980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ce4766760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ce4766760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4766ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4766c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4766e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4765020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47651b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4765340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47654d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4765660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ce4763c10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ce4763c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4762020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47621b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4762340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47624d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4762660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47627f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4762980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4762b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ce47693f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ce47693f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4769770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4769900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4769a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4769c20"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4769db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4767020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47671b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4767340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ce47658f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ce47658f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4765c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4765e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4764020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47641b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4764340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47644d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4764660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47647f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ce4762da0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ce4762da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4761180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4761310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47614a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4761630"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47617c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4761950"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4761ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4761c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ce47675d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ce47675d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4767950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4767ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4767c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4767e00"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4766020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47661b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4766340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47664d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ce4764a80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ce4764a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4764e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4763020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47631b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4763340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47634d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4763660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47637f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4763980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ce4760020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ce4760020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47603a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4760530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47606c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4760850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47609e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4760b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4760d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce475f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3f14a60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3f14a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3f14de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3f13020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3f131b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3f13340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3f134d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3f13660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3f137f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3f13980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3f11e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3f11e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3f101c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3f10350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3f104e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3f10670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3f10800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3f10990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3f10b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3f10cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3f0d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3f0d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3f0d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3f0d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3f0d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3f0d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3f0da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3f0dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3f0dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3f0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3f0a3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3f0a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3f0a770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3f0a900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3f0aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3f0ac20"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3f0adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3f08020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3f081b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3f08340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3f066d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3f066d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3f06a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3f06be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3f06d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3f05020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3f051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3f05340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3f054d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3f05660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3f039b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3f039b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3f03d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3f02020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3f021b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3f02340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3f024d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3f02660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3f027f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3f02980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3f00e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3f00e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3eff1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3eff350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3eff4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3eff670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3eff800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3eff990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3effb20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3effcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3efc0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3efc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3efc420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3efc5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3efc740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3efc8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3efca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3efcbf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3efcd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3efb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ce4757a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ce4757a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4757e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4756020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47561b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4756340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47564d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4756660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47567f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4756980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ce4753020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ce4753020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47533a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4753530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47536c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4753850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47539e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4753b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4753d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4752020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ce47597a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ce47597a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4759b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4759cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4759e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4758020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47581b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4758340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47584d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4758660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ce4756c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ce4756c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4755020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47551b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4755340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47554d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4755660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47557f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4755980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4755b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ce47522b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ce47522b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4752630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47527c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4752950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4752ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4752c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4752e00"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4751020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47511b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ce47588f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ce47588f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4758c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4758e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4757020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47571b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4757340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47574d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4757660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47577f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ce4755da0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ce4755da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4754180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4754310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47544a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4754630"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47547c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4754950"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4754ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4754c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ce4751440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ce4751440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47517c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4751950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4751ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4751c70"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4751e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4750020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47501b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4750340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3ea7c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3ea7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3ea60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3ea6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3ea63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3ea6550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3ea66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3ea6870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3ea6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3ea6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3ea4e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3ea4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3ea31c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3ea3350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3ea34e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3ea3670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3ea3800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3ea3990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3ea3b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3ea3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3ea00a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3ea00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3ea0420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3ea05b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3ea0740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3ea08d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3ea0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3ea0bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3ea0d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3e9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3e9d3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3e9d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3e9d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3e9d900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3e9da90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3e9dc20"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3e9ddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3e9b020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3e9b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3e9b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3e996d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3e996d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3e99a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3e99be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3e99d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3e98020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3e981b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3e98340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3e984d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3e98660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3e969b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3e969b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3e96d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3e95020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3e951b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3e95340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3e954d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3e95660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3e957f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3e95980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3e93e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3e93e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3e921c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3e92350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3e924e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3e92670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3e92800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3e92990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3e92b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3e92cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3e8f0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3e8f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3e8f420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3e8f5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3e8f740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3e8f8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3e8fa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3e8fbf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3e8fd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3e8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ce4748da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ce4748da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4747180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4747310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47474a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4747630"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47477c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4747950"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4747ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4747c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ce4744440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ce4744440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47447c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4744950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4744ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4744c70"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4744e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4743020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47431b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4743340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ce474aa20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ce474aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce474ada0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4749020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47491b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4749340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47494d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4749660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47497f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4749980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ce4746020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ce4746020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47463a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4746530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47466c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4746850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47469e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4746b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4746d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4745020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ce47435d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ce47435d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4743950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4743ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4743c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4743e00"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4741020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47411b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4741340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47414d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ce4749c10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ce4749c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4748020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47481b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4748340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47484d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4748660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47487f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4748980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4748b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ce47452b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ce47452b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4745630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47457c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4745950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4745ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4745c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4745e00"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4744020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ce4741760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ce4741760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4741ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4741c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4741e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4740020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47401b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4740340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47404d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4740660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3e3cc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3e3cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3e3b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3e3b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3e3b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3e3b550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3e3b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3e3b870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3e3ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3e3bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3e39e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3e39e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3e381c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3e38350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3e384e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3e38670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3e38800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3e38990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3e38b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3e38cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3e350a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3e350a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3e35420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3e355b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3e35740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3e358d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3e35a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3e35bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3e35d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3e34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3e323f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3e323f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3e32770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3e32900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3e32a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3e32c20"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3e32db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3e31020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3e311b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3e31340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3e2f6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3e2f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3e2fa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3e2fbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3e2fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3e2d020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3e2d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3e2d340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3e2d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3e2d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3e2b9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3e2b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3e2bd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3e2a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3e2a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3e2a340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3e2a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3e2a660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3e2a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3e2a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3e28e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3e28e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3e271c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3e27350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3e274e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3e27670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3e27800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3e27990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3e27b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3e27cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3e240a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3e240a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3e24420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3e245b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3e24740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3e248d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3e24a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3e24bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3e24d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3e23020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ce4738020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ce4738020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47383a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4738530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47386c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4738850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47389e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4738b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4738d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4737020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ce47345d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ce47345d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4734950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4734ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4734c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4734e00"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4733020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47331b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4733340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47334d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ce473bd30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ce473bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce473a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce473a270"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce473a400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce473a590"/>
        <function-ref name="get" scoped="" ref="0x7f9ce473a720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce473a8b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce473aa40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce473abd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ce47372b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ce47372b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4737630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47377c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4737950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4737ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4737c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4737e00"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4735020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ce4733760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ce4733760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4733ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4733c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4733e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4732020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47321b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4732340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47324d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4732660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ce473ae60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ce473ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4739210"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47393a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4739530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47396c0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4739850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47399e0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4739b70"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4739d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ce4735440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ce4735440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47357c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4735950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4735ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4735c70"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4735e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4734020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47341b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4734340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ce47328f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ce47328f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4732c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4732e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4731020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47311b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4731340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47314d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4731660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47317f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3dd1c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3dd1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3dd00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3dd0230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3dd03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3dd0550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3dd06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3dd0870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3dd0a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3dd0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3dcee20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3dcee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3dcd1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3dcd350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3dcd4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3dcd670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3dcd800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3dcd990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3dcdb20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3dcdcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3dca0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3dca0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3dca420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3dca5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3dca740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3dca8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3dcaa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3dcabf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3dcad80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3dc9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3dc73f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3dc73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3dc7770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3dc7900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3dc7a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3dc7c20"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3dc7db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3dc6020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3dc61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3dc6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3dc46d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3dc46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3dc4a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3dc4be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3dc4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3dc2020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3dc21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3dc2340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3dc24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3dc2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3dc09b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3dc09b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3dc0d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3dbf020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3dbf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3dbf340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3dbf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3dbf660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3dbf7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3dbf980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3dbde20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3dbde20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3dbc1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3dbc350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3dbc4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3dbc670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3dbc800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3dbc990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3dbcb20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3dbccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3db90a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3db90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3db9420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3db95b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3db9740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3db98d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3db9a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3db9bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3db9d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3db8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ce4728440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ce4728440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce47287c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4728950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4728ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4728c70"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4728e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4727020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47271b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4727340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ce47258f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ce47258f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4725c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4725e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4724020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47241b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4724340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47244d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4724660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47247f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ce472b020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ce472b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce472b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce472b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce472b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce472b850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce472b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce472bb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce472bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4729020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ce47275d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ce47275d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4727950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4727ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4727c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4727e00"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4726020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47261b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4726340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47264d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ce4724a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ce4724a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4724e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4723020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce47231b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4723340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47234d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4723660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47237f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4723980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ce47292b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ce47292b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4729630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47297c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4729950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4729ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4729c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4729e00"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4728020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47281b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ce4726760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ce4726760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4726ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4726c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4726e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4725020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce47251b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4725340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce47254d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4725660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ce4723c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ce4723c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4722020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce47221b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4722340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce47224d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4722660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce47227f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4722980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4722b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3d66c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3d66c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3d650a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3d65230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3d653c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3d65550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3d656e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3d65870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3d65a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3d65b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3d63e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3d63e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3d621c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3d62350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3d624e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3d62670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3d62800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3d62990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3d62b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3d62cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3d5f0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3d5f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3d5f420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3d5f5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3d5f740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3d5f8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3d5fa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3d5fbf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3d5fd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3d5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3d5c3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3d5c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3d5c770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3d5c900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3d5ca90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3d5cc20"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3d5cdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3d5b020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3d5b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3d5b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3d596d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3d596d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3d59a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3d59be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3d59d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3d58020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3d581b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3d58340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3d584d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3d58660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3d569b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3d569b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3d56d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3d54020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3d541b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3d54340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3d544d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3d54660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3d547f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3d54980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3d52e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3d52e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3d511c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3d51350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3d514e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3d51670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3d51800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3d51990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3d51b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3d51cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3d4e0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3d4e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3d4e420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3d4e5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3d4e740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3d4e8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3d4ea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3d4ebf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3d4ed80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3d4d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce471a260" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce471a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce471a5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce471a770"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce471a900"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce471aa90"/>
        <function-ref name="get" scoped="" ref="0x7f9ce471ac20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce471adb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4704020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce47041b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce4700d00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce4700d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce46ff0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce46ff230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46ff3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce46ff550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce46ff6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce46ff870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce46ffa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce46ffb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce46fa6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce46fa6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce46faa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce46fabe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46fad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce46f9020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce46f91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce46f9340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce46f94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce46f9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce46f5160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce46f5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce46f54e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce46f5670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46f5800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce46f5990"/>
        <function-ref name="get" scoped="" ref="0x7f9ce46f5b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce46f5cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce46f5e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce46f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce46f0c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce46f0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce46ef0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce46ef230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46ef3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce46ef550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce46ef6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce46ef870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce46efa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce46efb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce46ea6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce46ea6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce46eaa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce46eabe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46ead70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce46e9020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce46e91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce46e9340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce46e94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce46e9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce46e5270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce46e5270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce46e55f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce46e5780"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46e5910"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce46e5aa0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce46e5c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce46e5dc0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce46e4020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce46e41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce46e0d00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce46e0d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce46df0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce46df230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46df3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce46df550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce46df6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce46df870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce46dfa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce46dfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce46da6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce46da6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce46daa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce46dabe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46dad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce46d9020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce46d91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce46d9340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce46d94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce46d9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce46d5160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce46d5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce46d54e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce46d5670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46d5800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce46d5990"/>
        <function-ref name="get" scoped="" ref="0x7f9ce46d5b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce46d5cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce46d5e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce46d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce46d0c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce46d0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce46cf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce46cf230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46cf3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce46cf550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce46cf6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce46cf870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce46cfa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce46cfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce46ca6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce46ca6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce46caa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce46cabe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46cad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce46c9020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce46c91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce46c9340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce46c94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce46c9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce46c5160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce46c5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce46c54e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce46c5670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46c5800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce46c5990"/>
        <function-ref name="get" scoped="" ref="0x7f9ce46c5b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce46c5cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce46c5e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce46c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce46c0c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce46c0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce46bf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce46bf230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46bf3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce46bf550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce46bf6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce46bf870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce46bfa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce46bfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA" ref="0x7f9ce468ec40" loc="7:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA" scoped="" ref="0x7f9ce468ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4685020"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce46851b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4685340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce46854d0"/>
        <function-ref name="read" scoped="" ref="0x7f9ce4685660"/>
        <function-ref name="write" scoped="" ref="0x7f9ce46857f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4685980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL" ref="0x7f9ce467b870" loc="18:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL" scoped="" ref="0x7f9ce467b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce467bbf0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce467bd80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce467a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce467a1b0"/>
        <function-ref name="read" scoped="" ref="0x7f9ce467a340"/>
        <function-ref name="write" scoped="" ref="0x7f9ce467a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce467a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD" ref="0x7f9ce4683e80" loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD" scoped="" ref="0x7f9ce4683e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4682220"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce46823b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4682540"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce46826d0"/>
        <function-ref name="read" scoped="" ref="0x7f9ce4682860"/>
        <function-ref name="write" scoped="" ref="0x7f9ce46829f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4682b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG" ref="0x7f9ce467f1d0" loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG" scoped="" ref="0x7f9ce467f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce467f550"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce467f6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce467f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce467fa00"/>
        <function-ref name="read" scoped="" ref="0x7f9ce467fb90"/>
        <function-ref name="write" scoped="" ref="0x7f9ce467fd20"/>
        <function-ref name="set" scoped="" ref="0x7f9ce467e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ" ref="0x7f9ce467d550" loc="16:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ" scoped="" ref="0x7f9ce467d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce467d8d0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce467da60"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce467dbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce467dd80"/>
        <function-ref name="read" scoped="" ref="0x7f9ce467c020"/>
        <function-ref name="write" scoped="" ref="0x7f9ce467c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce467c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB" ref="0x7f9ce4685d20" loc="8:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB" scoped="" ref="0x7f9ce4685d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce46840e0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce4684270"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4684400"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4684590"/>
        <function-ref name="read" scoped="" ref="0x7f9ce4684720"/>
        <function-ref name="write" scoped="" ref="0x7f9ce46848b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4684a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE" ref="0x7f9ce4681020" loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE" scoped="" ref="0x7f9ce4681020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce46813a0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce4681530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46816c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4681850"/>
        <function-ref name="read" scoped="" ref="0x7f9ce46819e0"/>
        <function-ref name="write" scoped="" ref="0x7f9ce4681b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4681d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH" ref="0x7f9ce467e3c0" loc="15:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH" scoped="" ref="0x7f9ce467e3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce467e740"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce467e8d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce467ea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce467ebf0"/>
        <function-ref name="read" scoped="" ref="0x7f9ce467ed80"/>
        <function-ref name="write" scoped="" ref="0x7f9ce467d020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce467d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK" ref="0x7f9ce467c6e0" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK" scoped="" ref="0x7f9ce467c6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce467ca60"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce467cbf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce467cd80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce467b020"/>
        <function-ref name="read" scoped="" ref="0x7f9ce467b1b0"/>
        <function-ref name="write" scoped="" ref="0x7f9ce467b340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce467b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC" ref="0x7f9ce4684de0" loc="9:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC" scoped="" ref="0x7f9ce4684de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4683180"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce4683310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46834a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4683630"/>
        <function-ref name="read" scoped="" ref="0x7f9ce46837c0"/>
        <function-ref name="write" scoped="" ref="0x7f9ce4683950"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4683ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF" ref="0x7f9ce4680100" loc="12:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF" scoped="" ref="0x7f9ce4680100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4680480"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce4680610"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46807a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4680930"/>
        <function-ref name="read" scoped="" ref="0x7f9ce4680ac0"/>
        <function-ref name="write" scoped="" ref="0x7f9ce4680c50"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4680de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ce4676c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortAP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce4676c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce46750a0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce4675230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46753c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4675550"/>
        <function-ref name="read" scoped="" ref="0x7f9ce46756e0"/>
        <function-ref name="write" scoped="" ref="0x7f9ce4675870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4675a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ce465d390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortBP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce465d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce465d710"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce465d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce465da30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce465dbc0"/>
        <function-ref name="read" scoped="" ref="0x7f9ce465dd50"/>
        <function-ref name="write" scoped="" ref="0x7f9ce465c020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce465c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ce4658910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce4658910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4658c90"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce4658e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4657020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce46571b0"/>
        <function-ref name="read" scoped="" ref="0x7f9ce4657340"/>
        <function-ref name="write" scoped="" ref="0x7f9ce46574d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4657660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ce4653cd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce4653cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce46520a0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce4652230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46523c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4652550"/>
        <function-ref name="read" scoped="" ref="0x7f9ce46526e0"/>
        <function-ref name="write" scoped="" ref="0x7f9ce4652870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4652a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ce464e390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortEP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce464e390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce464e710"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce464e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce464ea30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce464ebc0"/>
        <function-ref name="read" scoped="" ref="0x7f9ce464ed50"/>
        <function-ref name="write" scoped="" ref="0x7f9ce464d020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce464d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ce4649910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortFP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce4649910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4649c90"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce4649e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4648020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce46481b0"/>
        <function-ref name="read" scoped="" ref="0x7f9ce4648340"/>
        <function-ref name="write" scoped="" ref="0x7f9ce46484d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4648660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ce4644cd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortGP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce4644cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce46430a0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce4643230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46433c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4643550"/>
        <function-ref name="read" scoped="" ref="0x7f9ce46436e0"/>
        <function-ref name="write" scoped="" ref="0x7f9ce4643870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4643a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ce4640c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortHP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce4640c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce463f0a0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce463f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce463f3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce463f550"/>
        <function-ref name="read" scoped="" ref="0x7f9ce463f6e0"/>
        <function-ref name="write" scoped="" ref="0x7f9ce463f870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce463fa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ce463bc90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortJP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce463bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce463a0a0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce463a230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce463a3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce463a550"/>
        <function-ref name="read" scoped="" ref="0x7f9ce463a6e0"/>
        <function-ref name="write" scoped="" ref="0x7f9ce463a870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce463aa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ce4636c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortKP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce4636c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce46350a0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce4635230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46353c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4635550"/>
        <function-ref name="read" scoped="" ref="0x7f9ce46356e0"/>
        <function-ref name="write" scoped="" ref="0x7f9ce4635870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4635a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9ce4632c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortLP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9ce4632c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce46310a0"/>
        <function-ref name="clear" scoped="" ref="0x7f9ce4631230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce46313c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4631550"/>
        <function-ref name="read" scoped="" ref="0x7f9ce46316e0"/>
        <function-ref name="write" scoped="" ref="0x7f9ce4631870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4631a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f9ce46262e0" loc="40:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f9ce46262e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b05d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9ce4b03180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f9ce4624110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7f9ce46139e0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7f9ce46139e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ce4613d60"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce4612020"/>
        <function-ref name="disable" scoped="" ref="0x7f9ce46121b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ce4612340"/>
        <function-ref name="enable" scoped="" ref="0x7f9ce46124d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ce4612660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f9ce46199e0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f9ce46199e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ce4619d60"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce4618020"/>
        <function-ref name="disable" scoped="" ref="0x7f9ce46181b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ce4618340"/>
        <function-ref name="enable" scoped="" ref="0x7f9ce46184d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ce4618660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7f9ce46159e0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7f9ce46159e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ce4615d60"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce4614020"/>
        <function-ref name="disable" scoped="" ref="0x7f9ce46141b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ce4614340"/>
        <function-ref name="enable" scoped="" ref="0x7f9ce46144d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ce4614660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7f9ce46129e0" loc="52:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7f9ce46129e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ce4612d60"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce4611020"/>
        <function-ref name="disable" scoped="" ref="0x7f9ce46111b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ce4611340"/>
        <function-ref name="enable" scoped="" ref="0x7f9ce46114d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ce4611660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f9ce46189e0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f9ce46189e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ce4618d60"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce4617020"/>
        <function-ref name="disable" scoped="" ref="0x7f9ce46171b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ce4617340"/>
        <function-ref name="enable" scoped="" ref="0x7f9ce46174d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ce4617660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7f9ce46149e0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7f9ce46149e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ce4614d60"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce4613020"/>
        <function-ref name="disable" scoped="" ref="0x7f9ce46131b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ce4613340"/>
        <function-ref name="enable" scoped="" ref="0x7f9ce46134d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ce4613660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f9ce48ec9b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f9ce48ec9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ce48ecd30"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce4619020"/>
        <function-ref name="disable" scoped="" ref="0x7f9ce46191b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ce4619340"/>
        <function-ref name="enable" scoped="" ref="0x7f9ce46194d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ce4619660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f9ce46179e0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f9ce46179e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ce4617d60"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce4615020"/>
        <function-ref name="disable" scoped="" ref="0x7f9ce46151b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ce4615340"/>
        <function-ref name="enable" scoped="" ref="0x7f9ce46154d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ce4615660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7f9ce460a7a0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7f9ce460a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ce460ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f9ce460d020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f9ce460d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ce460d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7f9ce460c7a0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7f9ce460c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ce460cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7f9ce4609020" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7f9ce4609020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ce46093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f9ce460d7a0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f9ce460d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ce460db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7f9ce460a020" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7f9ce460a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ce460a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f9ce460b860" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f9ce460b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ce460bbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7f9ce460c020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7f9ce460c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ce460c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9ce45ec060" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9ce45ec060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ce45ec3e0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce45ec570"/>
        <function-ref name="disable" scoped="" ref="0x7f9ce45ec700"/>
        <function-ref name="edge" scoped="" ref="0x7f9ce45ec890"/>
        <function-ref name="enable" scoped="" ref="0x7f9ce45eca20"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ce45ecbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9ce45ece80" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9ce45ece80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ce45d7220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9ce45d5da0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9ce45d5da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ce45d4180"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce45d4310"/>
        <function-ref name="disable" scoped="" ref="0x7f9ce45d44a0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ce45d4630"/>
        <function-ref name="enable" scoped="" ref="0x7f9ce45d47c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ce45d4950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9ce45d4c20" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9ce45d4c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ce45d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9ce45d1c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9ce45d1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ce45cf0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce45cf230"/>
        <function-ref name="disable" scoped="" ref="0x7f9ce45cf3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ce45cf550"/>
        <function-ref name="enable" scoped="" ref="0x7f9ce45cf6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ce45cf870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9ce45cfb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9ce45cfb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ce45ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9ce45ccc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9ce45ccc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ce45cb0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce45cb230"/>
        <function-ref name="disable" scoped="" ref="0x7f9ce45cb3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ce45cb550"/>
        <function-ref name="enable" scoped="" ref="0x7f9ce45cb6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ce45cb870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9ce45cbb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9ce45cbb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ce45ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9ce45c8c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9ce45c8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ce45c70a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce45c7230"/>
        <function-ref name="disable" scoped="" ref="0x7f9ce45c73c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ce45c7550"/>
        <function-ref name="enable" scoped="" ref="0x7f9ce45c76e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ce45c7870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9ce45c7b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9ce45c7b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ce45c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9ce45c3c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9ce45c3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ce45c20a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce45c2230"/>
        <function-ref name="disable" scoped="" ref="0x7f9ce45c23c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ce45c2550"/>
        <function-ref name="enable" scoped="" ref="0x7f9ce45c26e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ce45c2870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9ce45c2b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9ce45c2b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ce45c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9ce45bfc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9ce45bfc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ce45be0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce45be230"/>
        <function-ref name="disable" scoped="" ref="0x7f9ce45be3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ce45be550"/>
        <function-ref name="enable" scoped="" ref="0x7f9ce45be6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ce45be870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9ce45beb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9ce45beb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ce45bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9ce45bbc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9ce45bbc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9ce45ba0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce45ba230"/>
        <function-ref name="disable" scoped="" ref="0x7f9ce45ba3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9ce45ba550"/>
        <function-ref name="enable" scoped="" ref="0x7f9ce45ba6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9ce45ba870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9ce45bab40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9ce45bab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9ce45b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9ce45ae9f0" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9ce45ae9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ce45aed70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ce43ac020"/>
        <function-ref name="request" scoped="" ref="0x7f9ce43ac1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f9ce43ac340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ce43ac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f9ce43ac880" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9ce43ac880"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9ce49ab770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9ce49aba30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ce43ab500"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9ce43a89b0"/>
        <function-ref name="write" scoped="" ref="0x7f9ce43a9150"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ce43a9d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9ce45a01d0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9ce45a01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ce45a0550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ce45a06e0"/>
        <function-ref name="request" scoped="" ref="0x7f9ce45a0870"/>
        <function-ref name="granted" scoped="" ref="0x7f9ce45a0a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ce45a0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f9ce459f5e0" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9ce459f5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9ce49ab770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9ce49aba30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ce459e240"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9ce459b6d0"/>
        <function-ref name="write" scoped="" ref="0x7f9ce459ee50"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ce459da90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9ce4512bf0" loc="92:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9ce4512bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9ce4510020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9ce45101b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9ce450f930" loc="96:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ce450f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9ce450fcd0"/>
        <function-ref name="configure" scoped="" ref="0x7f9ce450fe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f9ce4510400" loc="93:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ce4510400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ce4510780"/>
        <function-ref name="requested" scoped="" ref="0x7f9ce4510910"/>
        <function-ref name="granted" scoped="" ref="0x7f9ce4510aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ce4510c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9ce4510dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9ce4513e60" loc="91:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9ce4513e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ce4512230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ce45123c0"/>
        <function-ref name="request" scoped="" ref="0x7f9ce4512550"/>
        <function-ref name="granted" scoped="" ref="0x7f9ce45126e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ce4512870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9ce450f060" loc="94:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ce450f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9ce450f3e0"/>
        <function-ref name="userId" scoped="" ref="0x7f9ce450f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ce3be1810" loc="44:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ce3be1810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce3be1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f9ce3be1e20" loc="45:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f9ce3be1e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9ce3bdf1c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9ce3bdf350"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f9ce3bdf4e0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9ce3bdf670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9ce3bddd80" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9ce3bddd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9ce3bdc180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9ce3bdc310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9ce3bdbb60" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9ce3bdbb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9ce3bda020"/>
        <function-ref name="configure" scoped="" ref="0x7f9ce3bda1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f9ce3bda440" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f9ce3bda440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9ce3bda7c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9ce3bda950"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f9ce3bdaae0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9ce3bdac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f9ce3bdc560" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ce3bdc560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ce3bdc8e0"/>
        <function-ref name="requested" scoped="" ref="0x7f9ce3bdca70"/>
        <function-ref name="granted" scoped="" ref="0x7f9ce3bdcc00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ce3bdcd90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9ce3bdb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9ce3bd9020" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9ce3bd9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9ce3bd93a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9ce3bd9530"/>
        <function-ref name="led1On" scoped="" ref="0x7f9ce3bd96c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9ce3bd9850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9ce3bd99e0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3bd9b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9ce3bd9d00"/>
        <function-ref name="led0On" scoped="" ref="0x7f9ce3bd84d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3bd81b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f9ce3bd8020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9ce3bd8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9ce3bdd020" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9ce3bdd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ce3bdd3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ce3bdd550"/>
        <function-ref name="request" scoped="" ref="0x7f9ce3bdd6e0"/>
        <function-ref name="granted" scoped="" ref="0x7f9ce3bdd870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ce3bdda00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9ce3bdb270" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ce3bdb270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9ce3bdb5f0"/>
        <function-ref name="userId" scoped="" ref="0x7f9ce3bdb780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f9ce3bd87a0" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f9ce3bd87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ce3bd8b20"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ce3bd8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f9ce450b400" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f9ce450b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f9ce450b780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f9ce450b9d0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9ce450b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ce450bd50"/>
        <function-ref name="requested" scoped="" ref="0x7f9ce44fd020"/>
        <function-ref name="granted" scoped="" ref="0x7f9ce44fd1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ce44fd340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9ce44fd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f9ce450cc40" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9ce450cc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9ce450b020"/>
        <function-ref name="stop" scoped="" ref="0x7f9ce450b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f9ce44fd720" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9ce44fd720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9ce44fdaa0"/>
        <function-ref name="userId" scoped="" ref="0x7f9ce44fdc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7f9ce44b8cd0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f9ce44b8cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f9ce44b70a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f9ce44bc020" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f9ce44bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9ce49ab770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9ce49aba30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ce44bcc50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9ce44b8150"/>
        <function-ref name="write" scoped="" ref="0x7f9ce44ba8c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ce44b9510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9ce44b7330" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9ce44b7330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9ce44b76b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9ce44b7840"/>
        <function-ref name="led1On" scoped="" ref="0x7f9ce44b79d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9ce44b7b60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9ce44b7cf0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce44b7e80"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9ce44b6030"/>
        <function-ref name="led2On" scoped="" ref="0x7f9ce44b6670"/>
        <function-ref name="set" scoped="" ref="0x7f9ce44b6350"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9ce44b61c0"/>
        <function-ref name="led0On" scoped="" ref="0x7f9ce44b64e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9ce44f9470" loc="41:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9ce44f9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ce44f9810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ce44f99a0"/>
        <function-ref name="request" scoped="" ref="0x7f9ce44f9b30"/>
        <function-ref name="granted" scoped="" ref="0x7f9ce44f9cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ce44f9e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f9ce44c2370" loc="42:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9ce44c2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9ce49ab770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9ce49aba30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ce44c1020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9ce44be510"/>
        <function-ref name="write" scoped="" ref="0x7f9ce44c1c50"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ce44bf8c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f9ce44bd210" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f9ce44bd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9ce44bd5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9ce44bd740"/>
        <function-ref name="request" scoped="" ref="0x7f9ce44bd8d0"/>
        <function-ref name="granted" scoped="" ref="0x7f9ce44bda60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9ce44bdbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7f9ce44437f0" loc="79:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f9ce44437f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f9ce4443b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f9ce4443e40" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f9ce4443e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f9ce44421e0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f9ce4442370"/>
        <function-ref name="setStart" scoped="" ref="0x7f9ce4442500"/>
        <function-ref name="status" scoped="" ref="0x7f9ce4442690"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f9ce4442820"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9ce44429b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f9ce4442b40"/>
        <function-ref name="read" scoped="" ref="0x7f9ce4442cd0"/>
        <function-ref name="init" scoped="" ref="0x7f9ce4442e60"/>
        <function-ref name="enableAck" scoped="" ref="0x7f9ce4441020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f9ce44411b0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f9ce4441340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9ce44414d0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f9ce4441760"/>
        <function-ref name="enable" scoped="" ref="0x7f9ce44418f0"/>
        <function-ref name="write" scoped="" ref="0x7f9ce4441a80"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f9ce4441c10"/>
        <function-ref name="off" scoped="" ref="0x7f9ce4441da0"/>
        <function-ref name="setStop" scoped="" ref="0x7f9ce4440020"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f9ce44401b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f9ce4440340"/>
        <function-ref name="hasStop" scoped="" ref="0x7f9ce44404d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7f9ce44407a0" loc="82:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f9ce44407a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9ce4440b20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9ce4440cb0"/>
        <function-ref name="led1On" scoped="" ref="0x7f9ce4440e40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9ce443f020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9ce443f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce443f340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9ce443f4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f9ce443fb10"/>
        <function-ref name="set" scoped="" ref="0x7f9ce443f7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9ce443f660"/>
        <function-ref name="led0On" scoped="" ref="0x7f9ce443f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7f9ce443fde0" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f9ce443fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9ce443e180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9ce443e310"/>
        <function-ref name="led1On" scoped="" ref="0x7f9ce443e4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9ce443e630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9ce443e7c0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce443e950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9ce443eae0"/>
        <function-ref name="led2On" scoped="" ref="0x7f9ce443d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce443ee00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9ce443ec70"/>
        <function-ref name="led0On" scoped="" ref="0x7f9ce443d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f9ce443d480" loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f9ce443d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ce443d800"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ce443d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f9ce44481e0" loc="77:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9ce44481e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9ce4448560"/>
        <function-ref name="stop" scoped="" ref="0x7f9ce44486f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f9ce4448aa0" loc="78:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9ce4448aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9ce49ab770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9ce49aba30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9ce44476f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9ce4445c30"/>
        <function-ref name="write" scoped="" ref="0x7f9ce4446330"/>
        <function-ref name="readDone" scoped="" ref="0x7f9ce4445020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f9ce443aab0" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f9ce443aab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f9ce443ae30"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f9ce4437020"/>
        <function-ref name="setStart" scoped="" ref="0x7f9ce44371b0"/>
        <function-ref name="status" scoped="" ref="0x7f9ce4437340"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f9ce44374d0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9ce4437660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f9ce44377f0"/>
        <function-ref name="read" scoped="" ref="0x7f9ce4437980"/>
        <function-ref name="init" scoped="" ref="0x7f9ce4437b10"/>
        <function-ref name="enableAck" scoped="" ref="0x7f9ce4437ca0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f9ce4437e30"/>
        <function-ref name="hasStart" scoped="" ref="0x7f9ce4436020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9ce44361b0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f9ce4436440"/>
        <function-ref name="enable" scoped="" ref="0x7f9ce44365d0"/>
        <function-ref name="write" scoped="" ref="0x7f9ce4436760"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f9ce44368f0"/>
        <function-ref name="off" scoped="" ref="0x7f9ce4436a80"/>
        <function-ref name="setStop" scoped="" ref="0x7f9ce4436c10"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f9ce4436da0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f9ce4435020"/>
        <function-ref name="hasStop" scoped="" ref="0x7f9ce44351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f9ce4432440" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f9ce4432440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f9ce44327c0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f9ce4432950"/>
        <function-ref name="setStart" scoped="" ref="0x7f9ce4432ae0"/>
        <function-ref name="status" scoped="" ref="0x7f9ce4432c70"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f9ce4432e00"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9ce4431020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f9ce44311b0"/>
        <function-ref name="read" scoped="" ref="0x7f9ce4431340"/>
        <function-ref name="init" scoped="" ref="0x7f9ce44314d0"/>
        <function-ref name="enableAck" scoped="" ref="0x7f9ce4431660"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f9ce44317f0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f9ce4431980"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9ce4431b10"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f9ce4431da0"/>
        <function-ref name="enable" scoped="" ref="0x7f9ce4430020"/>
        <function-ref name="write" scoped="" ref="0x7f9ce44301b0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f9ce4430340"/>
        <function-ref name="off" scoped="" ref="0x7f9ce44304d0"/>
        <function-ref name="setStop" scoped="" ref="0x7f9ce4430660"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f9ce44307f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f9ce4430980"/>
        <function-ref name="hasStop" scoped="" ref="0x7f9ce4430b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7f9ce442f020" loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7f9ce442f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce442f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce442f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce442f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce442f850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce442f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce442fb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce442fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce442e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7f9ce442e360" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7f9ce442e360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce442e6e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce442e870"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce442ea00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce442eb90"/>
        <function-ref name="get" scoped="" ref="0x7f9ce442ed20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce442d020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce442d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce442d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f9ce43f74a0" loc="46:../tinyos_ws18/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9ce43f74a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9ce43f7820"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9ce43f79b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f9ce43f7b40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9ce43f7cd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9ce43f7e60"/>
        <function-ref name="get" scoped="" ref="0x7f9ce43f4020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9ce43f41b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9ce43f47f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce43f4340"/>
        <function-ref name="led0On" scoped="" ref="0x7f9ce43f44d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f9ce43f4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f9ce43ef550" loc="50:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f9ce43ef550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce43ef8d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce43efa60"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce43efbf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce43efd80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce43ee020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce43ee1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce43ee340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce43ee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ce43f37c0" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ce43f37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce43f3b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f9ce43ee7f0" loc="51:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f9ce43ee7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce43eeb70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce43eed00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce43ed020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce43ed1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce43ed340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce43ed4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce43ed660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce43ed7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f9ce43f3dc0" loc="47:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9ce43f3dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9ce43f0180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9ce43f0310"/>
        <function-ref name="led1On" scoped="" ref="0x7f9ce43f04a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9ce43f0630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9ce43f07c0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce43f0950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9ce43f0ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9ce43ef1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce43f0c70"/>
        <function-ref name="led0On" scoped="" ref="0x7f9ce43f0e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f9ce43ef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f9ce43edb10" loc="52:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f9ce43edb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce43ec020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce43ec1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce43ec340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce43ec4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce43ec660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce43ec7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce43ec980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce43ecb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f9ce43d01d0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f9ce43d01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce43d0550"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce43d06e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce43d0870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce43d0a00"/>
        <function-ref name="get" scoped="" ref="0x7f9ce43d0b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce43d0d20"/>
        <function-ref name="set" scoped="" ref="0x7f9ce43cf020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce43cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f9ce43cf510" loc="45:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f9ce43cf510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce43cf890"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce43cfa20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce43cfbb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce43cfd40"/>
        <function-ref name="get" scoped="" ref="0x7f9ce43ce020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce43ce1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce43ce340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce43ce4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f9ce43cdab0" loc="48:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ce43cdab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce43cde30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f9ce43ce830" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f9ce43ce830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce43cebb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce43ced40"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce43cd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce43cd1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce43cd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce43cd4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce43cd660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce43cd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ce43c5340" loc="46:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ce43c5340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce43c56c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f9ce43c5980" loc="47:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9ce43c5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9ce43c5d00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9ce43c4020"/>
        <function-ref name="led1On" scoped="" ref="0x7f9ce43c41b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9ce43c4340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9ce43c44d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce43c4660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9ce43c47f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9ce43c4e30"/>
        <function-ref name="set" scoped="" ref="0x7f9ce43c4980"/>
        <function-ref name="led0On" scoped="" ref="0x7f9ce43c4b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f9ce43c4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9ce41e5140" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="FMClickC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9ce41e5140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ce41e2630"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce41e4b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ce41e3920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ce41e34a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ce41e1020"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ce41e2ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ce41e3020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ce41e5d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ce41e2020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ce41e4220"/>
        <function-ref name="stop" scoped="" ref="0x7f9ce41e46f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f9ce439b020" loc="49:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f9ce439b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ce4397630"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce4399a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ce4398920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ce43984a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ce4396020"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ce4397ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ce4398020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ce439bc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ce4397020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ce4399110"/>
        <function-ref name="stop" scoped="" ref="0x7f9ce43995e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f9ce4392c30" loc="46:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f9ce4392c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ce438d110"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce43906a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ce438e4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ce438e020"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ce438da10"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ce438d590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ce4390b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ce4391860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ce438eab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ce4391d30"/>
        <function-ref name="stop" scoped="" ref="0x7f9ce4390220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f9ce4388500" loc="47:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f9ce4388500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9ce438a170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ce4396e60" loc="45:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ce4396e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce4392210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f9ce437a020" loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f9ce437a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9ce437ae30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9ce4379800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9ce4379340"/>
        <function-ref name="overflow" scoped="" ref="0x7f9ce4379cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ce4389c80" loc="27:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ce4389c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce43850a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f9ce437d960" loc="28:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f9ce437d960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ce437b1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce437c1b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f9ce437cb30"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ce437c670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9ce437b670"/>
        <function-ref name="start" scoped="" ref="0x7f9ce43847c0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ce4384cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9ce42844b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f9ce42844b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ce4282db0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce4283da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f9ce4282760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ce42822a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9ce42802a0"/>
        <function-ref name="start" scoped="" ref="0x7f9ce42833d0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ce42838e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ce4285ba0" loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ce4285ba0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f9ce4bbc020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f9ce4bbc020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce4284020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9ce42808d0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9ce42808d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9ce427f780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9ce427e150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9ce427fc40"/>
        <function-ref name="overflow" scoped="" ref="0x7f9ce427e610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f9ce3b3a190" loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9ce3b3a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9ce3b3a510"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9ce3b3a6a0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f9ce3b3a830"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f9ce3b3a9c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9ce3b3ab50"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9ce3b3ace0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9ce3b3ae70"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9ce3b39030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9ce3b469c0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f9ce3b469c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ce3b43260"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce3b44220"/>
        <function-ref name="startAt" scoped="" ref="0x7f9ce3b44ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ce3b446e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9ce3b43720"/>
        <function-ref name="start" scoped="" ref="0x7f9ce3b45810"/>
        <function-ref name="stop" scoped="" ref="0x7f9ce3b45d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9ce3b461b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9ce3b461b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9ce3b46530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9ce3b43d50" loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9ce3b43d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9ce3b41ba0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9ce3b40550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9ce3b40090"/>
        <function-ref name="overflow" scoped="" ref="0x7f9ce3b40a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x7f9ce3b35780" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f9ce3b35780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f9ce3b35b00"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f9ce3b35c90"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f9ce3b35e20"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f9ce3b34020"/>
        <function-ref name="countBusy" scoped="" ref="0x7f9ce3b341b0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f9ce3b34340"/>
        <function-ref name="getAssr" scoped="" ref="0x7f9ce3b344d0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f9ce3b34660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f9ce3b393e0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f9ce3b393e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9ce3b36e60"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce3b38a60"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3b38090"/>
        <function-ref name="reset" scoped="" ref="0x7f9ce3b36020"/>
        <function-ref name="isOn" scoped="" ref="0x7f9ce3b35350"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3b38550"/>
        <function-ref name="start" scoped="" ref="0x7f9ce3b364e0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ce3b369a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9ce3b3f020" loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9ce3b3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9ce3b3b350"/>
        <function-ref name="test" scoped="" ref="0x7f9ce3b3c9a0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3b3fc50"/>
        <function-ref name="setScale" scoped="" ref="0x7f9ce3b3b810"/>
        <function-ref name="getScale" scoped="" ref="0x7f9ce3b3bd20"/>
        <function-ref name="reset" scoped="" ref="0x7f9ce3b3eb20"/>
        <function-ref name="overflow" scoped="" ref="0x7f9ce3b3e660"/>
        <function-ref name="isOn" scoped="" ref="0x7f9ce3b3ce60"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3b3e150"/>
        <function-ref name="start" scoped="" ref="0x7f9ce3b3c020"/>
        <function-ref name="stop" scoped="" ref="0x7f9ce3b3c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f9ce42f6c10" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9ce42f6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9ce42f5020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9ce42f51b0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f9ce42f5340"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f9ce42f54d0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9ce42f5660"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9ce42f57f0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9ce42f5980"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9ce42f5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7f9ce42f0570" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f9ce42f0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f9ce42f08f0"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f9ce42f0a80"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f9ce42f0c10"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f9ce42f0da0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f9ce42ef020"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f9ce42ef1b0"/>
        <function-ref name="getAssr" scoped="" ref="0x7f9ce42ef340"/>
        <function-ref name="setAssr" scoped="" ref="0x7f9ce42ef4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9ce42f4060" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f9ce42f4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9ce42f2a10"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce42f36c0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce42f4c90"/>
        <function-ref name="reset" scoped="" ref="0x7f9ce42f3b80"/>
        <function-ref name="isOn" scoped="" ref="0x7f9ce42f0020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce42f31b0"/>
        <function-ref name="start" scoped="" ref="0x7f9ce42f2090"/>
        <function-ref name="stop" scoped="" ref="0x7f9ce42f2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9ce42fd8f0" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9ce42fd8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9ce42f8cd0"/>
        <function-ref name="test" scoped="" ref="0x7f9ce42f8350"/>
        <function-ref name="get" scoped="" ref="0x7f9ce42fa5a0"/>
        <function-ref name="setScale" scoped="" ref="0x7f9ce42f61b0"/>
        <function-ref name="getScale" scoped="" ref="0x7f9ce42f66c0"/>
        <function-ref name="reset" scoped="" ref="0x7f9ce42f94e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9ce42f9020"/>
        <function-ref name="isOn" scoped="" ref="0x7f9ce42f8810"/>
        <function-ref name="set" scoped="" ref="0x7f9ce42faa60"/>
        <function-ref name="start" scoped="" ref="0x7f9ce42f99a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ce42f9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f9ce42e7db0" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9ce42e7db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9ce42e6180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9ce42e6310"/>
        <function-ref name="getControlA" scoped="" ref="0x7f9ce42e64a0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f9ce42e6630"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9ce42e67c0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9ce42e6950"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9ce42e6ae0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9ce42e6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f9ce42e14c0" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9ce42e14c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f9ce42e1840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7f9ce42e1bf0" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f9ce42e1bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f9ce42e0020"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f9ce42e01b0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f9ce42e0340"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f9ce42e04d0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f9ce42e0660"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f9ce42e07f0"/>
        <function-ref name="getAssr" scoped="" ref="0x7f9ce42e0980"/>
        <function-ref name="setAssr" scoped="" ref="0x7f9ce42e0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9ce42e51a0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f9ce42e51a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9ce42e2b30"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce42e47f0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce42e5dd0"/>
        <function-ref name="reset" scoped="" ref="0x7f9ce42e4cb0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9ce42e1020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce42e42e0"/>
        <function-ref name="start" scoped="" ref="0x7f9ce42e21b0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ce42e2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9ce42eca10" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9ce42eca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9ce42e9e60"/>
        <function-ref name="test" scoped="" ref="0x7f9ce42e94e0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce42eb6b0"/>
        <function-ref name="setScale" scoped="" ref="0x7f9ce42e7350"/>
        <function-ref name="getScale" scoped="" ref="0x7f9ce42e7860"/>
        <function-ref name="reset" scoped="" ref="0x7f9ce42ea590"/>
        <function-ref name="overflow" scoped="" ref="0x7f9ce42ea0d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9ce42e99a0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce42ebb70"/>
        <function-ref name="start" scoped="" ref="0x7f9ce42eaa50"/>
        <function-ref name="stop" scoped="" ref="0x7f9ce42e9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f9ce424b020" loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f9ce424b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ce424b3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ce424b530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f9ce4250cd0" loc="49:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f9ce4250cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ce424c670"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce424e550"/>
        <function-ref name="startAt" scoped="" ref="0x7f9ce424c020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ce424ea10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9ce424cb30"/>
        <function-ref name="start" scoped="" ref="0x7f9ce424fb60"/>
        <function-ref name="stop" scoped="" ref="0x7f9ce424e090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9ce4255830" loc="48:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9ce4255830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ce4251cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce4253300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ce42510d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ce4253c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ce4250660"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ce42501e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ce4253780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ce4254480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ce42516e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ce4254950"/>
        <function-ref name="stop" scoped="" ref="0x7f9ce4254e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f9ce41fba00" loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f9ce41fba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9ce41fbd80"/>
        <function-ref name="runTask" scoped="" ref="0x7f9ce41fa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f9ce4200640" loc="49:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f9ce4200640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ce41fcc40"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce41fe1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ce41fc020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ce41feae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ce41fb590"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ce41fb110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ce41fe660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ce41ff390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ce41fc630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ce41ff860"/>
        <function-ref name="stop" scoped="" ref="0x7f9ce41ffd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9ce4206150" loc="48:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9ce4206150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9ce4202700"/>
        <function-ref name="fired" scoped="" ref="0x7f9ce4205c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9ce4203a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9ce42035b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9ce4200090"/>
        <function-ref name="gett0" scoped="" ref="0x7f9ce4202ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9ce4203110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9ce4206d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9ce42020d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9ce42052a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9ce4205790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f9ce41f8790" loc="48:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f9ce41f8790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9ce41f73f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f9ce41f7a60" loc="49:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9ce41f7a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9ce4b079b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9ce4b07d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9ce41ec890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9ce41eb260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9ce41ecd50"/>
        <function-ref name="overflow" scoped="" ref="0x7f9ce41eb720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f9ce41a1020" loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f9ce41a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41a17a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41a1930"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41a1ac0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41a1c50"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41a1de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41a0020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41a01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41a0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f9ce41be800" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f9ce41be800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41beb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41bed10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41bd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41bd1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41bd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41bd4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41bd660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41bd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f9ce41b2670" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f9ce41b2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41b29f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41b2b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41b2d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41b1020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41b11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41b1340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41b14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41b1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f9ce41a8020" loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f9ce41a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41a83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41a8530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41a86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41a8850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41a89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41a8b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41a8d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f9ce419b350" loc="108:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f9ce419b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce419b6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce419b860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce419b9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce419bb80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce419bd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce419a020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce419a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce419a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH2" ref="0x7f9ce4198cb0" loc="112:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH2" scoped="" ref="0x7f9ce4198cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41970a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4197230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41973c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4197550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41976e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4197870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4197a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4197b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH7" ref="0x7f9ce4192cb0" loc="117:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH7" scoped="" ref="0x7f9ce4192cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41910a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4191230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41913c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4191550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41916e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4191870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4191a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4191b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ6" ref="0x7f9ce4188350" loc="125:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ6" scoped="" ref="0x7f9ce4188350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41886d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4188860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41889f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4188b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4188d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4187020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41871b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4187340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK0" ref="0x7f9ce4186990" loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK0" scoped="" ref="0x7f9ce4186990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4186d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4185020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41851b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4185340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41854d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4185660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41857f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4185980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL2" ref="0x7f9ce417a990" loc="139:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL2" scoped="" ref="0x7f9ce417a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce417ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4179020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41791b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4179340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41794d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4179660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41797f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4179980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f9ce41d6990" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f9ce41d6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41d6d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41d5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41d51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41d5340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41d54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41d5660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41d57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41d5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f9ce41ab990" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f9ce41ab990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41abd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41aa020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41aa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41aa340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41aa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41aa660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41aa7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41aa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f9ce41d3020" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f9ce41d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41d33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41d3530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41d36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41d3850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41d39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41d3b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41d3d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f9ce41c7020" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f9ce41c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41c73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41c7530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41c76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41c7850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41c79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41c7b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41c7d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f9ce41ba060" loc="80:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f9ce41ba060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41ba3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41ba570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41ba700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41ba890"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41baa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41babb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41bad40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f9ce41ae020" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f9ce41ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41ae3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41ae530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41ae6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41ae850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41ae9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41aeb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41aed00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f9ce41dcb20" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f9ce41dcb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41db020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41db1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41db340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41db4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41db660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41db7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41db980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41dbb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f9ce41d0990" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f9ce41d0990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41d0d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41cf020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41cf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41cf340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41cf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41cf660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41cf7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41cf980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f9ce41c4990" loc="72:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f9ce41c4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41c4d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41c2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41c21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41c2340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41c24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41c2660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41c27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41c2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f9ce41b7990" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f9ce41b7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41b7d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41b6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41b61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41b6340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41b64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41b6660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41b67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41b6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f9ce41a4990" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f9ce41a4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41a4d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41a3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41a31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41a3340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41a34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41a3660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41a37f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41a3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f9ce419ecb0" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f9ce419ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce419d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce419d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce419d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce419d550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce419d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce419d870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce419da00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce419db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH0" ref="0x7f9ce419a670" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH0" scoped="" ref="0x7f9ce419a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce419a9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce419ab80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce419ad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4199020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41991b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4199340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41994d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4199660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f9ce41b4020" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f9ce41b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41b43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41b4530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41b46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41b4850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41b49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41b4b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41b4d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH5" ref="0x7f9ce4194670" loc="115:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH5" scoped="" ref="0x7f9ce4194670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41949f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4194b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4194d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4193020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41931b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4193340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41934d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4193660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ1" ref="0x7f9ce418f350" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ1" scoped="" ref="0x7f9ce418f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce418f6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce418f860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce418f9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce418fb80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce418fd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce418e020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce418e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce418e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ4" ref="0x7f9ce418ccb0" loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ4" scoped="" ref="0x7f9ce418ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce418b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce418b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce418b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce418b550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce418b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce418b870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce418ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce418bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK3" ref="0x7f9ce4182350" loc="131:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK3" scoped="" ref="0x7f9ce4182350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41826d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4182860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41829f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4182b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4182d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4181020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41811b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4181340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK6" ref="0x7f9ce417fcb0" loc="134:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK6" scoped="" ref="0x7f9ce417fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce417e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce417e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce417e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce417e550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce417e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce417e870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce417ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce417eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL0" ref="0x7f9ce417c350" loc="137:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL0" scoped="" ref="0x7f9ce417c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce417c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce417c860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce417c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce417cb80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce417cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce417b020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce417b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce417b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL5" ref="0x7f9ce4176350" loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL5" scoped="" ref="0x7f9ce4176350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41766d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4176860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41769f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4176b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4176d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4175020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41751b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4175340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f9ce41d8350" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f9ce41d8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41d86d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41d8860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41d89f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41d8b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41d8d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41d7020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41d71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41d7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f9ce41cc350" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f9ce41cc350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41cc6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41cc860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41cc9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41ccb80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41ccd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41cb020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41cb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41cb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f9ce41a0670" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f9ce41a0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41a09f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41a0b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41a0d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce419f020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce419f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce419f340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce419f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce419f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f9ce41ca990" loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f9ce41ca990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41cad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41c9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41c91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41c9340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41c94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41c9660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41c97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41c9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f9ce41bdb20" loc="78:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f9ce41bdb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41bc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41bc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41bc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41bc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41bc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41bc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41bc980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41bcb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f9ce41b1990" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f9ce41b1990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41b1d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41b0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41b01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41b0340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41b04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41b0660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41b07f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41b0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f9ce41a7350" loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f9ce41a7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41a76d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41a7860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41a79f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41a7b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41a7d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41a5020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41a51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41a5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH3" ref="0x7f9ce4196020" loc="113:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH3" scoped="" ref="0x7f9ce4196020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41963a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4196530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41966c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4196850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41969e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4196b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4196d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4195020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ7" ref="0x7f9ce4187670" loc="126:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ7" scoped="" ref="0x7f9ce4187670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41879f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4187b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4187d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4186020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41861b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4186340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41864d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4186660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK1" ref="0x7f9ce4185cb0" loc="129:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK1" scoped="" ref="0x7f9ce4185cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41840a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4184230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41843c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4184550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41846e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4184870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4184a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4184b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL3" ref="0x7f9ce4179cb0" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL3" scoped="" ref="0x7f9ce4179cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41780a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4178230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41783c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4178550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41786e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4178870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4178a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4178b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ2" ref="0x7f9ce418e670" loc="121:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ2" scoped="" ref="0x7f9ce418e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce418e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce418eb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce418ed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce418d020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce418d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce418d340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce418d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce418d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f9ce41d5cb0" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f9ce41d5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41d40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41d4230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41d43c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41d4550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41d46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41d4870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41d4a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41d4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK4" ref="0x7f9ce4181670" loc="132:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK4" scoped="" ref="0x7f9ce4181670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41819f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4181b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4181d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4180020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41801b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4180340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41804d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4180660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL6" ref="0x7f9ce4175670" loc="143:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL6" scoped="" ref="0x7f9ce4175670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41759f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4175b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4175d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4174020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41741b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4174340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41744d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4174660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f9ce41d2350" loc="59:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f9ce41d2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41d26d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41d2860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41d29f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41d2b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41d2d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41d1020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41d11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41d1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f9ce41c6350" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f9ce41c6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41c66d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41c6860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41c69f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41c6b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41c6d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41c5020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41c51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41c5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f9ce41b9350" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f9ce41b9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41b96d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41b9860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41b99f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41b9b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41b9d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41b8020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41b81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41b8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f9ce41ad350" loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f9ce41ad350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41ad6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41ad860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41ad9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41adb80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41add10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41ac020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41ac1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41ac340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f9ce41dbe40" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f9ce41dbe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41da1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41da370"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41da500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41da690"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41da820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41da9b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41dab40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41dacd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f9ce41cfcb0" loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f9ce41cfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41ce180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41ce310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41ce4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41ce630"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41ce7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41ce950"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41ceae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41cec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f9ce41c2cb0" loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f9ce41c2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41c10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41c1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41c13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41c1550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41c16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41c1870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41c1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41c1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f9ce41a3cb0" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f9ce41a3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41a20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41a2230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41a23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41a2550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41a26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41a2870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41a2a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41a2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH1" ref="0x7f9ce4199990" loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH1" scoped="" ref="0x7f9ce4199990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4199d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4198020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41981b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4198340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41984d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4198660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41987f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4198980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f9ce41bf350" loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f9ce41bf350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41bf8d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41bfa60"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41bfbf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41bfd80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41be020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41be1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41be340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41be4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f9ce41b3350" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f9ce41b3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41b36d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41b3860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41b39f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41b3b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41b3d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41b2020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41b21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41b2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f9ce41aacb0" loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f9ce41aacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41a90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41a9230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41a93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41a9550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41a96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41a9870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41a9a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41a9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f9ce419c020" loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f9ce419c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce419c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce419c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce419c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce419c850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce419c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce419cb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce419cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce419b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH6" ref="0x7f9ce4193990" loc="116:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH6" scoped="" ref="0x7f9ce4193990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4193d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4192020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41921b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4192340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41924d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4192660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41927f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4192980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ5" ref="0x7f9ce4189020" loc="124:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ5" scoped="" ref="0x7f9ce4189020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41893a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4189530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41896c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4189850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41899e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4189b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4189d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4188020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK7" ref="0x7f9ce417d020" loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK7" scoped="" ref="0x7f9ce417d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce417d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce417d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce417d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce417d850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce417d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce417db70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce417dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce417c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL1" ref="0x7f9ce417b670" loc="138:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL1" scoped="" ref="0x7f9ce417b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce417b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce417bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce417bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce417a020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce417a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce417a340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce417a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce417a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f9ce41d7670" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f9ce41d7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41d79f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41d7b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41d7d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41d6020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41d61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41d6340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41d64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41d6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f9ce41cb670" loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f9ce41cb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41cb9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41cbb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41cbd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41ca020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41ca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41ca340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41ca4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41ca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f9ce41ac670" loc="94:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f9ce41ac670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41ac9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41acb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41acd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41ab020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41ab1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41ab340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41ab4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41ab660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f9ce41c9cb0" loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f9ce41c9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41c80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41c8230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41c83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41c8550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41c86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41c8870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41c8a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41c8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f9ce41bce40" loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f9ce41bce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41bb1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41bb370"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41bb500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41bb690"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41bb820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41bb9b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41bbb40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41bbcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f9ce41b0cb0" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f9ce41b0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41af0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41af230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41af3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41af550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41af6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41af870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41afa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41afb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f9ce41a5670" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f9ce41a5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41a59f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41a5b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41a5d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41a4020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41a41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41a4340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41a44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41a4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f9ce41df7f0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f9ce41df7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41dfb70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41dfd00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41dc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41dc1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41dc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41dc4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41dc660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41dc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f9ce41d1670" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f9ce41d1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41d19f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41d1b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41d1d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41d0020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41d01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41d0340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41d04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41d0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f9ce41c5670" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f9ce41c5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41c59f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41c5b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41c5d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41c4020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41c41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41c4340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41c44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41c4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f9ce41b8670" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f9ce41b8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41b89f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41b8b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41b8d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41b7020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41b71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41b7340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41b74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41b7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f9ce419f990" loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f9ce419f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce419fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce419e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce419e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce419e340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce419e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce419e660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce419e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce419e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH4" ref="0x7f9ce4195350" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH4" scoped="" ref="0x7f9ce4195350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41956d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4195860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41959f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4195b80"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4195d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4194020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41941b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4194340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ0" ref="0x7f9ce4190020" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ0" scoped="" ref="0x7f9ce4190020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41903a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4190530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41906c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4190850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41909e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4190b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4190d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce418f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f9ce41b6cb0" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f9ce41b6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41b50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41b5230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41b53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41b5550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41b56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41b5870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41b5a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41b5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ3" ref="0x7f9ce418d990" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ3" scoped="" ref="0x7f9ce418d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce418dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce418c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce418c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce418c340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce418c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce418c660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce418c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce418c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK2" ref="0x7f9ce4183020" loc="130:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK2" scoped="" ref="0x7f9ce4183020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41833a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4183530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41836c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4183850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41839e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4183b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4183d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4182020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK5" ref="0x7f9ce4180990" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK5" scoped="" ref="0x7f9ce4180990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4180d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce417f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce417f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce417f340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce417f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce417f660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce417f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce417f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL4" ref="0x7f9ce4177020" loc="141:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL4" scoped="" ref="0x7f9ce4177020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41773a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4177530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41776c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4177850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41779e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4177b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4177d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4176020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL7" ref="0x7f9ce4174990" loc="144:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL7" scoped="" ref="0x7f9ce4174990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4174d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4173020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41731b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4173340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4173660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41737f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4173980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f9ce41c0020" loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f9ce41c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41c03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41c0530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41c06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41c0850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41c09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41c0b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41c0d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f9ce41d9060" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f9ce41d9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41d93e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41d9570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41d9700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41d9890"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41d9a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41d9bb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41d9d40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f9ce41cd020" loc="63:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f9ce41cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41cd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41cd530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41cd6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41cd850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41cd9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41cdb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41cdd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ce416dda0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ce416dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce416c180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce416c310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce416c4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce416c630"/>
        <function-ref name="get" scoped="" ref="0x7f9ce416c7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce416c950"/>
        <function-ref name="set" scoped="" ref="0x7f9ce416cae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce416cc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ce4169440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ce4169440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41697c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4169950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4169ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4169c70"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4169e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4168020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41681b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4168340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ce416fa80" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ce416fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce416fe00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce416e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce416e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce416e340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce416e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce416e660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce416e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce416e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ce416b020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ce416b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce416b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce416b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce416b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce416b850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce416b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce416bb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce416bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce416a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ce41685d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ce41685d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4168950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4168ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4168c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4168e00"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4167020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41671b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4167340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41674d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ce416ec10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ce416ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce416d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce416d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce416d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce416d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce416d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce416d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce416d980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce416db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ce416a2b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ce416a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce416a630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce416a7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce416a950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce416aae0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce416ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce416ae00"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4169020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ce4167760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ce4167760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4167ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4167c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4167e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4165020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41651b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4165340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41654d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4165660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3a976d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3a976d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3a97a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3a97be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3a97d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3a96020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3a961b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3a96340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3a964d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3a96660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3a949b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3a949b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3a94d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3a92020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3a921b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3a92340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3a924d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3a92660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3a927f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3a92980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3a8de20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3a8de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3a8c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3a8c350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3a8c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3a8c670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3a8c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3a8c990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3a8cb20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3a8ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3a890a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3a890a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3a89420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3a895b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3a89740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3a898d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3a89a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3a89bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3a89d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3a88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3a863f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3a863f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3a86770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3a86900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3a86a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3a86c20"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3a86db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3a85020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3a851b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3a85340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3a836d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3a836d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3a83a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3a83be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3a83d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3a82020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3a821b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3a82340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3a824d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3a82660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3a809b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3a809b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3a80d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3a7f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3a7f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3a7f340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3a7f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3a7f660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3a7f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3a7f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3a7de20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3a7de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3a7c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3a7c350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3a7c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3a7c670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3a7c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3a7c990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3a7cb20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3a7ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ce415d020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ce415d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce415d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce415d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce415d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce415d850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce415d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce415db70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce415dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce415c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ce41595d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ce41595d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4159950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4159ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4159c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4159e00"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4158020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41581b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4158340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41584d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ce4160d30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ce4160d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce415f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce415f270"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce415f400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce415f590"/>
        <function-ref name="get" scoped="" ref="0x7f9ce415f720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce415f8b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce415fa40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce415fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ce415c2b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ce415c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce415c630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce415c7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce415c950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce415cae0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce415cc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce415ce00"/>
        <function-ref name="set" scoped="" ref="0x7f9ce415b020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce415b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ce4158760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ce4158760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4158ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4158c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4158e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4157020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41571b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4157340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41574d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4157660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ce415fe60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ce415fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce415e210"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce415e3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce415e530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce415e6c0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce415e850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce415e9e0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce415eb70"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce415ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ce415b440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ce415b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce415b7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce415b950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce415bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce415bc70"/>
        <function-ref name="get" scoped="" ref="0x7f9ce415be00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4159020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41591b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4159340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ce41578f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ce41578f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4157c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4157e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4156020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41561b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4156340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41564d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4156660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41567f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3a29a60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3a29a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3a29de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3a28020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3a281b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3a28340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3a284d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3a28660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3a287f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3a28980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3a26e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3a26e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3a241c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3a24350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3a244e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3a24670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3a24800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3a24990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3a24b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3a24cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3a210a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3a210a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3a21420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3a215b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3a21740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3a218d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3a21a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3a21bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3a21d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3a20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3a1e3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3a1e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3a1e770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3a1e900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3a1ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3a1ec20"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3a1edb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3a1d020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3a1d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3a1d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3a1b6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3a1b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3a1ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3a1bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3a1bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3a1a020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3a1a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3a1a340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3a1a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3a1a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3a189b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3a189b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3a18d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3a17020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3a171b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3a17340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3a174d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3a17660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3a177f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3a17980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3a15e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3a15e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3a141c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3a14350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3a144e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3a14670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3a14800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3a14990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3a14b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3a14cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3a110a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3a110a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3a11420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3a115b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3a11740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3a118d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3a11a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3a11bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3a11d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3a10020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ce414d440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ce414d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce414d7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce414d950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce414dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce414dc70"/>
        <function-ref name="get" scoped="" ref="0x7f9ce414de00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce414c020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce414c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce414c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ce414a8f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ce414a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce414ac70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce414ae00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4149020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41491b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4149340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41494d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4149660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ce4150020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ce4150020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41503a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4150530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41506c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4150850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41509e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4150b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4150d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce414f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ce414c5d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ce414c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce414c950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce414cae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce414cc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce414ce00"/>
        <function-ref name="get" scoped="" ref="0x7f9ce414b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce414b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce414b340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce414b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ce4149a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ce4149a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4149e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4148020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41481b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4148340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41484d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4148660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41487f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4148980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ce414f2b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ce414f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce414f630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce414f7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce414f950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce414fae0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce414fc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce414fe00"/>
        <function-ref name="set" scoped="" ref="0x7f9ce414d020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce414d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ce414b760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ce414b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce414bae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce414bc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce414be00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce414a020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce414a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce414a340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce414a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce414a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ce4148c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ce4148c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4147020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41471b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4147340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41474d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4147660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41477f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4147980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4147b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce39bec90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce39bec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce39bd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce39bd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce39bd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce39bd550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce39bd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce39bd870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce39bda00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce39bdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce39bbe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce39bbe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce39ba1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce39ba350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce39ba4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce39ba670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce39ba800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce39ba990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce39bab20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce39bacb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce39b70a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce39b70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce39b7420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce39b75b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce39b7740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce39b78d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce39b7a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce39b7bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce39b7d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce39b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce39b33f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce39b33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce39b3770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce39b3900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce39b3a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce39b3c20"/>
        <function-ref name="get" scoped="" ref="0x7f9ce39b3db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce39b2020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce39b21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce39b2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce39b06d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce39b06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce39b0a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce39b0be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce39b0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce39af020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce39af1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce39af340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce39af4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce39af660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce39ad9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce39ad9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce39add30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce39ac020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce39ac1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce39ac340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce39ac4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce39ac660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce39ac7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce39ac980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce39aae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce39aae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce39a91c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce39a9350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce39a94e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce39a9670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce39a9800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce39a9990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce39a9b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce39a9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce39a60a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce39a60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce39a6420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce39a65b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce39a6740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce39a68d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce39a6a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce39a6bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce39a6d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce39a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ce413e760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ce413e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce413eae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce413ec70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce413ee00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce413d020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce413d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce413d340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce413d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce413d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ce413bc10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ce413bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce413a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce413a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce413a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce413a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce413a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce413a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce413a980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce413ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ce41403f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ce41403f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4140770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4140900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4140a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4140c20"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4140db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce413f020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce413f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce413f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ce413d8f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ce413d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce413dc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce413de00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce413c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce413c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce413c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce413c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce413c660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce413c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ce413ada0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ce413ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4139180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4139310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41394a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4139630"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41397c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4139950"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4139ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4139c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ce413f5d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ce413f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce413f950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce413fae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce413fc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce413fe00"/>
        <function-ref name="get" scoped="" ref="0x7f9ce413e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce413e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce413e340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce413e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ce413ca80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ce413ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce413ce00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce413b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce413b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce413b340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce413b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce413b660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce413b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce413b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ce4138020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ce4138020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41383a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4138530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41386c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4138850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41389e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4138b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4138d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4137020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3953c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3953c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce39520a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3952230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce39523c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3952550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce39526e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3952870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3952a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3952b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3950e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3950e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce394f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce394f350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce394f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce394f670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce394f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce394f990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce394fb20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce394fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce394c0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce394c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce394c420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce394c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce394c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce394c8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce394ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce394cbf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce394cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce394a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce39483f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce39483f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3948770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3948900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3948a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3948c20"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3948db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3947020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce39471b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3947340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce39456d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce39456d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3945a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3945be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3945d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3944020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce39441b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3944340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce39444d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3944660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce39429b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce39429b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3942d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3941020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce39411b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3941340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce39414d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3941660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce39417f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3941980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce393fe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce393fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce393e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce393e350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce393e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce393e670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce393e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce393e990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce393eb20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce393ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce393b0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce393b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce393b420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce393b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce393b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce393b8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce393ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce393bbf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce393bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce393a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ce412fa80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ce412fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce412fe00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce412e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce412e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce412e340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce412e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce412e660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce412e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce412e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ce412b020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ce412b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce412b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce412b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce412b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce412b850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce412b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce412bb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce412bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce412a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ce41317a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ce41317a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4131b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4131cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4131e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4130020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41301b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4130340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41304d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4130660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ce412ec10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ce412ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce412d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce412d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce412d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce412d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce412d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce412d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce412d980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce412db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ce412a2b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ce412a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce412a630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce412a7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce412a950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce412aae0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce412ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce412ae00"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4128020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41281b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ce41308f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ce41308f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4130c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4130e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce412f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce412f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce412f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce412f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce412f660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce412f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ce412dda0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ce412dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce412c180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce412c310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce412c4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce412c630"/>
        <function-ref name="get" scoped="" ref="0x7f9ce412c7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce412c950"/>
        <function-ref name="set" scoped="" ref="0x7f9ce412cae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce412cc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ce4128440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ce4128440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41287c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4128950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4128ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4128c70"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4128e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4127020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41271b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4127340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce38e8c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce38e8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce38e70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce38e7230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce38e73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce38e7550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce38e76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce38e7870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce38e7a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce38e7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce38e5e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce38e5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce38e41c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce38e4350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce38e44e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce38e4670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce38e4800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce38e4990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce38e4b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce38e4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce38e10a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce38e10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce38e1420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce38e15b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce38e1740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce38e18d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce38e1a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce38e1bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce38e1d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce38e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce38de3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce38de3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce38de770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce38de900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce38dea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce38dec20"/>
        <function-ref name="get" scoped="" ref="0x7f9ce38dedb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce38dc020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce38dc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce38dc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce38da6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce38da6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce38daa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce38dabe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce38dad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce38d9020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce38d91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce38d9340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce38d94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce38d9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce38d79b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce38d79b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce38d7d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce38d6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce38d61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce38d6340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce38d64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce38d6660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce38d67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce38d6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce38d4e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce38d4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce38d31c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce38d3350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce38d34e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce38d3670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce38d3800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce38d3990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce38d3b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce38d3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce38d00a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce38d00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce38d0420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce38d05b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce38d0740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce38d08d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce38d0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce38d0bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce38d0d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce38cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9ce4120da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9ce4120da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce411f180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce411f310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce411f4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce411f630"/>
        <function-ref name="get" scoped="" ref="0x7f9ce411f7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce411f950"/>
        <function-ref name="set" scoped="" ref="0x7f9ce411fae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce411fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9ce411b440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9ce411b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce411b7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce411b950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce411bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce411bc70"/>
        <function-ref name="get" scoped="" ref="0x7f9ce411be00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce411a020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce411a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce411a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9ce4122a20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9ce4122a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4122da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4121020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce41211b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4121340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41214d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4121660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41217f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4121980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9ce411e020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9ce411e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce411e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce411e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce411e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce411e850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce411e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce411eb70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce411ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce411c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9ce411a5d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9ce411a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce411a950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce411aae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce411ac70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce411ae00"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4119020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41191b0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4119340"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce41194d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9ce4121c10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9ce4121c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4120020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce41201b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4120340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce41204d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4120660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce41207f0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4120980"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4120b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9ce411c2b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9ce411c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce411c630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce411c7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce411c950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce411cae0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce411cc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce411ce00"/>
        <function-ref name="set" scoped="" ref="0x7f9ce411b020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce411b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9ce4119760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9ce4119760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4119ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4119c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4119e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4118020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41181b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4118340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41184d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4118660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce387dc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce387dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce387c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce387c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce387c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce387c550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce387c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce387c870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce387ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce387cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce387ae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce387ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce38791c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3879350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce38794e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3879670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3879800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3879990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3879b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3879cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce38760a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce38760a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3876420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce38765b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3876740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce38768d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3876a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3876bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3876d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3875020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce38733f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce38733f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3873770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3873900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3873a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3873c20"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3873db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3871020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce38711b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3871340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce386f6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce386f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce386fa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce386fbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce386fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce386e020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce386e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce386e340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce386e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce386e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce386c9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce386c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce386cd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce386b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce386b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce386b340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce386b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce386b660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce386b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce386b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce3869e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce3869e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce38681c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce3868350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce38684e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce3868670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3868800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3868990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3868b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3868cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce38650a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce38650a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce3865420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce38655b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce3865740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce38658d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce3865a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce3865bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce3865d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce3864020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce4112160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce4112160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41124e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4112670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4112800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4112990"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4112b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4112cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4112e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4110020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce410dc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce410dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce410c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce410c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce410c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce410c550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce410c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce410c870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce410ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce410cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce41076d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce41076d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4107a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4107be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4107d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4106020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce41061b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4106340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce41064d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4106660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce4102160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce4102160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce41024e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4102670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4102800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4102990"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4102b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4102cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4102e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4101020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40fdc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40fdc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40fc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce40fc230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce40fc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce40fc550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40fc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce40fc870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40fca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce40fcb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40f76d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40f76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40f7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce40f7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce40f7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce40f6020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40f61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce40f6340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40f64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce40f6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40f2270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40f2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40f25f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce40f2780"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce40f2910"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce40f2aa0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40f2c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce40f2dc0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40f1020"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce40f11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40edd00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40edd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40ec0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce40ec230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce40ec3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce40ec550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40ec6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce40ec870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40eca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce40ecb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40e76d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40e76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40e7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce40e7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce40e7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce40e6020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40e61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce40e6340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40e64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce40e6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40e2160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40e2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40e24e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce40e2670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce40e2800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce40e2990"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40e2b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce40e2cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40e2e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce40e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40ddc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40ddc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40dc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce40dc230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce40dc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce40dc550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40dc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce40dc870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40dca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce40dcb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40d76d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40d76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40d7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce40d7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce40d7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce40d6020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40d61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce40d6340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40d64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce40d6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40d2160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40d2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40d24e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce40d2670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce40d2800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce40d2990"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40d2b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce40d2cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40d2e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce40d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40cdc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40cdc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40cc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce40cc230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce40cc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce40cc550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40cc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce40cc870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40cca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce40ccb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40b1020" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40b13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce40b1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce40b16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce40b1850"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40b19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce40b1b70"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40b1d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce40b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40ac6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40ac6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40aca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce40acbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce40acd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce40ab020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40ab1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce40ab340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40ab4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce40ab660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40a7c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40a7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40a60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce40a6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce40a63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce40a6550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40a66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce40a6870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40a6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce40a6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40a2180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40a2180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40a2500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce40a2690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce40a2820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce40a29b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40a2b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce40a2cd0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40a2e60"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce40a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce409d830" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce409d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce409dbb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce409dd40"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce409c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce409c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce409c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce409c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce409c660"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce409c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce4099e20" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce4099e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40971c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4097350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce40974e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4097670"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4097800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4097990"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4097b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4097cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce4093460" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce4093460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40937e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4093970"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4093b00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4093c90"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4093e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4092020"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40921b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4092340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce408e9b0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce408e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce408ed30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce408d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce408d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce408d340"/>
        <function-ref name="get" scoped="" ref="0x7f9ce408d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce408d660"/>
        <function-ref name="set" scoped="" ref="0x7f9ce408d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce408d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce4089160" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce4089160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40894e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4089670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4089800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4089990"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4089b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4089cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4089e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4087020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40846d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40846d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4084a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4084be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4084d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4083020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40831b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4083340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40834d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4083660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce407fc90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce407fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce407e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce407e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce407e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce407e550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce407e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce407e870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce407ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce407eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce407a180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce407a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce407a500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce407a690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce407a820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce407a9b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce407ab40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce407acd0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce407ae60"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4079020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40756d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40756d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4075a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4075be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4075d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4074020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40741b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4074340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40744d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4074660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce4070c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce4070c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce406f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce406f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce406f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce406f550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce406f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce406f870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce406fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce406fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce406b180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce406b180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce406b500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce406b690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce406b820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce406b9b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce406bb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce406bcd0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce406be60"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce406a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40666d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40666d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4066a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4066be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4066d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4065020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40651b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4065340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40654d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4065660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce4061c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce4061c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40600a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4060230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce40603c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4060550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40606e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4060870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4060a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4060b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce405c180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce405c180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce405c500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce405c690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce405c820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce405c9b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce405cb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce405ccd0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce405ce60"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce405b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40576d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40576d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4057a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4057be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4057d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4056020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40561b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4056340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40564d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4056660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce4052c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce4052c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40510a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4051230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce40513c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4051550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40516e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4051870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4051a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4051b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce404d180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce404d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce404d500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce404d690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce404d820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce404d9b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce404db40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce404dcd0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce404de60"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce404c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40486d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40486d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4048a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4048be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4048d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4047020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40471b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4047340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40474d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4047660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce4043c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce4043c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40420a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4042230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce40423c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4042550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40426e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4042870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4042a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4042b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce403e180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce403e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce403e500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce403e690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce403e820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce403e9b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce403eb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce403ecd0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce403ee60"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce403d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40396d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40396d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4039a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4039be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4039d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4038020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40381b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4038340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40384d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4038660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce4034c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce4034c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce40330a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4033230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce40333c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4033550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40336e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4033870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4033a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4033b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce402f180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce402f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce402f500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce402f690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce402f820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce402f9b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce402fb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce402fcd0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce402fe60"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce402e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce402a6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce402a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce402aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce402abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce402ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce4029020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce40291b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4029340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce40294d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4029660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40250a0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40250a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4025420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce40255b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4025740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce40258d0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4025a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4025bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4025d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4023020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce40206d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce40206d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4020a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4020be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4020d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce401f020"/>
        <function-ref name="get" scoped="" ref="0x7f9ce401f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce401f340"/>
        <function-ref name="set" scoped="" ref="0x7f9ce401f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce401f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce401bc90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce401bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce401a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce401a230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce401a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce401a550"/>
        <function-ref name="get" scoped="" ref="0x7f9ce401a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce401a870"/>
        <function-ref name="set" scoped="" ref="0x7f9ce401aa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce401ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9ce4016180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9ce4016180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9ce4016500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9ce4016690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9ce4016820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9ce40169b0"/>
        <function-ref name="get" scoped="" ref="0x7f9ce4016b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9ce4016cd0"/>
        <function-ref name="set" scoped="" ref="0x7f9ce4016e60"/>
        <function-ref name="clr" scoped="" ref="0x7f9ce4014020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../tinyos_ws18/tos/interfaces/Init.nc">
      <documentation loc="34:../tinyos_ws18/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f9ce4a2d740" loc="62:../tinyos_ws18/tos/interfaces/Init.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../tinyos_ws18/tos/interfaces/Boot.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f9ce4a2e350" loc="60:../tinyos_ws18/tos/interfaces/Boot.nc">
        <documentation loc="51:../tinyos_ws18/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f9ce4a25b70" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f9ce4a258f0" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f9ce4a28070" loc="31:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f9ce4a28af0" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f9ce4a28870" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f9ce4a26630" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f9ce4a263b0" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f9ce4a25020" loc="53:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../tinyos_ws18/tos/interfaces/Scheduler.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f9ce4bbb6c0" loc="57:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="54:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f9ce4bba6a0" loc="72:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f9ce4bbbe30" loc="65:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="59:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f9ce4bb2610" loc="67:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f9ce4bb2e60" loc="75:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../tinyos_ws18/tos/interfaces/McuSleep.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f9ce4ab6270" loc="76:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f9ce4a9cb90" loc="62:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f9ce4b37470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f9ce4a9a420" loc="52:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FMClick" loc="9:FMClick.nc">
      <function command="" provided="0" name="seek" ref="0x7f9ce49dd580" loc="12:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f9ce49dd300" loc="12:FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x7f9ce49da940" loc="20:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="res" ref="0x7f9ce49da6c0" loc="20:FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setVolume" ref="0x7f9ce49dc610" loc="16:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7f9ce49dc390" loc="16:FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rdsReceived" ref="0x7f9ce49d8030" loc="24:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><enum-ref ref="0x7f9ce49f07c0"/>
              <typename><typedef-ref name="RDSType" ref="0x7f9ce49de1c0"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f9ce49d9a50" loc="24:FMClick.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref ref="0x7f9ce49f07c0"/>
              <typename><typedef-ref name="RDSType" ref="0x7f9ce49de1c0"/></typename>
            </type-tag>
          </variable>
          <variable name="buf" ref="0x7f9ce49d9d70" loc="24:FMClick.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveRDS" ref="0x7f9ce49da020" loc="18:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f9ce49dcd10" loc="18:FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="tuneComplete" ref="0x7f9ce49d9350" loc="22:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f9ce49d90d0" loc="22:FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f9ce49ddcc0" loc="14:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tune" ref="0x7f9ce49debf0" loc="10:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f9ce49de970" loc="10:FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Glcd" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
      <function command="" provided="0" name="drawTextPgm" ref="0x7f9ce49e1620" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="109:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawTextPgm&#10;&#10; </short>
          <long>&#10; drawTextPgm&#10;&#10; @param text stored in program memory&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7f9ce49e3b50" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7f9ce49e1020" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9ce49e1380" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawRect" ref="0x7f9ce49e6140" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw rectangle&#10;&#10; </short>
          <long>&#10; Draw rectangle&#10;&#10; @param upper left x&#10; @param upper left y&#10; @param lower right x&#10; @param lower right y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7f9ce49e83c0" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7f9ce49e8730" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7f9ce49e8ac0" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7f9ce49e8e30" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawLine" ref="0x7f9ce49e9bc0" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="45:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw line&#10;&#10; </short>
          <long>&#10; Draw line&#10;&#10; @param first point x&#10; @param first point y&#10; @param second point x&#10; @param second point y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7f9ce49eae80" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7f9ce49e9210" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7f9ce49e95a0" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7f9ce49e9910" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x7f9ce49edab0" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="12:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Set pixel&#10;&#10; </short>
          <long>&#10; Set pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9ce49ed4c0" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9ce49ed820" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="invertPixel" ref="0x7f9ce49ea6c0" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="34:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Invert pixel&#10;&#10; </short>
          <long>&#10; Invert pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9ce49ea0d0" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9ce49ea430" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPixel" ref="0x7f9ce49eb8a0" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="23:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Clear pixel&#10;&#10; </short>
          <long>&#10; Clear pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9ce49eb2b0" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9ce49eb610" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawEllipse" ref="0x7f9ce49e5730" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw ellipse&#10;&#10; </short>
          <long>&#10; Draw ellipse&#10;&#10; @param center x&#10; @param center y&#10; @param radius horizontal&#10; @param radius vertical&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9ce49e6930" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9ce49e6c90" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_h" ref="0x7f9ce49e50d0" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_v" ref="0x7f9ce49e5480" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawText" ref="0x7f9ce49e33b0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="97:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawText&#10;&#10; </short>
          <long>&#10; drawText&#10;&#10; @param text&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7f9ce49e4a10" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7f9ce49e4d70" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9ce49e3110" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="fill" ref="0x7f9ce49e42a0" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="87:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Fill Display with pattern&#10;&#10; </short>
          <long>&#10; Fill Display with pattern&#10;&#10; @param pattern&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x7f9ce49e4020" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f9ce498ae80" loc="44:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f9ce49895d0" loc="45:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f9ce498a070" loc="42:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f9ce4987480" loc="47:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9ce498a770" loc="43:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f9ce4989cf0" loc="46:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9ce498b270" loc="40:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f9ce498b940" loc="41:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f9ce49b59c0" loc="56:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9ce49b24a0" loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f9ce49b5270" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f9ce49b4c30" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f9ce49b49b0" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f9ce49b8ae0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f9ce49b41f0" loc="63:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7f9ce49aae30" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7f9ce49aae30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f9ce49a8470" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f9ce49abe10"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f9ce49a9770" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f9ce49abe10"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f9ce49a9ac0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f9ce49a9e10" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9ce49a81c0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f9ce49a2d30" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9ce49a2060" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f9ce49a23b0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f9ce49a2700" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9ce49a2a80" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f9ce49a5310" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f9ce49abe10"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f9ce49a7600" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f9ce49abe10"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f9ce49a7950" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f9ce49a7ca0" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9ce49a5060" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f9ce49a30e0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9ce49a43a0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f9ce49a46f0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9ce54d8610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f9ce49a4a40" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9ce49a4dc0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../tinyos_ws18/tos/interfaces/Resource.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f9ce49ae020" loc="120:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f9ce49af020" loc="97:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="90:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f9ce49b0540" loc="88:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f9ce49af810" loc="102:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="99:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f9ce49aea80" loc="128:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="122:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9ce499a070" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9ce499a070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f9ce4993020" loc="136:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="132:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9ce4998730" loc="83:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f9ce49955f0" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f9ce4995020" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f9ce4995360" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f9ce4996810" loc="98:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="94:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f9ce4991070" loc="151:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="146:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f9ce49937b0" loc="144:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="138:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f9ce4996020" loc="92:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="86:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f9ce499abe0" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9ce499a960" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f9ce49945f0" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="116:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f9ce4994020" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f9ce4994360" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f9ce4999700" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9ce4999480" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9ce4998020" loc="78:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplKS0108" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <short>&#10; Hpl interface for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl interface for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="dataWrite" ref="0x7f9ce48b1bc0" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="48:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write data&#10;&#10; </short>
          <long>&#10; Write data&#10;&#10; @param The controller to write to&#10; @param data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f9ce48b15b0" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7f9ce48b1930" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f9ce48b7940" loc="15:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="10:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Initialize GLCD&#10; &#10; </short>
          <long>&#10; Initialize GLCD&#10; &#10; @return SUCCESS&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataRead" ref="0x7f9ce48b2d60" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="38:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read data&#10;&#10; </short>
          <long>&#10; Read data&#10;&#10; @param The controller to be read from&#10; &#10; @return data&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f9ce48b2ae0" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlWrite" ref="0x7f9ce48b22b0" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write to controller&#10;&#10; </short>
          <long>&#10; Write to controller&#10;&#10; @param The controller to write to&#10; @param controller data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f9ce48b4c50" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7f9ce48b2020" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlRead" ref="0x7f9ce48b4400" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="17:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read controller state&#10;&#10; </short>
          <long>&#10; Read controller state&#10;&#10; @param The controller to be checked&#10; &#10; @return state of the controller&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f9ce48b4180" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9ce482d430" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9ce482d430"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f9ce482d670" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ce482d670"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f9ce482c2a0" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ce482d670"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9ce482c020" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ce482d670"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIOPort" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f9ce4833990" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9ce4833710" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f9ce4832c30" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9ce48329b0" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f9ce48315b0" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9ce4831330" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f9ce4833020" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9ce4836c70" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f9ce482f750" loc="13:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f9ce482f020" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9ce4831c80" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9ce48322e0" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9ce4832060" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f9ce460b4e0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f9ce45918e0" loc="53:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f9ce4590270" loc="61:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f9ce4587a90" loc="65:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f9ce4587270" loc="59:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f9ce458e8b0" loc="56:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f9ce458d9c0" loc="73:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f9ce458e020" loc="46:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f9ce458d190" loc="65:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f9ce458b350" loc="81:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f9ce45890e0" loc="90:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f9ce4589940" loc="98:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f9ce457eb50" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f9ce4586b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f9ce457e8d0" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f9ce4586b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f9ce4582a80" loc="53:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f9ce457f620" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f9ce4586b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f9ce457f3a0" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f9ce4586b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f9ce457e020" loc="70:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f9ce4586b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../tinyos_ws18/tos/interfaces/Leds.nc">
      <documentation loc="33:../tinyos_ws18/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f9ce455b020" loc="61:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f9ce455b7d0" loc="67:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="63:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f9ce455a020" loc="72:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f9ce4559020" loc="83:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="79:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f9ce45577d0" loc="100:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="96:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9ce4556020" loc="117:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="103:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f9ce455a7b0" loc="77:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="74:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9ce4556b90" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="120:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f9ce4556910" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f9ce455c850" loc="56:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f9ce4559800" loc="89:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="86:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f9ce4557020" loc="94:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="91:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f9ce4505020" loc="62:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f9ce450adb0" loc="95:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9ce45076a0" loc="105:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9ce4bb4020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7f9ce44eaa10" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7f9ce44a7d00" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7f9ce44a6490" loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7f9ce44a5580" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f9ce44a5300" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7f9ce44a75e0" loc="52:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7f9ce44a2e40" loc="65:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f9ce449dbe0" loc="84:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f9ce44a1830" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f9ce44a15b0" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f9ce449b450" loc="89:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f9ce44a97a0" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7f9ce44a9520" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7f9ce44a2710" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f9ce44a2490" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f9ce44a0120" loc="68:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7f9ce44a5cc0" loc="61:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f9ce449f120" loc="75:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7f9ce44a6be0" loc="56:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f9ce449d4a0" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f9ce449d220" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f9ce449cd00" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9ce449ca80" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7f9ce44a0920" loc="72:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7f9ce44a9e70" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7f9ce44a4650" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f9ce44a43d0" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7f9ce449fb40" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f9ce449f8c0" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f9ce449c390" loc="85:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7f9ce44a4d80" loc="63:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9ce438b6d0" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9ce438b6d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f9ce4388020" loc="61:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9ce54d7170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9ce4378410" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9ce4378410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f9ce4378650" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ce4378650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f9ce4376020" loc="64:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ce4378650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f9ce4375120" loc="76:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f9ce43768a0" loc="71:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f9ce4375880" loc="82:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="78:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9ce4385ba0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9ce4385ba0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f9ce4385de0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ce4385de0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f9ce437e9c0" loc="109:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="105:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ce4385de0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9ce43819b0" loc="78:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f9ce437e020" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="90:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ce4385de0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ce4385de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f9ce437fa10" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ce4385de0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f9ce437fd50" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ce4385de0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f9ce437f1f0" loc="88:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="81:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f9ce437d1f0" loc="116:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="111:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ce4385de0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9ce4382960" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ce4385de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9ce43826e0" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ce4385de0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9ce43811f0" loc="73:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="68:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f9ce4347e50" loc="89:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f9ce4348c40" loc="85:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f9ce434b8c0" loc="79:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f9ce4347680" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9ce4347400" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f9ce4348470" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f9ce43481f0" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f9ce4346890" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f9ce4346610" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f9ce434a0e0" loc="80:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f9ce434aa80" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f9ce434a800" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280TimerSync" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
      <documentation loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changedto Sync for Atm1280&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer2Synchronous" ref="0x7f9ce4337020" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Turn on timer 2 synchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBBusy" ref="0x7f9ce43350e0" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f9ce4336020" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f9ce43377a0" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f9ce43358f0" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f9ce4336850" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f9ce433cbe0" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f9ce4aeada0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f9ce4ae9230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f9ce4338660" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f9ce4aeada0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f9ce4ae9230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9ce43383e0" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f9ce4aeada0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f9ce4ae9230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f9ce434c3d0" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ce434c3d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f9ce433f020" loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9ce4341020" loc="58:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9ce434cd10" loc="48:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ce434c3d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f9ce4341790" loc="62:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f9ce433f7e0" loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9ce4342710" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ce434c3d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f9ce4342490" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9ce434c3d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9ce4340020" loc="65:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9ce4340770" loc="68:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f9ce435ca20" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9ce435ca20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f9ce43532d0" loc="98:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f9ce4355350" loc="87:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9ce4359390" loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9ce435ca20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f9ce4353cb0" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f9ce4353a30" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f9ce4352510" loc="110:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9ce54d9ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f9ce4357c90" loc="75:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f9ce4357500" loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f9ce4355b10" loc="93:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9ce4bbe500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9ce4359d40" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9ce435ca20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f9ce4359ac0" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9ce435ca20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9ce4356420" loc="78:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9ce4356b70" loc="81:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
