<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="19:Test/FMClickTestAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fedbd542020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fedbd57e720"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fedbd57e720"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fedbd57ce20"/></to>
    </wire>
    <wire loc="20:Test/FMClickTestAppC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7fedbd531980"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7fedbd44e5e0"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7fedbd44e5e0"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7fedbd41a170"/></to>
    </wire>
    <wire loc="21:Test/FMClickTestAppC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x7fedbd541e30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fedbd513290"/></to>
    </wire>
    <wire loc="26:FMClick/FMClickC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fedbd513290"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fedbd5113c0"/></to>
    </wire>
    <wire loc="22:Test/FMClickTestAppC.nc">
      <from><interface-ref name="Radio" scoped="" ref="0x7fedbd528370"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7fedbd5138b0"/></to>
    </wire>
    <wire loc="27:FMClick/FMClickC.nc">
      <from><interface-ref name="FMClick" scoped="" ref="0x7fedbd5138b0"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7fedbd5119e0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fedbd57dbf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fedbcef6e60"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fedbd57dbf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fedbc741810"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fedbd57dbf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fedbd419470"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fedbd54e4b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fedbd70aa20"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fedbd70aa20"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fedbd60b120"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fedbd54d020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fedbd580d00"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fedbd580d00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fedbd5720c0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fedbd54d720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fedbd57dbf0"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fedbd57a020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fedbd560020"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7fedbd571020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fedbd561860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fedbd5727a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fedbcf2eab0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fedbd5727a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fedbd56a020"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fedbd56a6f0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fedbd57ad50"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fedbd7007b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fedbd609020"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fedbd606590"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fedbd6242d0"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fedbd5eb080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fedbce424c0"/></to>
    </wire>
    <wire loc="36:Test/FMClickTestP.nc">
      <from><interface-ref name="tune2Station" scoped="" ref="0x7fedbd525380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fedbd7007b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:Test/FMClickTestP.nc">
      <from><interface-ref name="finishedTuning" scoped="" ref="0x7fedbd521380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fedbd7007b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:FMClick/FMClickC.nc">
      <from><interface-ref name="Int" scoped="" ref="0x7fedbd507600"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7fedbd1779e0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7fedbd1779e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fedbd12dc90"/></to>
    </wire>
    <wire loc="31:FMClick/FMClickC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7fedbd502d20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fedbd10f9f0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fedbd10f9f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fedbd1011d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:FMClick/FMClickC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7fedbd4f4a20"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fedbcf0c880"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fedbcf0c880"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fedbd1005e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:FMClick/FMClickC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fedbd4f1260"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fedbcd46140"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fedbcd46140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fedbcefb020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:FMClick/FMClickC.nc">
      <from><interface-ref name="RSTPin" scoped="" ref="0x7fedbd4dc360"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7fedbcd1eb20"/></to>
    </wire>
    <wire loc="250:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7fedbcd1eb20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fedbcc9f760"/></to>
    </wire>
    <wire loc="37:FMClick/FMClickC.nc">
      <from><interface-ref name="SDIOPin" scoped="" ref="0x7fedbd4e2680"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7fedbcd1f800"/></to>
    </wire>
    <wire loc="249:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7fedbcd1f800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fedbcca05d0"/></to>
    </wire>
    <wire loc="39:FMClick/FMClickC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7fedbd4e18e0"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7fedbd44e5e0"/></to>
    </wire>
    <wire loc="299:FMClick/FMClickP.nc">
      <from><interface-ref name="_tune" scoped="" ref="0x7fedbd4a39b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fedbd7007b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="200:FMClick/FMClickP.nc">
      <from><interface-ref name="_init" scoped="" ref="0x7fedbd4bd8b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fedbd7007b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Hpl" scoped="" ref="0x7fedbd412b20"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7fedbd449bf0"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="HplKS0108" scoped="" ref="0x7fedbd449bf0"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7fedbd39f240"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_0" scoped="" ref="0x7fedbd39e020"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x7fedbd33b350"/></to>
    </wire>
    <wire loc="175:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7fedbd33b350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fedbd298020"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_1" scoped="" ref="0x7fedbd39d380"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x7fedbd33a670"/></to>
    </wire>
    <wire loc="176:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7fedbd33a670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fedbd2972b0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RS" scoped="" ref="0x7fedbd39c690"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7fedbd339990"/></to>
    </wire>
    <wire loc="177:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7fedbd339990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fedbd296440"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RW" scoped="" ref="0x7fedbd39b9b0"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7fedbd338cb0"/></to>
    </wire>
    <wire loc="178:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7fedbd338cb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fedbd2955d0"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="EN" scoped="" ref="0x7fedbd39acd0"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7fedbd336020"/></to>
    </wire>
    <wire loc="179:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7fedbd336020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fedbd294760"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RST" scoped="" ref="0x7fedbd398020"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7fedbd335350"/></to>
    </wire>
    <wire loc="180:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7fedbd335350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fedbd2938f0"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="Data" scoped="" ref="0x7fedbd390a80"/></from>
      <to><interface-ref name="PortA" scoped="" ref="0x7fedbd1efc40"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortA" scoped="" ref="0x7fedbd1efc40"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd1d8c90"/></to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fedbd38d910"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fedbd1862e0"/></to>
    </wire>
    <wire loc="191:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7fedbd329020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbd23b6d0"/></to>
    </wire>
    <wire loc="165:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7fedbd346800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fedbd2aac10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fedbd2aac10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc999e20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fedbd2972b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc9273f0"/></to>
    </wire>
    <wire loc="185:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7fedbd330020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fedbd2885d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fedbd2885d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc8bc3f0"/></to>
    </wire>
    <wire loc="196:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7fedbd323350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbd221c90"/></to>
    </wire>
    <wire loc="143:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7fedbd35e990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fedbd2d2a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fedbd2d2a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcacc3f0"/></to>
    </wire>
    <wire loc="183:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7fedbd333990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fedbd28a2b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fedbd28a2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc8c3e20"/></to>
    </wire>
    <wire loc="146:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7fedbd35b020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fedbd2c93f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fedbd2c93f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbca74a60"/></to>
    </wire>
    <wire loc="157:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7fedbd34f020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fedbd2b8a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fedbd2b8a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbca000a0"/></to>
    </wire>
    <wire loc="168:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7fedbd342060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fedbd2a52b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fedbd2a52b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc98f6d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fedbd294760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc91ee20"/></to>
    </wire>
    <wire loc="138:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7fedbd364b20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fedbd2d72b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fedbd2d72b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcadc3f0"/></to>
    </wire>
    <wire loc="149:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7fedbd358990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fedbd2c68f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fedbd2c68f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbca6a3f0"/></to>
    </wire>
    <wire loc="160:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7fedbd34c990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fedbd2b3020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fedbd2b3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc9f79b0"/></to>
    </wire>
    <wire loc="171:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7fedbd33f990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fedbd2a2760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fedbd2a2760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc9850a0"/></to>
    </wire>
    <wire loc="188:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7fedbd32d990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fedbd285a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fedbd285a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc8b3e20"/></to>
    </wire>
    <wire loc="194:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7fedbd326cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbd22b6d0"/></to>
    </wire>
    <wire loc="174:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7fedbd33c020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fedbd29ae60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fedbd29ae60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc92ee20"/></to>
    </wire>
    <wire loc="141:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7fedbd360350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fedbd2d4760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fedbd2d4760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcad3e20"/></to>
    </wire>
    <wire loc="152:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7fedbd354350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fedbd2c3da0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fedbd2c3da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbca61e20"/></to>
    </wire>
    <wire loc="192:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7fedbd328670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbd235160"/></to>
    </wire>
    <wire loc="155:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7fedbd352990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fedbd2ba7a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fedbd2ba7a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbca07c90"/></to>
    </wire>
    <wire loc="166:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7fedbd345b20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fedbd2a8da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fedbd2a8da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc9950a0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fedbd296440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc9246d0"/></to>
    </wire>
    <wire loc="186:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7fedbd32f350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fedbd287760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fedbd287760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc8b96d0"/></to>
    </wire>
    <wire loc="144:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7fedbd35dcb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fedbd2d1c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fedbd2d1c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcac96d0"/></to>
    </wire>
    <wire loc="147:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7fedbd35a350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fedbd2c85d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fedbd2c85d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbca71e20"/></to>
    </wire>
    <wire loc="158:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7fedbd34e350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fedbd2b7c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fedbd2b7c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc9fd3f0"/></to>
    </wire>
    <wire loc="169:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7fedbd341350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fedbd2a4440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fedbd2a4440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc98c9b0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fedbd2938f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc91a0a0"/></to>
    </wire>
    <wire loc="139:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7fedbd363e40"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fedbd2d6440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fedbd2d6440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcad96d0"/></to>
    </wire>
    <wire loc="150:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7fedbd357cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fedbd2c5a80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fedbd2c5a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbca676d0"/></to>
    </wire>
    <wire loc="161:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7fedbd34bcb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fedbd2b22b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fedbd2b22b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc9f4e20"/></to>
    </wire>
    <wire loc="189:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7fedbd32bcb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fedbd284c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fedbd284c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc8af0a0"/></to>
    </wire>
    <wire loc="164:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7fedbd347350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fedbd2aba20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fedbd2aba20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc99cc90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fedbd298020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc92a0a0"/></to>
    </wire>
    <wire loc="184:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7fedbd332cb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fedbd289440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fedbd289440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc8bf0a0"/></to>
    </wire>
    <wire loc="195:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7fedbd324020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbd225160"/></to>
    </wire>
    <wire loc="142:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7fedbd35f670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fedbd2d38f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fedbd2d38f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcacf0a0"/></to>
    </wire>
    <wire loc="153:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7fedbd353670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fedbd2c1020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fedbd2c1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbca5d0a0"/></to>
    </wire>
    <wire loc="182:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7fedbd334670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fedbd28b020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fedbd28b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc8c7c90"/></to>
    </wire>
    <wire loc="156:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7fedbd351cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fedbd2b98f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fedbd2b98f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbca04e20"/></to>
    </wire>
    <wire loc="167:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7fedbd344e40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fedbd2a6020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fedbd2a6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc9923f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fedbd2955d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc9219b0"/></to>
    </wire>
    <wire loc="187:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7fedbd32e670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fedbd2868f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fedbd2868f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc8b69b0"/></to>
    </wire>
    <wire loc="137:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7fedbd367860"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fedbd2d8140"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fedbd2d8140"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcadf020"/></to>
    </wire>
    <wire loc="148:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7fedbd359670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fedbd2c7760"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fedbd2c7760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbca6d0a0"/></to>
    </wire>
    <wire loc="159:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7fedbd34d670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fedbd2b6da0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fedbd2b6da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc9fa6d0"/></to>
    </wire>
    <wire loc="170:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7fedbd340670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fedbd2a35d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fedbd2a35d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc989e20"/></to>
    </wire>
    <wire loc="193:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7fedbd327990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbd231c90"/></to>
    </wire>
    <wire loc="173:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7fedbd33ecb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fedbd29bd30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fedbd29bd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc932c90"/></to>
    </wire>
    <wire loc="162:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7fedbd348020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fedbd2b1440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fedbd2b1440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc9f00a0"/></to>
    </wire>
    <wire loc="140:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7fedbd361060"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fedbd2d55d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fedbd2d55d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcad69b0"/></to>
    </wire>
    <wire loc="151:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7fedbd355020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fedbd2c4c10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fedbd2c4c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbca649b0"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortL" scoped="" ref="0x7fedbd1dc870"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd192c90"/></to>
    </wire>
    <wire loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortD" scoped="" ref="0x7fedbd1e4e80"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd1b4cd0"/></to>
    </wire>
    <wire loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortG" scoped="" ref="0x7fedbd1e01d0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd1a5cd0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortJ" scoped="" ref="0x7fedbd1de550"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd19cc90"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortB" scoped="" ref="0x7fedbd1ecd20"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd1bd390"/></to>
    </wire>
    <wire loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortE" scoped="" ref="0x7fedbd1e2020"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd1ae390"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortH" scoped="" ref="0x7fedbd1df3c0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd1a0c90"/></to>
    </wire>
    <wire loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortK" scoped="" ref="0x7fedbd1dd6e0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd197c90"/></to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortC" scoped="" ref="0x7fedbd1ebde0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd1b9910"/></to>
    </wire>
    <wire loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortF" scoped="" ref="0x7fedbd1e1100"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd1aa910"/></to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7fedbd1749e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fedbd120c90"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7fedbd1799e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fedbd136da0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7fedbd1769e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fedbd128c90"/></to>
    </wire>
    <wire loc="78:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7fedbd1739e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fedbd11bc90"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7fedbd1789e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fedbd131c90"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7fedbd1759e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fedbd124c90"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7fedbd44c9b0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fedbd14d060"/></to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fedbd14de80"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7fedbd16c860"/></to>
    </wire>
    <wire loc="81:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fedbd134c20"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7fedbd16e020"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fedbd130b40"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7fedbd16e7a0"/></to>
    </wire>
    <wire loc="83:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fedbd12cb40"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7fedbd16d020"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fedbd127b40"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7fedbd16d7a0"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fedbd123b40"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7fedbd16a020"/></to>
    </wire>
    <wire loc="86:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fedbd11fb40"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7fedbd16a7a0"/></to>
    </wire>
    <wire loc="87:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fedbd11ab40"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7fedbd169020"/></to>
    </wire>
    <wire loc="60:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fedbd1011d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fedbd05a470"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fedbd1005e0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fedbd022370"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7fedbd01d210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fedbd073e60"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fedbd073e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fedbc73e020"/></to>
    </wire>
    <wire loc="64:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fedbd01c020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fedbcfa9aa0"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7fedbd019cd0"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7fedbcfa47f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fedbd06dc40"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fedbcfa91e0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fedbd06c9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fedbd071400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fedbd071400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fedbc73d560"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7fedbcfa4e40"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7fedbcf9bab0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7fedbcf9bab0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7fedbcf92440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7fedbcfa17a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fedbcf25980"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7fedbcfa0de0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fedbcf25980"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fedbd072bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fedbc73ed80"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fedbd070060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fedbc73b270"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fedbc73bb60"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fedbd070930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fedbc73a440"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fedbc741e20"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fedbc7387a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fedbd7007b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fedbcf9e480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fedbd7007b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7fedbcf8f020"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7fedbd347350"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7fedbcf8e360"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7fedbd346800"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fedbcf584a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fedbcf54dc0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fedbcf2eab0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fedbcf547c0"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fedbcf50550"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fedbcf311d0"/></to>
    </wire>
    <wire loc="57:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fedbcf311d0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7fedbd367860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fedbcf4f7f0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fedbcf30510"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fedbcf30510"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7fedbd364b20"/></to>
    </wire>
    <wire loc="56:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fedbcf4db10"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fedbcf2f830"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fedbcf2f830"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7fedbd363e40"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fedbcefb020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fedbcef3c30"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fedbcef3c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fedbcd67150"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fedbcef6e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fedbceeac80"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fedbcee9500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fedbcd58790"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fedbceeac80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fedbcde6ba0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fedbcd61640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fedbcdb6830"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fedbcdb1cd0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7fedbcedd960"/></to>
    </wire>
    <wire loc="35:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7fedbcedd960"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fedbcde54b0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fedbcd4ea60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7fedbceda020"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7fedbceda020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fedbcde18d0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fedbcde18d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fedbc6a3d50"/></to>
    </wire>
    <wire loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fedbcde6ba0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fedbc6a71b0"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fedbcde54b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fedbc6a79c0"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fedbc69f020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fedbce5e8f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fedbce5e8f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fedbce4da10"/></to>
    </wire>
    <wire loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fedbc69a190"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fedbce57c10"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fedbce57c10"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fedbce48db0"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fedbc6993e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fedbce55060"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fedbce55060"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fedbce451a0"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7fedbc696780"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7fedbce51570"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7fedbce51570"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7fedbce42bf0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fedbcdac020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fedbd7007b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fedbcd5ca00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fedbd7007b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7fedbcd02020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcc486d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fedbcca05d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc4b0e20"/></to>
    </wire>
    <wire loc="260:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7fedbcd13670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fedbcc8ec10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fedbcc8ec10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc43e3f0"/></to>
    </wire>
    <wire loc="269:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7fedbcd08020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fedbcc7e020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fedbcc7e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc3d33f0"/></to>
    </wire>
    <wire loc="280:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7fedbccfc350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcc2ec90"/></to>
    </wire>
    <wire loc="284:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH2" scoped="" ref="0x7fedbccf9cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcc08c90"/></to>
    </wire>
    <wire loc="289:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH7" scoped="" ref="0x7fedbccf2cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcbef9b0"/></to>
    </wire>
    <wire loc="297:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ6" scoped="" ref="0x7fedbcce9350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcbcb180"/></to>
    </wire>
    <wire loc="300:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK0" scoped="" ref="0x7fedbcce7990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcbc2c90"/></to>
    </wire>
    <wire loc="311:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL2" scoped="" ref="0x7fedbccdb990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcb8f180"/></to>
    </wire>
    <wire loc="227:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7fedbcd37990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fedbccc85d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fedbccc85d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc5e49b0"/></to>
    </wire>
    <wire loc="267:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7fedbcd0b990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fedbcc81c10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fedbcc81c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc3dae20"/></to>
    </wire>
    <wire loc="230:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7fedbcd34020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fedbccc0d30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fedbccc0d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc589a60"/></to>
    </wire>
    <wire loc="241:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7fedbcd27020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fedbccae440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fedbccae440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc5170a0"/></to>
    </wire>
    <wire loc="252:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7fedbcd1b060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fedbcc9da80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fedbcc9da80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc4a66d0"/></to>
    </wire>
    <wire loc="263:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7fedbcd0e020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fedbcc8a2b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fedbcc8a2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc435e20"/></to>
    </wire>
    <wire loc="222:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7fedbcd3db20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fedbcccfc10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fedbcccfc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc5f49b0"/></to>
    </wire>
    <wire loc="233:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7fedbcd31990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fedbccbc2b0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fedbccbc2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc57f3f0"/></to>
    </wire>
    <wire loc="244:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7fedbcd24990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fedbccab8f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fedbccab8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc50e9b0"/></to>
    </wire>
    <wire loc="255:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7fedbcd18990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fedbcc98020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fedbcc98020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc49c0a0"/></to>
    </wire>
    <wire loc="272:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7fedbcd05990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fedbcc7b5d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fedbcc7b5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc3cae20"/></to>
    </wire>
    <wire loc="278:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7fedbccffcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcc386d0"/></to>
    </wire>
    <wire loc="282:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH0" scoped="" ref="0x7fedbccfb670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcc11020"/></to>
    </wire>
    <wire loc="258:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7fedbcd15020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fedbcc918f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fedbcc918f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc445e20"/></to>
    </wire>
    <wire loc="287:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH5" scoped="" ref="0x7fedbccf4670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcbf9e20"/></to>
    </wire>
    <wire loc="292:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ1" scoped="" ref="0x7fedbccef350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcbe56d0"/></to>
    </wire>
    <wire loc="295:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ4" scoped="" ref="0x7fedbcceccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcbd66d0"/></to>
    </wire>
    <wire loc="303:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK3" scoped="" ref="0x7fedbcce3350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcbb3c90"/></to>
    </wire>
    <wire loc="306:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK6" scoped="" ref="0x7fedbcce0cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcba4c90"/></to>
    </wire>
    <wire loc="309:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL0" scoped="" ref="0x7fedbccdd350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcb9a6d0"/></to>
    </wire>
    <wire loc="314:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL5" scoped="" ref="0x7fedbccd6350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcb806d0"/></to>
    </wire>
    <wire loc="225:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7fedbcd39350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fedbccca2b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fedbccca2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc5ea3f0"/></to>
    </wire>
    <wire loc="236:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7fedbcd2c350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fedbccb9760"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fedbccb9760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc576e20"/></to>
    </wire>
    <wire loc="276:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7fedbcd01670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcc42160"/></to>
    </wire>
    <wire loc="239:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7fedbcd2a990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fedbccb0020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fedbccb0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc51ec90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fedbcc9f760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc4ac0a0"/></to>
    </wire>
    <wire loc="261:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7fedbcd11990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fedbcc8dda0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fedbcc8dda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc43b6d0"/></to>
    </wire>
    <wire loc="270:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7fedbcd07350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fedbcc7d2b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fedbcc7d2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc3d06d0"/></to>
    </wire>
    <wire loc="285:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH3" scoped="" ref="0x7fedbccf7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcc02180"/></to>
    </wire>
    <wire loc="298:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ7" scoped="" ref="0x7fedbcce8670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcbc76d0"/></to>
    </wire>
    <wire loc="301:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK1" scoped="" ref="0x7fedbcce6cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcbbc180"/></to>
    </wire>
    <wire loc="312:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL3" scoped="" ref="0x7fedbccdacb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcb8b6d0"/></to>
    </wire>
    <wire loc="293:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ2" scoped="" ref="0x7fedbccee670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcbe0c90"/></to>
    </wire>
    <wire loc="228:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7fedbcd36cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fedbccc7760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fedbccc7760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc5dee20"/></to>
    </wire>
    <wire loc="304:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK4" scoped="" ref="0x7fedbcce2670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcbad180"/></to>
    </wire>
    <wire loc="315:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL6" scoped="" ref="0x7fedbccd5670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcb7cc90"/></to>
    </wire>
    <wire loc="231:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7fedbcd33350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fedbccbfe60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fedbccbfe60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc586e20"/></to>
    </wire>
    <wire loc="242:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7fedbcd26350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fedbccad5d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fedbccad5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc5143f0"/></to>
    </wire>
    <wire loc="253:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7fedbcd1a350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fedbcc9cc10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fedbcc9cc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc4a39b0"/></to>
    </wire>
    <wire loc="264:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7fedbcd0d350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fedbcc89440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fedbcc89440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc4310a0"/></to>
    </wire>
    <wire loc="223:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7fedbcd3ce40"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fedbccceda0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fedbccceda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc5f1e20"/></to>
    </wire>
    <wire loc="234:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7fedbcd30cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fedbccbb440"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fedbccbb440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc57c6d0"/></to>
    </wire>
    <wire loc="245:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7fedbcd23cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fedbccaaa80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fedbccaaa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc50be20"/></to>
    </wire>
    <wire loc="273:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7fedbcd04cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fedbcc7a760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fedbcc7a760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc3c60a0"/></to>
    </wire>
    <wire loc="283:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH1" scoped="" ref="0x7fedbccfa990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcc0d6d0"/></to>
    </wire>
    <wire loc="248:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7fedbcd20350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fedbcca13f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fedbcca13f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc4b3c90"/></to>
    </wire>
    <wire loc="259:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7fedbcd14350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fedbcc90a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fedbcc90a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc4410a0"/></to>
    </wire>
    <wire loc="268:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7fedbcd0acb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fedbcc80da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fedbcc80da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc3d60a0"/></to>
    </wire>
    <wire loc="279:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7fedbccfd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcc32160"/></to>
    </wire>
    <wire loc="288:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH6" scoped="" ref="0x7fedbccf3990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcbf3460"/></to>
    </wire>
    <wire loc="296:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ5" scoped="" ref="0x7fedbccea020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcbd1c90"/></to>
    </wire>
    <wire loc="307:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK7" scoped="" ref="0x7fedbccde020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcb9e180"/></to>
    </wire>
    <wire loc="310:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL1" scoped="" ref="0x7fedbccdc670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcb95c90"/></to>
    </wire>
    <wire loc="226:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7fedbcd38670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fedbccc9440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fedbccc9440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc5e76d0"/></to>
    </wire>
    <wire loc="237:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7fedbcd2b670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fedbccb88f0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fedbccb88f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc5720a0"/></to>
    </wire>
    <wire loc="266:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7fedbcd0c670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fedbcc82a20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fedbcc82a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc3ddc90"/></to>
    </wire>
    <wire loc="240:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7fedbcd29cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fedbccaf2b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fedbccaf2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc51be20"/></to>
    </wire>
    <wire loc="251:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7fedbcd1de40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fedbcc9e8f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fedbcc9e8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc4a93f0"/></to>
    </wire>
    <wire loc="262:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7fedbcd10cb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fedbcc8b020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fedbcc8b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc4389b0"/></to>
    </wire>
    <wire loc="271:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7fedbcd06670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fedbcc7c440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fedbcc7c440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc3cd9b0"/></to>
    </wire>
    <wire loc="221:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7fedbcd407f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fedbccd0a80"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fedbccd0a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc5f76d0"/></to>
    </wire>
    <wire loc="232:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7fedbcd32670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fedbccbd020"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fedbccbd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc5820a0"/></to>
    </wire>
    <wire loc="243:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7fedbcd25670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fedbccac760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fedbccac760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc5116d0"/></to>
    </wire>
    <wire loc="254:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7fedbcd19670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fedbcc9ada0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fedbcc9ada0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc4a0e20"/></to>
    </wire>
    <wire loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7fedbcd00990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcc3ec90"/></to>
    </wire>
    <wire loc="286:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH4" scoped="" ref="0x7fedbccf6350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcbfe830"/></to>
    </wire>
    <wire loc="291:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ0" scoped="" ref="0x7fedbccf0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcbe9160"/></to>
    </wire>
    <wire loc="257:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7fedbcd17cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fedbcc927a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fedbcc927a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc448c90"/></to>
    </wire>
    <wire loc="294:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ3" scoped="" ref="0x7fedbcced990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcbda180"/></to>
    </wire>
    <wire loc="302:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK2" scoped="" ref="0x7fedbcce4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcbb86d0"/></to>
    </wire>
    <wire loc="305:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK5" scoped="" ref="0x7fedbcce1990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcba96d0"/></to>
    </wire>
    <wire loc="313:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL4" scoped="" ref="0x7fedbccd7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcb850a0"/></to>
    </wire>
    <wire loc="316:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL7" scoped="" ref="0x7fedbccd4990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbcb76180"/></to>
    </wire>
    <wire loc="246:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7fedbcd21020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fedbcca9c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fedbcca9c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc5070a0"/></to>
    </wire>
    <wire loc="224:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7fedbcd3a060"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fedbcccb020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fedbcccb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc5ed0a0"/></to>
    </wire>
    <wire loc="235:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7fedbcd2d020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fedbccba5d0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fedbccba5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fedbc5799b0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../tinyos_ws18/tos/system/MainC.nc">
      <documentation loc="45:../tinyos_ws18/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <documentation loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../tinyos_ws18/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../tinyos_ws18/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../tinyos_ws18/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc" safe="">
      <documentation loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickTestP" loc="13:Test/FMClickTestP.nc">
      <documentation loc="1:Test/FMClickTestP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file RadioScannerAppC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; VolumeAdc test module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC" loc="11:FMClick/FMClickC.nc">
      <documentation loc="1:FMClick/FMClickC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; Configuration of the FMClick module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="FMClickP" loc="14:FMClick/FMClickP.nc">
      <documentation loc="1:FMClick/FMClickP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; FMClick module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="GlcdC" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
        <short>&#10; High level implementation for KS0108 Glcd&#10; </short>
        <long>&#10; High level implementation for KS0108 Glcd&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="GlcdP" loc="41:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <module/>
    </component>
    <component qname="HplKS0108C" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
        <short>&#10; Configuration for KS0108 GLCD Display&#10; </short>
        <long>&#10; Configuration for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplKS0108P" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
        <short>&#10; Hpl implementation for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl implementation for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10; Based on an implementation of Andreas Hagmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC" loc="6:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortAP" loc="6(HplAtm128GeneralIOFastPortC.PortAP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortBP" loc="6(HplAtm128GeneralIOFastPortC.PortBP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortCP" loc="6(HplAtm128GeneralIOFastPortC.PortCP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortDP" loc="6(HplAtm128GeneralIOFastPortC.PortDP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortEP" loc="6(HplAtm128GeneralIOFastPortC.PortEP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortFP" loc="6(HplAtm128GeneralIOFastPortC.PortFP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortGP" loc="6(HplAtm128GeneralIOFastPortC.PortGP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortHP" loc="6(HplAtm128GeneralIOFastPortC.PortHP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortJP" loc="6(HplAtm128GeneralIOFastPortC.PortJP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortKP" loc="6(HplAtm128GeneralIOFastPortC.PortKP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortLP" loc="6(HplAtm128GeneralIOFastPortC.PortLP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:9">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="38:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc" safe="">
      <documentation loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="FMClickC.I2C" loc="43(FMClickC.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../tinyos_ws18/tos/system/LedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc" safe="">
      <documentation loc="35:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../tinyos_ws18/tos/system/NoLedsC.nc">
      <documentation loc="35:../tinyos_ws18/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC.Timer" loc="44(FMClickC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <documentation loc="11:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC" loc="32(AlarmCounterMilliP.Atm1280AlarmSyncC):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:124">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP" loc="33(AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fedbced1160"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280Timer2SyncC" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <documentation loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280Timer2SyncP" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc" safe="">
      <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changed to sync mode&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10; &#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; Changed for Atm1280&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA" loc="40(HplAtm1280GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit0" loc="41(HplAtm1280GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="48">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit1" loc="41(HplAtm1280GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="49">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit2" loc="41(HplAtm1280GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="50">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit3" loc="41(HplAtm1280GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="51">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit4" loc="41(HplAtm1280GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="52">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit5" loc="41(HplAtm1280GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="53">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit6" loc="41(HplAtm1280GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="54">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit7" loc="41(HplAtm1280GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="55">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB" loc="40(HplAtm1280GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit0" loc="41(HplAtm1280GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="56">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit1" loc="41(HplAtm1280GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="57">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit2" loc="41(HplAtm1280GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="58">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit3" loc="41(HplAtm1280GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="59">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit4" loc="41(HplAtm1280GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="60">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit5" loc="41(HplAtm1280GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="61">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit6" loc="41(HplAtm1280GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="62">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit7" loc="41(HplAtm1280GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="63">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC" loc="40(HplAtm1280GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit0" loc="41(HplAtm1280GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="64">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit1" loc="41(HplAtm1280GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="65">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit2" loc="41(HplAtm1280GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="66">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit3" loc="41(HplAtm1280GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="67">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit4" loc="41(HplAtm1280GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="68">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit5" loc="41(HplAtm1280GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="69">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit6" loc="41(HplAtm1280GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="70">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit7" loc="41(HplAtm1280GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="71">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD" loc="40(HplAtm1280GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit0" loc="41(HplAtm1280GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="72">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit1" loc="41(HplAtm1280GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="73">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit2" loc="41(HplAtm1280GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="74">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit3" loc="41(HplAtm1280GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="75">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit4" loc="41(HplAtm1280GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="76">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit5" loc="41(HplAtm1280GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="77">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit6" loc="41(HplAtm1280GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="78">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit7" loc="41(HplAtm1280GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="79">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE" loc="40(HplAtm1280GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit0" loc="41(HplAtm1280GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="80">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit1" loc="41(HplAtm1280GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="81">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit2" loc="41(HplAtm1280GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="82">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit3" loc="41(HplAtm1280GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="83">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit4" loc="41(HplAtm1280GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="84">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit5" loc="41(HplAtm1280GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="85">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit6" loc="41(HplAtm1280GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="86">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit7" loc="41(HplAtm1280GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="87">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF" loc="40(HplAtm1280GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit0" loc="41(HplAtm1280GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="88">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit1" loc="41(HplAtm1280GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="89">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit2" loc="41(HplAtm1280GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="90">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit3" loc="41(HplAtm1280GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="91">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit4" loc="41(HplAtm1280GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="92">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit5" loc="41(HplAtm1280GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="93">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit6" loc="41(HplAtm1280GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="94">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit7" loc="41(HplAtm1280GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="95">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F0" loc="42(HplAtm1280GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F1" loc="42(HplAtm1280GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F2" loc="42(HplAtm1280GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F3" loc="42(HplAtm1280GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F4" loc="42(HplAtm1280GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F5" loc="42(HplAtm1280GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F6" loc="42(HplAtm1280GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F7" loc="42(HplAtm1280GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G0" loc="42(HplAtm1280GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G1" loc="42(HplAtm1280GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G2" loc="42(HplAtm1280GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G3" loc="42(HplAtm1280GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G4" loc="42(HplAtm1280GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G5" loc="42(HplAtm1280GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H0" loc="42(HplAtm1280GeneralIOC.H0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H1" loc="42(HplAtm1280GeneralIOC.H1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H2" loc="42(HplAtm1280GeneralIOC.H2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H3" loc="42(HplAtm1280GeneralIOC.H3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H4" loc="42(HplAtm1280GeneralIOC.H4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H5" loc="42(HplAtm1280GeneralIOC.H5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H6" loc="42(HplAtm1280GeneralIOC.H6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H7" loc="42(HplAtm1280GeneralIOC.H7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J0" loc="42(HplAtm1280GeneralIOC.J0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J1" loc="42(HplAtm1280GeneralIOC.J1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J2" loc="42(HplAtm1280GeneralIOC.J2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J3" loc="42(HplAtm1280GeneralIOC.J3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J4" loc="42(HplAtm1280GeneralIOC.J4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J5" loc="42(HplAtm1280GeneralIOC.J5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J6" loc="42(HplAtm1280GeneralIOC.J6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J7" loc="42(HplAtm1280GeneralIOC.J7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K0" loc="42(HplAtm1280GeneralIOC.K0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K1" loc="42(HplAtm1280GeneralIOC.K1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K2" loc="42(HplAtm1280GeneralIOC.K2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K3" loc="42(HplAtm1280GeneralIOC.K3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K4" loc="42(HplAtm1280GeneralIOC.K4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K5" loc="42(HplAtm1280GeneralIOC.K5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K6" loc="42(HplAtm1280GeneralIOC.K6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K7" loc="42(HplAtm1280GeneralIOC.K7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L0" loc="42(HplAtm1280GeneralIOC.L0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L1" loc="42(HplAtm1280GeneralIOC.L1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L2" loc="42(HplAtm1280GeneralIOC.L2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L3" loc="42(HplAtm1280GeneralIOC.L3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L4" loc="42(HplAtm1280GeneralIOC.L4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L5" loc="42(HplAtm1280GeneralIOC.L5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L6" loc="42(HplAtm1280GeneralIOC.L6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L7" loc="42(HplAtm1280GeneralIOC.L7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fedbd320900" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fedbd320c70" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fedbd31c020" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fedbd312d00" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fedbd30f0d0" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fedbd30f460" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fedbd30f7b0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fedbd27d890" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fedbd27dc20" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fedbd27a020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fedbd27a370" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortP" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fedbd1d9ba0" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fedbd1d4020" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fedbd1d4390" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7fedbd14c3d0" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7fedbd14c760" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7fedbd14caf0" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fedbd14ce40" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fedbd0f65b0" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fedbd0e4060" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fedbd0c9800" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../tinyos_ws18/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncC" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc" abstract="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fedbced1160" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fedbced1160"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7fedbced14f0" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7fedbced1880" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncP" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fedbcec5200" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fedbcec5200"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7fedbcec5590" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7fedbcec5920" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fedbcdda160" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fedbcdda160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fedbcda8230" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fedbcda8230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fedbcda8560" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fedbcd59de0" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fedbcd59de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fedbcc274c0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fedbcc27860" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fedbcc27c00" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fedbcc26020" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fedbd57dbf0" loc="58:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fedbd57dbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbd580020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fedbd57e720" loc="57:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fedbd57e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fedbd57eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fedbd57ad50" loc="52:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fedbd57ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbd579100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fedbd580d00" loc="46:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fedbd580d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbd57b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fedbd57a020" loc="50:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fedbd57a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fedbd57a3a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fedbd57a530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fedbd57a6c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fedbd57a850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fedbd57a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fedbd5727a0" loc="45:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7fedbd5727a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbd572b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fedbd5720c0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fedbd5720c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbd572440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7fedbd571020" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7fedbd571020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbd5713a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fedbd56a6f0" loc="4:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fedbd56a6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbd56aa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fedbd56a020" loc="3:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fedbd56a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbd56a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fedbd561860" loc="51:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fedbd561860"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fedbd70c3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fedbd70c3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbd561be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fedbd560020" loc="52:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fedbd560020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fedbd5603a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fedbd560530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fedbd5606c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fedbd560850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fedbd5609e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fedbd54d720" loc="60:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fedbd54d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbd54daa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fedbd57ce20" loc="57:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fedbd57ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fedbd54e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fedbd54d020" loc="59:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fedbd54d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbd54d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fedbd54e4b0" loc="58:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fedbd54e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbd54e830"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fedbd54e9c0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fedbd54eb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fedbd7007b0" loc="48:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fedbd7007b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fedbd700b30"/>
        <function-ref name="runTask" scoped="" ref="0x7fedbd700cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fedbd70aa20" loc="47:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fedbd70aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbd70ada0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fedbe0b8020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fedbe0b81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fedbd609020" loc="56:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fedbd609020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fedbd6093a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fedbd609530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fedbd606590" loc="57:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fedbd606590"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fedbd606910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fedbd60b120" loc="55:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fedbd60b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbd60b4a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fedbd60b630"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fedbd60b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fedbd5eb080" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fedbd5eb080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fedbd5eb400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fedbd6242d0" loc="84:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fedbd6242d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fedbd624650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fedbd5ea7d0" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fedbd5ea7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fedbd5eab50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fedbd542020" loc="16:Test/FMClickTestP.nc">
      <component-ref qname="FMClickTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fedbd542020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fedbd5423a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x7fedbd541e30" loc="18:Test/FMClickTestP.nc">
      <component-ref qname="FMClickTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x7fedbd541e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbd5401e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tune2Station" ref="0x7fedbd525380" loc="36:Test/FMClickTestP.nc">
      <component-ref qname="FMClickTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tune2Station" scoped="" ref="0x7fedbd525380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fedbd525700"/>
        <function-ref name="runTask" scoped="" ref="0x7fedbd525890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Radio" ref="0x7fedbd528370" loc="19:Test/FMClickTestP.nc">
      <component-ref qname="FMClickTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Radio" scoped="" ref="0x7fedbd528370"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7fedbd530340"/>
        <function-ref name="initDone" scoped="" ref="0x7fedbd528880"/>
        <function-ref name="setVolume" scoped="" ref="0x7fedbd528a10"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7fedbd528ba0"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7fedbd528d30"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7fedbd530020"/>
        <function-ref name="getChannel" scoped="" ref="0x7fedbd5301b0"/>
        <function-ref name="seek" scoped="" ref="0x7fedbd5286f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="finishedTuning" ref="0x7fedbd521380" loc="44:Test/FMClickTestP.nc">
      <component-ref qname="FMClickTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="finishedTuning" scoped="" ref="0x7fedbd521380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fedbd521700"/>
        <function-ref name="runTask" scoped="" ref="0x7fedbd521890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7fedbd531980" loc="17:Test/FMClickTestP.nc">
      <component-ref qname="FMClickTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7fedbd531980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7fedbd541b10"/>
        <function-ref name="drawRect" scoped="" ref="0x7fedbd541020"/>
        <function-ref name="drawLine" scoped="" ref="0x7fedbd5411b0"/>
        <function-ref name="setPixel" scoped="" ref="0x7fedbd541340"/>
        <function-ref name="invertPixel" scoped="" ref="0x7fedbd5414d0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7fedbd541660"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7fedbd5417f0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7fedbd531d00"/>
        <function-ref name="drawText" scoped="" ref="0x7fedbd541980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fedbd513290" loc="14:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fedbd513290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbd513610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7fedbd5138b0" loc="15:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7fedbd5138b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7fedbd5127f0"/>
        <function-ref name="initDone" scoped="" ref="0x7fedbd513dc0"/>
        <function-ref name="setVolume" scoped="" ref="0x7fedbd512020"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7fedbd5121b0"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7fedbd512340"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7fedbd5124d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fedbd512660"/>
        <function-ref name="seek" scoped="" ref="0x7fedbd513c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SDIOPin" ref="0x7fedbd4e2680" loc="27:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SDIOPin" scoped="" ref="0x7fedbd4e2680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd4e2a00"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd4e2b90"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd4e2d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd4e1020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd4e11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd4e1340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd4e14d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd4e1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Int" ref="0x7fedbd507600" loc="22:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int" scoped="" ref="0x7fedbd507600"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fedbd507980"/>
        <function-ref name="fired" scoped="" ref="0x7fedbd507b10"/>
        <function-ref name="disable" scoped="" ref="0x7fedbd507ca0"/>
        <function-ref name="edge" scoped="" ref="0x7fedbd507e30"/>
        <function-ref name="enable" scoped="" ref="0x7fedbd50d020"/>
        <function-ref name="getValue" scoped="" ref="0x7fedbd50d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7fedbd4f4a20" loc="24:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fedbd4f4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fedbd5004c0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fedbd500780"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fedbd5016b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fedbd4f3c30"/>
        <function-ref name="write" scoped="" ref="0x7fedbd4f5330"/>
        <function-ref name="readDone" scoped="" ref="0x7fedbd4f3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="_tune" ref="0x7fedbd4a39b0" loc="299:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="_tune" scoped="" ref="0x7fedbd4a39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fedbd4a3d30"/>
        <function-ref name="runTask" scoped="" ref="0x7fedbd4a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fedbd5113c0" loc="17:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fedbd5113c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbd511740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="_init" ref="0x7fedbd4bd8b0" loc="200:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="_init" scoped="" ref="0x7fedbd4bd8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fedbd4bdc30"/>
        <function-ref name="runTask" scoped="" ref="0x7fedbd4bddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7fedbd502d20" loc="23:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7fedbd502d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fedbd50c0e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fedbd50c270"/>
        <function-ref name="request" scoped="" ref="0x7fedbd50c400"/>
        <function-ref name="granted" scoped="" ref="0x7fedbd50c590"/>
        <function-ref name="isOwner" scoped="" ref="0x7fedbd50c720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTPin" ref="0x7fedbd4dc360" loc="26:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTPin" scoped="" ref="0x7fedbd4dc360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd4dc6e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd4dc870"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd4dca00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd4dcb90"/>
        <function-ref name="get" scoped="" ref="0x7fedbd4dcd20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd4e2020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd4e21b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd4e2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7fedbd5119e0" loc="18:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7fedbd5119e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7fedbd50e980"/>
        <function-ref name="initDone" scoped="" ref="0x7fedbd50e020"/>
        <function-ref name="setVolume" scoped="" ref="0x7fedbd50e1b0"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7fedbd50e340"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7fedbd50e4d0"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7fedbd50e660"/>
        <function-ref name="getChannel" scoped="" ref="0x7fedbd50e7f0"/>
        <function-ref name="seek" scoped="" ref="0x7fedbd511d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7fedbd4e18e0" loc="28:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7fedbd4e18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7fedbd4db980"/>
        <function-ref name="drawRect" scoped="" ref="0x7fedbd4e1df0"/>
        <function-ref name="drawLine" scoped="" ref="0x7fedbd4db020"/>
        <function-ref name="setPixel" scoped="" ref="0x7fedbd4db1b0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7fedbd4db340"/>
        <function-ref name="clearPixel" scoped="" ref="0x7fedbd4db4d0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7fedbd4db660"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7fedbd4e1c60"/>
        <function-ref name="drawText" scoped="" ref="0x7fedbd4db7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fedbd4f1260" loc="25:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fedbd4f1260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fedbd4e46e0"/>
        <function-ref name="fired" scoped="" ref="0x7fedbd4f0ca0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fedbd4e6a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fedbd4e65f0"/>
        <function-ref name="getdt" scoped="" ref="0x7fedbd4e3020"/>
        <function-ref name="gett0" scoped="" ref="0x7fedbd4e4b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fedbd4e6170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fedbd4f1e50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fedbd4e40d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fedbd4f0350"/>
        <function-ref name="stop" scoped="" ref="0x7fedbd4f0820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7fedbd44e5e0" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <component-ref qname="GlcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7fedbd44e5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7fedbd44b660"/>
        <function-ref name="drawRect" scoped="" ref="0x7fedbd44eaf0"/>
        <function-ref name="drawLine" scoped="" ref="0x7fedbd44ec80"/>
        <function-ref name="setPixel" scoped="" ref="0x7fedbd44ee10"/>
        <function-ref name="invertPixel" scoped="" ref="0x7fedbd44b020"/>
        <function-ref name="clearPixel" scoped="" ref="0x7fedbd44b1b0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7fedbd44b340"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7fedbd44e960"/>
        <function-ref name="drawText" scoped="" ref="0x7fedbd44b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fedbd419470" loc="44:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fedbd419470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbd4197f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hpl" ref="0x7fedbd412b20" loc="45:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hpl" scoped="" ref="0x7fedbd412b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7fedbd417020"/>
        <function-ref name="init" scoped="" ref="0x7fedbd4171b0"/>
        <function-ref name="dataRead" scoped="" ref="0x7fedbd417340"/>
        <function-ref name="controlWrite" scoped="" ref="0x7fedbd4174d0"/>
        <function-ref name="controlRead" scoped="" ref="0x7fedbd417660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7fedbd41a170" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7fedbd41a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7fedbd4191b0"/>
        <function-ref name="drawRect" scoped="" ref="0x7fedbd41a680"/>
        <function-ref name="drawLine" scoped="" ref="0x7fedbd41a810"/>
        <function-ref name="setPixel" scoped="" ref="0x7fedbd41a9a0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7fedbd41ab30"/>
        <function-ref name="clearPixel" scoped="" ref="0x7fedbd41acc0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7fedbd41ae50"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7fedbd41a4f0"/>
        <function-ref name="drawText" scoped="" ref="0x7fedbd419020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7fedbd449bf0" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <component-ref qname="HplKS0108C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7fedbd449bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7fedbd3a2020"/>
        <function-ref name="init" scoped="" ref="0x7fedbd3a21b0"/>
        <function-ref name="dataRead" scoped="" ref="0x7fedbd3a2340"/>
        <function-ref name="controlWrite" scoped="" ref="0x7fedbd3a24d0"/>
        <function-ref name="controlRead" scoped="" ref="0x7fedbd3a2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EN" ref="0x7fedbd39acd0" loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EN" scoped="" ref="0x7fedbd39acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3990a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd399230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3993c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd399550"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3996e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd399870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd399a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd399b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fedbd38d910" loc="34:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7fedbd38d910"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd655d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7fedbd653180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fedbd38f780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_0" ref="0x7fedbd39e020" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_0" scoped="" ref="0x7fedbd39e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd39e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd39e530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd39e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd39e850"/>
        <function-ref name="get" scoped="" ref="0x7fedbd39e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd39eb70"/>
        <function-ref name="set" scoped="" ref="0x7fedbd39ed00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd39d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RST" ref="0x7fedbd398020" loc="30:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RST" scoped="" ref="0x7fedbd398020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3983a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd398530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3986c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd398850"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3989e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd398b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbd398d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd397020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RS" ref="0x7fedbd39c690" loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RS" scoped="" ref="0x7fedbd39c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd39ca10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd39cba0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd39cd30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd39b020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd39b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd39b340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd39b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd39b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_1" ref="0x7fedbd39d380" loc="26:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_1" scoped="" ref="0x7fedbd39d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd39d700"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd39d890"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd39da20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd39dbb0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd39dd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd39c020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd39c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd39c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7fedbd39f240" loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7fedbd39f240"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7fedbd39f5c0"/>
        <function-ref name="init" scoped="" ref="0x7fedbd39f750"/>
        <function-ref name="dataRead" scoped="" ref="0x7fedbd39f8e0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7fedbd39fa70"/>
        <function-ref name="controlRead" scoped="" ref="0x7fedbd39fc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RW" ref="0x7fedbd39b9b0" loc="28:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RW" scoped="" ref="0x7fedbd39b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd39bd30"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd39a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd39a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd39a340"/>
        <function-ref name="get" scoped="" ref="0x7fedbd39a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd39a660"/>
        <function-ref name="set" scoped="" ref="0x7fedbd39a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd39a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Data" ref="0x7fedbd390a80" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Data" scoped="" ref="0x7fedbd390a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd390e00"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd396020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3961b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd396340"/>
        <function-ref name="read" scoped="" ref="0x7fedbd3964d0"/>
        <function-ref name="write" scoped="" ref="0x7fedbd396660"/>
        <function-ref name="set" scoped="" ref="0x7fedbd3967f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7fedbd329020" loc="98:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7fedbd329020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3297a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd329930"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd329ac0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd329c50"/>
        <function-ref name="get" scoped="" ref="0x7fedbd329de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd328020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd3281b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd328340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7fedbd346800" loc="72:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7fedbd346800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd346b80"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd346d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd345020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd3451b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd345340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd3454d0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd345660"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd3457f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7fedbd33a670" loc="83:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7fedbd33a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd33a9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd33ab80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd33ad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd339020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3391b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd339340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd3394d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd339660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7fedbd330020" loc="92:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7fedbd330020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3303a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd330530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3306c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd330850"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3309e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd330b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbd330d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd32f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7fedbd323350" loc="103:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7fedbd323350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3236d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd323860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3239f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd323b80"/>
        <function-ref name="get" scoped="" ref="0x7fedbd323d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd322020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd3221b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd322340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7fedbd35e990" loc="50:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7fedbd35e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd35ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd35d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd35d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd35d340"/>
        <function-ref name="get" scoped="" ref="0x7fedbd35d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd35d660"/>
        <function-ref name="set" scoped="" ref="0x7fedbd35d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd35d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7fedbd333990" loc="90:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7fedbd333990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd333d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd332020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3321b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd332340"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3324d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd332660"/>
        <function-ref name="set" scoped="" ref="0x7fedbd3327f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd332980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7fedbd35b020" loc="53:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7fedbd35b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd35b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd35b530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd35b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd35b850"/>
        <function-ref name="get" scoped="" ref="0x7fedbd35b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd35bb70"/>
        <function-ref name="set" scoped="" ref="0x7fedbd35bd00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd35a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7fedbd34f020" loc="64:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7fedbd34f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd34f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd34f530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd34f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd34f850"/>
        <function-ref name="get" scoped="" ref="0x7fedbd34f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd34fb70"/>
        <function-ref name="set" scoped="" ref="0x7fedbd34fd00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd34e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7fedbd342060" loc="75:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7fedbd342060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3423e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd342570"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd342700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd342890"/>
        <function-ref name="get" scoped="" ref="0x7fedbd342a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd342bb0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd342d40"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd341020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7fedbd336020" loc="86:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7fedbd336020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3363a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd336530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3366c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd336850"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3369e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd336b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbd336d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd335020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7fedbd364b20" loc="45:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7fedbd364b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd363020"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd3631b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd363340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd3634d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd363660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd3637f0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd363980"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd363b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7fedbd358990" loc="56:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7fedbd358990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd358d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd357020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3571b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd357340"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3574d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd357660"/>
        <function-ref name="set" scoped="" ref="0x7fedbd3577f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd357980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7fedbd34c990" loc="67:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7fedbd34c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd34cd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd34b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd34b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd34b340"/>
        <function-ref name="get" scoped="" ref="0x7fedbd34b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd34b660"/>
        <function-ref name="set" scoped="" ref="0x7fedbd34b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd34b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7fedbd33f990" loc="78:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7fedbd33f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd33fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd33e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd33e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd33e340"/>
        <function-ref name="get" scoped="" ref="0x7fedbd33e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd33e660"/>
        <function-ref name="set" scoped="" ref="0x7fedbd33e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd33e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7fedbd32d990" loc="95:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7fedbd32d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd32dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd32b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd32b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd32b340"/>
        <function-ref name="get" scoped="" ref="0x7fedbd32b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd32b660"/>
        <function-ref name="set" scoped="" ref="0x7fedbd32b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd32b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7fedbd326cb0" loc="101:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7fedbd326cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3250a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd325230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3253c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd325550"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3256e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd325870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd325a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd325b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7fedbd33c020" loc="81:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7fedbd33c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd33c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd33c530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd33c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd33c850"/>
        <function-ref name="get" scoped="" ref="0x7fedbd33c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd33cb70"/>
        <function-ref name="set" scoped="" ref="0x7fedbd33cd00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd33b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7fedbd360350" loc="48:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7fedbd360350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3606d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd360860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3609f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd360b80"/>
        <function-ref name="get" scoped="" ref="0x7fedbd360d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd35f020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd35f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd35f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7fedbd354350" loc="59:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7fedbd354350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3546d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd354860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3549f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd354b80"/>
        <function-ref name="get" scoped="" ref="0x7fedbd354d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd353020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd3531b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd353340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7fedbd328670" loc="99:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7fedbd328670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3289f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd328b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd328d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd327020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3271b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd327340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd3274d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd327660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7fedbd352990" loc="62:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7fedbd352990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd352d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd351020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3511b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd351340"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3514d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd351660"/>
        <function-ref name="set" scoped="" ref="0x7fedbd3517f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd351980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7fedbd345b20" loc="73:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7fedbd345b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd344020"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd3441b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd344340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd3444d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd344660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd3447f0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd344980"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd344b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7fedbd339990" loc="84:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7fedbd339990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd339d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd338020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3381b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd338340"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3384d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd338660"/>
        <function-ref name="set" scoped="" ref="0x7fedbd3387f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd338980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7fedbd32f350" loc="93:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7fedbd32f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd32f6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd32f860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd32f9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd32fb80"/>
        <function-ref name="get" scoped="" ref="0x7fedbd32fd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd32e020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd32e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd32e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7fedbd35dcb0" loc="51:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7fedbd35dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd35c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd35c230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd35c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd35c550"/>
        <function-ref name="get" scoped="" ref="0x7fedbd35c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd35c870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd35ca00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd35cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7fedbd35a350" loc="54:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7fedbd35a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd35a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd35a860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd35a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd35ab80"/>
        <function-ref name="get" scoped="" ref="0x7fedbd35ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd359020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd3591b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd359340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7fedbd34e350" loc="65:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7fedbd34e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd34e6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd34e860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd34e9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd34eb80"/>
        <function-ref name="get" scoped="" ref="0x7fedbd34ed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd34d020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd34d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd34d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7fedbd341350" loc="76:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7fedbd341350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3416d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd341860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3419f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd341b80"/>
        <function-ref name="get" scoped="" ref="0x7fedbd341d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd340020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd3401b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd340340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7fedbd335350" loc="87:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7fedbd335350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3356d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd335860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3359f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd335b80"/>
        <function-ref name="get" scoped="" ref="0x7fedbd335d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd334020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd3341b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd334340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7fedbd363e40" loc="46:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7fedbd363e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3621e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd362370"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd362500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd362690"/>
        <function-ref name="get" scoped="" ref="0x7fedbd362820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd3629b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd362b40"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd362cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7fedbd357cb0" loc="57:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7fedbd357cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd356180"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd356310"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3564a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd356630"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3567c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd356950"/>
        <function-ref name="set" scoped="" ref="0x7fedbd356ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd356c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7fedbd34bcb0" loc="68:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7fedbd34bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd34a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd34a230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd34a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd34a550"/>
        <function-ref name="get" scoped="" ref="0x7fedbd34a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd34a870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd34aa00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd34ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7fedbd32bcb0" loc="96:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7fedbd32bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd32a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd32a230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd32a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd32a550"/>
        <function-ref name="get" scoped="" ref="0x7fedbd32a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd32a870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd32aa00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd32ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7fedbd347350" loc="71:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7fedbd347350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3478d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd347a60"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd347bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd347d80"/>
        <function-ref name="get" scoped="" ref="0x7fedbd346020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd3461b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd346340"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd3464d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7fedbd33b350" loc="82:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7fedbd33b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd33b6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd33b860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd33b9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd33bb80"/>
        <function-ref name="get" scoped="" ref="0x7fedbd33bd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd33a020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd33a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd33a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7fedbd332cb0" loc="91:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7fedbd332cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3310a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd331230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3313c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd331550"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3316e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd331870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd331a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd331b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7fedbd324020" loc="102:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7fedbd324020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3243a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd324530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3246c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd324850"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3249e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd324b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbd324d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd323020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7fedbd35f670" loc="49:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7fedbd35f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd35f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd35fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd35fd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd35e020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd35e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd35e340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd35e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd35e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7fedbd353670" loc="60:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7fedbd353670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3539f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd353b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd353d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd352020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3521b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd352340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd3524d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd352660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7fedbd334670" loc="89:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7fedbd334670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3349f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd334b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd334d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd333020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3331b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd333340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd3334d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd333660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7fedbd351cb0" loc="63:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7fedbd351cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3500a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd350230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3503c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd350550"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3506e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd350870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd350a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd350b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7fedbd344e40" loc="74:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7fedbd344e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3431e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd343370"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd343500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd343690"/>
        <function-ref name="get" scoped="" ref="0x7fedbd343820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd3439b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd343b40"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd343cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7fedbd338cb0" loc="85:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7fedbd338cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3370a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd337230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3373c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd337550"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3376e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd337870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd337a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd337b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7fedbd32e670" loc="94:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7fedbd32e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd32e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd32eb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd32ed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd32d020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd32d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd32d340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd32d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd32d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7fedbd367860" loc="44:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7fedbd367860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd367be0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd367d70"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd364020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd3641b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd364340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd3644d0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd364660"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd3647f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7fedbd359670" loc="55:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7fedbd359670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3599f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd359b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd359d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd358020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3581b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd358340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd3584d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd358660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7fedbd34d670" loc="66:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7fedbd34d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd34d9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd34db80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd34dd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd34c020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd34c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd34c340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd34c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd34c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7fedbd340670" loc="77:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7fedbd340670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3409f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd340b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd340d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd33f020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd33f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd33f340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd33f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd33f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7fedbd327990" loc="100:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7fedbd327990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd327d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd326020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3261b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd326340"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3264d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd326660"/>
        <function-ref name="set" scoped="" ref="0x7fedbd3267f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd326980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7fedbd33ecb0" loc="80:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7fedbd33ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd33d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd33d230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd33d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd33d550"/>
        <function-ref name="get" scoped="" ref="0x7fedbd33d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd33d870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd33da00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd33db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7fedbd348020" loc="69:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7fedbd348020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3483a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd348530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3486c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd348850"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3489e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd348b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbd348d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd347020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7fedbd361060" loc="47:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7fedbd361060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3613e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd361570"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd361700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd361890"/>
        <function-ref name="get" scoped="" ref="0x7fedbd361a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd361bb0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd361d40"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd360020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7fedbd355020" loc="58:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7fedbd355020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd3553a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd355530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd3556c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd355850"/>
        <function-ref name="get" scoped="" ref="0x7fedbd3559e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd355b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbd355d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd354020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fedbd2d6440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fedbd2d6440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2d67c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2d6950"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2d6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2d6c70"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2d6e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2d5020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2d51b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2d5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fedbd2d38f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fedbd2d38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2d3c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2d3e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2d2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2d21b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2d2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2d24d0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2d2660"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2d27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fedbd2d8140" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fedbd2d8140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2d84c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2d8650"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2d87e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2d8970"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2d8b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2d8c90"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2d8e20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fedbd2d55d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fedbd2d55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2d5950"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2d5ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2d5c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2d5e00"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2d4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2d41b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2d4340"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2d44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fedbd2d2a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fedbd2d2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2d2e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2d1020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2d11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2d1340"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2d14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2d1660"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2d17f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2d1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fedbd2d72b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fedbd2d72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2d7630"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2d77c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2d7950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2d7ae0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2d7c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2d7e00"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2d6020"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2d61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fedbd2d4760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fedbd2d4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2d4ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2d4c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2d4e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2d3020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2d31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2d3340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2d34d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2d3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fedbd2d1c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fedbd2d1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2d0020"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2d01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2d0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2d04d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2d0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2d07f0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2d0980"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2d0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcadf020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcadf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcadf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcadf530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcadf6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcadf850"/>
        <function-ref name="get" scoped="" ref="0x7fedbcadf9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcadfb70"/>
        <function-ref name="set" scoped="" ref="0x7fedbcadfd00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcade020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcadc3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcadc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcadc770"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcadc900"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcadca90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcadcc20"/>
        <function-ref name="get" scoped="" ref="0x7fedbcadcdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcadb020"/>
        <function-ref name="set" scoped="" ref="0x7fedbcadb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcadb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcad96d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcad96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcad9a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcad9be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcad9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcad8020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcad81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcad8340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcad84d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcad8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcad69b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcad69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcad6d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcad5020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcad51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcad5340"/>
        <function-ref name="get" scoped="" ref="0x7fedbcad54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcad5660"/>
        <function-ref name="set" scoped="" ref="0x7fedbcad57f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcad5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcad3e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcad3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcad21c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcad2350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcad24e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcad2670"/>
        <function-ref name="get" scoped="" ref="0x7fedbcad2800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcad2990"/>
        <function-ref name="set" scoped="" ref="0x7fedbcad2b20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcad2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcacf0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcacf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcacf420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcacf5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcacf740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcacf8d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcacfa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcacfbf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcacfd80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcace020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcacc3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcacc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcacc770"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcacc900"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcacca90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcaccc20"/>
        <function-ref name="get" scoped="" ref="0x7fedbcaccdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcacb020"/>
        <function-ref name="set" scoped="" ref="0x7fedbcacb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcacb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcac96d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcac96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcac9a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcac9be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcac9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcac8020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcac81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcac8340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcac84d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcac8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fedbd2c7760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fedbd2c7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2c7ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2c7c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2c7e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2c6020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2c61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2c6340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2c64d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2c6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fedbd2c4c10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fedbd2c4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2c3020"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2c31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2c3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2c34d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2c3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2c37f0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2c3980"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2c3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fedbd2c93f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fedbd2c93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2c9770"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2c9900"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2c9a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2c9c20"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2c9db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2c8020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2c81b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2c8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fedbd2c68f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fedbd2c68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2c6c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2c6e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2c5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2c51b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2c5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2c54d0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2c5660"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2c57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fedbd2c3da0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fedbd2c3da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2c2180"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2c2310"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2c24a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2c2630"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2c27c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2c2950"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2c2ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2c2c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fedbd2c85d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fedbd2c85d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2c8950"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2c8ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2c8c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2c8e00"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2c7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2c71b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2c7340"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2c74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fedbd2c5a80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fedbd2c5a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2c5e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2c4020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2c41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2c4340"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2c44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2c4660"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2c47f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2c4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fedbd2c1020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fedbd2c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2c13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2c1530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2c16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2c1850"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2c19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2c1b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2c1d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbca74a60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbca74a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbca74de0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbca73020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbca731b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbca73340"/>
        <function-ref name="get" scoped="" ref="0x7fedbca734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbca73660"/>
        <function-ref name="set" scoped="" ref="0x7fedbca737f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbca73980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbca71e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbca71e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbca701c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbca70350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbca704e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbca70670"/>
        <function-ref name="get" scoped="" ref="0x7fedbca70800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbca70990"/>
        <function-ref name="set" scoped="" ref="0x7fedbca70b20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbca70cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbca6d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbca6d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbca6d420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbca6d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbca6d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbca6d8d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbca6da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbca6dbf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbca6dd80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbca6c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbca6a3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbca6a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbca6a770"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbca6a900"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbca6aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbca6ac20"/>
        <function-ref name="get" scoped="" ref="0x7fedbca6adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbca69020"/>
        <function-ref name="set" scoped="" ref="0x7fedbca691b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbca69340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbca676d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbca676d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbca67a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbca67be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbca67d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbca66020"/>
        <function-ref name="get" scoped="" ref="0x7fedbca661b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbca66340"/>
        <function-ref name="set" scoped="" ref="0x7fedbca664d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbca66660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbca649b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbca649b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbca64d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbca63020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbca631b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbca63340"/>
        <function-ref name="get" scoped="" ref="0x7fedbca634d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbca63660"/>
        <function-ref name="set" scoped="" ref="0x7fedbca637f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbca63980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbca61e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbca61e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbca601c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbca60350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbca604e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbca60670"/>
        <function-ref name="get" scoped="" ref="0x7fedbca60800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbca60990"/>
        <function-ref name="set" scoped="" ref="0x7fedbca60b20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbca60cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbca5d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbca5d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbca5d420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbca5d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbca5d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbca5d8d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbca5da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbca5dbf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbca5dd80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbca5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fedbd2b8a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fedbd2b8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2b8e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2b7020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2b71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2b7340"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2b74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2b7660"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2b77f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2b7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fedbd2b3020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fedbd2b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2b33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2b3530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2b36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2b3850"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2b39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2b3b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2b3d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fedbd2ba7a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fedbd2ba7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2bab20"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2bacb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2bae40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2b9020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2b91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2b9340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2b94d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2b9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fedbd2b7c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fedbd2b7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2b6020"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2b61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2b6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2b64d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2b6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2b67f0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2b6980"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2b6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fedbd2b22b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fedbd2b22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2b2630"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2b27c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2b2950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2b2ae0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2b2c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2b2e00"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2b1020"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2b11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fedbd2b98f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fedbd2b98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2b9c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2b9e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2b8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2b81b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2b8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2b84d0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2b8660"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2b87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fedbd2b6da0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fedbd2b6da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2b4180"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2b4310"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2b44a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2b4630"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2b47c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2b4950"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2b4ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2b4c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fedbd2b1440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fedbd2b1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2b17c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2b1950"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2b1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2b1c70"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2b1e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2b0020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2b01b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2b0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbca07c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbca07c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbca060a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbca06230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbca063c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbca06550"/>
        <function-ref name="get" scoped="" ref="0x7fedbca066e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbca06870"/>
        <function-ref name="set" scoped="" ref="0x7fedbca06a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbca06b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbca04e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbca04e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbca031c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbca03350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbca034e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbca03670"/>
        <function-ref name="get" scoped="" ref="0x7fedbca03800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbca03990"/>
        <function-ref name="set" scoped="" ref="0x7fedbca03b20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbca03cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbca000a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbca000a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbca00420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbca005b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbca00740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbca008d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbca00a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbca00bf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbca00d80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc9ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc9fd3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc9fd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc9fd770"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc9fd900"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc9fda90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc9fdc20"/>
        <function-ref name="get" scoped="" ref="0x7fedbc9fddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc9fc020"/>
        <function-ref name="set" scoped="" ref="0x7fedbc9fc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc9fc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc9fa6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc9fa6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc9faa50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc9fabe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc9fad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc9f9020"/>
        <function-ref name="get" scoped="" ref="0x7fedbc9f91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc9f9340"/>
        <function-ref name="set" scoped="" ref="0x7fedbc9f94d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc9f9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc9f79b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc9f79b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc9f7d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc9f6020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc9f61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc9f6340"/>
        <function-ref name="get" scoped="" ref="0x7fedbc9f64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc9f6660"/>
        <function-ref name="set" scoped="" ref="0x7fedbc9f67f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc9f6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc9f4e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc9f4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc9f31c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc9f3350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc9f34e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc9f3670"/>
        <function-ref name="get" scoped="" ref="0x7fedbc9f3800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc9f3990"/>
        <function-ref name="set" scoped="" ref="0x7fedbc9f3b20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc9f3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc9f00a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc9f00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc9f0420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc9f05b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc9f0740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc9f08d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbc9f0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc9f0bf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbc9f0d80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc9ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fedbd2a8da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fedbd2a8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2a7180"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2a7310"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2a74a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2a7630"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2a77c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2a7950"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2a7ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2a7c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fedbd2a4440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fedbd2a4440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2a47c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2a4950"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2a4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2a4c70"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2a4e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2a3020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2a31b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2a3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fedbd2aba20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fedbd2aba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2abda0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2aa020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2aa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2aa340"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2aa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2aa660"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2aa7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2aa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fedbd2a6020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fedbd2a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2a63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2a6530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2a66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2a6850"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2a69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2a6b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2a6d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fedbd2a35d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fedbd2a35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2a3950"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2a3ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2a3c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2a3e00"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2a2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2a21b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2a2340"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2a24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fedbd2aac10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fedbd2aac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2a8020"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2a81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2a8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2a84d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2a8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2a87f0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2a8980"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2a8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fedbd2a52b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fedbd2a52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2a5630"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2a57c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2a5950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2a5ae0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2a5c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2a5e00"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2a4020"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2a41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fedbd2a2760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fedbd2a2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2a2ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2a2c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2a2e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2a1020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2a11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2a1340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2a14d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2a1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc99cc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc99cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc99b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc99b230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc99b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc99b550"/>
        <function-ref name="get" scoped="" ref="0x7fedbc99b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc99b870"/>
        <function-ref name="set" scoped="" ref="0x7fedbc99ba00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc99bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc999e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc999e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc9981c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc998350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc9984e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc998670"/>
        <function-ref name="get" scoped="" ref="0x7fedbc998800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc998990"/>
        <function-ref name="set" scoped="" ref="0x7fedbc998b20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc998cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc9950a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc9950a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc995420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc9955b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc995740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc9958d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbc995a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc995bf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbc995d80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc994020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc9923f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc9923f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc992770"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc992900"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc992a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc992c20"/>
        <function-ref name="get" scoped="" ref="0x7fedbc992db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc991020"/>
        <function-ref name="set" scoped="" ref="0x7fedbc9911b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc991340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc98f6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc98f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc98fa50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc98fbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc98fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc98e020"/>
        <function-ref name="get" scoped="" ref="0x7fedbc98e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc98e340"/>
        <function-ref name="set" scoped="" ref="0x7fedbc98e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc98e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc98c9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc98c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc98cd30"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc98b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc98b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc98b340"/>
        <function-ref name="get" scoped="" ref="0x7fedbc98b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc98b660"/>
        <function-ref name="set" scoped="" ref="0x7fedbc98b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc98b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc989e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc989e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc9881c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc988350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc9884e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc988670"/>
        <function-ref name="get" scoped="" ref="0x7fedbc988800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc988990"/>
        <function-ref name="set" scoped="" ref="0x7fedbc988b20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc988cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc9850a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc9850a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc985420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc9855b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc985740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc9858d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbc985a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc985bf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbc985d80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc984020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fedbd298020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fedbd298020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2983a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd298530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2986c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd298850"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2989e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd298b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbd298d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd297020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fedbd2955d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fedbd2955d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd295950"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd295ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd295c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd295e00"/>
        <function-ref name="get" scoped="" ref="0x7fedbd294020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2941b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd294340"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2944d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fedbd29bd30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fedbd29bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd29a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd29a270"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd29a400"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd29a590"/>
        <function-ref name="get" scoped="" ref="0x7fedbd29a720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd29a8b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd29aa40"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd29abd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fedbd2972b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fedbd2972b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd297630"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2977c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd297950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd297ae0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd297c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd297e00"/>
        <function-ref name="set" scoped="" ref="0x7fedbd296020"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2961b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fedbd294760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fedbd294760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd294ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd294c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd294e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd293020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2931b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd293340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2934d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd293660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fedbd29ae60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fedbd29ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd299210"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2993a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd299530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2996c0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd299850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2999e0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd299b70"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd299d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fedbd296440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fedbd296440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2967c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd296950"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd296ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd296c70"/>
        <function-ref name="get" scoped="" ref="0x7fedbd296e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd295020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2951b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd295340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fedbd2938f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fedbd2938f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd293c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd293e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd292020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2921b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd292340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2924d0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd292660"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2927f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc932c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc932c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc9300a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc930230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc9303c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc930550"/>
        <function-ref name="get" scoped="" ref="0x7fedbc9306e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc930870"/>
        <function-ref name="set" scoped="" ref="0x7fedbc930a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc930b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc92ee20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc92ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc92d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc92d350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc92d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc92d670"/>
        <function-ref name="get" scoped="" ref="0x7fedbc92d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc92d990"/>
        <function-ref name="set" scoped="" ref="0x7fedbc92db20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc92dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc92a0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc92a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc92a420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc92a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc92a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc92a8d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbc92aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc92abf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbc92ad80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc929020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc9273f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc9273f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc927770"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc927900"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc927a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc927c20"/>
        <function-ref name="get" scoped="" ref="0x7fedbc927db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc926020"/>
        <function-ref name="set" scoped="" ref="0x7fedbc9261b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc926340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc9246d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc9246d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc924a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc924be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc924d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc923020"/>
        <function-ref name="get" scoped="" ref="0x7fedbc9231b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc923340"/>
        <function-ref name="set" scoped="" ref="0x7fedbc9234d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc923660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc9219b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc9219b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc921d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc920020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc9201b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc920340"/>
        <function-ref name="get" scoped="" ref="0x7fedbc9204d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc920660"/>
        <function-ref name="set" scoped="" ref="0x7fedbc9207f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc920980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc91ee20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc91ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc91d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc91d350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc91d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc91d670"/>
        <function-ref name="get" scoped="" ref="0x7fedbc91d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc91d990"/>
        <function-ref name="set" scoped="" ref="0x7fedbc91db20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc91dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc91a0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc91a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc91a420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc91a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc91a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc91a8d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbc91aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc91abf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbc91ad80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc919020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fedbd289440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fedbd289440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2897c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd289950"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd289ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd289c70"/>
        <function-ref name="get" scoped="" ref="0x7fedbd289e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd288020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2881b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd288340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fedbd2868f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fedbd2868f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd286c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd286e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd285020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2851b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd285340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2854d0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd285660"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2857f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fedbd28b020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fedbd28b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd28b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd28b530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd28b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd28b850"/>
        <function-ref name="get" scoped="" ref="0x7fedbd28b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd28bb70"/>
        <function-ref name="set" scoped="" ref="0x7fedbd28bd00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd28a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fedbd2885d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fedbd2885d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd288950"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd288ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd288c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd288e00"/>
        <function-ref name="get" scoped="" ref="0x7fedbd287020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2871b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd287340"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2874d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fedbd285a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fedbd285a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd285e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd284020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2841b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd284340"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2844d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd284660"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2847f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd284980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fedbd28a2b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fedbd28a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd28a630"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd28a7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd28a950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd28aae0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd28ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd28ae00"/>
        <function-ref name="set" scoped="" ref="0x7fedbd289020"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fedbd287760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fedbd287760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd287ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd287c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd287e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd286020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2861b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd286340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd2864d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd286660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fedbd284c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fedbd284c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd282020"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd2821b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd282340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd2824d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd282660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd2827f0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd282980"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd282b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc8c7c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc8c7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc8c50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc8c5230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc8c53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc8c5550"/>
        <function-ref name="get" scoped="" ref="0x7fedbc8c56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc8c5870"/>
        <function-ref name="set" scoped="" ref="0x7fedbc8c5a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc8c5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc8c3e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc8c3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc8c21c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc8c2350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc8c24e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc8c2670"/>
        <function-ref name="get" scoped="" ref="0x7fedbc8c2800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc8c2990"/>
        <function-ref name="set" scoped="" ref="0x7fedbc8c2b20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc8c2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc8bf0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc8bf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc8bf420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc8bf5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc8bf740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc8bf8d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbc8bfa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc8bfbf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbc8bfd80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc8be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc8bc3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc8bc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc8bc770"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc8bc900"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc8bca90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc8bcc20"/>
        <function-ref name="get" scoped="" ref="0x7fedbc8bcdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc8bb020"/>
        <function-ref name="set" scoped="" ref="0x7fedbc8bb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc8bb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc8b96d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc8b96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc8b9a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc8b9be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc8b9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc8b8020"/>
        <function-ref name="get" scoped="" ref="0x7fedbc8b81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc8b8340"/>
        <function-ref name="set" scoped="" ref="0x7fedbc8b84d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc8b8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc8b69b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc8b69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc8b6d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc8b5020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc8b51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc8b5340"/>
        <function-ref name="get" scoped="" ref="0x7fedbc8b54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc8b5660"/>
        <function-ref name="set" scoped="" ref="0x7fedbc8b57f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc8b5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc8b3e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc8b3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc8b21c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc8b2350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc8b24e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc8b2670"/>
        <function-ref name="get" scoped="" ref="0x7fedbc8b2800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc8b2990"/>
        <function-ref name="set" scoped="" ref="0x7fedbc8b2b20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc8b2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc8af0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc8af0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc8af420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc8af5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc8af740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc8af8d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbc8afa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc8afbf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbc8afd80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc8ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbd27b260" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbd27b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd27b5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd27b770"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd27b900"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd27ba90"/>
        <function-ref name="get" scoped="" ref="0x7fedbd27bc20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd27bdb0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd264020"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2641b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbd261d00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbd261d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd25f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd25f230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd25f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd25f550"/>
        <function-ref name="get" scoped="" ref="0x7fedbd25f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd25f870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd25fa00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd25fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbd25b6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbd25b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd25ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd25bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd25bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd25a020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd25a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd25a340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd25a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd25a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbd255160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbd255160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2554e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd255670"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd255800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd255990"/>
        <function-ref name="get" scoped="" ref="0x7fedbd255b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd255cb0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd255e40"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd254020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbd251c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbd251c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2500a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd250230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2503c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd250550"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2506e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd250870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd250a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd250b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbd24b6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbd24b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd24ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd24bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd24bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd24a020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd24a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd24a340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd24a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd24a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbd245270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbd245270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2455f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd245780"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd245910"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd245aa0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd245c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd245dc0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd244020"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd2441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbd241d00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbd241d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2400a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd240230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2403c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd240550"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2406e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd240870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd240a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd240b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbd23b6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbd23b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd23ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd23bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd23bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd23a020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd23a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd23a340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd23a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd23a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbd235160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbd235160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2354e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd235670"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd235800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd235990"/>
        <function-ref name="get" scoped="" ref="0x7fedbd235b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd235cb0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd235e40"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd234020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbd231c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbd231c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2300a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd230230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2303c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd230550"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2306e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd230870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd230a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd230b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbd22b6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbd22b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd22ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd22bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd22bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd22a020"/>
        <function-ref name="get" scoped="" ref="0x7fedbd22a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd22a340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd22a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd22a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbd225160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbd225160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2254e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd225670"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd225800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd225990"/>
        <function-ref name="get" scoped="" ref="0x7fedbd225b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd225cb0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd225e40"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd224020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbd221c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbd221c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd2200a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbd220230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd2203c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbd220550"/>
        <function-ref name="get" scoped="" ref="0x7fedbd2206e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd220870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd220a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbd220b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA" ref="0x7fedbd1efc40" loc="7:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA" scoped="" ref="0x7fedbd1efc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd1ec020"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd1ec1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd1ec340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd1ec4d0"/>
        <function-ref name="read" scoped="" ref="0x7fedbd1ec660"/>
        <function-ref name="write" scoped="" ref="0x7fedbd1ec7f0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd1ec980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL" ref="0x7fedbd1dc870" loc="18:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL" scoped="" ref="0x7fedbd1dc870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd1dcbf0"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd1dcd80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd1db020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd1db1b0"/>
        <function-ref name="read" scoped="" ref="0x7fedbd1db340"/>
        <function-ref name="write" scoped="" ref="0x7fedbd1db4d0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd1db660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD" ref="0x7fedbd1e4e80" loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD" scoped="" ref="0x7fedbd1e4e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd1e3220"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd1e33b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd1e3540"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd1e36d0"/>
        <function-ref name="read" scoped="" ref="0x7fedbd1e3860"/>
        <function-ref name="write" scoped="" ref="0x7fedbd1e39f0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd1e3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG" ref="0x7fedbd1e01d0" loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG" scoped="" ref="0x7fedbd1e01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd1e0550"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd1e06e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd1e0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd1e0a00"/>
        <function-ref name="read" scoped="" ref="0x7fedbd1e0b90"/>
        <function-ref name="write" scoped="" ref="0x7fedbd1e0d20"/>
        <function-ref name="set" scoped="" ref="0x7fedbd1df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ" ref="0x7fedbd1de550" loc="16:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ" scoped="" ref="0x7fedbd1de550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd1de8d0"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd1dea60"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd1debf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd1ded80"/>
        <function-ref name="read" scoped="" ref="0x7fedbd1dd020"/>
        <function-ref name="write" scoped="" ref="0x7fedbd1dd1b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd1dd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB" ref="0x7fedbd1ecd20" loc="8:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB" scoped="" ref="0x7fedbd1ecd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd1eb0e0"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd1eb270"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd1eb400"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd1eb590"/>
        <function-ref name="read" scoped="" ref="0x7fedbd1eb720"/>
        <function-ref name="write" scoped="" ref="0x7fedbd1eb8b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd1eba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE" ref="0x7fedbd1e2020" loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE" scoped="" ref="0x7fedbd1e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd1e23a0"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd1e2530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd1e26c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd1e2850"/>
        <function-ref name="read" scoped="" ref="0x7fedbd1e29e0"/>
        <function-ref name="write" scoped="" ref="0x7fedbd1e2b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbd1e2d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH" ref="0x7fedbd1df3c0" loc="15:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH" scoped="" ref="0x7fedbd1df3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd1df740"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd1df8d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd1dfa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd1dfbf0"/>
        <function-ref name="read" scoped="" ref="0x7fedbd1dfd80"/>
        <function-ref name="write" scoped="" ref="0x7fedbd1de020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd1de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK" ref="0x7fedbd1dd6e0" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK" scoped="" ref="0x7fedbd1dd6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd1dda60"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd1ddbf0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd1ddd80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd1dc020"/>
        <function-ref name="read" scoped="" ref="0x7fedbd1dc1b0"/>
        <function-ref name="write" scoped="" ref="0x7fedbd1dc340"/>
        <function-ref name="set" scoped="" ref="0x7fedbd1dc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC" ref="0x7fedbd1ebde0" loc="9:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC" scoped="" ref="0x7fedbd1ebde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd1e4180"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd1e4310"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd1e44a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd1e4630"/>
        <function-ref name="read" scoped="" ref="0x7fedbd1e47c0"/>
        <function-ref name="write" scoped="" ref="0x7fedbd1e4950"/>
        <function-ref name="set" scoped="" ref="0x7fedbd1e4ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF" ref="0x7fedbd1e1100" loc="12:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF" scoped="" ref="0x7fedbd1e1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd1e1480"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd1e1610"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd1e17a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd1e1930"/>
        <function-ref name="read" scoped="" ref="0x7fedbd1e1ac0"/>
        <function-ref name="write" scoped="" ref="0x7fedbd1e1c50"/>
        <function-ref name="set" scoped="" ref="0x7fedbd1e1de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fedbd1d8c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortAP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd1d8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd1d60a0"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd1d6230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd1d63c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd1d6550"/>
        <function-ref name="read" scoped="" ref="0x7fedbd1d66e0"/>
        <function-ref name="write" scoped="" ref="0x7fedbd1d6870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd1d6a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fedbd1bd390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortBP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd1bd390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd1bd710"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd1bd8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd1bda30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd1bdbc0"/>
        <function-ref name="read" scoped="" ref="0x7fedbd1bdd50"/>
        <function-ref name="write" scoped="" ref="0x7fedbd1bc020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd1bc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fedbd1b9910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd1b9910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd1b9c90"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd1b9e20"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd1b8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd1b81b0"/>
        <function-ref name="read" scoped="" ref="0x7fedbd1b8340"/>
        <function-ref name="write" scoped="" ref="0x7fedbd1b84d0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd1b8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fedbd1b4cd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd1b4cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd1b30a0"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd1b3230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd1b33c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd1b3550"/>
        <function-ref name="read" scoped="" ref="0x7fedbd1b36e0"/>
        <function-ref name="write" scoped="" ref="0x7fedbd1b3870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd1b3a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fedbd1ae390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortEP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd1ae390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd1ae710"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd1ae8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd1aea30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd1aebc0"/>
        <function-ref name="read" scoped="" ref="0x7fedbd1aed50"/>
        <function-ref name="write" scoped="" ref="0x7fedbd1ad020"/>
        <function-ref name="set" scoped="" ref="0x7fedbd1ad1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fedbd1aa910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortFP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd1aa910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd1aac90"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd1aae20"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd1a9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd1a91b0"/>
        <function-ref name="read" scoped="" ref="0x7fedbd1a9340"/>
        <function-ref name="write" scoped="" ref="0x7fedbd1a94d0"/>
        <function-ref name="set" scoped="" ref="0x7fedbd1a9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fedbd1a5cd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortGP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd1a5cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd1a40a0"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd1a4230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd1a43c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd1a4550"/>
        <function-ref name="read" scoped="" ref="0x7fedbd1a46e0"/>
        <function-ref name="write" scoped="" ref="0x7fedbd1a4870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd1a4a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fedbd1a0c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortHP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd1a0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd19f0a0"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd19f230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd19f3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd19f550"/>
        <function-ref name="read" scoped="" ref="0x7fedbd19f6e0"/>
        <function-ref name="write" scoped="" ref="0x7fedbd19f870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd19fa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fedbd19cc90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortJP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd19cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd19b0a0"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd19b230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd19b3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd19b550"/>
        <function-ref name="read" scoped="" ref="0x7fedbd19b6e0"/>
        <function-ref name="write" scoped="" ref="0x7fedbd19b870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd19ba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fedbd197c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortKP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd197c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd1960a0"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd196230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd1963c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd196550"/>
        <function-ref name="read" scoped="" ref="0x7fedbd1966e0"/>
        <function-ref name="write" scoped="" ref="0x7fedbd196870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd196a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fedbd192c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortLP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fedbd192c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbd1910a0"/>
        <function-ref name="clear" scoped="" ref="0x7fedbd191230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbd1913c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbd191550"/>
        <function-ref name="read" scoped="" ref="0x7fedbd1916e0"/>
        <function-ref name="write" scoped="" ref="0x7fedbd191870"/>
        <function-ref name="set" scoped="" ref="0x7fedbd191a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fedbd1862e0" loc="40:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7fedbd1862e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd655d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7fedbd653180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fedbd185110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7fedbd1749e0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7fedbd1749e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fedbd174d60"/>
        <function-ref name="fired" scoped="" ref="0x7fedbd173020"/>
        <function-ref name="disable" scoped="" ref="0x7fedbd1731b0"/>
        <function-ref name="edge" scoped="" ref="0x7fedbd173340"/>
        <function-ref name="enable" scoped="" ref="0x7fedbd1734d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fedbd173660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7fedbd1799e0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7fedbd1799e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fedbd179d60"/>
        <function-ref name="fired" scoped="" ref="0x7fedbd178020"/>
        <function-ref name="disable" scoped="" ref="0x7fedbd1781b0"/>
        <function-ref name="edge" scoped="" ref="0x7fedbd178340"/>
        <function-ref name="enable" scoped="" ref="0x7fedbd1784d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fedbd178660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7fedbd1769e0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7fedbd1769e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fedbd176d60"/>
        <function-ref name="fired" scoped="" ref="0x7fedbd175020"/>
        <function-ref name="disable" scoped="" ref="0x7fedbd1751b0"/>
        <function-ref name="edge" scoped="" ref="0x7fedbd175340"/>
        <function-ref name="enable" scoped="" ref="0x7fedbd1754d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fedbd175660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7fedbd1739e0" loc="52:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7fedbd1739e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fedbd173d60"/>
        <function-ref name="fired" scoped="" ref="0x7fedbd172020"/>
        <function-ref name="disable" scoped="" ref="0x7fedbd1721b0"/>
        <function-ref name="edge" scoped="" ref="0x7fedbd172340"/>
        <function-ref name="enable" scoped="" ref="0x7fedbd1724d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fedbd172660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7fedbd1789e0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7fedbd1789e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fedbd178d60"/>
        <function-ref name="fired" scoped="" ref="0x7fedbd177020"/>
        <function-ref name="disable" scoped="" ref="0x7fedbd1771b0"/>
        <function-ref name="edge" scoped="" ref="0x7fedbd177340"/>
        <function-ref name="enable" scoped="" ref="0x7fedbd1774d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fedbd177660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7fedbd1759e0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7fedbd1759e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fedbd175d60"/>
        <function-ref name="fired" scoped="" ref="0x7fedbd174020"/>
        <function-ref name="disable" scoped="" ref="0x7fedbd1741b0"/>
        <function-ref name="edge" scoped="" ref="0x7fedbd174340"/>
        <function-ref name="enable" scoped="" ref="0x7fedbd1744d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fedbd174660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7fedbd44c9b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7fedbd44c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fedbd44cd30"/>
        <function-ref name="fired" scoped="" ref="0x7fedbd179020"/>
        <function-ref name="disable" scoped="" ref="0x7fedbd1791b0"/>
        <function-ref name="edge" scoped="" ref="0x7fedbd179340"/>
        <function-ref name="enable" scoped="" ref="0x7fedbd1794d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fedbd179660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7fedbd1779e0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7fedbd1779e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fedbd177d60"/>
        <function-ref name="fired" scoped="" ref="0x7fedbd176020"/>
        <function-ref name="disable" scoped="" ref="0x7fedbd1761b0"/>
        <function-ref name="edge" scoped="" ref="0x7fedbd176340"/>
        <function-ref name="enable" scoped="" ref="0x7fedbd1764d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fedbd176660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7fedbd16a7a0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7fedbd16a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fedbd16ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7fedbd16e020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7fedbd16e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fedbd16e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7fedbd16d7a0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7fedbd16d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fedbd16db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7fedbd169020" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7fedbd169020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fedbd1693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7fedbd16e7a0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7fedbd16e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fedbd16eb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7fedbd16a020" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7fedbd16a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fedbd16a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7fedbd16c860" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7fedbd16c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fedbd16cbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7fedbd16d020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7fedbd16d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fedbd16d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fedbd14d060" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fedbd14d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fedbd14d3e0"/>
        <function-ref name="fired" scoped="" ref="0x7fedbd14d570"/>
        <function-ref name="disable" scoped="" ref="0x7fedbd14d700"/>
        <function-ref name="edge" scoped="" ref="0x7fedbd14d890"/>
        <function-ref name="enable" scoped="" ref="0x7fedbd14da20"/>
        <function-ref name="getValue" scoped="" ref="0x7fedbd14dbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fedbd14de80" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fedbd14de80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fedbd138220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fedbd136da0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fedbd136da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fedbd134180"/>
        <function-ref name="fired" scoped="" ref="0x7fedbd134310"/>
        <function-ref name="disable" scoped="" ref="0x7fedbd1344a0"/>
        <function-ref name="edge" scoped="" ref="0x7fedbd134630"/>
        <function-ref name="enable" scoped="" ref="0x7fedbd1347c0"/>
        <function-ref name="getValue" scoped="" ref="0x7fedbd134950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fedbd134c20" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fedbd134c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fedbd133020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fedbd131c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fedbd131c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fedbd1300a0"/>
        <function-ref name="fired" scoped="" ref="0x7fedbd130230"/>
        <function-ref name="disable" scoped="" ref="0x7fedbd1303c0"/>
        <function-ref name="edge" scoped="" ref="0x7fedbd130550"/>
        <function-ref name="enable" scoped="" ref="0x7fedbd1306e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fedbd130870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fedbd130b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fedbd130b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fedbd12f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fedbd12dc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fedbd12dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fedbd12c0a0"/>
        <function-ref name="fired" scoped="" ref="0x7fedbd12c230"/>
        <function-ref name="disable" scoped="" ref="0x7fedbd12c3c0"/>
        <function-ref name="edge" scoped="" ref="0x7fedbd12c550"/>
        <function-ref name="enable" scoped="" ref="0x7fedbd12c6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fedbd12c870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fedbd12cb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fedbd12cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fedbd12b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fedbd128c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fedbd128c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fedbd1270a0"/>
        <function-ref name="fired" scoped="" ref="0x7fedbd127230"/>
        <function-ref name="disable" scoped="" ref="0x7fedbd1273c0"/>
        <function-ref name="edge" scoped="" ref="0x7fedbd127550"/>
        <function-ref name="enable" scoped="" ref="0x7fedbd1276e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fedbd127870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fedbd127b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fedbd127b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fedbd126020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fedbd124c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fedbd124c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fedbd1230a0"/>
        <function-ref name="fired" scoped="" ref="0x7fedbd123230"/>
        <function-ref name="disable" scoped="" ref="0x7fedbd1233c0"/>
        <function-ref name="edge" scoped="" ref="0x7fedbd123550"/>
        <function-ref name="enable" scoped="" ref="0x7fedbd1236e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fedbd123870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fedbd123b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fedbd123b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fedbd122020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fedbd120c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fedbd120c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fedbd11f0a0"/>
        <function-ref name="fired" scoped="" ref="0x7fedbd11f230"/>
        <function-ref name="disable" scoped="" ref="0x7fedbd11f3c0"/>
        <function-ref name="edge" scoped="" ref="0x7fedbd11f550"/>
        <function-ref name="enable" scoped="" ref="0x7fedbd11f6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fedbd11f870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fedbd11fb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fedbd11fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fedbd11d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fedbd11bc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fedbd11bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fedbd11a0a0"/>
        <function-ref name="fired" scoped="" ref="0x7fedbd11a230"/>
        <function-ref name="disable" scoped="" ref="0x7fedbd11a3c0"/>
        <function-ref name="edge" scoped="" ref="0x7fedbd11a550"/>
        <function-ref name="enable" scoped="" ref="0x7fedbd11a6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fedbd11a870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fedbd11ab40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fedbd11ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fedbd119020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fedbd10f9f0" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fedbd10f9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fedbd10fd70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fedbcf0c020"/>
        <function-ref name="request" scoped="" ref="0x7fedbcf0c1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fedbcf0c340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fedbcf0c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fedbcf0c880" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fedbcf0c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fedbd5004c0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fedbd500780"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fedbcf0b500"/>
        <function-ref name="writeDone" scoped="" ref="0x7fedbcf099b0"/>
        <function-ref name="write" scoped="" ref="0x7fedbcf0a150"/>
        <function-ref name="readDone" scoped="" ref="0x7fedbcf0ad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fedbd1011d0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fedbd1011d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fedbd101550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fedbd1016e0"/>
        <function-ref name="request" scoped="" ref="0x7fedbd101870"/>
        <function-ref name="granted" scoped="" ref="0x7fedbd101a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fedbd101b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fedbd1005e0" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fedbd1005e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fedbd5004c0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fedbd500780"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fedbd0ff240"/>
        <function-ref name="writeDone" scoped="" ref="0x7fedbd0fc6d0"/>
        <function-ref name="write" scoped="" ref="0x7fedbd0ffe50"/>
        <function-ref name="readDone" scoped="" ref="0x7fedbd0fda90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fedbd072bf0" loc="92:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fedbd072bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fedbd071020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fedbd0711b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fedbd070930" loc="96:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fedbd070930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fedbd070cd0"/>
        <function-ref name="configure" scoped="" ref="0x7fedbd070e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fedbd071400" loc="93:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fedbd071400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fedbd071780"/>
        <function-ref name="requested" scoped="" ref="0x7fedbd071910"/>
        <function-ref name="granted" scoped="" ref="0x7fedbd071aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fedbd071c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fedbd071dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fedbd073e60" loc="91:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fedbd073e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fedbd072230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fedbd0723c0"/>
        <function-ref name="request" scoped="" ref="0x7fedbd072550"/>
        <function-ref name="granted" scoped="" ref="0x7fedbd0726e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fedbd072870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fedbd070060" loc="94:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fedbd070060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fedbd0703e0"/>
        <function-ref name="userId" scoped="" ref="0x7fedbd070570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fedbc741810" loc="44:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fedbc741810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbc741b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fedbc741e20" loc="45:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fedbc741e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fedbc7401c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fedbc740350"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fedbc7404e0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fedbc740670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fedbc73ed80" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fedbc73ed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fedbc73d180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fedbc73d310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fedbc73bb60" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fedbc73bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fedbc73a020"/>
        <function-ref name="configure" scoped="" ref="0x7fedbc73a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fedbc73a440" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fedbc73a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fedbc73a7c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fedbc73a950"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fedbc73aae0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fedbc73ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fedbc73d560" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fedbc73d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fedbc73d8e0"/>
        <function-ref name="requested" scoped="" ref="0x7fedbc73da70"/>
        <function-ref name="granted" scoped="" ref="0x7fedbc73dc00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fedbc73dd90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fedbc73b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fedbc739020" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fedbc739020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fedbc7393a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fedbc739530"/>
        <function-ref name="led1On" scoped="" ref="0x7fedbc7396c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fedbc739850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fedbc7399e0"/>
        <function-ref name="get" scoped="" ref="0x7fedbc739b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fedbc739d00"/>
        <function-ref name="led0On" scoped="" ref="0x7fedbc7384d0"/>
        <function-ref name="set" scoped="" ref="0x7fedbc7381b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fedbc738020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fedbc738340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fedbc73e020" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fedbc73e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fedbc73e3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fedbc73e550"/>
        <function-ref name="request" scoped="" ref="0x7fedbc73e6e0"/>
        <function-ref name="granted" scoped="" ref="0x7fedbc73e870"/>
        <function-ref name="isOwner" scoped="" ref="0x7fedbc73ea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fedbc73b270" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fedbc73b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fedbc73b5f0"/>
        <function-ref name="userId" scoped="" ref="0x7fedbc73b780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fedbc7387a0" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fedbc7387a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fedbc738b20"/>
        <function-ref name="runTask" scoped="" ref="0x7fedbc738cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fedbd06c400" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fedbd06c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fedbd06c780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fedbd06c9d0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fedbd06c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fedbd06cd50"/>
        <function-ref name="requested" scoped="" ref="0x7fedbd05e020"/>
        <function-ref name="granted" scoped="" ref="0x7fedbd05e1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fedbd05e340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fedbd05e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fedbd06dc40" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fedbd06dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fedbd06c020"/>
        <function-ref name="stop" scoped="" ref="0x7fedbd06c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fedbd05e720" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fedbd05e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fedbd05eaa0"/>
        <function-ref name="userId" scoped="" ref="0x7fedbd05ec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7fedbd019cd0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7fedbd019cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7fedbd0170a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fedbd01c020" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fedbd01c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fedbd5004c0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fedbd500780"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fedbd01cc50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fedbd019150"/>
        <function-ref name="write" scoped="" ref="0x7fedbd01b8c0"/>
        <function-ref name="readDone" scoped="" ref="0x7fedbd01a510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fedbd017330" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fedbd017330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fedbd0176b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fedbd017840"/>
        <function-ref name="led1On" scoped="" ref="0x7fedbd0179d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fedbd017b60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fedbd017cf0"/>
        <function-ref name="get" scoped="" ref="0x7fedbd017e80"/>
        <function-ref name="led1Off" scoped="" ref="0x7fedbd016030"/>
        <function-ref name="led2On" scoped="" ref="0x7fedbd016670"/>
        <function-ref name="set" scoped="" ref="0x7fedbd016350"/>
        <function-ref name="led2Off" scoped="" ref="0x7fedbd0161c0"/>
        <function-ref name="led0On" scoped="" ref="0x7fedbd0164e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fedbd05a470" loc="41:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fedbd05a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fedbd05a810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fedbd05a9a0"/>
        <function-ref name="request" scoped="" ref="0x7fedbd05ab30"/>
        <function-ref name="granted" scoped="" ref="0x7fedbd05acc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fedbd05ae50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fedbd022370" loc="42:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fedbd022370"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fedbd5004c0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fedbd500780"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fedbd021020"/>
        <function-ref name="writeDone" scoped="" ref="0x7fedbd01f510"/>
        <function-ref name="write" scoped="" ref="0x7fedbd021c50"/>
        <function-ref name="readDone" scoped="" ref="0x7fedbd0208c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7fedbd01d210" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7fedbd01d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fedbd01d5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fedbd01d740"/>
        <function-ref name="request" scoped="" ref="0x7fedbd01d8d0"/>
        <function-ref name="granted" scoped="" ref="0x7fedbd01da60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fedbd01dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7fedbcfa47f0" loc="79:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7fedbcfa47f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7fedbcfa4b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7fedbcfa4e40" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fedbcfa4e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fedbcfa31e0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fedbcfa3370"/>
        <function-ref name="setStart" scoped="" ref="0x7fedbcfa3500"/>
        <function-ref name="status" scoped="" ref="0x7fedbcfa3690"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fedbcfa3820"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fedbcfa39b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fedbcfa3b40"/>
        <function-ref name="read" scoped="" ref="0x7fedbcfa3cd0"/>
        <function-ref name="init" scoped="" ref="0x7fedbcfa3e60"/>
        <function-ref name="enableAck" scoped="" ref="0x7fedbcfa2020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fedbcfa21b0"/>
        <function-ref name="hasStart" scoped="" ref="0x7fedbcfa2340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fedbcfa24d0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fedbcfa2760"/>
        <function-ref name="enable" scoped="" ref="0x7fedbcfa28f0"/>
        <function-ref name="write" scoped="" ref="0x7fedbcfa2a80"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fedbcfa2c10"/>
        <function-ref name="off" scoped="" ref="0x7fedbcfa2da0"/>
        <function-ref name="setStop" scoped="" ref="0x7fedbcfa1020"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fedbcfa11b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fedbcfa1340"/>
        <function-ref name="hasStop" scoped="" ref="0x7fedbcfa14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7fedbcfa17a0" loc="82:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7fedbcfa17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fedbcfa1b20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fedbcfa1cb0"/>
        <function-ref name="led1On" scoped="" ref="0x7fedbcfa1e40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fedbcfa0020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fedbcfa01b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcfa0340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fedbcfa04d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fedbcfa0b10"/>
        <function-ref name="set" scoped="" ref="0x7fedbcfa07f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fedbcfa0660"/>
        <function-ref name="led0On" scoped="" ref="0x7fedbcfa0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7fedbcfa0de0" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7fedbcfa0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fedbcf9f180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fedbcf9f310"/>
        <function-ref name="led1On" scoped="" ref="0x7fedbcf9f4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fedbcf9f630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fedbcf9f7c0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcf9f950"/>
        <function-ref name="led1Off" scoped="" ref="0x7fedbcf9fae0"/>
        <function-ref name="led2On" scoped="" ref="0x7fedbcf9e1b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcf9fe00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fedbcf9fc70"/>
        <function-ref name="led0On" scoped="" ref="0x7fedbcf9e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fedbcf9e480" loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7fedbcf9e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fedbcf9e800"/>
        <function-ref name="runTask" scoped="" ref="0x7fedbcf9e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fedbcfa91e0" loc="77:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fedbcfa91e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fedbcfa9560"/>
        <function-ref name="stop" scoped="" ref="0x7fedbcfa96f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fedbcfa9aa0" loc="78:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fedbcfa9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fedbd5004c0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fedbd500780"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fedbcfa86f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fedbcfa5c30"/>
        <function-ref name="write" scoped="" ref="0x7fedbcfa6330"/>
        <function-ref name="readDone" scoped="" ref="0x7fedbcfa5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7fedbcf9bab0" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fedbcf9bab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fedbcf9be30"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fedbcf97020"/>
        <function-ref name="setStart" scoped="" ref="0x7fedbcf971b0"/>
        <function-ref name="status" scoped="" ref="0x7fedbcf97340"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fedbcf974d0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fedbcf97660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fedbcf977f0"/>
        <function-ref name="read" scoped="" ref="0x7fedbcf97980"/>
        <function-ref name="init" scoped="" ref="0x7fedbcf97b10"/>
        <function-ref name="enableAck" scoped="" ref="0x7fedbcf97ca0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fedbcf97e30"/>
        <function-ref name="hasStart" scoped="" ref="0x7fedbcf96020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fedbcf961b0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fedbcf96440"/>
        <function-ref name="enable" scoped="" ref="0x7fedbcf965d0"/>
        <function-ref name="write" scoped="" ref="0x7fedbcf96760"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fedbcf968f0"/>
        <function-ref name="off" scoped="" ref="0x7fedbcf96a80"/>
        <function-ref name="setStop" scoped="" ref="0x7fedbcf96c10"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fedbcf96da0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fedbcf95020"/>
        <function-ref name="hasStop" scoped="" ref="0x7fedbcf951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7fedbcf92440" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fedbcf92440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fedbcf927c0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fedbcf92950"/>
        <function-ref name="setStart" scoped="" ref="0x7fedbcf92ae0"/>
        <function-ref name="status" scoped="" ref="0x7fedbcf92c70"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fedbcf92e00"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fedbcf91020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fedbcf911b0"/>
        <function-ref name="read" scoped="" ref="0x7fedbcf91340"/>
        <function-ref name="init" scoped="" ref="0x7fedbcf914d0"/>
        <function-ref name="enableAck" scoped="" ref="0x7fedbcf91660"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fedbcf917f0"/>
        <function-ref name="hasStart" scoped="" ref="0x7fedbcf91980"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fedbcf91b10"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fedbcf91da0"/>
        <function-ref name="enable" scoped="" ref="0x7fedbcf90020"/>
        <function-ref name="write" scoped="" ref="0x7fedbcf901b0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fedbcf90340"/>
        <function-ref name="off" scoped="" ref="0x7fedbcf904d0"/>
        <function-ref name="setStop" scoped="" ref="0x7fedbcf90660"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fedbcf907f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fedbcf90980"/>
        <function-ref name="hasStop" scoped="" ref="0x7fedbcf90b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7fedbcf8f020" loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7fedbcf8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcf8f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcf8f530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcf8f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcf8f850"/>
        <function-ref name="get" scoped="" ref="0x7fedbcf8f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcf8fb70"/>
        <function-ref name="set" scoped="" ref="0x7fedbcf8fd00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcf8e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7fedbcf8e360" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7fedbcf8e360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcf8e6e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcf8e870"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcf8ea00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcf8eb90"/>
        <function-ref name="get" scoped="" ref="0x7fedbcf8ed20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcf8d020"/>
        <function-ref name="set" scoped="" ref="0x7fedbcf8d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcf8d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fedbcf584a0" loc="46:../tinyos_ws18/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fedbcf584a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fedbcf58820"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fedbcf589b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fedbcf58b40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fedbcf58cd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fedbcf58e60"/>
        <function-ref name="get" scoped="" ref="0x7fedbcf55020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fedbcf551b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fedbcf557f0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcf55340"/>
        <function-ref name="led0On" scoped="" ref="0x7fedbcf554d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fedbcf55660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fedbcf50550" loc="50:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fedbcf50550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcf508d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcf50a60"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcf50bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcf50d80"/>
        <function-ref name="get" scoped="" ref="0x7fedbcf4f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcf4f1b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcf4f340"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcf4f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fedbcf547c0" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fedbcf547c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbcf54b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fedbcf4f7f0" loc="51:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fedbcf4f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcf4fb70"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcf4fd00"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcf4d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcf4d1b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcf4d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcf4d4d0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcf4d660"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcf4d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fedbcf54dc0" loc="47:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fedbcf54dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fedbcf51180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fedbcf51310"/>
        <function-ref name="led1On" scoped="" ref="0x7fedbcf514a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fedbcf51630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fedbcf517c0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcf51950"/>
        <function-ref name="led1Off" scoped="" ref="0x7fedbcf51ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fedbcf501b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcf51c70"/>
        <function-ref name="led0On" scoped="" ref="0x7fedbcf51e00"/>
        <function-ref name="led2On" scoped="" ref="0x7fedbcf50020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fedbcf4db10" loc="52:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fedbcf4db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcf4c020"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcf4c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcf4c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcf4c4d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcf4c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcf4c7f0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcf4c980"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcf4cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fedbcf311d0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fedbcf311d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcf31550"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcf316e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcf31870"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcf31a00"/>
        <function-ref name="get" scoped="" ref="0x7fedbcf31b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcf31d20"/>
        <function-ref name="set" scoped="" ref="0x7fedbcf30020"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcf301b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fedbcf30510" loc="45:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fedbcf30510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcf30890"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcf30a20"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcf30bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcf30d40"/>
        <function-ref name="get" scoped="" ref="0x7fedbcf2f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcf2f1b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcf2f340"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcf2f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fedbcf2eab0" loc="48:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fedbcf2eab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbcf2ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fedbcf2f830" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fedbcf2f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcf2fbb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcf2fd40"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcf2e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcf2e1b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcf2e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcf2e4d0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcf2e660"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcf2e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fedbcf25340" loc="46:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fedbcf25340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbcf256c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fedbcf25980" loc="47:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fedbcf25980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fedbcf25d00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fedbcf24020"/>
        <function-ref name="led1On" scoped="" ref="0x7fedbcf241b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fedbcf24340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fedbcf244d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcf24660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fedbcf247f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fedbcf24e30"/>
        <function-ref name="set" scoped="" ref="0x7fedbcf24980"/>
        <function-ref name="led0On" scoped="" ref="0x7fedbcf24b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fedbcf24ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fedbcd46140" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="FMClickC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fedbcd46140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fedbcd42630"/>
        <function-ref name="fired" scoped="" ref="0x7fedbcd45b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fedbcd44920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fedbcd444a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fedbcd41020"/>
        <function-ref name="gett0" scoped="" ref="0x7fedbcd42ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fedbcd44020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fedbcd46d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fedbcd42020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fedbcd45220"/>
        <function-ref name="stop" scoped="" ref="0x7fedbcd456f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fedbcefb020" loc="49:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fedbcefb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fedbcef8630"/>
        <function-ref name="fired" scoped="" ref="0x7fedbcefaa60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fedbcef9920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fedbcef94a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fedbcef6020"/>
        <function-ref name="gett0" scoped="" ref="0x7fedbcef8ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fedbcef9020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fedbcefbc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fedbcef8020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fedbcefa110"/>
        <function-ref name="stop" scoped="" ref="0x7fedbcefa5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fedbcef3c30" loc="46:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fedbcef3c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fedbceee110"/>
        <function-ref name="fired" scoped="" ref="0x7fedbcef06a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fedbceef4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fedbceef020"/>
        <function-ref name="getdt" scoped="" ref="0x7fedbceeea10"/>
        <function-ref name="gett0" scoped="" ref="0x7fedbceee590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fedbcef0b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fedbcef2860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fedbceefab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fedbcef2d30"/>
        <function-ref name="stop" scoped="" ref="0x7fedbcef0220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fedbcee9500" loc="47:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fedbcee9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fedbceeb170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fedbcef6e60" loc="45:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fedbcef6e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbcef3210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7fedbceda020" loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7fedbceda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fedbcedae30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fedbced5800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fedbced5340"/>
        <function-ref name="overflow" scoped="" ref="0x7fedbced5cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fedbceeac80" loc="27:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fedbceeac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbcee60a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7fedbcedd960" loc="28:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7fedbcedd960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fedbcedc1b0"/>
        <function-ref name="fired" scoped="" ref="0x7fedbcee31b0"/>
        <function-ref name="startAt" scoped="" ref="0x7fedbcee3b30"/>
        <function-ref name="isRunning" scoped="" ref="0x7fedbcee3670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fedbcedc670"/>
        <function-ref name="start" scoped="" ref="0x7fedbcee47c0"/>
        <function-ref name="stop" scoped="" ref="0x7fedbcee4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fedbcde54b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fedbcde54b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fedbcde2db0"/>
        <function-ref name="fired" scoped="" ref="0x7fedbcde3da0"/>
        <function-ref name="startAt" scoped="" ref="0x7fedbcde2760"/>
        <function-ref name="isRunning" scoped="" ref="0x7fedbcde22a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fedbcde12a0"/>
        <function-ref name="start" scoped="" ref="0x7fedbcde33d0"/>
        <function-ref name="stop" scoped="" ref="0x7fedbcde38e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fedbcde6ba0" loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fedbcde6ba0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fedbd70c020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fedbd70c020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbcde5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fedbcde18d0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fedbcde18d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fedbcde0780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fedbcdde150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fedbcde0c40"/>
        <function-ref name="overflow" scoped="" ref="0x7fedbcdde610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7fedbc69a190" loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fedbc69a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fedbc69a510"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fedbc69a6a0"/>
        <function-ref name="getControlA" scoped="" ref="0x7fedbc69a830"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fedbc69a9c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7fedbc69ab50"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fedbc69ace0"/>
        <function-ref name="getControlB" scoped="" ref="0x7fedbc69ae70"/>
        <function-ref name="setControlA" scoped="" ref="0x7fedbc699030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fedbc6a79c0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fedbc6a79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fedbc6a3260"/>
        <function-ref name="fired" scoped="" ref="0x7fedbc6a4220"/>
        <function-ref name="startAt" scoped="" ref="0x7fedbc6a4ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fedbc6a46e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fedbc6a3720"/>
        <function-ref name="start" scoped="" ref="0x7fedbc6a6810"/>
        <function-ref name="stop" scoped="" ref="0x7fedbc6a6d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fedbc6a71b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fedbc6a71b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fedbc6a7530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fedbc6a3d50" loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fedbc6a3d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fedbc6a2ba0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fedbc6a1550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fedbc6a1090"/>
        <function-ref name="overflow" scoped="" ref="0x7fedbc6a1a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x7fedbc696780" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7fedbc696780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7fedbc696b00"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7fedbc696c90"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fedbc696e20"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fedbc694020"/>
        <function-ref name="countBusy" scoped="" ref="0x7fedbc6941b0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fedbc694340"/>
        <function-ref name="getAssr" scoped="" ref="0x7fedbc6944d0"/>
        <function-ref name="setAssr" scoped="" ref="0x7fedbc694660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7fedbc6993e0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fedbc6993e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fedbc697e60"/>
        <function-ref name="fired" scoped="" ref="0x7fedbc698a60"/>
        <function-ref name="get" scoped="" ref="0x7fedbc698090"/>
        <function-ref name="reset" scoped="" ref="0x7fedbc697020"/>
        <function-ref name="isOn" scoped="" ref="0x7fedbc696350"/>
        <function-ref name="set" scoped="" ref="0x7fedbc698550"/>
        <function-ref name="start" scoped="" ref="0x7fedbc6974e0"/>
        <function-ref name="stop" scoped="" ref="0x7fedbc6979a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fedbc69f020" loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fedbc69f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fedbc69c350"/>
        <function-ref name="test" scoped="" ref="0x7fedbc69d9a0"/>
        <function-ref name="get" scoped="" ref="0x7fedbc69fc50"/>
        <function-ref name="setScale" scoped="" ref="0x7fedbc69c810"/>
        <function-ref name="getScale" scoped="" ref="0x7fedbc69cd20"/>
        <function-ref name="reset" scoped="" ref="0x7fedbc69eb20"/>
        <function-ref name="overflow" scoped="" ref="0x7fedbc69e660"/>
        <function-ref name="isOn" scoped="" ref="0x7fedbc69de60"/>
        <function-ref name="set" scoped="" ref="0x7fedbc69e150"/>
        <function-ref name="start" scoped="" ref="0x7fedbc69d020"/>
        <function-ref name="stop" scoped="" ref="0x7fedbc69d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fedbce57c10" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fedbce57c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fedbce56020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fedbce561b0"/>
        <function-ref name="getControlA" scoped="" ref="0x7fedbce56340"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fedbce564d0"/>
        <function-ref name="setControlB" scoped="" ref="0x7fedbce56660"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fedbce567f0"/>
        <function-ref name="getControlB" scoped="" ref="0x7fedbce56980"/>
        <function-ref name="setControlA" scoped="" ref="0x7fedbce56b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7fedbce51570" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7fedbce51570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7fedbce518f0"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7fedbce51a80"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fedbce51c10"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fedbce51da0"/>
        <function-ref name="countBusy" scoped="" ref="0x7fedbce50020"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fedbce501b0"/>
        <function-ref name="getAssr" scoped="" ref="0x7fedbce50340"/>
        <function-ref name="setAssr" scoped="" ref="0x7fedbce504d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fedbce55060" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fedbce55060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fedbce52a10"/>
        <function-ref name="fired" scoped="" ref="0x7fedbce546c0"/>
        <function-ref name="get" scoped="" ref="0x7fedbce55c90"/>
        <function-ref name="reset" scoped="" ref="0x7fedbce54b80"/>
        <function-ref name="isOn" scoped="" ref="0x7fedbce51020"/>
        <function-ref name="set" scoped="" ref="0x7fedbce541b0"/>
        <function-ref name="start" scoped="" ref="0x7fedbce52090"/>
        <function-ref name="stop" scoped="" ref="0x7fedbce52550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fedbce5e8f0" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fedbce5e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fedbce58cd0"/>
        <function-ref name="test" scoped="" ref="0x7fedbce58350"/>
        <function-ref name="get" scoped="" ref="0x7fedbce5b5a0"/>
        <function-ref name="setScale" scoped="" ref="0x7fedbce571b0"/>
        <function-ref name="getScale" scoped="" ref="0x7fedbce576c0"/>
        <function-ref name="reset" scoped="" ref="0x7fedbce5a4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fedbce5a020"/>
        <function-ref name="isOn" scoped="" ref="0x7fedbce58810"/>
        <function-ref name="set" scoped="" ref="0x7fedbce5ba60"/>
        <function-ref name="start" scoped="" ref="0x7fedbce5a9a0"/>
        <function-ref name="stop" scoped="" ref="0x7fedbce5ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fedbce48db0" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fedbce48db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fedbce47180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fedbce47310"/>
        <function-ref name="getControlA" scoped="" ref="0x7fedbce474a0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fedbce47630"/>
        <function-ref name="setControlB" scoped="" ref="0x7fedbce477c0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fedbce47950"/>
        <function-ref name="getControlB" scoped="" ref="0x7fedbce47ae0"/>
        <function-ref name="setControlA" scoped="" ref="0x7fedbce47c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fedbce424c0" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fedbce424c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fedbce42840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7fedbce42bf0" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7fedbce42bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7fedbce41020"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7fedbce411b0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fedbce41340"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fedbce414d0"/>
        <function-ref name="countBusy" scoped="" ref="0x7fedbce41660"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fedbce417f0"/>
        <function-ref name="getAssr" scoped="" ref="0x7fedbce41980"/>
        <function-ref name="setAssr" scoped="" ref="0x7fedbce41b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fedbce451a0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fedbce451a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fedbce43b30"/>
        <function-ref name="fired" scoped="" ref="0x7fedbce447f0"/>
        <function-ref name="get" scoped="" ref="0x7fedbce45dd0"/>
        <function-ref name="reset" scoped="" ref="0x7fedbce44cb0"/>
        <function-ref name="isOn" scoped="" ref="0x7fedbce42020"/>
        <function-ref name="set" scoped="" ref="0x7fedbce442e0"/>
        <function-ref name="start" scoped="" ref="0x7fedbce431b0"/>
        <function-ref name="stop" scoped="" ref="0x7fedbce43670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fedbce4da10" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fedbce4da10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fedbce49e60"/>
        <function-ref name="test" scoped="" ref="0x7fedbce494e0"/>
        <function-ref name="get" scoped="" ref="0x7fedbce4c6b0"/>
        <function-ref name="setScale" scoped="" ref="0x7fedbce48350"/>
        <function-ref name="getScale" scoped="" ref="0x7fedbce48860"/>
        <function-ref name="reset" scoped="" ref="0x7fedbce4a590"/>
        <function-ref name="overflow" scoped="" ref="0x7fedbce4a0d0"/>
        <function-ref name="isOn" scoped="" ref="0x7fedbce499a0"/>
        <function-ref name="set" scoped="" ref="0x7fedbce4cb70"/>
        <function-ref name="start" scoped="" ref="0x7fedbce4aa50"/>
        <function-ref name="stop" scoped="" ref="0x7fedbce49020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fedbcdac020" loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7fedbcdac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fedbcdac3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fedbcdac530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fedbcdb1cd0" loc="49:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fedbcdb1cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fedbcdad670"/>
        <function-ref name="fired" scoped="" ref="0x7fedbcdae550"/>
        <function-ref name="startAt" scoped="" ref="0x7fedbcdad020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fedbcdaea10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fedbcdadb30"/>
        <function-ref name="start" scoped="" ref="0x7fedbcdafb60"/>
        <function-ref name="stop" scoped="" ref="0x7fedbcdae090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fedbcdb6830" loc="48:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fedbcdb6830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fedbcdb2cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fedbcdb3300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fedbcdb20d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fedbcdb3c00"/>
        <function-ref name="getdt" scoped="" ref="0x7fedbcdb1660"/>
        <function-ref name="gett0" scoped="" ref="0x7fedbcdb11e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fedbcdb3780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fedbcdb5480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fedbcdb26e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fedbcdb5950"/>
        <function-ref name="stop" scoped="" ref="0x7fedbcdb5e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fedbcd5ca00" loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7fedbcd5ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fedbcd5cd80"/>
        <function-ref name="runTask" scoped="" ref="0x7fedbcd5a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fedbcd61640" loc="49:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7fedbcd61640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fedbcd5dc40"/>
        <function-ref name="fired" scoped="" ref="0x7fedbcd5e1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fedbcd5d020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fedbcd5eae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fedbcd5c590"/>
        <function-ref name="gett0" scoped="" ref="0x7fedbcd5c110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fedbcd5e660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fedbcd5f390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fedbcd5d630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fedbcd5f860"/>
        <function-ref name="stop" scoped="" ref="0x7fedbcd5fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fedbcd67150" loc="48:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fedbcd67150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fedbcd62700"/>
        <function-ref name="fired" scoped="" ref="0x7fedbcd65c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fedbcd64a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fedbcd645b0"/>
        <function-ref name="getdt" scoped="" ref="0x7fedbcd61090"/>
        <function-ref name="gett0" scoped="" ref="0x7fedbcd62ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fedbcd64110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fedbcd67d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fedbcd620d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fedbcd652a0"/>
        <function-ref name="stop" scoped="" ref="0x7fedbcd65790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fedbcd58790" loc="48:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fedbcd58790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fedbcd4e3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fedbcd4ea60" loc="49:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fedbcd4ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fedbd6579b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fedbd657d20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fedbcd4d890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fedbcd4c260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fedbcd4dd50"/>
        <function-ref name="overflow" scoped="" ref="0x7fedbcd4c720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7fedbcd02020" loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7fedbcd02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd027a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd02930"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd02ac0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd02c50"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd02de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd01020"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd011b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd01340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7fedbcd1f800" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7fedbcd1f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd1fb80"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd1fd10"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd1e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd1e1b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd1e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd1e4d0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd1e660"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd1e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7fedbcd13670" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7fedbcd13670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd139f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd13b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd13d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd11020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd111b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd11340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd114d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd11660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7fedbcd08020" loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7fedbcd08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd083a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd08530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd086c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd08850"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd089e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd08b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd08d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7fedbccfc350" loc="108:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7fedbccfc350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccfc6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccfc860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccfc9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccfcb80"/>
        <function-ref name="get" scoped="" ref="0x7fedbccfcd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccfb020"/>
        <function-ref name="set" scoped="" ref="0x7fedbccfb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccfb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH2" ref="0x7fedbccf9cb0" loc="112:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH2" scoped="" ref="0x7fedbccf9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccf80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccf8230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccf83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccf8550"/>
        <function-ref name="get" scoped="" ref="0x7fedbccf86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccf8870"/>
        <function-ref name="set" scoped="" ref="0x7fedbccf8a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccf8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH7" ref="0x7fedbccf2cb0" loc="117:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH7" scoped="" ref="0x7fedbccf2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccf10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccf1230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccf13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccf1550"/>
        <function-ref name="get" scoped="" ref="0x7fedbccf16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccf1870"/>
        <function-ref name="set" scoped="" ref="0x7fedbccf1a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccf1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ6" ref="0x7fedbcce9350" loc="125:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ6" scoped="" ref="0x7fedbcce9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcce96d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcce9860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcce99f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcce9b80"/>
        <function-ref name="get" scoped="" ref="0x7fedbcce9d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcce8020"/>
        <function-ref name="set" scoped="" ref="0x7fedbcce81b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcce8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK0" ref="0x7fedbcce7990" loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK0" scoped="" ref="0x7fedbcce7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcce7d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcce6020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcce61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcce6340"/>
        <function-ref name="get" scoped="" ref="0x7fedbcce64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcce6660"/>
        <function-ref name="set" scoped="" ref="0x7fedbcce67f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcce6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL2" ref="0x7fedbccdb990" loc="139:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL2" scoped="" ref="0x7fedbccdb990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccdbd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccda020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccda1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccda340"/>
        <function-ref name="get" scoped="" ref="0x7fedbccda4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccda660"/>
        <function-ref name="set" scoped="" ref="0x7fedbccda7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccda980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7fedbcd37990" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7fedbcd37990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd37d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd36020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd361b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd36340"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd364d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd36660"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd367f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd36980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7fedbcd0b990" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7fedbcd0b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd0bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd0a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd0a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd0a340"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd0a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd0a660"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd0a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd0a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7fedbcd34020" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7fedbcd34020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd343a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd34530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd346c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd34850"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd349e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd34b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd34d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd33020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7fedbcd27020" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7fedbcd27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd273a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd27530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd276c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd27850"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd279e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd27b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd27d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7fedbcd1b060" loc="80:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7fedbcd1b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd1b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd1b570"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd1b700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd1b890"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd1ba20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd1bbb0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd1bd40"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7fedbcd0e020" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7fedbcd0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd0e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd0e530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd0e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd0e850"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd0e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd0eb70"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd0ed00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7fedbcd3db20" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7fedbcd3db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd3c020"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd3c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd3c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd3c4d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd3c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd3c7f0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd3c980"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd3cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7fedbcd31990" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7fedbcd31990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd31d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd30020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd301b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd30340"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd304d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd30660"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd307f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd30980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7fedbcd24990" loc="72:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7fedbcd24990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd24d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd23020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd231b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd23340"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd234d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd23660"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd237f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd23980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7fedbcd18990" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7fedbcd18990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd18d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd17020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd171b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd17340"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd174d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd17660"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd177f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd17980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7fedbcd05990" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7fedbcd05990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd05d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd04020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd04340"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd04660"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd047f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd04980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7fedbccffcb0" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7fedbccffcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccfe0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccfe230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccfe3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccfe550"/>
        <function-ref name="get" scoped="" ref="0x7fedbccfe6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccfe870"/>
        <function-ref name="set" scoped="" ref="0x7fedbccfea00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccfeb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH0" ref="0x7fedbccfb670" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH0" scoped="" ref="0x7fedbccfb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccfb9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccfbb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccfbd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccfa020"/>
        <function-ref name="get" scoped="" ref="0x7fedbccfa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccfa340"/>
        <function-ref name="set" scoped="" ref="0x7fedbccfa4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccfa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7fedbcd15020" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7fedbcd15020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd153a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd15530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd156c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd15850"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd159e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd15b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd15d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd14020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH5" ref="0x7fedbccf4670" loc="115:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH5" scoped="" ref="0x7fedbccf4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccf49f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccf4b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccf4d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccf3020"/>
        <function-ref name="get" scoped="" ref="0x7fedbccf31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccf3340"/>
        <function-ref name="set" scoped="" ref="0x7fedbccf34d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccf3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ1" ref="0x7fedbccef350" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ1" scoped="" ref="0x7fedbccef350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccef6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccef860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccef9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccefb80"/>
        <function-ref name="get" scoped="" ref="0x7fedbccefd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccee020"/>
        <function-ref name="set" scoped="" ref="0x7fedbccee1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ4" ref="0x7fedbcceccb0" loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ4" scoped="" ref="0x7fedbcceccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcceb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcceb230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcceb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcceb550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcceb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcceb870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcceba00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccebb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK3" ref="0x7fedbcce3350" loc="131:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK3" scoped="" ref="0x7fedbcce3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcce36d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcce3860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcce39f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcce3b80"/>
        <function-ref name="get" scoped="" ref="0x7fedbcce3d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcce2020"/>
        <function-ref name="set" scoped="" ref="0x7fedbcce21b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcce2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK6" ref="0x7fedbcce0cb0" loc="134:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK6" scoped="" ref="0x7fedbcce0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccdf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccdf230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccdf3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccdf550"/>
        <function-ref name="get" scoped="" ref="0x7fedbccdf6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccdf870"/>
        <function-ref name="set" scoped="" ref="0x7fedbccdfa00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccdfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL0" ref="0x7fedbccdd350" loc="137:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL0" scoped="" ref="0x7fedbccdd350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccdd6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccdd860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccdd9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccddb80"/>
        <function-ref name="get" scoped="" ref="0x7fedbccddd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccdc020"/>
        <function-ref name="set" scoped="" ref="0x7fedbccdc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccdc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL5" ref="0x7fedbccd6350" loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL5" scoped="" ref="0x7fedbccd6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccd66d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccd6860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccd69f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccd6b80"/>
        <function-ref name="get" scoped="" ref="0x7fedbccd6d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccd5020"/>
        <function-ref name="set" scoped="" ref="0x7fedbccd51b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccd5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7fedbcd39350" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7fedbcd39350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd396d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd39860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd399f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd39b80"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd39d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd38020"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd381b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd38340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7fedbcd2c350" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7fedbcd2c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd2c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd2c860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd2c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd2cb80"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd2cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd2b020"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd2b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd2b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7fedbcd01670" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7fedbcd01670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd019f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd01b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd01d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd00020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd001b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd00340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd004d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd00660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7fedbcd2a990" loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7fedbcd2a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd2ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd29020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd291b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd29340"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd294d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd29660"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd297f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd29980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7fedbcd1eb20" loc="78:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7fedbcd1eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd1d020"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd1d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd1d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd1d4d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd1d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd1d7f0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd1d980"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd1db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7fedbcd11990" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7fedbcd11990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd11d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd10020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd101b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd10340"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd104d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd10660"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd107f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd10980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7fedbcd07350" loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7fedbcd07350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd076d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd07860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd079f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd07b80"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd07d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd06020"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd061b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd06340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH3" ref="0x7fedbccf7020" loc="113:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH3" scoped="" ref="0x7fedbccf7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccf73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccf7530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccf76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccf7850"/>
        <function-ref name="get" scoped="" ref="0x7fedbccf79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccf7b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbccf7d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccf6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ7" ref="0x7fedbcce8670" loc="126:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ7" scoped="" ref="0x7fedbcce8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcce89f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcce8b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcce8d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcce7020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcce71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcce7340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcce74d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcce7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK1" ref="0x7fedbcce6cb0" loc="129:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK1" scoped="" ref="0x7fedbcce6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcce50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcce5230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcce53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcce5550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcce56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcce5870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcce5a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcce5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL3" ref="0x7fedbccdacb0" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL3" scoped="" ref="0x7fedbccdacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccd80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccd8230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccd83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccd8550"/>
        <function-ref name="get" scoped="" ref="0x7fedbccd86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccd8870"/>
        <function-ref name="set" scoped="" ref="0x7fedbccd8a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccd8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ2" ref="0x7fedbccee670" loc="121:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ2" scoped="" ref="0x7fedbccee670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccee9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcceeb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcceed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcced020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcced1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcced340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcced4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcced660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7fedbcd36cb0" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7fedbcd36cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd350a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd35230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd353c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd35550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd356e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd35870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd35a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd35b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK4" ref="0x7fedbcce2670" loc="132:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK4" scoped="" ref="0x7fedbcce2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcce29f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcce2b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcce2d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcce1020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcce11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcce1340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcce14d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcce1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL6" ref="0x7fedbccd5670" loc="143:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL6" scoped="" ref="0x7fedbccd5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccd59f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccd5b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccd5d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccd4020"/>
        <function-ref name="get" scoped="" ref="0x7fedbccd41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccd4340"/>
        <function-ref name="set" scoped="" ref="0x7fedbccd44d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccd4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7fedbcd33350" loc="59:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7fedbcd33350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd336d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd33860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd339f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd33b80"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd33d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd32020"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd321b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd32340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7fedbcd26350" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7fedbcd26350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd266d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd26860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd269f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd26b80"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd26d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd25020"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd251b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd25340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7fedbcd1a350" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7fedbcd1a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd1a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd1a860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd1a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd1ab80"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd1ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd19020"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd191b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd19340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7fedbcd0d350" loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7fedbcd0d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd0d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd0d860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd0d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd0db80"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd0dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd0c020"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd0c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd0c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7fedbcd3ce40" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7fedbcd3ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd3b1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd3b370"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd3b500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd3b690"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd3b820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd3b9b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd3bb40"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd3bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7fedbcd30cb0" loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7fedbcd30cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd2e180"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd2e310"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd2e4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd2e630"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd2e7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd2e950"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd2eae0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd2ec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7fedbcd23cb0" loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7fedbcd23cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd220a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd22230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd223c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd22550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd226e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd22870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd22a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd22b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7fedbcd04cb0" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7fedbcd04cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd030a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd03230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd033c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd03550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd036e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd03870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd03a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd03b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH1" ref="0x7fedbccfa990" loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH1" scoped="" ref="0x7fedbccfa990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccfad10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccf9020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccf91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccf9340"/>
        <function-ref name="get" scoped="" ref="0x7fedbccf94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccf9660"/>
        <function-ref name="set" scoped="" ref="0x7fedbccf97f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccf9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7fedbcd20350" loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7fedbcd20350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd208d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd20a60"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd20bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd20d80"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd1f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd1f1b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd1f340"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd1f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7fedbcd14350" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7fedbcd14350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd146d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd14860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd149f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd14b80"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd14d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd13020"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd131b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd13340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7fedbcd0acb0" loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7fedbcd0acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd090a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd09230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd093c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd09550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd096e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd09870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd09a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd09b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7fedbccfd020" loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7fedbccfd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccfd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccfd530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccfd6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccfd850"/>
        <function-ref name="get" scoped="" ref="0x7fedbccfd9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccfdb70"/>
        <function-ref name="set" scoped="" ref="0x7fedbccfdd00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccfc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH6" ref="0x7fedbccf3990" loc="116:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH6" scoped="" ref="0x7fedbccf3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccf3d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccf2020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccf21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccf2340"/>
        <function-ref name="get" scoped="" ref="0x7fedbccf24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccf2660"/>
        <function-ref name="set" scoped="" ref="0x7fedbccf27f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccf2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ5" ref="0x7fedbccea020" loc="124:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ5" scoped="" ref="0x7fedbccea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccea3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccea530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccea6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccea850"/>
        <function-ref name="get" scoped="" ref="0x7fedbccea9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcceab70"/>
        <function-ref name="set" scoped="" ref="0x7fedbccead00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcce9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK7" ref="0x7fedbccde020" loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK7" scoped="" ref="0x7fedbccde020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccde3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccde530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccde6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccde850"/>
        <function-ref name="get" scoped="" ref="0x7fedbccde9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccdeb70"/>
        <function-ref name="set" scoped="" ref="0x7fedbccded00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccdd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL1" ref="0x7fedbccdc670" loc="138:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL1" scoped="" ref="0x7fedbccdc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccdc9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccdcb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccdcd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccdb020"/>
        <function-ref name="get" scoped="" ref="0x7fedbccdb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccdb340"/>
        <function-ref name="set" scoped="" ref="0x7fedbccdb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccdb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7fedbcd38670" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7fedbcd38670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd389f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd38b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd38d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd37020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd371b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd37340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd374d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd37660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7fedbcd2b670" loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7fedbcd2b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd2b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd2bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd2bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd2a020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd2a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd2a340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd2a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd2a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7fedbcd0c670" loc="94:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7fedbcd0c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd0c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd0cb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd0cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd0b020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd0b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd0b340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd0b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd0b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7fedbcd29cb0" loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7fedbcd29cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd280a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd28230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd283c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd28550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd286e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd28870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd28a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd28b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7fedbcd1de40" loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7fedbcd1de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd1c1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd1c370"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd1c500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd1c690"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd1c820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd1c9b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd1cb40"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd1ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7fedbcd10cb0" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7fedbcd10cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd0f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd0f230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd0f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd0f550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd0f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd0f870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd0fa00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd0fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7fedbcd06670" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7fedbcd06670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd069f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd06b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd06d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd05020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd05340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd054d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd05660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7fedbcd407f0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7fedbcd407f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd40b70"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd40d00"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd3d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd3d1b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd3d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd3d4d0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd3d660"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd3d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7fedbcd32670" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7fedbcd32670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd329f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd32b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd32d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd31020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd311b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd31340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd314d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd31660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7fedbcd25670" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7fedbcd25670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd259f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd25b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd25d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd24020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd241b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd24340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd244d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd24660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7fedbcd19670" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7fedbcd19670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd199f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd19b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd19d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd18020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd181b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd18340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd184d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd18660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7fedbcd00990" loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7fedbcd00990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd00d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccff020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccff1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccff340"/>
        <function-ref name="get" scoped="" ref="0x7fedbccff4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccff660"/>
        <function-ref name="set" scoped="" ref="0x7fedbccff7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccff980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH4" ref="0x7fedbccf6350" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH4" scoped="" ref="0x7fedbccf6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccf66d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccf6860"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccf69f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccf6b80"/>
        <function-ref name="get" scoped="" ref="0x7fedbccf6d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccf4020"/>
        <function-ref name="set" scoped="" ref="0x7fedbccf41b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccf4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ0" ref="0x7fedbccf0020" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ0" scoped="" ref="0x7fedbccf0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccf03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccf0530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccf06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccf0850"/>
        <function-ref name="get" scoped="" ref="0x7fedbccf09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccf0b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbccf0d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7fedbcd17cb0" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7fedbcd17cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd160a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd16230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd163c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd16550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd166e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd16870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd16a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd16b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ3" ref="0x7fedbcced990" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ3" scoped="" ref="0x7fedbcced990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccedd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccec020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccec1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccec340"/>
        <function-ref name="get" scoped="" ref="0x7fedbccec4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccec660"/>
        <function-ref name="set" scoped="" ref="0x7fedbccec7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccec980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK2" ref="0x7fedbcce4020" loc="130:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK2" scoped="" ref="0x7fedbcce4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcce43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcce4530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcce46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcce4850"/>
        <function-ref name="get" scoped="" ref="0x7fedbcce49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcce4b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbcce4d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcce3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK5" ref="0x7fedbcce1990" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK5" scoped="" ref="0x7fedbcce1990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcce1d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcce0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcce01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcce0340"/>
        <function-ref name="get" scoped="" ref="0x7fedbcce04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcce0660"/>
        <function-ref name="set" scoped="" ref="0x7fedbcce07f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcce0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL4" ref="0x7fedbccd7020" loc="141:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL4" scoped="" ref="0x7fedbccd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccd73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccd7530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccd76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccd7850"/>
        <function-ref name="get" scoped="" ref="0x7fedbccd79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccd7b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbccd7d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccd6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL7" ref="0x7fedbccd4990" loc="144:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL7" scoped="" ref="0x7fedbccd4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccd4d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccd3020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccd31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccd3340"/>
        <function-ref name="get" scoped="" ref="0x7fedbccd34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccd3660"/>
        <function-ref name="set" scoped="" ref="0x7fedbccd37f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccd3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7fedbcd21020" loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7fedbcd21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd213a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd21530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd216c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd21850"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd219e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd21b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd21d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7fedbcd3a060" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7fedbcd3a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd3a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd3a570"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd3a700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd3a890"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd3aa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd3abb0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd3ad40"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd39020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7fedbcd2d020" loc="63:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7fedbcd2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcd2d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcd2d530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcd2d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcd2d850"/>
        <function-ref name="get" scoped="" ref="0x7fedbcd2d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcd2db70"/>
        <function-ref name="set" scoped="" ref="0x7fedbcd2dd00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcd2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fedbccceda0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fedbccceda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcccc180"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcccc310"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcccc4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcccc630"/>
        <function-ref name="get" scoped="" ref="0x7fedbcccc7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcccc950"/>
        <function-ref name="set" scoped="" ref="0x7fedbccccae0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccccc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fedbccc9440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fedbccc9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccc97c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccc9950"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccc9ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccc9c70"/>
        <function-ref name="get" scoped="" ref="0x7fedbccc9e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccc8020"/>
        <function-ref name="set" scoped="" ref="0x7fedbccc81b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccc8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fedbccd0a80" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fedbccd0a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccd0e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcccf020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcccf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcccf340"/>
        <function-ref name="get" scoped="" ref="0x7fedbcccf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcccf660"/>
        <function-ref name="set" scoped="" ref="0x7fedbcccf7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcccf980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fedbcccb020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fedbcccb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcccb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcccb530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcccb6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcccb850"/>
        <function-ref name="get" scoped="" ref="0x7fedbcccb9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcccbb70"/>
        <function-ref name="set" scoped="" ref="0x7fedbcccbd00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fedbccc85d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fedbccc85d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccc8950"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccc8ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccc8c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccc8e00"/>
        <function-ref name="get" scoped="" ref="0x7fedbccc7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccc71b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbccc7340"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccc74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fedbcccfc10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fedbcccfc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccce020"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccce1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccce340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccce4d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbccce660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccce7f0"/>
        <function-ref name="set" scoped="" ref="0x7fedbccce980"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccceb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fedbccca2b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fedbccca2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccca630"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccca7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccca950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcccaae0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcccac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcccae00"/>
        <function-ref name="set" scoped="" ref="0x7fedbccc9020"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccc91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fedbccc7760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fedbccc7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccc7ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccc7c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccc7e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccc6020"/>
        <function-ref name="get" scoped="" ref="0x7fedbccc61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccc6340"/>
        <function-ref name="set" scoped="" ref="0x7fedbccc64d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccc6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc5f76d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc5f76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc5f7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc5f7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc5f7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc5f6020"/>
        <function-ref name="get" scoped="" ref="0x7fedbc5f61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc5f6340"/>
        <function-ref name="set" scoped="" ref="0x7fedbc5f64d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc5f6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc5f49b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc5f49b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc5f4d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc5f3020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc5f31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc5f3340"/>
        <function-ref name="get" scoped="" ref="0x7fedbc5f34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc5f3660"/>
        <function-ref name="set" scoped="" ref="0x7fedbc5f37f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc5f3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc5f1e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc5f1e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc5f01c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc5f0350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc5f04e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc5f0670"/>
        <function-ref name="get" scoped="" ref="0x7fedbc5f0800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc5f0990"/>
        <function-ref name="set" scoped="" ref="0x7fedbc5f0b20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc5f0cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc5ed0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc5ed0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc5ed420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc5ed5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc5ed740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc5ed8d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbc5eda60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc5edbf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbc5edd80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc5ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc5ea3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc5ea3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc5ea770"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc5ea900"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc5eaa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc5eac20"/>
        <function-ref name="get" scoped="" ref="0x7fedbc5eadb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc5e9020"/>
        <function-ref name="set" scoped="" ref="0x7fedbc5e91b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc5e9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc5e76d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc5e76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc5e7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc5e7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc5e7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc5e6020"/>
        <function-ref name="get" scoped="" ref="0x7fedbc5e61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc5e6340"/>
        <function-ref name="set" scoped="" ref="0x7fedbc5e64d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc5e6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc5e49b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc5e49b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc5e4d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc5e3020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc5e31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc5e3340"/>
        <function-ref name="get" scoped="" ref="0x7fedbc5e34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc5e3660"/>
        <function-ref name="set" scoped="" ref="0x7fedbc5e37f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc5e3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc5dee20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc5dee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc5dd1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc5dd350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc5dd4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc5dd670"/>
        <function-ref name="get" scoped="" ref="0x7fedbc5dd800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc5dd990"/>
        <function-ref name="set" scoped="" ref="0x7fedbc5ddb20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc5ddcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fedbccbd020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fedbccbd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccbd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccbd530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccbd6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccbd850"/>
        <function-ref name="get" scoped="" ref="0x7fedbccbd9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccbdb70"/>
        <function-ref name="set" scoped="" ref="0x7fedbccbdd00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccbc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fedbccba5d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fedbccba5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccba950"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccbaae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccbac70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccbae00"/>
        <function-ref name="get" scoped="" ref="0x7fedbccb9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccb91b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbccb9340"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccb94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fedbccc0d30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fedbccc0d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccbf0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccbf270"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccbf400"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccbf590"/>
        <function-ref name="get" scoped="" ref="0x7fedbccbf720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccbf8b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbccbfa40"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccbfbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fedbccbc2b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fedbccbc2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccbc630"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccbc7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccbc950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccbcae0"/>
        <function-ref name="get" scoped="" ref="0x7fedbccbcc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccbce00"/>
        <function-ref name="set" scoped="" ref="0x7fedbccbb020"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccbb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fedbccb9760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fedbccb9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccb9ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccb9c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccb9e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccb8020"/>
        <function-ref name="get" scoped="" ref="0x7fedbccb81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccb8340"/>
        <function-ref name="set" scoped="" ref="0x7fedbccb84d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccb8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fedbccbfe60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fedbccbfe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccbe210"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccbe3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccbe530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccbe6c0"/>
        <function-ref name="get" scoped="" ref="0x7fedbccbe850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccbe9e0"/>
        <function-ref name="set" scoped="" ref="0x7fedbccbeb70"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccbed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fedbccbb440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fedbccbb440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccbb7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccbb950"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccbbae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccbbc70"/>
        <function-ref name="get" scoped="" ref="0x7fedbccbbe00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccba020"/>
        <function-ref name="set" scoped="" ref="0x7fedbccba1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccba340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fedbccb88f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fedbccb88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccb8c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccb8e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccb7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccb71b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbccb7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccb74d0"/>
        <function-ref name="set" scoped="" ref="0x7fedbccb7660"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccb77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc589a60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc589a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc589de0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc588020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc5881b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc588340"/>
        <function-ref name="get" scoped="" ref="0x7fedbc5884d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc588660"/>
        <function-ref name="set" scoped="" ref="0x7fedbc5887f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc588980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc586e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc586e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc5851c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc585350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc5854e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc585670"/>
        <function-ref name="get" scoped="" ref="0x7fedbc585800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc585990"/>
        <function-ref name="set" scoped="" ref="0x7fedbc585b20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc585cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc5820a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc5820a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc582420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc5825b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc582740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc5828d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbc582a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc582bf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbc582d80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc581020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc57f3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc57f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc57f770"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc57f900"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc57fa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc57fc20"/>
        <function-ref name="get" scoped="" ref="0x7fedbc57fdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc57e020"/>
        <function-ref name="set" scoped="" ref="0x7fedbc57e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc57e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc57c6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc57c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc57ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc57cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc57cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc57b020"/>
        <function-ref name="get" scoped="" ref="0x7fedbc57b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc57b340"/>
        <function-ref name="set" scoped="" ref="0x7fedbc57b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc57b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc5799b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc5799b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc579d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc578020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc5781b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc578340"/>
        <function-ref name="get" scoped="" ref="0x7fedbc5784d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc578660"/>
        <function-ref name="set" scoped="" ref="0x7fedbc5787f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc578980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc576e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc576e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc5751c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc575350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc5754e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc575670"/>
        <function-ref name="get" scoped="" ref="0x7fedbc575800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc575990"/>
        <function-ref name="set" scoped="" ref="0x7fedbc575b20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc575cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc5720a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc5720a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc572420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc5725b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc572740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc5728d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbc572a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc572bf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbc572d80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc571020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fedbccae440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fedbccae440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccae7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccae950"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccaeae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccaec70"/>
        <function-ref name="get" scoped="" ref="0x7fedbccaee00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccad020"/>
        <function-ref name="set" scoped="" ref="0x7fedbccad1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccad340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fedbccab8f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fedbccab8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccabc70"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccabe00"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccaa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccaa1b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbccaa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccaa4d0"/>
        <function-ref name="set" scoped="" ref="0x7fedbccaa660"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccaa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fedbccb0020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fedbccb0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccb03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccb0530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccb06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccb0850"/>
        <function-ref name="get" scoped="" ref="0x7fedbccb09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccb0b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbccb0d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccaf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fedbccad5d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fedbccad5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccad950"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccadae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccadc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccade00"/>
        <function-ref name="get" scoped="" ref="0x7fedbccac020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccac1b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbccac340"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fedbccaaa80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fedbccaaa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccaae00"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcca9020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcca91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcca9340"/>
        <function-ref name="get" scoped="" ref="0x7fedbcca94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcca9660"/>
        <function-ref name="set" scoped="" ref="0x7fedbcca97f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcca9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fedbccaf2b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fedbccaf2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccaf630"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccaf7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccaf950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccafae0"/>
        <function-ref name="get" scoped="" ref="0x7fedbccafc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccafe00"/>
        <function-ref name="set" scoped="" ref="0x7fedbccae020"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fedbccac760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fedbccac760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbccacae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbccacc70"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbccace00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbccab020"/>
        <function-ref name="get" scoped="" ref="0x7fedbccab1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbccab340"/>
        <function-ref name="set" scoped="" ref="0x7fedbccab4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbccab660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fedbcca9c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fedbcca9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcca8020"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcca81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcca8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcca84d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcca8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcca87f0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcca8980"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcca8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc51ec90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc51ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc51d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc51d230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc51d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc51d550"/>
        <function-ref name="get" scoped="" ref="0x7fedbc51d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc51d870"/>
        <function-ref name="set" scoped="" ref="0x7fedbc51da00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc51db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc51be20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc51be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc51a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc51a350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc51a4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc51a670"/>
        <function-ref name="get" scoped="" ref="0x7fedbc51a800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc51a990"/>
        <function-ref name="set" scoped="" ref="0x7fedbc51ab20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc51acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc5170a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc5170a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc517420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc5175b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc517740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc5178d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbc517a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc517bf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbc517d80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc516020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc5143f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc5143f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc514770"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc514900"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc514a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc514c20"/>
        <function-ref name="get" scoped="" ref="0x7fedbc514db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc513020"/>
        <function-ref name="set" scoped="" ref="0x7fedbc5131b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc513340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc5116d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc5116d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc511a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc511be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc511d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc510020"/>
        <function-ref name="get" scoped="" ref="0x7fedbc5101b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc510340"/>
        <function-ref name="set" scoped="" ref="0x7fedbc5104d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc510660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc50e9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc50e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc50ed30"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc50d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc50d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc50d340"/>
        <function-ref name="get" scoped="" ref="0x7fedbc50d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc50d660"/>
        <function-ref name="set" scoped="" ref="0x7fedbc50d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc50d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc50be20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc50be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc50a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc50a350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc50a4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc50a670"/>
        <function-ref name="get" scoped="" ref="0x7fedbc50a800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc50a990"/>
        <function-ref name="set" scoped="" ref="0x7fedbc50ab20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc50acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc5070a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc5070a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc507420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc5075b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc507740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc5078d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbc507a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc507bf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbc507d80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc506020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fedbcc9f760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fedbcc9f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc9fae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc9fc70"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc9fe00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc9e020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc9e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc9e340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc9e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc9e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fedbcc9cc10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fedbcc9cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc9a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc9a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc9a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc9a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc9a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc9a7f0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc9a980"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc9ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fedbcca13f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fedbcca13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcca1770"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcca1900"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcca1a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcca1c20"/>
        <function-ref name="get" scoped="" ref="0x7fedbcca1db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcca0020"/>
        <function-ref name="set" scoped="" ref="0x7fedbcca01b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcca0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fedbcc9e8f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fedbcc9e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc9ec70"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc9ee00"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc9d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc9d1b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc9d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc9d4d0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc9d660"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc9d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fedbcc9ada0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fedbcc9ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc99180"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc99310"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc994a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc99630"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc997c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc99950"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc99ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc99c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fedbcca05d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fedbcca05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcca0950"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcca0ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcca0c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcca0e00"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc9f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc9f1b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc9f340"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc9f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fedbcc9da80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fedbcc9da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc9de00"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc9c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc9c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc9c340"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc9c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc9c660"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc9c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc9c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fedbcc98020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fedbcc98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc983a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc98530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc986c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc98850"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc989e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc98b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc98d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc4b3c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc4b3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc4b20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc4b2230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc4b23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc4b2550"/>
        <function-ref name="get" scoped="" ref="0x7fedbc4b26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc4b2870"/>
        <function-ref name="set" scoped="" ref="0x7fedbc4b2a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc4b2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc4b0e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc4b0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc4af1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc4af350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc4af4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc4af670"/>
        <function-ref name="get" scoped="" ref="0x7fedbc4af800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc4af990"/>
        <function-ref name="set" scoped="" ref="0x7fedbc4afb20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc4afcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc4ac0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc4ac0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc4ac420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc4ac5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc4ac740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc4ac8d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbc4aca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc4acbf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbc4acd80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc4ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc4a93f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc4a93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc4a9770"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc4a9900"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc4a9a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc4a9c20"/>
        <function-ref name="get" scoped="" ref="0x7fedbc4a9db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc4a8020"/>
        <function-ref name="set" scoped="" ref="0x7fedbc4a81b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc4a8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc4a66d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc4a66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc4a6a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc4a6be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc4a6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc4a5020"/>
        <function-ref name="get" scoped="" ref="0x7fedbc4a51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc4a5340"/>
        <function-ref name="set" scoped="" ref="0x7fedbc4a54d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc4a5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc4a39b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc4a39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc4a3d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc4a2020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc4a21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc4a2340"/>
        <function-ref name="get" scoped="" ref="0x7fedbc4a24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc4a2660"/>
        <function-ref name="set" scoped="" ref="0x7fedbc4a27f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc4a2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc4a0e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc4a0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc49f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc49f350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc49f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc49f670"/>
        <function-ref name="get" scoped="" ref="0x7fedbc49f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc49f990"/>
        <function-ref name="set" scoped="" ref="0x7fedbc49fb20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc49fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc49c0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc49c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc49c420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc49c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc49c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc49c8d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbc49ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc49cbf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbc49cd80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc49b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fedbcc90a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fedbcc90a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc90e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc8e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc8e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc8e340"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc8e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc8e660"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc8e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc8e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fedbcc8b020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fedbcc8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc8b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc8b530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc8b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc8b850"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc8b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc8bb70"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc8bd00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc8a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fedbcc927a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fedbcc927a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc92b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc92cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc92e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc91020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc911b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc91340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc914d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc91660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fedbcc8ec10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fedbcc8ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc8d020"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc8d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc8d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc8d4d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc8d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc8d7f0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc8d980"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc8db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fedbcc8a2b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fedbcc8a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc8a630"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc8a7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc8a950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc8aae0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc8ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc8ae00"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc89020"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fedbcc918f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fedbcc918f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc91c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc91e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc90020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc901b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc90340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc904d0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc90660"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc907f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fedbcc8dda0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fedbcc8dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc8c180"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc8c310"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc8c4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc8c630"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc8c7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc8c950"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc8cae0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc8cc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fedbcc89440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fedbcc89440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc897c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc89950"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc89ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc89c70"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc89e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc88020"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc881b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc88340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc448c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc448c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc4470a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc447230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc4473c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc447550"/>
        <function-ref name="get" scoped="" ref="0x7fedbc4476e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc447870"/>
        <function-ref name="set" scoped="" ref="0x7fedbc447a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc447b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc445e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc445e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc4441c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc444350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc4444e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc444670"/>
        <function-ref name="get" scoped="" ref="0x7fedbc444800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc444990"/>
        <function-ref name="set" scoped="" ref="0x7fedbc444b20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc444cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc4410a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc4410a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc441420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc4415b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc441740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc4418d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbc441a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc441bf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbc441d80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc440020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc43e3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc43e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc43e770"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc43e900"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc43ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc43ec20"/>
        <function-ref name="get" scoped="" ref="0x7fedbc43edb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc43d020"/>
        <function-ref name="set" scoped="" ref="0x7fedbc43d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc43d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc43b6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc43b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc43ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc43bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc43bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc43a020"/>
        <function-ref name="get" scoped="" ref="0x7fedbc43a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc43a340"/>
        <function-ref name="set" scoped="" ref="0x7fedbc43a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc43a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc4389b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc4389b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc438d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc437020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc4371b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc437340"/>
        <function-ref name="get" scoped="" ref="0x7fedbc4374d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc437660"/>
        <function-ref name="set" scoped="" ref="0x7fedbc4377f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc437980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc435e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc435e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc4341c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc434350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc4344e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc434670"/>
        <function-ref name="get" scoped="" ref="0x7fedbc434800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc434990"/>
        <function-ref name="set" scoped="" ref="0x7fedbc434b20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc434cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc4310a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc4310a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc431420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc4315b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc431740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc4318d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbc431a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc431bf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbc431d80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc430020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fedbcc80da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fedbcc80da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc7f180"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc7f310"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc7f4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc7f630"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc7f7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc7f950"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc7fae0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc7fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fedbcc7c440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fedbcc7c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc7c7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc7c950"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc7cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc7cc70"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc7ce00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc7b020"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc7b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc7b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fedbcc82a20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fedbcc82a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc82da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc81020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc811b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc81340"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc814d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc81660"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc817f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc81980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fedbcc7e020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fedbcc7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc7e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc7e530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc7e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc7e850"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc7e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc7eb70"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc7ed00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fedbcc7b5d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fedbcc7b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc7b950"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc7bae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc7bc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc7be00"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc7a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc7a1b0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc7a340"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc7a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fedbcc81c10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fedbcc81c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc80020"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc801b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc80340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc804d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc80660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc807f0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc80980"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc80b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fedbcc7d2b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fedbcc7d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc7d630"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc7d7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc7d950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc7dae0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc7dc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc7de00"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc7c020"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc7c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fedbcc7a760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fedbcc7a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc7aae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc7ac70"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc7ae00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc79020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc791b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc79340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc794d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc79660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc3ddc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc3ddc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc3dc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc3dc230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc3dc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc3dc550"/>
        <function-ref name="get" scoped="" ref="0x7fedbc3dc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc3dc870"/>
        <function-ref name="set" scoped="" ref="0x7fedbc3dca00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc3dcb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc3dae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc3dae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc3d91c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc3d9350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc3d94e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc3d9670"/>
        <function-ref name="get" scoped="" ref="0x7fedbc3d9800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc3d9990"/>
        <function-ref name="set" scoped="" ref="0x7fedbc3d9b20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc3d9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc3d60a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc3d60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc3d6420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc3d65b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc3d6740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc3d68d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbc3d6a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc3d6bf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbc3d6d80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc3d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc3d33f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc3d33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc3d3770"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc3d3900"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc3d3a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc3d3c20"/>
        <function-ref name="get" scoped="" ref="0x7fedbc3d3db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc3d2020"/>
        <function-ref name="set" scoped="" ref="0x7fedbc3d21b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc3d2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc3d06d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc3d06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc3d0a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc3d0be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc3d0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc3cf020"/>
        <function-ref name="get" scoped="" ref="0x7fedbc3cf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc3cf340"/>
        <function-ref name="set" scoped="" ref="0x7fedbc3cf4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc3cf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc3cd9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc3cd9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc3cdd30"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc3cc020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc3cc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc3cc340"/>
        <function-ref name="get" scoped="" ref="0x7fedbc3cc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc3cc660"/>
        <function-ref name="set" scoped="" ref="0x7fedbc3cc7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc3cc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc3cae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc3cae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc3c91c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc3c9350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc3c94e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc3c9670"/>
        <function-ref name="get" scoped="" ref="0x7fedbc3c9800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc3c9990"/>
        <function-ref name="set" scoped="" ref="0x7fedbc3c9b20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc3c9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbc3c60a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbc3c60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbc3c6420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbc3c65b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbc3c6740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbc3c68d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbc3c6a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbc3c6bf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbc3c6d80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbc3c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcc72160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcc72160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc724e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc72670"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc72800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc72990"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc72b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc72cb0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc72e40"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcc6ec90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcc6ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc6c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc6c230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc6c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc6c550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc6c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc6c870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc6ca00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc6cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcc686d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcc686d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc68a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc68be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc68d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc67020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc671b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc67340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc674d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc67660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcc62160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcc62160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc624e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc62670"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc62800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc62990"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc62b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc62cb0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc62e40"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcc5ec90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcc5ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc5c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc5c230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc5c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc5c550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc5c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc5c870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc5ca00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc5cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcc586d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcc586d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc58a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc58be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc58d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc57020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc571b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc57340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc574d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc57660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcc52270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcc52270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc525f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc52780"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc52910"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc52aa0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc52c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc52dc0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc51020"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc511b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcc4ed00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcc4ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc4d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc4d230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc4d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc4d550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc4d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc4d870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc4da00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc4db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcc486d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcc486d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc48a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc48be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc48d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc47020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc471b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc47340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc474d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc47660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcc42160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcc42160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc424e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc42670"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc42800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc42990"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc42b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc42cb0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc42e40"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcc3ec90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcc3ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc3d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc3d230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc3d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc3d550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc3d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc3d870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc3da00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc3db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcc386d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcc386d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc38a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc38be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc38d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc37020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc371b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc37340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc374d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc37660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcc32160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcc32160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc324e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc32670"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc32800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc32990"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc32b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc32cb0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc32e40"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcc2ec90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcc2ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc2d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc2d230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc2d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc2d550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc2d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc2d870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc2da00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc2db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcc11020" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcc11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc113a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc11530"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc116c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc11850"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc119e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc11b70"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc11d00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc10020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcc0d6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcc0d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc0da50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc0dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc0dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc0c020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc0c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc0c340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc0c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc0c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcc08c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcc08c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc070a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc07230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc073c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc07550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc076e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc07870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc07a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc07b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcc02180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcc02180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcc02500"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcc02690"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcc02820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcc029b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcc02b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcc02cd0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcc02e60"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcc01020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcbfe830" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcbfe830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcbfebb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcbfed40"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcbfd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcbfd1b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcbfd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcbfd4d0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcbfd660"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcbfd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcbf9e20" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcbf9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcbf81c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcbf8350"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcbf84e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcbf8670"/>
        <function-ref name="get" scoped="" ref="0x7fedbcbf8800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcbf8990"/>
        <function-ref name="set" scoped="" ref="0x7fedbcbf8b20"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcbf8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcbf3460" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcbf3460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcbf37e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcbf3970"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcbf3b00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcbf3c90"/>
        <function-ref name="get" scoped="" ref="0x7fedbcbf3e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcbf2020"/>
        <function-ref name="set" scoped="" ref="0x7fedbcbf21b0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcbf2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcbef9b0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcbef9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcbefd30"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcbee020"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcbee1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcbee340"/>
        <function-ref name="get" scoped="" ref="0x7fedbcbee4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcbee660"/>
        <function-ref name="set" scoped="" ref="0x7fedbcbee7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcbee980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcbe9160" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcbe9160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcbe94e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcbe9670"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcbe9800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcbe9990"/>
        <function-ref name="get" scoped="" ref="0x7fedbcbe9b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcbe9cb0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcbe9e40"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcbe8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcbe56d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcbe56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcbe5a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcbe5be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcbe5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcbe3020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcbe31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcbe3340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcbe34d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcbe3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcbe0c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcbe0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcbdf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcbdf230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcbdf3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcbdf550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcbdf6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcbdf870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcbdfa00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcbdfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcbda180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcbda180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcbda500"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcbda690"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcbda820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcbda9b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcbdab40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcbdacd0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcbdae60"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcbd9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcbd66d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcbd66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcbd6a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcbd6be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcbd6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcbd4020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcbd41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcbd4340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcbd44d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcbd4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcbd1c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcbd1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcbd00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcbd0230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcbd03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcbd0550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcbd06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcbd0870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcbd0a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcbd0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcbcb180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcbcb180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcbcb500"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcbcb690"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcbcb820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcbcb9b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcbcbb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcbcbcd0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcbcbe60"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcbca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcbc76d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcbc76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcbc7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcbc7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcbc7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcbc6020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcbc61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcbc6340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcbc64d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcbc6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcbc2c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcbc2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcbc10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcbc1230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcbc13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcbc1550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcbc16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcbc1870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcbc1a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcbc1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcbbc180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcbbc180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcbbc500"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcbbc690"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcbbc820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcbbc9b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcbbcb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcbbccd0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcbbce60"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcbbb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcbb86d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcbb86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcbb8a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcbb8be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcbb8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcbb7020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcbb71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcbb7340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcbb74d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcbb7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcbb3c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcbb3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcbb20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcbb2230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcbb23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcbb2550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcbb26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcbb2870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcbb2a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcbb2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcbad180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcbad180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcbad500"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcbad690"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcbad820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcbad9b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcbadb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcbadcd0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcbade60"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcbac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcba96d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcba96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcba9a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcba9be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcba9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcba8020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcba81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcba8340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcba84d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcba8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcba4c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcba4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcba30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcba3230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcba33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcba3550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcba36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcba3870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcba3a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcba3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcb9e180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcb9e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcb9e500"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcb9e690"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcb9e820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcb9e9b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcb9eb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcb9ecd0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcb9ee60"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcb9d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcb9a6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcb9a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcb9aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcb9abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcb9ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcb99020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcb991b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcb99340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcb994d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcb99660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcb95c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcb95c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcb940a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcb94230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcb943c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcb94550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcb946e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcb94870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcb94a00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcb94b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcb8f180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcb8f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcb8f500"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcb8f690"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcb8f820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcb8f9b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcb8fb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcb8fcd0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcb8fe60"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcb8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcb8b6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcb8b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcb8ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcb8bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcb8bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcb8a020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcb8a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcb8a340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcb8a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcb8a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcb850a0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcb850a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcb85420"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcb855b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcb85740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcb858d0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcb85a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcb85bf0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcb85d80"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcb84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcb806d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcb806d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcb80a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcb80be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcb80d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcb7f020"/>
        <function-ref name="get" scoped="" ref="0x7fedbcb7f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcb7f340"/>
        <function-ref name="set" scoped="" ref="0x7fedbcb7f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcb7f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcb7cc90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcb7cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcb7b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcb7b230"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcb7b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcb7b550"/>
        <function-ref name="get" scoped="" ref="0x7fedbcb7b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcb7b870"/>
        <function-ref name="set" scoped="" ref="0x7fedbcb7ba00"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcb7bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fedbcb76180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fedbcb76180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fedbcb76500"/>
        <function-ref name="isInput" scoped="" ref="0x7fedbcb76690"/>
        <function-ref name="toggle" scoped="" ref="0x7fedbcb76820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fedbcb769b0"/>
        <function-ref name="get" scoped="" ref="0x7fedbcb76b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fedbcb76cd0"/>
        <function-ref name="set" scoped="" ref="0x7fedbcb76e60"/>
        <function-ref name="clr" scoped="" ref="0x7fedbcb75020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../tinyos_ws18/tos/interfaces/Init.nc">
      <documentation loc="34:../tinyos_ws18/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fedbd57d740" loc="62:../tinyos_ws18/tos/interfaces/Init.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../tinyos_ws18/tos/interfaces/Boot.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fedbd57e350" loc="60:../tinyos_ws18/tos/interfaces/Boot.nc">
        <documentation loc="51:../tinyos_ws18/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7fedbd575b70" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7fedbd5758f0" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7fedbd578070" loc="31:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7fedbd578af0" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fedbd578870" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7fedbd576630" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fedbd5763b0" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7fedbd575020" loc="53:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../tinyos_ws18/tos/interfaces/Scheduler.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fedbd70b6c0" loc="57:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="54:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fedbd70a6a0" loc="72:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fedbd70be30" loc="65:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="59:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fedbd702610" loc="67:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fedbd702e60" loc="75:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../tinyos_ws18/tos/interfaces/McuSleep.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7fedbd606270" loc="76:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fedbd5ecb90" loc="62:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fedbd687470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fedbd5ea420" loc="52:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FMClick" loc="9:FMClick.nc">
      <function command="" provided="0" name="seek" ref="0x7fedbd52d580" loc="12:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7fedbd52d300" loc="12:FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x7fedbd52a940" loc="20:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="res" ref="0x7fedbd52a6c0" loc="20:FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setVolume" ref="0x7fedbd52c610" loc="16:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7fedbd52c390" loc="16:FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rdsReceived" ref="0x7fedbd528030" loc="24:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><enum-ref ref="0x7fedbd5407c0"/>
              <typename><typedef-ref name="RDSType" ref="0x7fedbd52e1c0"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fedbd529a50" loc="24:FMClick.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref ref="0x7fedbd5407c0"/>
              <typename><typedef-ref name="RDSType" ref="0x7fedbd52e1c0"/></typename>
            </type-tag>
          </variable>
          <variable name="buf" ref="0x7fedbd529d70" loc="24:FMClick.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveRDS" ref="0x7fedbd52a020" loc="18:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7fedbd52cd10" loc="18:FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="tuneComplete" ref="0x7fedbd529350" loc="22:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fedbd5290d0" loc="22:FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fedbd52dcc0" loc="14:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tune" ref="0x7fedbd52ebf0" loc="10:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fedbd52e970" loc="10:FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Glcd" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
      <function command="" provided="0" name="drawTextPgm" ref="0x7fedbd531620" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="109:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawTextPgm&#10;&#10; </short>
          <long>&#10; drawTextPgm&#10;&#10; @param text stored in program memory&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7fedbd533b50" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7fedbd531020" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7fedbd531380" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawRect" ref="0x7fedbd536140" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw rectangle&#10;&#10; </short>
          <long>&#10; Draw rectangle&#10;&#10; @param upper left x&#10; @param upper left y&#10; @param lower right x&#10; @param lower right y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7fedbd5383c0" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7fedbd538730" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7fedbd538ac0" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7fedbd538e30" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawLine" ref="0x7fedbd539bc0" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="45:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw line&#10;&#10; </short>
          <long>&#10; Draw line&#10;&#10; @param first point x&#10; @param first point y&#10; @param second point x&#10; @param second point y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7fedbd53ae80" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7fedbd539210" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7fedbd5395a0" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7fedbd539910" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x7fedbd53dab0" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="12:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Set pixel&#10;&#10; </short>
          <long>&#10; Set pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fedbd53d4c0" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7fedbd53d820" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="invertPixel" ref="0x7fedbd53a6c0" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="34:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Invert pixel&#10;&#10; </short>
          <long>&#10; Invert pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fedbd53a0d0" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7fedbd53a430" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPixel" ref="0x7fedbd53b8a0" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="23:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Clear pixel&#10;&#10; </short>
          <long>&#10; Clear pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fedbd53b2b0" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7fedbd53b610" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawEllipse" ref="0x7fedbd535730" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw ellipse&#10;&#10; </short>
          <long>&#10; Draw ellipse&#10;&#10; @param center x&#10; @param center y&#10; @param radius horizontal&#10; @param radius vertical&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fedbd536930" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7fedbd536c90" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_h" ref="0x7fedbd5350d0" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_v" ref="0x7fedbd535480" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawText" ref="0x7fedbd5333b0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="97:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawText&#10;&#10; </short>
          <long>&#10; drawText&#10;&#10; @param text&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7fedbd534a10" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7fedbd534d70" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7fedbd533110" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="fill" ref="0x7fedbd5342a0" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="87:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Fill Display with pattern&#10;&#10; </short>
          <long>&#10; Fill Display with pattern&#10;&#10; @param pattern&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x7fedbd534020" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fedbd4de9c0" loc="44:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fedbd4dd120" loc="45:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fedbd4e0b70" loc="42:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fedbd4dc020" loc="47:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fedbd4de2b0" loc="43:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fedbd4dd840" loc="46:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fedbd4e3d60" loc="40:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fedbd4e0480" loc="41:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fedbd509770" loc="56:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fedbd5072b0" loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fedbd509020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fedbd508a60" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fedbd5087e0" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fedbd50b790" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fedbd508020" loc="63:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7fedbd4ffbf0" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7fedbd4ffbf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fedbd4fc2d0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fedbd500b60"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fedbd4fe530" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fedbd500b60"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fedbd4fe880" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fedbd4febd0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fedbd4fc020" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fedbd4f6cf0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fedbd4f6020" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fedbd4f6370" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fedbd4f66c0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fedbd4f6a40" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fedbd4fa140" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fedbd500b60"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fedbd4fb430" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fedbd500b60"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fedbd4fb780" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fedbd4fbad0" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fedbd4fbe50" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fedbd4f7020" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fedbd4f91e0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fedbd4f9530" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fedbe028610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fedbd4f9880" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fedbd4f9c00" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../tinyos_ws18/tos/interfaces/Resource.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fedbd503bf0" loc="120:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fedbd505be0" loc="97:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="90:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fedbd505270" loc="88:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fedbd503420" loc="102:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="99:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fedbd5028b0" loc="128:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="122:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fedbd4ef020" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fedbd4ef020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fedbd4e9c50" loc="136:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="132:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fedbd4ec5b0" loc="83:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fedbd4ea360" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fedbd4ebd60" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fedbd4ea0d0" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fedbd4eb5b0" loc="98:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="94:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fedbd4e7ca0" loc="151:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="146:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fedbd4e7420" loc="144:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="138:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fedbd4ecd90" loc="92:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="86:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fedbd4efb90" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fedbd4ef910" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fedbd4e92f0" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="116:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fedbd4ead00" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fedbd4e9060" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fedbd4ed680" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fedbd4ed400" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fedbd4ede80" loc="78:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplKS0108" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <short>&#10; Hpl interface for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl interface for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="dataWrite" ref="0x7fedbd412790" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="48:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write data&#10;&#10; </short>
          <long>&#10; Write data&#10;&#10; @param The controller to write to&#10; @param data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7fedbd412180" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7fedbd412500" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7fedbd415490" loc="15:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="10:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Initialize GLCD&#10; &#10; </short>
          <long>&#10; Initialize GLCD&#10; &#10; @return SUCCESS&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataRead" ref="0x7fedbd413950" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="38:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read data&#10;&#10; </short>
          <long>&#10; Read data&#10;&#10; @param The controller to be read from&#10; &#10; @return data&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7fedbd4136d0" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlWrite" ref="0x7fedbd414e80" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write to controller&#10;&#10; </short>
          <long>&#10; Write to controller&#10;&#10; @param The controller to write to&#10; @param controller data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7fedbd414870" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7fedbd414bf0" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlRead" ref="0x7fedbd414020" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="17:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read controller state&#10;&#10; </short>
          <long>&#10; Read controller state&#10;&#10; @param The controller to be checked&#10; &#10; @return state of the controller&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7fedbd415c90" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fedbd38e430" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fedbd38e430"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fedbd38e670" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fedbd38e670"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7fedbd38d2a0" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fedbd38e670"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fedbd38d020" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fedbd38e670"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIOPort" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fedbd394990" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fedbd394710" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fedbd393c30" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fedbd3939b0" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fedbd3915b0" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fedbd391330" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fedbd394020" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fedbd397c70" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fedbd390750" loc="13:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fedbd390020" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fedbd391c80" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fedbd3932e0" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fedbd393060" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fedbd16c4e0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fedbd0f28e0" loc="53:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fedbd0f1270" loc="61:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fedbd0e7a90" loc="65:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fedbd0e7270" loc="59:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fedbd0ee8b0" loc="56:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fedbd0ed9c0" loc="73:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fedbd0ee020" loc="46:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fedbd0ed190" loc="65:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fedbd0ec350" loc="81:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fedbd0ea0e0" loc="90:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fedbd0ea940" loc="98:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fedbd0deb50" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fedbd0e8b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fedbd0de8d0" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fedbd0e8b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fedbd0e3a80" loc="53:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fedbd0e0620" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fedbd0e8b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fedbd0e03a0" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fedbd0e8b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fedbd0de020" loc="70:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fedbd0e8b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../tinyos_ws18/tos/interfaces/Leds.nc">
      <documentation loc="33:../tinyos_ws18/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fedbd0bc020" loc="61:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fedbd0bc7d0" loc="67:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="63:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fedbd0ba020" loc="72:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fedbd0b9020" loc="83:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="79:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fedbd0b87d0" loc="100:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="96:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fedbd0b7020" loc="117:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="103:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fedbd0ba7b0" loc="77:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="74:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fedbd0b7b90" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="120:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fedbd0b7910" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fedbd0bd850" loc="56:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fedbd0b9800" loc="89:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="86:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fedbd0b8020" loc="94:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="91:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7fedbd065020" loc="62:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fedbd06bdb0" loc="95:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fedbd0686a0" loc="105:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fedbd704020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7fedbd04ca10" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7fedbd008d00" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7fedbd007490" loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7fedbd006580" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fedbd006300" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7fedbd0085e0" loc="52:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7fedbd003e40" loc="65:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7fedbcffebe0" loc="84:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7fedbd002830" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7fedbd0025b0" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fedbcffb450" loc="89:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7fedbd0097a0" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7fedbd009520" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7fedbd003710" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7fedbd003490" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7fedbd000120" loc="68:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7fedbd006cc0" loc="61:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fedbcfff120" loc="75:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7fedbd007be0" loc="56:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fedbcffe4a0" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fedbcffe220" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fedbcffdd00" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fedbcffda80" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7fedbd000920" loc="72:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7fedbd009e70" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7fedbd004650" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fedbd0043d0" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7fedbcfffb40" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fedbcfff8c0" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7fedbcffd390" loc="85:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7fedbd004d80" loc="63:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fedbceec6d0" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fedbceec6d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fedbcee9020" loc="61:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fedbe027170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fedbced8410" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fedbced8410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fedbced8650" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fedbced8650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fedbced7020" loc="64:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fedbced8650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fedbced6120" loc="76:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fedbced78a0" loc="71:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fedbced6880" loc="82:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="78:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fedbcee6ba0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fedbcee6ba0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fedbcee6de0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fedbcee6de0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fedbcedf9c0" loc="109:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="105:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fedbcee6de0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fedbcee19b0" loc="78:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fedbcedf020" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="90:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fedbcee6de0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fedbcee6de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fedbcee0a10" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fedbcee6de0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fedbcee0d50" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fedbcee6de0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fedbcee01f0" loc="88:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="81:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fedbcedd1f0" loc="116:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="111:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fedbcee6de0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fedbcee2960" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fedbcee6de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fedbcee26e0" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fedbcee6de0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fedbcee11f0" loc="73:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="68:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fedbcea8e50" loc="89:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fedbcea9c40" loc="85:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7fedbceac8c0" loc="79:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fedbcea8680" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fedbcea8400" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7fedbcea9470" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fedbcea91f0" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fedbcea6890" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fedbcea6610" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7fedbceaa0e0" loc="80:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7fedbceaaa80" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fedbceaa800" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280TimerSync" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
      <documentation loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changedto Sync for Atm1280&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer2Synchronous" ref="0x7fedbce98020" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Turn on timer 2 synchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBBusy" ref="0x7fedbce950e0" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7fedbce96020" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7fedbce987a0" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7fedbce958f0" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7fedbce96850" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7fedbce9cbe0" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fedbd63ada0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fedbd639230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7fedbce99660" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fedbd63ada0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fedbd639230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fedbce993e0" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fedbd63ada0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fedbd639230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fedbcead3d0" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fedbcead3d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7fedbce9f020" loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fedbcea2020" loc="58:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fedbceadd10" loc="48:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fedbcead3d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fedbcea2790" loc="62:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fedbce9f7e0" loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fedbcea3710" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fedbcead3d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fedbcea3490" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fedbcead3d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fedbcea0020" loc="65:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fedbcea0770" loc="68:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fedbcebca20" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fedbcebca20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7fedbceb42d0" loc="98:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fedbceb5350" loc="87:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fedbceb9390" loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fedbcebca20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7fedbceb4cb0" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7fedbceb4a30" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7fedbceb3510" loc="110:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fedbe029ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fedbceb8c90" loc="75:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fedbceb8500" loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fedbceb5b10" loc="93:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fedbd70e500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fedbceb9d40" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fedbcebca20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fedbceb9ac0" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fedbcebca20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fedbceb7420" loc="78:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fedbceb7b70" loc="81:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
