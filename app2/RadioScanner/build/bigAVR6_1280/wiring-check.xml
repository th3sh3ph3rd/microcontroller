<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="19:Test/FMClickTestAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f7c5f185020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f7c5f1c1720"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f7c5f1c1720"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f7c5f1bfe20"/></to>
    </wire>
    <wire loc="20:Test/FMClickTestAppC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f7c5f174980"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f7c5f087a90"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f7c5f087a90"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f7c5f053580"/></to>
    </wire>
    <wire loc="21:Test/FMClickTestAppC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x7f7c5f184e30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7c5f159640"/></to>
    </wire>
    <wire loc="26:FMClick/FMClickC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f7c5f159640"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7c5f154700"/></to>
    </wire>
    <wire loc="22:Test/FMClickTestAppC.nc">
      <from><interface-ref name="Radio" scoped="" ref="0x7f7c5f16b370"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7f7c5f159c60"/></to>
    </wire>
    <wire loc="27:FMClick/FMClickC.nc">
      <from><interface-ref name="FMClick" scoped="" ref="0x7f7c5f159c60"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7f7c5f154d20"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f7c5f1c0bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7c5eb30e60"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f7c5f1c0bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7c5e37a810"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f7c5f1c0bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7c5f052920"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f7c5f1914b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f7c5f34da20"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f7c5f34da20"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f7c5f24e120"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f7c5f190020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7c5f1c3d00"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f7c5f1c3d00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7c5f1b50c0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f7c5f190720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f7c5f1c0bf0"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f7c5f1bd020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f7c5f1a3020"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f7c5f1b4020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7c5f1a4860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f7c5f1b57a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7c5eb67ab0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f7c5f1b57a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f7c5f1ad020"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f7c5f1ad6f0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f7c5f1bdd50"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f7c5f3437b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7c5f24c020"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f7c5f249590"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f7c5f2672d0"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f7c5f22e080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f7c5ea7b4c0"/></to>
    </wire>
    <wire loc="37:Test/FMClickTestP.nc">
      <from><interface-ref name="tune2Station" scoped="" ref="0x7f7c5f168380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7c5f3437b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:Test/FMClickTestP.nc">
      <from><interface-ref name="finishedTuning" scoped="" ref="0x7f7c5f164380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7c5f3437b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:FMClick/FMClickC.nc">
      <from><interface-ref name="Int" scoped="" ref="0x7f7c5f14a6e0"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7f7c5edb09e0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f7c5edb09e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f7c5ed66c90"/></to>
    </wire>
    <wire loc="31:FMClick/FMClickC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7f7c5f145d20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7c5ed489f0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7c5ed489f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7c5ed3a1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:FMClick/FMClickC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f7c5f137a20"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f7c5eb46880"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f7c5eb46880"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f7c5ed395e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:FMClick/FMClickC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7c5f134260"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f7c5e97f140"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7c5e97f140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f7c5eb35020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:FMClick/FMClickC.nc">
      <from><interface-ref name="RSTPin" scoped="" ref="0x7f7c5f11f360"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f7c5e957b20"/></to>
    </wire>
    <wire loc="250:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f7c5e957b20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f7c5e8d8760"/></to>
    </wire>
    <wire loc="37:FMClick/FMClickC.nc">
      <from><interface-ref name="SDIOPin" scoped="" ref="0x7f7c5f125680"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f7c5e958800"/></to>
    </wire>
    <wire loc="249:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f7c5e958800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f7c5e8d95d0"/></to>
    </wire>
    <wire loc="39:FMClick/FMClickC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f7c5f1248e0"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f7c5f087a90"/></to>
    </wire>
    <wire loc="345:FMClick/FMClickP.nc">
      <from><interface-ref name="_tune" scoped="" ref="0x7f7c5f0db190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7c5f3437b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="219:FMClick/FMClickP.nc">
      <from><interface-ref name="_init" scoped="" ref="0x7f7c5f0ff660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7c5f3437b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Hpl" scoped="" ref="0x7f7c5f050020"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7f7c5f082bf0"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="HplKS0108" scoped="" ref="0x7f7c5f082bf0"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7f7c5efd9240"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_0" scoped="" ref="0x7f7c5efd8020"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x7f7c5ef74350"/></to>
    </wire>
    <wire loc="175:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f7c5ef74350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f7c5eed2020"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_1" scoped="" ref="0x7f7c5efd7380"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x7f7c5ef73670"/></to>
    </wire>
    <wire loc="176:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f7c5ef73670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f7c5eed02b0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RS" scoped="" ref="0x7f7c5efd6690"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7f7c5ef72990"/></to>
    </wire>
    <wire loc="177:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f7c5ef72990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f7c5eecf440"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RW" scoped="" ref="0x7f7c5efd59b0"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7f7c5ef71cb0"/></to>
    </wire>
    <wire loc="178:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f7c5ef71cb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f7c5eece5d0"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="EN" scoped="" ref="0x7f7c5efd3cd0"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f7c5ef6f020"/></to>
    </wire>
    <wire loc="179:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f7c5ef6f020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f7c5eecd760"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RST" scoped="" ref="0x7f7c5efd1020"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7f7c5ef6e350"/></to>
    </wire>
    <wire loc="180:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f7c5ef6e350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f7c5eecc8f0"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="Data" scoped="" ref="0x7f7c5efc9a80"/></from>
      <to><interface-ref name="PortA" scoped="" ref="0x7f7c5ee23c40"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortA" scoped="" ref="0x7f7c5ee23c40"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5ee11c90"/></to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f7c5efc6910"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f7c5edc02e0"/></to>
    </wire>
    <wire loc="191:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f7c5ef63020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5ee746d0"/></to>
    </wire>
    <wire loc="165:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f7c5ef80800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f7c5eee3c10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f7c5eee3c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e5d3e20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f7c5eed02b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e5613f0"/></to>
    </wire>
    <wire loc="185:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f7c5ef69020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f7c5eec15d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f7c5eec15d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e4f63f0"/></to>
    </wire>
    <wire loc="196:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f7c5ef5d350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5ee5ac90"/></to>
    </wire>
    <wire loc="143:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f7c5ef98990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f7c5ef0ba80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f7c5ef0ba80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7053f0"/></to>
    </wire>
    <wire loc="183:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f7c5ef6c990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f7c5eec32b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f7c5eec32b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e4fde20"/></to>
    </wire>
    <wire loc="146:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f7c5ef94020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f7c5ef023f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f7c5ef023f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e6aea60"/></to>
    </wire>
    <wire loc="157:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f7c5ef88020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f7c5eef1a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f7c5eef1a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e63a0a0"/></to>
    </wire>
    <wire loc="168:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f7c5ef7c060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f7c5eedf2b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f7c5eedf2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e5c86d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f7c5eecd760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e557e20"/></to>
    </wire>
    <wire loc="138:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f7c5ef9eb20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f7c5ef112b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f7c5ef112b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7163f0"/></to>
    </wire>
    <wire loc="149:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f7c5ef91990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f7c5eeff8f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f7c5eeff8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e6a33f0"/></to>
    </wire>
    <wire loc="160:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f7c5ef85990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f7c5eeed020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f7c5eeed020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e6309b0"/></to>
    </wire>
    <wire loc="171:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f7c5ef78990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f7c5eedb760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f7c5eedb760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e5be0a0"/></to>
    </wire>
    <wire loc="188:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f7c5ef66990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f7c5eebea80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f7c5eebea80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e4ece20"/></to>
    </wire>
    <wire loc="194:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f7c5ef60cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5ee646d0"/></to>
    </wire>
    <wire loc="174:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f7c5ef75020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f7c5eed4e60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f7c5eed4e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e568e20"/></to>
    </wire>
    <wire loc="141:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f7c5ef9a350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f7c5ef0d760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f7c5ef0d760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e70ce20"/></to>
    </wire>
    <wire loc="152:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f7c5ef8d350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f7c5eefcda0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f7c5eefcda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e69ae20"/></to>
    </wire>
    <wire loc="192:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f7c5ef62670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5ee6f160"/></to>
    </wire>
    <wire loc="155:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f7c5ef8b990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f7c5eef37a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f7c5eef37a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e641c90"/></to>
    </wire>
    <wire loc="166:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f7c5ef7fb20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f7c5eee2da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f7c5eee2da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e5cf0a0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f7c5eecf440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e55d6d0"/></to>
    </wire>
    <wire loc="186:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f7c5ef68350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f7c5eec0760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f7c5eec0760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e4f36d0"/></to>
    </wire>
    <wire loc="144:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f7c5ef97cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f7c5ef0ac10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f7c5ef0ac10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7026d0"/></to>
    </wire>
    <wire loc="147:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f7c5ef93350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f7c5ef015d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f7c5ef015d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e6abe20"/></to>
    </wire>
    <wire loc="158:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f7c5ef87350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f7c5eef0c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f7c5eef0c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e6363f0"/></to>
    </wire>
    <wire loc="169:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f7c5ef7b350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f7c5eede440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f7c5eede440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e5c59b0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f7c5eecc8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e5530a0"/></to>
    </wire>
    <wire loc="139:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f7c5ef9de40"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f7c5ef10440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f7c5ef10440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7126d0"/></to>
    </wire>
    <wire loc="150:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f7c5ef90cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f7c5eefea80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f7c5eefea80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e6a06d0"/></to>
    </wire>
    <wire loc="161:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f7c5ef84cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f7c5eeec2b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f7c5eeec2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e62de20"/></to>
    </wire>
    <wire loc="189:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f7c5ef65cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f7c5eebdc10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f7c5eebdc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e4e80a0"/></to>
    </wire>
    <wire loc="164:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f7c5ef81350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f7c5eee4a20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f7c5eee4a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e5d6c90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f7c5eed2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e5640a0"/></to>
    </wire>
    <wire loc="184:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f7c5ef6bcb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f7c5eec2440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f7c5eec2440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e4f90a0"/></to>
    </wire>
    <wire loc="195:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f7c5ef5e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5ee5f160"/></to>
    </wire>
    <wire loc="142:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f7c5ef99670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f7c5ef0c8f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f7c5ef0c8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7080a0"/></to>
    </wire>
    <wire loc="153:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f7c5ef8c670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f7c5eefa020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f7c5eefa020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e6960a0"/></to>
    </wire>
    <wire loc="182:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f7c5ef6d670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f7c5eec4020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f7c5eec4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e500c90"/></to>
    </wire>
    <wire loc="156:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f7c5ef8acb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f7c5eef28f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f7c5eef28f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e63ee20"/></to>
    </wire>
    <wire loc="167:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f7c5ef7ee40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f7c5eee0020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f7c5eee0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e5cc3f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f7c5eece5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e55a9b0"/></to>
    </wire>
    <wire loc="187:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f7c5ef67670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f7c5eebf8f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f7c5eebf8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e4ef9b0"/></to>
    </wire>
    <wire loc="137:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f7c5efa1860"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f7c5ef12140"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f7c5ef12140"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e719020"/></to>
    </wire>
    <wire loc="148:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f7c5ef92670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f7c5ef00760"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f7c5ef00760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e6a70a0"/></to>
    </wire>
    <wire loc="159:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f7c5ef86670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f7c5eeefda0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f7c5eeefda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e6336d0"/></to>
    </wire>
    <wire loc="170:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f7c5ef7a670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f7c5eedc5d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f7c5eedc5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e5c2e20"/></to>
    </wire>
    <wire loc="193:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f7c5ef61990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5ee6ac90"/></to>
    </wire>
    <wire loc="173:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f7c5ef77cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f7c5eed5d30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f7c5eed5d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e56bc90"/></to>
    </wire>
    <wire loc="162:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f7c5ef82020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f7c5eeeb440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f7c5eeeb440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e6290a0"/></to>
    </wire>
    <wire loc="140:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f7c5ef9b060"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f7c5ef0e5d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f7c5ef0e5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e70f9b0"/></to>
    </wire>
    <wire loc="151:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f7c5ef8e020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f7c5eefdc10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f7c5eefdc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e69d9b0"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortL" scoped="" ref="0x7f7c5ee15870"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5edccc90"/></to>
    </wire>
    <wire loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortD" scoped="" ref="0x7f7c5ee1ee80"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5ededcd0"/></to>
    </wire>
    <wire loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortG" scoped="" ref="0x7f7c5ee1a1d0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5eddecd0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortJ" scoped="" ref="0x7f7c5ee18550"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5edd5c90"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortB" scoped="" ref="0x7f7c5ee20d20"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5edf7390"/></to>
    </wire>
    <wire loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortE" scoped="" ref="0x7f7c5ee1c020"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5ede8390"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortH" scoped="" ref="0x7f7c5ee193c0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5eddac90"/></to>
    </wire>
    <wire loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortK" scoped="" ref="0x7f7c5ee176e0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5edd0c90"/></to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortC" scoped="" ref="0x7f7c5ee1fde0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5edf2910"/></to>
    </wire>
    <wire loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortF" scoped="" ref="0x7f7c5ee1b100"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5ede3910"/></to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7f7c5edad9e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f7c5ed59c90"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f7c5edb39e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f7c5ed6fda0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7f7c5edaf9e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f7c5ed62c90"/></to>
    </wire>
    <wire loc="78:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7f7c5edac9e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f7c5ed55c90"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f7c5edb19e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f7c5ed6ac90"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7f7c5edae9e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f7c5ed5dc90"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f7c5f0859b0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f7c5ed86060"/></to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f7c5ed86e80"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f7c5eda5860"/></to>
    </wire>
    <wire loc="81:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f7c5ed6ec20"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f7c5eda7020"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f7c5ed69b40"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f7c5eda77a0"/></to>
    </wire>
    <wire loc="83:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f7c5ed65b40"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7f7c5eda6020"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f7c5ed61b40"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7f7c5eda67a0"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f7c5ed5cb40"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7f7c5eda4020"/></to>
    </wire>
    <wire loc="86:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f7c5ed58b40"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7f7c5eda47a0"/></to>
    </wire>
    <wire loc="87:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f7c5ed53b40"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7f7c5eda3020"/></to>
    </wire>
    <wire loc="60:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7c5ed3a1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7c5ec94470"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f7c5ed395e0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f7c5ec5c370"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f7c5ec57210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7c5ecade60"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7c5ecade60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7c5e377020"/></to>
    </wire>
    <wire loc="64:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f7c5ec56020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f7c5ebe2aa0"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7f7c5ec52cd0"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7f7c5ebdd7f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f7c5eca6c40"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f7c5ebe21e0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7c5eca59d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7c5ecaa400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7c5ecaa400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7c5e376560"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f7c5ebdde40"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f7c5ebd4ab0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f7c5ebd4ab0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f7c5ebcc440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f7c5ebda7a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f7c5eb5f980"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f7c5ebd9de0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f7c5eb5f980"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f7c5ecabbf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f7c5e377d80"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7c5eca9060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7c5e375270"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7c5e375b60"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7c5eca9930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f7c5e374440"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f7c5e37ae20"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f7c5e3717a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7c5f3437b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f7c5ebd7480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7c5f3437b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7f7c5ebc9020"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7f7c5ef81350"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7f7c5ebc8360"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f7c5ef80800"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f7c5eb914a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f7c5eb8ddc0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f7c5eb67ab0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7c5eb8d7c0"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f7c5eb89550"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f7c5eb6a1d0"/></to>
    </wire>
    <wire loc="57:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f7c5eb6a1d0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f7c5efa1860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f7c5eb887f0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f7c5eb69510"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f7c5eb69510"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f7c5ef9eb20"/></to>
    </wire>
    <wire loc="56:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f7c5eb87b10"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f7c5eb68830"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f7c5eb68830"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f7c5ef9de40"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f7c5eb35020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f7c5eb2cc30"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f7c5eb2cc30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f7c5e9a0150"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f7c5eb30e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7c5eb23c80"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f7c5eb22500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f7c5e992790"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f7c5eb23c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7c5ea1fba0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f7c5e99a640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f7c5e9ef830"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f7c5e9eacd0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f7c5eb17960"/></to>
    </wire>
    <wire loc="35:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f7c5eb17960"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f7c5ea1e4b0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f7c5e991a60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f7c5eb14020"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f7c5eb14020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f7c5ea1a8d0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f7c5ea1a8d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f7c5e2dcd50"/></to>
    </wire>
    <wire loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f7c5ea1fba0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7c5e2e01b0"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f7c5ea1e4b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f7c5e2e09c0"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7c5e2d9020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f7c5ea978f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7c5ea978f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f7c5ea86a10"/></to>
    </wire>
    <wire loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f7c5e2d4190"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f7c5ea90c10"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f7c5ea90c10"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f7c5ea81db0"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f7c5e2d33e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f7c5ea8e060"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f7c5ea8e060"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f7c5ea7f1a0"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7f7c5e2cf780"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7f7c5ea8a570"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7f7c5ea8a570"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7f7c5ea7bbf0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f7c5e9e5020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7c5f3437b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f7c5e995a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7c5f3437b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f7c5e93b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e8816d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f7c5e8d95d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e0eae20"/></to>
    </wire>
    <wire loc="260:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f7c5e94c670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f7c5e8c8c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f7c5e8c8c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e0773f0"/></to>
    </wire>
    <wire loc="269:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f7c5e941020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f7c5e8b7020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f7c5e8b7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e00c3f0"/></to>
    </wire>
    <wire loc="280:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f7c5e935350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e867c90"/></to>
    </wire>
    <wire loc="284:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH2" scoped="" ref="0x7f7c5e932cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e841c90"/></to>
    </wire>
    <wire loc="289:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH7" scoped="" ref="0x7f7c5e92ccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e8289b0"/></to>
    </wire>
    <wire loc="297:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ6" scoped="" ref="0x7f7c5e922350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e805180"/></to>
    </wire>
    <wire loc="300:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK0" scoped="" ref="0x7f7c5e920990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7fbc90"/></to>
    </wire>
    <wire loc="311:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL2" scoped="" ref="0x7f7c5e914990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7c9180"/></to>
    </wire>
    <wire loc="227:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f7c5e970990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f7c5e9025d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f7c5e9025d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e21a9b0"/></to>
    </wire>
    <wire loc="267:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f7c5e945990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f7c5e8bbc10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f7c5e8bbc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e014e20"/></to>
    </wire>
    <wire loc="230:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f7c5e96d020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f7c5e8fad30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f7c5e8fad30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e1c3a60"/></to>
    </wire>
    <wire loc="241:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f7c5e961020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f7c5e8e7440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f7c5e8e7440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e1500a0"/></to>
    </wire>
    <wire loc="252:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f7c5e954060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f7c5e8d6a80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f7c5e8d6a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e0df6d0"/></to>
    </wire>
    <wire loc="263:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f7c5e948020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f7c5e8c32b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f7c5e8c32b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e06ee20"/></to>
    </wire>
    <wire loc="222:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f7c5e976b20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f7c5e908c10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f7c5e908c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e22d9b0"/></to>
    </wire>
    <wire loc="233:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f7c5e96a990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f7c5e8f62b0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f7c5e8f62b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e1b83f0"/></to>
    </wire>
    <wire loc="244:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f7c5e95d990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f7c5e8e48f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f7c5e8e48f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e1479b0"/></to>
    </wire>
    <wire loc="255:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f7c5e951990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f7c5e8d2020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f7c5e8d2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e0d50a0"/></to>
    </wire>
    <wire loc="272:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f7c5e93e990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f7c5e8b45d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f7c5e8b45d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e003e20"/></to>
    </wire>
    <wire loc="278:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f7c5e938cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e8716d0"/></to>
    </wire>
    <wire loc="282:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH0" scoped="" ref="0x7f7c5e934670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e84b020"/></to>
    </wire>
    <wire loc="258:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f7c5e94e020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f7c5e8ca8f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f7c5e8ca8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e07fe20"/></to>
    </wire>
    <wire loc="287:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH5" scoped="" ref="0x7f7c5e92e670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e832e20"/></to>
    </wire>
    <wire loc="292:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ1" scoped="" ref="0x7f7c5e929350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e81e6d0"/></to>
    </wire>
    <wire loc="295:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ4" scoped="" ref="0x7f7c5e925cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e80f6d0"/></to>
    </wire>
    <wire loc="303:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK3" scoped="" ref="0x7f7c5e91c350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7ecc90"/></to>
    </wire>
    <wire loc="306:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK6" scoped="" ref="0x7f7c5e919cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7ddc90"/></to>
    </wire>
    <wire loc="309:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL0" scoped="" ref="0x7f7c5e916350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7d36d0"/></to>
    </wire>
    <wire loc="314:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL5" scoped="" ref="0x7f7c5e910350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7ba6d0"/></to>
    </wire>
    <wire loc="225:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f7c5e972350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f7c5e9042b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f7c5e9042b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e2203f0"/></to>
    </wire>
    <wire loc="236:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f7c5e966350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f7c5e8f2760"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f7c5e8f2760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e1afe20"/></to>
    </wire>
    <wire loc="276:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f7c5e93a670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e87c160"/></to>
    </wire>
    <wire loc="239:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f7c5e964990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f7c5e8ea020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f7c5e8ea020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e158c90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f7c5e8d8760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e0e50a0"/></to>
    </wire>
    <wire loc="261:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f7c5e94b990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f7c5e8c7da0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f7c5e8c7da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e0746d0"/></to>
    </wire>
    <wire loc="270:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f7c5e940350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f7c5e8b62b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f7c5e8b62b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e0096d0"/></to>
    </wire>
    <wire loc="285:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH3" scoped="" ref="0x7f7c5e930020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e83c180"/></to>
    </wire>
    <wire loc="298:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ7" scoped="" ref="0x7f7c5e921670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e8006d0"/></to>
    </wire>
    <wire loc="301:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK1" scoped="" ref="0x7f7c5e91fcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7f6180"/></to>
    </wire>
    <wire loc="312:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL3" scoped="" ref="0x7f7c5e913cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7c46d0"/></to>
    </wire>
    <wire loc="293:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ2" scoped="" ref="0x7f7c5e928670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e819c90"/></to>
    </wire>
    <wire loc="228:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f7c5e96fcb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f7c5e900760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f7c5e900760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e217e20"/></to>
    </wire>
    <wire loc="304:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK4" scoped="" ref="0x7f7c5e91b670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7e7180"/></to>
    </wire>
    <wire loc="315:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL6" scoped="" ref="0x7f7c5e90f670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7b5c90"/></to>
    </wire>
    <wire loc="231:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f7c5e96c350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f7c5e8f9e60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f7c5e8f9e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e1bfe20"/></to>
    </wire>
    <wire loc="242:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f7c5e960350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f7c5e8e65d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f7c5e8e65d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e14d3f0"/></to>
    </wire>
    <wire loc="253:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f7c5e953350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f7c5e8d5c10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f7c5e8d5c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e0dc9b0"/></to>
    </wire>
    <wire loc="264:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f7c5e947350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f7c5e8c2440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f7c5e8c2440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e06a0a0"/></to>
    </wire>
    <wire loc="223:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f7c5e975e40"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f7c5e907da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f7c5e907da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e22ae20"/></to>
    </wire>
    <wire loc="234:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f7c5e969cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f7c5e8f4440"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f7c5e8f4440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e1b56d0"/></to>
    </wire>
    <wire loc="245:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f7c5e95ccb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f7c5e8e3a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f7c5e8e3a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e144e20"/></to>
    </wire>
    <wire loc="273:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f7c5e93dcb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f7c5e8b3760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f7c5e8b3760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5dfff0a0"/></to>
    </wire>
    <wire loc="283:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH1" scoped="" ref="0x7f7c5e933990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e8466d0"/></to>
    </wire>
    <wire loc="248:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f7c5e959350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f7c5e8da3f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f7c5e8da3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e0edc90"/></to>
    </wire>
    <wire loc="259:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f7c5e94d350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f7c5e8c9a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f7c5e8c9a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e07b0a0"/></to>
    </wire>
    <wire loc="268:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f7c5e944cb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f7c5e8bada0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f7c5e8bada0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e0100a0"/></to>
    </wire>
    <wire loc="279:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f7c5e936020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e86c160"/></to>
    </wire>
    <wire loc="288:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH6" scoped="" ref="0x7f7c5e92d990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e82d460"/></to>
    </wire>
    <wire loc="296:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ5" scoped="" ref="0x7f7c5e923020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e80ac90"/></to>
    </wire>
    <wire loc="307:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK7" scoped="" ref="0x7f7c5e917020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7d8180"/></to>
    </wire>
    <wire loc="310:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL1" scoped="" ref="0x7f7c5e915670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7cec90"/></to>
    </wire>
    <wire loc="226:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f7c5e971670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f7c5e903440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f7c5e903440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e21d6d0"/></to>
    </wire>
    <wire loc="237:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f7c5e965670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f7c5e8f18f0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f7c5e8f18f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e1ab0a0"/></to>
    </wire>
    <wire loc="266:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f7c5e946670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f7c5e8bca20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f7c5e8bca20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e017c90"/></to>
    </wire>
    <wire loc="240:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f7c5e963cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f7c5e8e82b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f7c5e8e82b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e155e20"/></to>
    </wire>
    <wire loc="251:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f7c5e956e40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f7c5e8d78f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f7c5e8d78f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e0e23f0"/></to>
    </wire>
    <wire loc="262:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f7c5e94acb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f7c5e8c5020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f7c5e8c5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e0719b0"/></to>
    </wire>
    <wire loc="271:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f7c5e93f670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f7c5e8b5440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f7c5e8b5440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e0069b0"/></to>
    </wire>
    <wire loc="221:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f7c5e9797f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f7c5e909a80"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f7c5e909a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e2316d0"/></to>
    </wire>
    <wire loc="232:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f7c5e96b670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f7c5e8f7020"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f7c5e8f7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e1bb0a0"/></to>
    </wire>
    <wire loc="243:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f7c5e95e670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f7c5e8e5760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f7c5e8e5760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e14a6d0"/></to>
    </wire>
    <wire loc="254:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f7c5e952670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f7c5e8d4da0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f7c5e8d4da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e0d9e20"/></to>
    </wire>
    <wire loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f7c5e939990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e877c90"/></to>
    </wire>
    <wire loc="286:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH4" scoped="" ref="0x7f7c5e92f350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e837830"/></to>
    </wire>
    <wire loc="291:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ0" scoped="" ref="0x7f7c5e92a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e822160"/></to>
    </wire>
    <wire loc="257:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f7c5e950cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f7c5e8cb7a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f7c5e8cb7a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e082c90"/></to>
    </wire>
    <wire loc="294:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ3" scoped="" ref="0x7f7c5e927990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e814180"/></to>
    </wire>
    <wire loc="302:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK2" scoped="" ref="0x7f7c5e91d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7f16d0"/></to>
    </wire>
    <wire loc="305:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK5" scoped="" ref="0x7f7c5e91a990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7e26d0"/></to>
    </wire>
    <wire loc="313:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL4" scoped="" ref="0x7f7c5e911020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7be0a0"/></to>
    </wire>
    <wire loc="316:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL7" scoped="" ref="0x7f7c5e90e990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e7af180"/></to>
    </wire>
    <wire loc="246:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f7c5e95a020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f7c5e8e2c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f7c5e8e2c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e1400a0"/></to>
    </wire>
    <wire loc="224:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f7c5e973060"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f7c5e905020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f7c5e905020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e2260a0"/></to>
    </wire>
    <wire loc="235:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f7c5e967020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f7c5e8f35d0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f7c5e8f35d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7c5e1b29b0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../tinyos_ws18/tos/system/MainC.nc">
      <documentation loc="45:../tinyos_ws18/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <documentation loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../tinyos_ws18/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../tinyos_ws18/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../tinyos_ws18/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc" safe="">
      <documentation loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickTestP" loc="13:Test/FMClickTestP.nc">
      <documentation loc="1:Test/FMClickTestP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file RadioScannerAppC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; VolumeAdc test module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC" loc="11:FMClick/FMClickC.nc">
      <documentation loc="1:FMClick/FMClickC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; Configuration of the FMClick module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="FMClickP" loc="16:FMClick/FMClickP.nc">
      <documentation loc="1:FMClick/FMClickP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; FMClick module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="GlcdC" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
        <short>&#10; High level implementation for KS0108 Glcd&#10; </short>
        <long>&#10; High level implementation for KS0108 Glcd&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="GlcdP" loc="41:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <module/>
    </component>
    <component qname="HplKS0108C" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
        <short>&#10; Configuration for KS0108 GLCD Display&#10; </short>
        <long>&#10; Configuration for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplKS0108P" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
        <short>&#10; Hpl implementation for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl implementation for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10; Based on an implementation of Andreas Hagmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC" loc="6:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortAP" loc="6(HplAtm128GeneralIOFastPortC.PortAP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortBP" loc="6(HplAtm128GeneralIOFastPortC.PortBP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortCP" loc="6(HplAtm128GeneralIOFastPortC.PortCP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortDP" loc="6(HplAtm128GeneralIOFastPortC.PortDP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortEP" loc="6(HplAtm128GeneralIOFastPortC.PortEP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortFP" loc="6(HplAtm128GeneralIOFastPortC.PortFP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortGP" loc="6(HplAtm128GeneralIOFastPortC.PortGP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortHP" loc="6(HplAtm128GeneralIOFastPortC.PortHP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortJP" loc="6(HplAtm128GeneralIOFastPortC.PortJP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortKP" loc="6(HplAtm128GeneralIOFastPortC.PortKP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortLP" loc="6(HplAtm128GeneralIOFastPortC.PortLP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:9">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="38:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc" safe="">
      <documentation loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="FMClickC.I2C" loc="43(FMClickC.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../tinyos_ws18/tos/system/LedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc" safe="">
      <documentation loc="35:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../tinyos_ws18/tos/system/NoLedsC.nc">
      <documentation loc="35:../tinyos_ws18/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC.Timer" loc="44(FMClickC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <documentation loc="11:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC" loc="32(AlarmCounterMilliP.Atm1280AlarmSyncC):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:124">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP" loc="33(AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f7c5eb0a160"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280Timer2SyncC" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <documentation loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280Timer2SyncP" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc" safe="">
      <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changed to sync mode&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10; &#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; Changed for Atm1280&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA" loc="40(HplAtm1280GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit0" loc="41(HplAtm1280GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="48">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit1" loc="41(HplAtm1280GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="49">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit2" loc="41(HplAtm1280GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="50">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit3" loc="41(HplAtm1280GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="51">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit4" loc="41(HplAtm1280GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="52">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit5" loc="41(HplAtm1280GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="53">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit6" loc="41(HplAtm1280GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="54">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit7" loc="41(HplAtm1280GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="55">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB" loc="40(HplAtm1280GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit0" loc="41(HplAtm1280GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="56">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit1" loc="41(HplAtm1280GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="57">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit2" loc="41(HplAtm1280GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="58">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit3" loc="41(HplAtm1280GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="59">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit4" loc="41(HplAtm1280GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="60">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit5" loc="41(HplAtm1280GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="61">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit6" loc="41(HplAtm1280GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="62">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit7" loc="41(HplAtm1280GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="63">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC" loc="40(HplAtm1280GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit0" loc="41(HplAtm1280GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="64">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit1" loc="41(HplAtm1280GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="65">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit2" loc="41(HplAtm1280GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="66">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit3" loc="41(HplAtm1280GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="67">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit4" loc="41(HplAtm1280GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="68">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit5" loc="41(HplAtm1280GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="69">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit6" loc="41(HplAtm1280GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="70">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit7" loc="41(HplAtm1280GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="71">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD" loc="40(HplAtm1280GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit0" loc="41(HplAtm1280GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="72">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit1" loc="41(HplAtm1280GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="73">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit2" loc="41(HplAtm1280GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="74">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit3" loc="41(HplAtm1280GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="75">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit4" loc="41(HplAtm1280GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="76">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit5" loc="41(HplAtm1280GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="77">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit6" loc="41(HplAtm1280GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="78">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit7" loc="41(HplAtm1280GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="79">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE" loc="40(HplAtm1280GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit0" loc="41(HplAtm1280GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="80">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit1" loc="41(HplAtm1280GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="81">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit2" loc="41(HplAtm1280GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="82">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit3" loc="41(HplAtm1280GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="83">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit4" loc="41(HplAtm1280GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="84">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit5" loc="41(HplAtm1280GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="85">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit6" loc="41(HplAtm1280GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="86">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit7" loc="41(HplAtm1280GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="87">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF" loc="40(HplAtm1280GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit0" loc="41(HplAtm1280GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="88">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit1" loc="41(HplAtm1280GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="89">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit2" loc="41(HplAtm1280GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="90">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit3" loc="41(HplAtm1280GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="91">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit4" loc="41(HplAtm1280GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="92">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit5" loc="41(HplAtm1280GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="93">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit6" loc="41(HplAtm1280GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="94">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit7" loc="41(HplAtm1280GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="95">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F0" loc="42(HplAtm1280GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F1" loc="42(HplAtm1280GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F2" loc="42(HplAtm1280GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F3" loc="42(HplAtm1280GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F4" loc="42(HplAtm1280GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F5" loc="42(HplAtm1280GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F6" loc="42(HplAtm1280GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F7" loc="42(HplAtm1280GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G0" loc="42(HplAtm1280GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G1" loc="42(HplAtm1280GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G2" loc="42(HplAtm1280GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G3" loc="42(HplAtm1280GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G4" loc="42(HplAtm1280GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G5" loc="42(HplAtm1280GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H0" loc="42(HplAtm1280GeneralIOC.H0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H1" loc="42(HplAtm1280GeneralIOC.H1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H2" loc="42(HplAtm1280GeneralIOC.H2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H3" loc="42(HplAtm1280GeneralIOC.H3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H4" loc="42(HplAtm1280GeneralIOC.H4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H5" loc="42(HplAtm1280GeneralIOC.H5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H6" loc="42(HplAtm1280GeneralIOC.H6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H7" loc="42(HplAtm1280GeneralIOC.H7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J0" loc="42(HplAtm1280GeneralIOC.J0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J1" loc="42(HplAtm1280GeneralIOC.J1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J2" loc="42(HplAtm1280GeneralIOC.J2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J3" loc="42(HplAtm1280GeneralIOC.J3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J4" loc="42(HplAtm1280GeneralIOC.J4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J5" loc="42(HplAtm1280GeneralIOC.J5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J6" loc="42(HplAtm1280GeneralIOC.J6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J7" loc="42(HplAtm1280GeneralIOC.J7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K0" loc="42(HplAtm1280GeneralIOC.K0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K1" loc="42(HplAtm1280GeneralIOC.K1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K2" loc="42(HplAtm1280GeneralIOC.K2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K3" loc="42(HplAtm1280GeneralIOC.K3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K4" loc="42(HplAtm1280GeneralIOC.K4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K5" loc="42(HplAtm1280GeneralIOC.K5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K6" loc="42(HplAtm1280GeneralIOC.K6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K7" loc="42(HplAtm1280GeneralIOC.K7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L0" loc="42(HplAtm1280GeneralIOC.L0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L1" loc="42(HplAtm1280GeneralIOC.L1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L2" loc="42(HplAtm1280GeneralIOC.L2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L3" loc="42(HplAtm1280GeneralIOC.L3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L4" loc="42(HplAtm1280GeneralIOC.L4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L5" loc="42(HplAtm1280GeneralIOC.L5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L6" loc="42(HplAtm1280GeneralIOC.L6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L7" loc="42(HplAtm1280GeneralIOC.L7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f7c5ef59900" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f7c5ef59c70" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f7c5ef56020" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f7c5ef4bd00" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f7c5ef480d0" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f7c5ef48460" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f7c5ef487b0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f7c5eeb6890" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f7c5eeb6c20" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f7c5eeb3020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f7c5eeb3370" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortP" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f7c5ee12ba0" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f7c5ee0e020" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f7c5ee0e390" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f7c5ed853d0" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f7c5ed85760" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f7c5ed85af0" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f7c5ed85e40" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f7c5ed305b0" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f7c5ed1d060" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f7c5ed02800" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../tinyos_ws18/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncC" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc" abstract="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f7c5eb0a160" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f7c5eb0a160"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7f7c5eb0a4f0" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7f7c5eb0a880" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncP" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f7c5eafe200" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f7c5eafe200"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7f7c5eafe590" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7f7c5eafe920" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7c5ea13160" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7c5ea13160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7c5e9e1230" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7c5e9e1230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f7c5e9e1560" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7c5e993de0" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7c5e993de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f7c5e8604c0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f7c5e860860" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f7c5e860c00" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f7c5e85f020" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f7c5f1c0bf0" loc="58:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f7c5f1c0bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5f1c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f7c5f1c1720" loc="57:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f7c5f1c1720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f7c5f1c1aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f7c5f1bdd50" loc="52:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f7c5f1bdd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5f1bc100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7c5f1c3d00" loc="46:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7c5f1c3d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5f1be0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f7c5f1bd020" loc="50:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f7c5f1bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f7c5f1bd3a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f7c5f1bd530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f7c5f1bd6c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f7c5f1bd850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f7c5f1bd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f7c5f1b57a0" loc="45:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f7c5f1b57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5f1b5b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7c5f1b50c0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7c5f1b50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5f1b5440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f7c5f1b4020" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f7c5f1b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5f1b43a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f7c5f1ad6f0" loc="4:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f7c5f1ad6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5f1ada70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f7c5f1ad020" loc="3:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f7c5f1ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5f1ad3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7c5f1a4860" loc="51:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7c5f1a4860"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f7c5f34f3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f7c5f34f3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5f1a4be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f7c5f1a3020" loc="52:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f7c5f1a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f7c5f1a33a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f7c5f1a3530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f7c5f1a36c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f7c5f1a3850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f7c5f1a39e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f7c5f190720" loc="60:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f7c5f190720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5f190aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f7c5f1bfe20" loc="57:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f7c5f1bfe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f7c5f1911c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f7c5f190020" loc="59:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f7c5f190020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5f1903a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f7c5f1914b0" loc="58:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f7c5f1914b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5f191830"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f7c5f1919c0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f7c5f191b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f7c5f3437b0" loc="48:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f7c5f3437b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7c5f343b30"/>
        <function-ref name="runTask" scoped="" ref="0x7f7c5f343cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f7c5f34da20" loc="47:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f7c5f34da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5f34dda0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f7c5fcfb020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f7c5fcfb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f7c5f24c020" loc="56:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f7c5f24c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7c5f24c3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f7c5f24c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f7c5f249590" loc="57:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f7c5f249590"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f7c5f249910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f7c5f24e120" loc="55:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f7c5f24e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5f24e4a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f7c5f24e630"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f7c5f24e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f7c5f22e080" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f7c5f22e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f7c5f22e400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f7c5f2672d0" loc="84:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f7c5f2672d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f7c5f267650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f7c5f22d7d0" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f7c5f22d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f7c5f22db50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f7c5f185020" loc="16:Test/FMClickTestP.nc">
      <component-ref qname="FMClickTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f7c5f185020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f7c5f1853a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x7f7c5f184e30" loc="18:Test/FMClickTestP.nc">
      <component-ref qname="FMClickTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x7f7c5f184e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5f1831e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tune2Station" ref="0x7f7c5f168380" loc="37:Test/FMClickTestP.nc">
      <component-ref qname="FMClickTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tune2Station" scoped="" ref="0x7f7c5f168380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7c5f168700"/>
        <function-ref name="runTask" scoped="" ref="0x7f7c5f168890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Radio" ref="0x7f7c5f16b370" loc="19:Test/FMClickTestP.nc">
      <component-ref qname="FMClickTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Radio" scoped="" ref="0x7f7c5f16b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f7c5f173340"/>
        <function-ref name="initDone" scoped="" ref="0x7f7c5f16b880"/>
        <function-ref name="setVolume" scoped="" ref="0x7f7c5f16ba10"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f7c5f16bba0"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f7c5f16bd30"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f7c5f173020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7c5f1731b0"/>
        <function-ref name="seek" scoped="" ref="0x7f7c5f16b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="finishedTuning" ref="0x7f7c5f164380" loc="45:Test/FMClickTestP.nc">
      <component-ref qname="FMClickTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="finishedTuning" scoped="" ref="0x7f7c5f164380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7c5f164700"/>
        <function-ref name="runTask" scoped="" ref="0x7f7c5f164890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f7c5f174980" loc="17:Test/FMClickTestP.nc">
      <component-ref qname="FMClickTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f7c5f174980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f7c5f184b10"/>
        <function-ref name="drawRect" scoped="" ref="0x7f7c5f184020"/>
        <function-ref name="drawLine" scoped="" ref="0x7f7c5f1841b0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f7c5f184340"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f7c5f1844d0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f7c5f184660"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f7c5f1847f0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f7c5f174d00"/>
        <function-ref name="drawText" scoped="" ref="0x7f7c5f184980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7c5f159640" loc="14:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7c5f159640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5f1599c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7f7c5f159c60" loc="15:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7f7c5f159c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f7c5f155b10"/>
        <function-ref name="initDone" scoped="" ref="0x7f7c5f1551b0"/>
        <function-ref name="setVolume" scoped="" ref="0x7f7c5f155340"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f7c5f1554d0"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f7c5f155660"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f7c5f1557f0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7c5f155980"/>
        <function-ref name="seek" scoped="" ref="0x7f7c5f155020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SDIOPin" ref="0x7f7c5f125680" loc="29:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SDIOPin" scoped="" ref="0x7f7c5f125680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5f125a00"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5f125b90"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5f125d20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5f124020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5f1241b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5f124340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5f1244d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5f124660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Int" ref="0x7f7c5f14a6e0" loc="24:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int" scoped="" ref="0x7f7c5f14a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7c5f14aa60"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5f14abf0"/>
        <function-ref name="disable" scoped="" ref="0x7f7c5f14ad80"/>
        <function-ref name="edge" scoped="" ref="0x7f7c5f14f020"/>
        <function-ref name="enable" scoped="" ref="0x7f7c5f14f1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7c5f14f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f7c5f137a20" loc="26:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f7c5f137a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f7c5f1434c0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f7c5f143780"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7c5f1496b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f7c5f138c30"/>
        <function-ref name="write" scoped="" ref="0x7f7c5f144330"/>
        <function-ref name="readDone" scoped="" ref="0x7f7c5f138020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="_tune" ref="0x7f7c5f0db190" loc="345:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="_tune" scoped="" ref="0x7f7c5f0db190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7c5f0db510"/>
        <function-ref name="runTask" scoped="" ref="0x7f7c5f0db6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7c5f154700" loc="19:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7c5f154700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5f154a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="_init" ref="0x7f7c5f0ff660" loc="219:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="_init" scoped="" ref="0x7f7c5f0ff660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7c5f0ff9e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f7c5f0ffb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7f7c5f145d20" loc="25:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7f7c5f145d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7c5f14e0e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7c5f14e270"/>
        <function-ref name="request" scoped="" ref="0x7f7c5f14e400"/>
        <function-ref name="granted" scoped="" ref="0x7f7c5f14e590"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7c5f14e720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTPin" ref="0x7f7c5f11f360" loc="28:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTPin" scoped="" ref="0x7f7c5f11f360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5f11f6e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5f11f870"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5f11fa00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5f11fb90"/>
        <function-ref name="get" scoped="" ref="0x7f7c5f11fd20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5f125020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5f1251b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5f125340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7f7c5f154d20" loc="20:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7f7c5f154d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f7c5f151bd0"/>
        <function-ref name="initDone" scoped="" ref="0x7f7c5f151270"/>
        <function-ref name="setVolume" scoped="" ref="0x7f7c5f151400"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f7c5f151590"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f7c5f151720"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f7c5f1518b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7c5f151a40"/>
        <function-ref name="seek" scoped="" ref="0x7f7c5f1510e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f7c5f1248e0" loc="30:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f7c5f1248e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f7c5f11e980"/>
        <function-ref name="drawRect" scoped="" ref="0x7f7c5f124df0"/>
        <function-ref name="drawLine" scoped="" ref="0x7f7c5f11e020"/>
        <function-ref name="setPixel" scoped="" ref="0x7f7c5f11e1b0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f7c5f11e340"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f7c5f11e4d0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f7c5f11e660"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f7c5f124c60"/>
        <function-ref name="drawText" scoped="" ref="0x7f7c5f11e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f7c5f134260" loc="27:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f7c5f134260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7c5f1276e0"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5f133ca0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7c5f128a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7c5f1285f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f7c5f126020"/>
        <function-ref name="gett0" scoped="" ref="0x7f7c5f127b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7c5f128170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7c5f134e50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7c5f1270d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7c5f133350"/>
        <function-ref name="stop" scoped="" ref="0x7f7c5f133820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7f7c5f087a90" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <component-ref qname="GlcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f7c5f087a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f7c5f084b10"/>
        <function-ref name="drawRect" scoped="" ref="0x7f7c5f084020"/>
        <function-ref name="drawLine" scoped="" ref="0x7f7c5f0841b0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f7c5f084340"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f7c5f0844d0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f7c5f084660"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f7c5f0847f0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f7c5f087e10"/>
        <function-ref name="drawText" scoped="" ref="0x7f7c5f084980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7c5f052920" loc="44:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7c5f052920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5f052ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hpl" ref="0x7f7c5f050020" loc="45:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hpl" scoped="" ref="0x7f7c5f050020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f7c5f0503a0"/>
        <function-ref name="init" scoped="" ref="0x7f7c5f050530"/>
        <function-ref name="dataRead" scoped="" ref="0x7f7c5f0506c0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f7c5f050850"/>
        <function-ref name="controlRead" scoped="" ref="0x7f7c5f0509e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7f7c5f053580" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f7c5f053580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f7c5f052660"/>
        <function-ref name="drawRect" scoped="" ref="0x7f7c5f053a90"/>
        <function-ref name="drawLine" scoped="" ref="0x7f7c5f053c20"/>
        <function-ref name="setPixel" scoped="" ref="0x7f7c5f053db0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f7c5f052020"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f7c5f0521b0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f7c5f052340"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f7c5f053900"/>
        <function-ref name="drawText" scoped="" ref="0x7f7c5f0524d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7f7c5f082bf0" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <component-ref qname="HplKS0108C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7f7c5f082bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f7c5efdc020"/>
        <function-ref name="init" scoped="" ref="0x7f7c5efdc1b0"/>
        <function-ref name="dataRead" scoped="" ref="0x7f7c5efdc340"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f7c5efdc4d0"/>
        <function-ref name="controlRead" scoped="" ref="0x7f7c5efdc660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EN" ref="0x7f7c5efd3cd0" loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EN" scoped="" ref="0x7f7c5efd3cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5efd20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5efd2230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5efd23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5efd2550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5efd26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5efd2870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5efd2a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5efd2b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f7c5efc6910" loc="34:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f7c5efc6910"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f298d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f7c5f296180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f7c5efce780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_0" ref="0x7f7c5efd8020" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_0" scoped="" ref="0x7f7c5efd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5efd83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5efd8530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5efd86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5efd8850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5efd89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5efd8b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5efd8d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5efd7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RST" ref="0x7f7c5efd1020" loc="30:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RST" scoped="" ref="0x7f7c5efd1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5efd13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5efd1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5efd16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5efd1850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5efd19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5efd1b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5efd1d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5efd0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RS" ref="0x7f7c5efd6690" loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RS" scoped="" ref="0x7f7c5efd6690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5efd6a10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5efd6ba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5efd6d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5efd5020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5efd51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5efd5340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5efd54d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5efd5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_1" ref="0x7f7c5efd7380" loc="26:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_1" scoped="" ref="0x7f7c5efd7380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5efd7700"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5efd7890"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5efd7a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5efd7bb0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5efd7d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5efd6020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5efd61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5efd6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7f7c5efd9240" loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7f7c5efd9240"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f7c5efd95c0"/>
        <function-ref name="init" scoped="" ref="0x7f7c5efd9750"/>
        <function-ref name="dataRead" scoped="" ref="0x7f7c5efd98e0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f7c5efd9a70"/>
        <function-ref name="controlRead" scoped="" ref="0x7f7c5efd9c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RW" ref="0x7f7c5efd59b0" loc="28:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RW" scoped="" ref="0x7f7c5efd59b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5efd5d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5efd3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5efd31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5efd3340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5efd34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5efd3660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5efd37f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5efd3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Data" ref="0x7f7c5efc9a80" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Data" scoped="" ref="0x7f7c5efc9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5efc9e00"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5efcf020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5efcf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5efcf340"/>
        <function-ref name="read" scoped="" ref="0x7f7c5efcf4d0"/>
        <function-ref name="write" scoped="" ref="0x7f7c5efcf660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5efcf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f7c5ef63020" loc="98:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f7c5ef63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef637a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef63930"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef63ac0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef63c50"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef63de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef62020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef621b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef62340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f7c5ef80800" loc="72:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f7c5ef80800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef80b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef80d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef7f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef7f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef7f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef7f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef7f660"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef7f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f7c5ef73670" loc="83:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f7c5ef73670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef739f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef73b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef73d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef72020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef721b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef72340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef724d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef72660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f7c5ef69020" loc="92:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f7c5ef69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef693a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef69530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef696c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef69850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef699e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef69b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef69d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef68020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f7c5ef5d350" loc="103:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f7c5ef5d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef5d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef5d860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef5d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef5db80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef5dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef5b020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef5b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef5b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f7c5ef98990" loc="50:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f7c5ef98990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef98d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef97020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef971b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef97340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef974d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef97660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef977f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef97980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f7c5ef6c990" loc="90:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f7c5ef6c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef6cd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef6b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef6b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef6b340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef6b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef6b660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef6b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef6b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f7c5ef94020" loc="53:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f7c5ef94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef943a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef94530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef946c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef94850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef949e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef94b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef94d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f7c5ef88020" loc="64:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f7c5ef88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef883a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef88530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef886c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef88850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef889e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef88b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef88d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef87020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f7c5ef7c060" loc="75:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f7c5ef7c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef7c3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef7c570"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef7c700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef7c890"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef7ca20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef7cbb0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef7cd40"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef7b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f7c5ef6f020" loc="86:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f7c5ef6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef6f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef6f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef6f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef6f850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef6f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef6fb70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef6fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef6e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f7c5ef9eb20" loc="45:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f7c5ef9eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef9d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef9d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef9d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef9d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef9d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef9d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef9d980"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef9db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f7c5ef91990" loc="56:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f7c5ef91990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef91d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef90020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef901b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef90340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef904d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef90660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef907f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef90980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f7c5ef85990" loc="67:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f7c5ef85990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef85d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef84020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef841b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef84340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef844d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef84660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef847f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef84980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f7c5ef78990" loc="78:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f7c5ef78990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef78d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef77020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef771b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef77340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef774d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef77660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef777f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef77980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f7c5ef66990" loc="95:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f7c5ef66990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef66d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef65020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef651b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef65340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef654d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef65660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef657f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef65980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f7c5ef60cb0" loc="101:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f7c5ef60cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef5f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef5f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef5f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef5f550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef5f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef5f870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef5fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef5fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f7c5ef75020" loc="81:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f7c5ef75020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef753a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef75530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef756c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef75850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef759e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef75b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef75d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f7c5ef9a350" loc="48:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f7c5ef9a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef9a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef9a860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef9a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef9ab80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef9ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef99020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef991b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef99340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f7c5ef8d350" loc="59:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f7c5ef8d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef8d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef8d860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef8d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef8db80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef8dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef8c020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef8c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef8c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f7c5ef62670" loc="99:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f7c5ef62670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef629f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef62b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef62d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef61020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef611b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef61340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef614d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef61660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f7c5ef8b990" loc="62:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f7c5ef8b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef8bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef8a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef8a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef8a340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef8a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef8a660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef8a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef8a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f7c5ef7fb20" loc="73:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f7c5ef7fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef7e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef7e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef7e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef7e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef7e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef7e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef7e980"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef7eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f7c5ef72990" loc="84:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f7c5ef72990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef72d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef71020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef711b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef71340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef714d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef71660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef717f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef71980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f7c5ef68350" loc="93:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f7c5ef68350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef686d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef68860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef689f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef68b80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef68d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef67020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef671b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef67340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f7c5ef97cb0" loc="51:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f7c5ef97cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef950a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef95230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef953c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef95550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef956e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef95870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef95a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef95b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f7c5ef93350" loc="54:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f7c5ef93350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef936d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef93860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef939f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef93b80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef93d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef92020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef921b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef92340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f7c5ef87350" loc="65:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f7c5ef87350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef876d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef87860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef879f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef87b80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef87d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef86020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef861b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef86340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f7c5ef7b350" loc="76:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f7c5ef7b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef7b6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef7b860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef7b9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef7bb80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef7bd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef7a020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef7a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef7a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f7c5ef6e350" loc="87:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f7c5ef6e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef6e6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef6e860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef6e9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef6eb80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef6ed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef6d020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef6d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef6d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f7c5ef9de40" loc="46:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f7c5ef9de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef9c1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef9c370"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef9c500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef9c690"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef9c820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef9c9b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef9cb40"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef9ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f7c5ef90cb0" loc="57:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f7c5ef90cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef8f180"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef8f310"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef8f4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef8f630"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef8f7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef8f950"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef8fae0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef8fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f7c5ef84cb0" loc="68:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f7c5ef84cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef830a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef83230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef833c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef83550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef836e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef83870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef83a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef83b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f7c5ef65cb0" loc="96:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f7c5ef65cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef640a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef64230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef643c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef64550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef646e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef64870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef64a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef64b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f7c5ef81350" loc="71:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f7c5ef81350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef818d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef81a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef81bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef81d80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef80020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef801b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef80340"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef804d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f7c5ef74350" loc="82:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f7c5ef74350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef746d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef74860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef749f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef74b80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef74d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef73020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef731b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef73340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f7c5ef6bcb0" loc="91:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f7c5ef6bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef6a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef6a230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef6a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef6a550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef6a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef6a870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef6aa00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef6ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f7c5ef5e020" loc="102:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f7c5ef5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef5e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef5e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef5e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef5e850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef5e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef5eb70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef5ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f7c5ef99670" loc="49:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f7c5ef99670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef999f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef99b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef99d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef98020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef981b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef98340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef984d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef98660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f7c5ef8c670" loc="60:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f7c5ef8c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef8c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef8cb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef8cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef8b020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef8b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef8b340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef8b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef8b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f7c5ef6d670" loc="89:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f7c5ef6d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef6d9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef6db80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef6dd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef6c020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef6c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef6c340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef6c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef6c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f7c5ef8acb0" loc="63:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f7c5ef8acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef890a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef89230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef893c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef89550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef896e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef89870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef89a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef89b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f7c5ef7ee40" loc="74:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f7c5ef7ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef7d1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef7d370"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef7d500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef7d690"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef7d820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef7d9b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef7db40"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef7dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f7c5ef71cb0" loc="85:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f7c5ef71cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef700a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef70230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef703c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef70550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef706e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef70870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef70a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef70b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f7c5ef67670" loc="94:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f7c5ef67670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef679f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef67b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef67d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef66020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef661b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef66340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef664d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef66660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f7c5efa1860" loc="44:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f7c5efa1860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5efa1be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5efa1d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef9e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef9e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef9e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef9e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef9e660"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef9e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f7c5ef92670" loc="55:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f7c5ef92670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef929f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef92b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef92d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef91020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef911b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef91340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef914d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef91660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f7c5ef86670" loc="66:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f7c5ef86670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef869f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef86b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef86d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef85020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef851b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef85340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef854d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef85660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f7c5ef7a670" loc="77:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f7c5ef7a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef7a9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef7ab80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef7ad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef78020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef781b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef78340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef784d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef78660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f7c5ef61990" loc="100:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f7c5ef61990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef61d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef60020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef601b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef60340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef604d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef60660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef607f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef60980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f7c5ef77cb0" loc="80:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f7c5ef77cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef760a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef76230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef763c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef76550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef766e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef76870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef76a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef76b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f7c5ef82020" loc="69:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f7c5ef82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef823a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef82530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef826c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef82850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef829e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef82b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef82d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef81020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f7c5ef9b060" loc="47:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f7c5ef9b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef9b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef9b570"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef9b700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef9b890"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef9ba20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef9bbb0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef9bd40"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef9a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f7c5ef8e020" loc="58:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f7c5ef8e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef8e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef8e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef8e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef8e850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef8e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef8eb70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef8ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f7c5ef10440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f7c5ef10440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef107c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef10950"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef10ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef10c70"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef10e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef0e020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef0e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef0e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f7c5ef0c8f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f7c5ef0c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef0cc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef0ce00"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef0b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef0b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef0b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef0b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef0b660"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef0b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f7c5ef12140" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f7c5ef12140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef124c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef12650"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef127e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef12970"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef12b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef12c90"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef12e20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f7c5ef0e5d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f7c5ef0e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef0e950"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef0eae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef0ec70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef0ee00"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef0d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef0d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef0d340"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef0d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f7c5ef0ba80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f7c5ef0ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef0be00"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef0a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef0a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef0a340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef0a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef0a660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef0a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef0a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f7c5ef112b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f7c5ef112b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef11630"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef117c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef11950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef11ae0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef11c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef11e00"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef10020"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef101b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f7c5ef0d760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f7c5ef0d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef0dae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef0dc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef0de00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef0c020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef0c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef0c340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef0c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef0c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f7c5ef0ac10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f7c5ef0ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef09020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef091b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef09340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef094d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef09660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef097f0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef09980"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef09b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e719020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e719020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e7193a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e719530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e7196c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e719850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e7199e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e719b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e719d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e718020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7163f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7163f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e716770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e716900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e716a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e716c20"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e716db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e714020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7141b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e714340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7126d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7126d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e712a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e712be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e712d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e711020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e7111b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e711340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7114d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e711660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e70f9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e70f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e70fd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e70e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e70e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e70e340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e70e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e70e660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e70e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e70e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e70ce20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e70ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e70b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e70b350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e70b4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e70b670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e70b800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e70b990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e70bb20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e70bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7080a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7080a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e708420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e7085b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e708740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e7088d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e708a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e708bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e708d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e707020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7053f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7053f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e705770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e705900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e705a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e705c20"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e705db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e704020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7041b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e704340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7026d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7026d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e702a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e702be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e702d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e701020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e7011b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e701340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7014d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e701660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f7c5ef00760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f7c5ef00760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef00ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef00c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef00e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eeff020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eeff1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eeff340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eeff4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eeff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f7c5eefdc10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f7c5eefdc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eefc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eefc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eefc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eefc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eefc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eefc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eefc980"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eefcb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f7c5ef023f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f7c5ef023f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef02770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef02900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef02a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef02c20"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef02db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef01020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef011b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef01340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f7c5eeff8f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f7c5eeff8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eeffc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eeffe00"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eefe020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eefe1b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eefe340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eefe4d0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eefe660"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eefe7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f7c5eefcda0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f7c5eefcda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eefb180"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eefb310"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eefb4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eefb630"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eefb7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eefb950"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eefbae0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eefbc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f7c5ef015d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f7c5ef015d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ef01950"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ef01ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ef01c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ef01e00"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ef00020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ef001b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ef00340"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ef004d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f7c5eefea80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f7c5eefea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eefee00"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eefd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eefd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eefd340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eefd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eefd660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eefd7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eefd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f7c5eefa020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f7c5eefa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eefa3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eefa530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eefa6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eefa850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eefa9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eefab70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eefad00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eef9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e6aea60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e6aea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e6aede0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e6ad020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e6ad1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e6ad340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e6ad4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e6ad660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e6ad7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e6ad980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e6abe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e6abe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e6aa1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e6aa350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e6aa4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e6aa670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e6aa800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e6aa990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e6aab20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e6aacb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e6a70a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e6a70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e6a7420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e6a75b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e6a7740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e6a78d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e6a7a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e6a7bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e6a7d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e6a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e6a33f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e6a33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e6a3770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e6a3900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e6a3a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e6a3c20"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e6a3db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e6a2020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e6a21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e6a2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e6a06d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e6a06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e6a0a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e6a0be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e6a0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e69f020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e69f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e69f340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e69f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e69f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e69d9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e69d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e69dd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e69c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e69c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e69c340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e69c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e69c660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e69c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e69c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e69ae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e69ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e6991c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e699350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e6994e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e699670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e699800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e699990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e699b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e699cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e6960a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e6960a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e696420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e6965b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e696740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e6968d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e696a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e696bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e696d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e695020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f7c5eef1a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f7c5eef1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eef1e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eef0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eef01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eef0340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eef04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eef0660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eef07f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eef0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f7c5eeed020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f7c5eeed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eeed3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eeed530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eeed6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eeed850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eeed9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eeedb70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eeedd00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eeec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f7c5eef37a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f7c5eef37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eef3b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eef3cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eef3e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eef2020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eef21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eef2340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eef24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eef2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f7c5eef0c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f7c5eef0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eeef020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eeef1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eeef340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eeef4d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eeef660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eeef7f0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eeef980"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eeefb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f7c5eeec2b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f7c5eeec2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eeec630"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eeec7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eeec950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eeecae0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eeecc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eeece00"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eeeb020"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eeeb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f7c5eef28f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f7c5eef28f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eef2c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eef2e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eef1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eef11b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eef1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eef14d0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eef1660"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eef17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f7c5eeefda0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f7c5eeefda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eeee180"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eeee310"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eeee4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eeee630"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eeee7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eeee950"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eeeeae0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eeeec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f7c5eeeb440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f7c5eeeb440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eeeb7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eeeb950"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eeebae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eeebc70"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eeebe00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eeea020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eeea1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eeea340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e641c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e641c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e6400a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e640230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e6403c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e640550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e6406e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e640870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e640a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e640b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e63ee20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e63ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e63d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e63d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e63d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e63d670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e63d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e63d990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e63db20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e63dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e63a0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e63a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e63a420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e63a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e63a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e63a8d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e63aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e63abf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e63ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e638020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e6363f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e6363f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e636770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e636900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e636a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e636c20"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e636db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e635020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e6351b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e635340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e6336d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e6336d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e633a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e633be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e633d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e632020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e6321b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e632340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e6324d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e632660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e6309b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e6309b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e630d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e62f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e62f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e62f340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e62f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e62f660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e62f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e62f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e62de20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e62de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e62c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e62c350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e62c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e62c670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e62c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e62c990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e62cb20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e62ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e6290a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e6290a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e629420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e6295b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e629740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e6298d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e629a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e629bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e629d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e628020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f7c5eee2da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f7c5eee2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eee1180"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eee1310"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eee14a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eee1630"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eee17c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eee1950"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eee1ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eee1c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f7c5eede440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f7c5eede440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eede7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eede950"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eedeae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eedec70"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eedee00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eedc020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eedc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eedc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f7c5eee4a20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f7c5eee4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eee4da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eee3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eee31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eee3340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eee34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eee3660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eee37f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eee3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f7c5eee0020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f7c5eee0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eee03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eee0530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eee06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eee0850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eee09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eee0b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eee0d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eedf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f7c5eedc5d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f7c5eedc5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eedc950"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eedcae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eedcc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eedce00"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eedb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eedb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eedb340"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eedb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f7c5eee3c10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f7c5eee3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eee2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eee21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eee2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eee24d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eee2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eee27f0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eee2980"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eee2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f7c5eedf2b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f7c5eedf2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eedf630"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eedf7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eedf950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eedfae0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eedfc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eedfe00"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eede020"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eede1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f7c5eedb760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f7c5eedb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eedbae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eedbc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eedbe00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eeda020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eeda1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eeda340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eeda4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eeda660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e5d6c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e5d6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e5d50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e5d5230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e5d53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e5d5550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e5d56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e5d5870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e5d5a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e5d5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e5d3e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e5d3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e5d21c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e5d2350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e5d24e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e5d2670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e5d2800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e5d2990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e5d2b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e5d2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e5cf0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e5cf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e5cf420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e5cf5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e5cf740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e5cf8d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e5cfa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e5cfbf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e5cfd80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e5ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e5cc3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e5cc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e5cc770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e5cc900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e5cca90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e5ccc20"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e5ccdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e5ca020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e5ca1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e5ca340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e5c86d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e5c86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e5c8a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e5c8be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e5c8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e5c7020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e5c71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e5c7340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e5c74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e5c7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e5c59b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e5c59b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e5c5d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e5c4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e5c41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e5c4340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e5c44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e5c4660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e5c47f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e5c4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e5c2e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e5c2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e5c11c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e5c1350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e5c14e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e5c1670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e5c1800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e5c1990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e5c1b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e5c1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e5be0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e5be0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e5be420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e5be5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e5be740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e5be8d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e5bea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e5bebf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e5bed80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e5bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f7c5eed2020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f7c5eed2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eed23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eed2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eed26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eed2850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eed29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eed2b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eed2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eed0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f7c5eece5d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f7c5eece5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eece950"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eeceae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eecec70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eecee00"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eecd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eecd1b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eecd340"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eecd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f7c5eed5d30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f7c5eed5d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eed40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eed4270"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eed4400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eed4590"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eed4720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eed48b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eed4a40"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eed4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f7c5eed02b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f7c5eed02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eed0630"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eed07c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eed0950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eed0ae0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eed0c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eed0e00"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eecf020"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eecf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f7c5eecd760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f7c5eecd760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eecdae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eecdc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eecde00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eecc020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eecc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eecc340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eecc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eecc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f7c5eed4e60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f7c5eed4e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eed3210"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eed33a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eed3530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eed36c0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eed3850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eed39e0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eed3b70"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eed3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f7c5eecf440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f7c5eecf440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eecf7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eecf950"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eecfae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eecfc70"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eecfe00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eece020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eece1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eece340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f7c5eecc8f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f7c5eecc8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eeccc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eecce00"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eecb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eecb1b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eecb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eecb4d0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eecb660"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eecb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e56bc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e56bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e56a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e56a230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e56a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e56a550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e56a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e56a870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e56aa00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e56ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e568e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e568e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e5671c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e567350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e5674e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e567670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e567800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e567990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e567b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e567cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e5640a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e5640a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e564420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e5645b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e564740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e5648d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e564a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e564bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e564d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e563020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e5613f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e5613f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e561770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e561900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e561a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e561c20"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e561db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e55f020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e55f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e55f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e55d6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e55d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e55da50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e55dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e55dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e55c020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e55c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e55c340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e55c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e55c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e55a9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e55a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e55ad30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e559020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e5591b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e559340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e5594d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e559660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e5597f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e559980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e557e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e557e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e5561c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e556350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e5564e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e556670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e556800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e556990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e556b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e556cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e5530a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e5530a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e553420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e5535b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e553740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e5538d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e553a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e553bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e553d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e552020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f7c5eec2440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f7c5eec2440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eec27c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eec2950"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eec2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eec2c70"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eec2e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eec1020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eec11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eec1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f7c5eebf8f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f7c5eebf8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eebfc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eebfe00"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eebe020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eebe1b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eebe340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eebe4d0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eebe660"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eebe7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f7c5eec4020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f7c5eec4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eec43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eec4530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eec46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eec4850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eec49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eec4b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eec4d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eec3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f7c5eec15d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f7c5eec15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eec1950"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eec1ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eec1c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eec1e00"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eec0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eec01b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eec0340"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eec04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f7c5eebea80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f7c5eebea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eebee00"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eebd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eebd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eebd340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eebd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eebd660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eebd7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eebd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f7c5eec32b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f7c5eec32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eec3630"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eec37c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eec3950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eec3ae0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eec3c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eec3e00"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eec2020"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eec21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f7c5eec0760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f7c5eec0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eec0ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eec0c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eec0e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eebf020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eebf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eebf340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eebf4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eebf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f7c5eebdc10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f7c5eebdc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eebc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eebc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eebc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eebc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eebc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eebc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eebc980"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eebcb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e500c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e500c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e4ff0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e4ff230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e4ff3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e4ff550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e4ff6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e4ff870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e4ffa00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e4ffb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e4fde20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e4fde20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e4fc1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e4fc350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e4fc4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e4fc670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e4fc800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e4fc990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e4fcb20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e4fccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e4f90a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e4f90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e4f9420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e4f95b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e4f9740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e4f98d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e4f9a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e4f9bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e4f9d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e4f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e4f63f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e4f63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e4f6770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e4f6900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e4f6a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e4f6c20"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e4f6db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e4f5020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e4f51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e4f5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e4f36d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e4f36d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e4f3a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e4f3be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e4f3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e4f1020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e4f11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e4f1340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e4f14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e4f1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e4ef9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e4ef9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e4efd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e4ee020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e4ee1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e4ee340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e4ee4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e4ee660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e4ee7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e4ee980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e4ece20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e4ece20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e4eb1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e4eb350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e4eb4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e4eb670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e4eb800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e4eb990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e4ebb20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e4ebcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e4e80a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e4e80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e4e8420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e4e85b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e4e8740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e4e88d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e4e8a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e4e8bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e4e8d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e4e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5eeb4260" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5eeb4260"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eeb45e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eeb4770"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eeb4900"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eeb4a90"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eeb4c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eeb4db0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee9d020"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ee9d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5ee9ad00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5ee9ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee990a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ee99230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee993c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ee99550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ee996e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee99870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee99a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ee99b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5ee946d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5ee946d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee94a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ee94be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee94d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ee93020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ee931b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee93340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee934d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ee93660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5ee8f160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5ee8f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee8f4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ee8f670"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee8f800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ee8f990"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ee8fb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee8fcb0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee8fe40"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ee8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5ee8ac90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5ee8ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee890a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ee89230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee893c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ee89550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ee896e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee89870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee89a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ee89b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5ee846d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5ee846d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee84a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ee84be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee84d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ee83020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ee831b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee83340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee834d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ee83660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5ee7f270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5ee7f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee7f5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ee7f780"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee7f910"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ee7faa0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ee7fc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee7fdc0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee7e020"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ee7e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5ee7ad00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5ee7ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee790a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ee79230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee793c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ee79550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ee796e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee79870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee79a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ee79b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5ee746d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5ee746d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee74a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ee74be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee74d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ee73020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ee731b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee73340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee734d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ee73660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5ee6f160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5ee6f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee6f4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ee6f670"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee6f800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ee6f990"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ee6fb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee6fcb0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee6fe40"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ee6e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5ee6ac90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5ee6ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee690a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ee69230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee693c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ee69550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ee696e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee69870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee69a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ee69b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5ee646d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5ee646d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee64a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ee64be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee64d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ee63020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ee631b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee63340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee634d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ee63660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5ee5f160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5ee5f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee5f4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ee5f670"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee5f800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ee5f990"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ee5fb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee5fcb0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee5fe40"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ee5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5ee5ac90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5ee5ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee590a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ee59230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee593c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ee59550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ee596e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee59870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee59a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ee59b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA" ref="0x7f7c5ee23c40" loc="7:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA" scoped="" ref="0x7f7c5ee23c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee20020"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5ee201b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee20340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee204d0"/>
        <function-ref name="read" scoped="" ref="0x7f7c5ee20660"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ee207f0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee20980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL" ref="0x7f7c5ee15870" loc="18:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL" scoped="" ref="0x7f7c5ee15870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee15bf0"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5ee15d80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee14020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee141b0"/>
        <function-ref name="read" scoped="" ref="0x7f7c5ee14340"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ee144d0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee14660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD" ref="0x7f7c5ee1ee80" loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD" scoped="" ref="0x7f7c5ee1ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee1d220"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5ee1d3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee1d540"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee1d6d0"/>
        <function-ref name="read" scoped="" ref="0x7f7c5ee1d860"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ee1d9f0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee1db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG" ref="0x7f7c5ee1a1d0" loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG" scoped="" ref="0x7f7c5ee1a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee1a550"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5ee1a6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee1a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee1aa00"/>
        <function-ref name="read" scoped="" ref="0x7f7c5ee1ab90"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ee1ad20"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee19020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ" ref="0x7f7c5ee18550" loc="16:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ" scoped="" ref="0x7f7c5ee18550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee188d0"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5ee18a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee18bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee18d80"/>
        <function-ref name="read" scoped="" ref="0x7f7c5ee17020"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ee171b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee17340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB" ref="0x7f7c5ee20d20" loc="8:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB" scoped="" ref="0x7f7c5ee20d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee1f0e0"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5ee1f270"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee1f400"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee1f590"/>
        <function-ref name="read" scoped="" ref="0x7f7c5ee1f720"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ee1f8b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee1fa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE" ref="0x7f7c5ee1c020" loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE" scoped="" ref="0x7f7c5ee1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee1c3a0"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5ee1c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee1c6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee1c850"/>
        <function-ref name="read" scoped="" ref="0x7f7c5ee1c9e0"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ee1cb70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee1cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH" ref="0x7f7c5ee193c0" loc="15:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH" scoped="" ref="0x7f7c5ee193c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee19740"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5ee198d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee19a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee19bf0"/>
        <function-ref name="read" scoped="" ref="0x7f7c5ee19d80"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ee18020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK" ref="0x7f7c5ee176e0" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK" scoped="" ref="0x7f7c5ee176e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee17a60"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5ee17bf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee17d80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee15020"/>
        <function-ref name="read" scoped="" ref="0x7f7c5ee151b0"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ee15340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee154d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC" ref="0x7f7c5ee1fde0" loc="9:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC" scoped="" ref="0x7f7c5ee1fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee1e180"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5ee1e310"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee1e4a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee1e630"/>
        <function-ref name="read" scoped="" ref="0x7f7c5ee1e7c0"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ee1e950"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee1eae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF" ref="0x7f7c5ee1b100" loc="12:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF" scoped="" ref="0x7f7c5ee1b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee1b480"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5ee1b610"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee1b7a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee1b930"/>
        <function-ref name="read" scoped="" ref="0x7f7c5ee1bac0"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ee1bc50"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee1bde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f7c5ee11c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortAP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5ee11c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ee0f0a0"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5ee0f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ee0f3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ee0f550"/>
        <function-ref name="read" scoped="" ref="0x7f7c5ee0f6e0"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ee0f870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ee0fa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f7c5edf7390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortBP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5edf7390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5edf7710"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5edf78a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5edf7a30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5edf7bc0"/>
        <function-ref name="read" scoped="" ref="0x7f7c5edf7d50"/>
        <function-ref name="write" scoped="" ref="0x7f7c5edf6020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5edf61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f7c5edf2910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5edf2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5edf2c90"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5edf2e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5edf1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5edf11b0"/>
        <function-ref name="read" scoped="" ref="0x7f7c5edf1340"/>
        <function-ref name="write" scoped="" ref="0x7f7c5edf14d0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5edf1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f7c5ededcd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5ededcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5edec0a0"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5edec230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5edec3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5edec550"/>
        <function-ref name="read" scoped="" ref="0x7f7c5edec6e0"/>
        <function-ref name="write" scoped="" ref="0x7f7c5edec870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5edeca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f7c5ede8390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortEP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5ede8390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ede8710"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5ede88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ede8a30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ede8bc0"/>
        <function-ref name="read" scoped="" ref="0x7f7c5ede8d50"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ede7020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ede71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f7c5ede3910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortFP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5ede3910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ede3c90"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5ede3e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ede2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ede21b0"/>
        <function-ref name="read" scoped="" ref="0x7f7c5ede2340"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ede24d0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ede2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f7c5eddecd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortGP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5eddecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eddd0a0"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5eddd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eddd3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eddd550"/>
        <function-ref name="read" scoped="" ref="0x7f7c5eddd6e0"/>
        <function-ref name="write" scoped="" ref="0x7f7c5eddd870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eddda00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f7c5eddac90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortHP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5eddac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5edd90a0"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5edd9230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5edd93c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5edd9550"/>
        <function-ref name="read" scoped="" ref="0x7f7c5edd96e0"/>
        <function-ref name="write" scoped="" ref="0x7f7c5edd9870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5edd9a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f7c5edd5c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortJP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5edd5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5edd40a0"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5edd4230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5edd43c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5edd4550"/>
        <function-ref name="read" scoped="" ref="0x7f7c5edd46e0"/>
        <function-ref name="write" scoped="" ref="0x7f7c5edd4870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5edd4a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f7c5edd0c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortKP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5edd0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5edcf0a0"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5edcf230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5edcf3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5edcf550"/>
        <function-ref name="read" scoped="" ref="0x7f7c5edcf6e0"/>
        <function-ref name="write" scoped="" ref="0x7f7c5edcf870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5edcfa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f7c5edccc90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortLP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7c5edccc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5edcb0a0"/>
        <function-ref name="clear" scoped="" ref="0x7f7c5edcb230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5edcb3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5edcb550"/>
        <function-ref name="read" scoped="" ref="0x7f7c5edcb6e0"/>
        <function-ref name="write" scoped="" ref="0x7f7c5edcb870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5edcba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f7c5edc02e0" loc="40:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f7c5edc02e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f298d50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f7c5f296180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f7c5edbe110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7f7c5edad9e0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7f7c5edad9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7c5edadd60"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5edac020"/>
        <function-ref name="disable" scoped="" ref="0x7f7c5edac1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f7c5edac340"/>
        <function-ref name="enable" scoped="" ref="0x7f7c5edac4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7c5edac660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f7c5edb39e0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f7c5edb39e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7c5edb3d60"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5edb1020"/>
        <function-ref name="disable" scoped="" ref="0x7f7c5edb11b0"/>
        <function-ref name="edge" scoped="" ref="0x7f7c5edb1340"/>
        <function-ref name="enable" scoped="" ref="0x7f7c5edb14d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7c5edb1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7f7c5edaf9e0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7f7c5edaf9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7c5edafd60"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5edae020"/>
        <function-ref name="disable" scoped="" ref="0x7f7c5edae1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f7c5edae340"/>
        <function-ref name="enable" scoped="" ref="0x7f7c5edae4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7c5edae660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7f7c5edac9e0" loc="52:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7f7c5edac9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7c5edacd60"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5edab020"/>
        <function-ref name="disable" scoped="" ref="0x7f7c5edab1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f7c5edab340"/>
        <function-ref name="enable" scoped="" ref="0x7f7c5edab4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7c5edab660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f7c5edb19e0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f7c5edb19e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7c5edb1d60"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5edb0020"/>
        <function-ref name="disable" scoped="" ref="0x7f7c5edb01b0"/>
        <function-ref name="edge" scoped="" ref="0x7f7c5edb0340"/>
        <function-ref name="enable" scoped="" ref="0x7f7c5edb04d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7c5edb0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7f7c5edae9e0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7f7c5edae9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7c5edaed60"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5edad020"/>
        <function-ref name="disable" scoped="" ref="0x7f7c5edad1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f7c5edad340"/>
        <function-ref name="enable" scoped="" ref="0x7f7c5edad4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7c5edad660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f7c5f0859b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f7c5f0859b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7c5f085d30"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5edb3020"/>
        <function-ref name="disable" scoped="" ref="0x7f7c5edb31b0"/>
        <function-ref name="edge" scoped="" ref="0x7f7c5edb3340"/>
        <function-ref name="enable" scoped="" ref="0x7f7c5edb34d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7c5edb3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f7c5edb09e0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f7c5edb09e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7c5edb0d60"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5edaf020"/>
        <function-ref name="disable" scoped="" ref="0x7f7c5edaf1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f7c5edaf340"/>
        <function-ref name="enable" scoped="" ref="0x7f7c5edaf4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7c5edaf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7f7c5eda47a0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7f7c5eda47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7c5eda4b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f7c5eda7020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f7c5eda7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7c5eda73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7f7c5eda67a0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7f7c5eda67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7c5eda6b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7f7c5eda3020" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7f7c5eda3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7c5eda33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f7c5eda77a0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f7c5eda77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7c5eda7b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7f7c5eda4020" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7f7c5eda4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7c5eda43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f7c5eda5860" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f7c5eda5860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7c5eda5be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7f7c5eda6020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7f7c5eda6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7c5eda63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f7c5ed86060" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f7c5ed86060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7c5ed863e0"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5ed86570"/>
        <function-ref name="disable" scoped="" ref="0x7f7c5ed86700"/>
        <function-ref name="edge" scoped="" ref="0x7f7c5ed86890"/>
        <function-ref name="enable" scoped="" ref="0x7f7c5ed86a20"/>
        <function-ref name="getValue" scoped="" ref="0x7f7c5ed86bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f7c5ed86e80" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f7c5ed86e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7c5ed71220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f7c5ed6fda0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f7c5ed6fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7c5ed6e180"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5ed6e310"/>
        <function-ref name="disable" scoped="" ref="0x7f7c5ed6e4a0"/>
        <function-ref name="edge" scoped="" ref="0x7f7c5ed6e630"/>
        <function-ref name="enable" scoped="" ref="0x7f7c5ed6e7c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7c5ed6e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f7c5ed6ec20" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f7c5ed6ec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7c5ed6d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f7c5ed6ac90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f7c5ed6ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7c5ed690a0"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5ed69230"/>
        <function-ref name="disable" scoped="" ref="0x7f7c5ed693c0"/>
        <function-ref name="edge" scoped="" ref="0x7f7c5ed69550"/>
        <function-ref name="enable" scoped="" ref="0x7f7c5ed696e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7c5ed69870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f7c5ed69b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f7c5ed69b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7c5ed68020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f7c5ed66c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f7c5ed66c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7c5ed650a0"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5ed65230"/>
        <function-ref name="disable" scoped="" ref="0x7f7c5ed653c0"/>
        <function-ref name="edge" scoped="" ref="0x7f7c5ed65550"/>
        <function-ref name="enable" scoped="" ref="0x7f7c5ed656e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7c5ed65870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f7c5ed65b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f7c5ed65b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7c5ed64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f7c5ed62c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f7c5ed62c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7c5ed610a0"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5ed61230"/>
        <function-ref name="disable" scoped="" ref="0x7f7c5ed613c0"/>
        <function-ref name="edge" scoped="" ref="0x7f7c5ed61550"/>
        <function-ref name="enable" scoped="" ref="0x7f7c5ed616e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7c5ed61870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f7c5ed61b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f7c5ed61b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7c5ed60020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f7c5ed5dc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f7c5ed5dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7c5ed5c0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5ed5c230"/>
        <function-ref name="disable" scoped="" ref="0x7f7c5ed5c3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f7c5ed5c550"/>
        <function-ref name="enable" scoped="" ref="0x7f7c5ed5c6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7c5ed5c870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f7c5ed5cb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f7c5ed5cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7c5ed5b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f7c5ed59c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f7c5ed59c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7c5ed580a0"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5ed58230"/>
        <function-ref name="disable" scoped="" ref="0x7f7c5ed583c0"/>
        <function-ref name="edge" scoped="" ref="0x7f7c5ed58550"/>
        <function-ref name="enable" scoped="" ref="0x7f7c5ed586e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7c5ed58870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f7c5ed58b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f7c5ed58b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7c5ed57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f7c5ed55c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f7c5ed55c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7c5ed530a0"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5ed53230"/>
        <function-ref name="disable" scoped="" ref="0x7f7c5ed533c0"/>
        <function-ref name="edge" scoped="" ref="0x7f7c5ed53550"/>
        <function-ref name="enable" scoped="" ref="0x7f7c5ed536e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7c5ed53870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f7c5ed53b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f7c5ed53b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7c5ed52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7c5ed489f0" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f7c5ed489f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7c5ed48d70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7c5eb46020"/>
        <function-ref name="request" scoped="" ref="0x7f7c5eb461b0"/>
        <function-ref name="granted" scoped="" ref="0x7f7c5eb46340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7c5eb464d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f7c5eb46880" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f7c5eb46880"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f7c5f1434c0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f7c5f143780"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7c5eb44500"/>
        <function-ref name="writeDone" scoped="" ref="0x7f7c5eb429b0"/>
        <function-ref name="write" scoped="" ref="0x7f7c5eb43150"/>
        <function-ref name="readDone" scoped="" ref="0x7f7c5eb43d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7c5ed3a1d0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f7c5ed3a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7c5ed3a550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7c5ed3a6e0"/>
        <function-ref name="request" scoped="" ref="0x7f7c5ed3a870"/>
        <function-ref name="granted" scoped="" ref="0x7f7c5ed3aa00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7c5ed3ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f7c5ed395e0" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f7c5ed395e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f7c5f1434c0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f7c5f143780"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7c5ed38240"/>
        <function-ref name="writeDone" scoped="" ref="0x7f7c5ed356d0"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ed38e50"/>
        <function-ref name="readDone" scoped="" ref="0x7f7c5ed37a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f7c5ecabbf0" loc="92:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f7c5ecabbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f7c5ecaa020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7c5ecaa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f7c5eca9930" loc="96:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7c5eca9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f7c5eca9cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f7c5eca9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f7c5ecaa400" loc="93:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7c5ecaa400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7c5ecaa780"/>
        <function-ref name="requested" scoped="" ref="0x7f7c5ecaa910"/>
        <function-ref name="granted" scoped="" ref="0x7f7c5ecaaaa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7c5ecaac30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7c5ecaadc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7c5ecade60" loc="91:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f7c5ecade60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7c5ecab230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7c5ecab3c0"/>
        <function-ref name="request" scoped="" ref="0x7f7c5ecab550"/>
        <function-ref name="granted" scoped="" ref="0x7f7c5ecab6e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7c5ecab870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f7c5eca9060" loc="94:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7c5eca9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f7c5eca93e0"/>
        <function-ref name="userId" scoped="" ref="0x7f7c5eca9570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7c5e37a810" loc="44:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7c5e37a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5e37ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f7c5e37ae20" loc="45:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f7c5e37ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f7c5e3791c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f7c5e379350"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f7c5e3794e0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f7c5e379670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f7c5e377d80" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f7c5e377d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f7c5e376180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7c5e376310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f7c5e375b60" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7c5e375b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f7c5e374020"/>
        <function-ref name="configure" scoped="" ref="0x7f7c5e3741b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f7c5e374440" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f7c5e374440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f7c5e3747c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f7c5e374950"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f7c5e374ae0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f7c5e374c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f7c5e376560" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7c5e376560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7c5e3768e0"/>
        <function-ref name="requested" scoped="" ref="0x7f7c5e376a70"/>
        <function-ref name="granted" scoped="" ref="0x7f7c5e376c00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7c5e376d90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7c5e375020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f7c5e373020" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f7c5e373020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f7c5e3733a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7c5e373530"/>
        <function-ref name="led1On" scoped="" ref="0x7f7c5e3736c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f7c5e373850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f7c5e3739e0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e373b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f7c5e373d00"/>
        <function-ref name="led0On" scoped="" ref="0x7f7c5e3714d0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e3711b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f7c5e371020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f7c5e371340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7c5e377020" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f7c5e377020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7c5e3773c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7c5e377550"/>
        <function-ref name="request" scoped="" ref="0x7f7c5e3776e0"/>
        <function-ref name="granted" scoped="" ref="0x7f7c5e377870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7c5e377a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f7c5e375270" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7c5e375270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f7c5e3755f0"/>
        <function-ref name="userId" scoped="" ref="0x7f7c5e375780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f7c5e3717a0" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f7c5e3717a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7c5e371b20"/>
        <function-ref name="runTask" scoped="" ref="0x7f7c5e371cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f7c5eca5400" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f7c5eca5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f7c5eca5780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f7c5eca59d0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7c5eca59d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7c5eca5d50"/>
        <function-ref name="requested" scoped="" ref="0x7f7c5ec97020"/>
        <function-ref name="granted" scoped="" ref="0x7f7c5ec971b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7c5ec97340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7c5ec974d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f7c5eca6c40" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f7c5eca6c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f7c5eca5020"/>
        <function-ref name="stop" scoped="" ref="0x7f7c5eca51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f7c5ec97720" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7c5ec97720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f7c5ec97aa0"/>
        <function-ref name="userId" scoped="" ref="0x7f7c5ec97c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7f7c5ec52cd0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f7c5ec52cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f7c5ec510a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f7c5ec56020" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f7c5ec56020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f7c5f1434c0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f7c5f143780"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7c5ec56c50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f7c5ec52150"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ec548c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f7c5ec53510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f7c5ec51330" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f7c5ec51330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f7c5ec516b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7c5ec51840"/>
        <function-ref name="led1On" scoped="" ref="0x7f7c5ec519d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f7c5ec51b60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f7c5ec51cf0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ec51e80"/>
        <function-ref name="led1Off" scoped="" ref="0x7f7c5ec50030"/>
        <function-ref name="led2On" scoped="" ref="0x7f7c5ec50670"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ec50350"/>
        <function-ref name="led2Off" scoped="" ref="0x7f7c5ec501c0"/>
        <function-ref name="led0On" scoped="" ref="0x7f7c5ec504e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7c5ec94470" loc="41:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f7c5ec94470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7c5ec94810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7c5ec949a0"/>
        <function-ref name="request" scoped="" ref="0x7f7c5ec94b30"/>
        <function-ref name="granted" scoped="" ref="0x7f7c5ec94cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7c5ec94e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f7c5ec5c370" loc="42:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f7c5ec5c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f7c5f1434c0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f7c5f143780"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7c5ec5b020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f7c5ec58510"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ec5bc50"/>
        <function-ref name="readDone" scoped="" ref="0x7f7c5ec598c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f7c5ec57210" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f7c5ec57210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7c5ec575b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7c5ec57740"/>
        <function-ref name="request" scoped="" ref="0x7f7c5ec578d0"/>
        <function-ref name="granted" scoped="" ref="0x7f7c5ec57a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7c5ec57bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7f7c5ebdd7f0" loc="79:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f7c5ebdd7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f7c5ebddb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f7c5ebdde40" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f7c5ebdde40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f7c5ebdc1e0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f7c5ebdc370"/>
        <function-ref name="setStart" scoped="" ref="0x7f7c5ebdc500"/>
        <function-ref name="status" scoped="" ref="0x7f7c5ebdc690"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f7c5ebdc820"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f7c5ebdc9b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f7c5ebdcb40"/>
        <function-ref name="read" scoped="" ref="0x7f7c5ebdccd0"/>
        <function-ref name="init" scoped="" ref="0x7f7c5ebdce60"/>
        <function-ref name="enableAck" scoped="" ref="0x7f7c5ebdb020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f7c5ebdb1b0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f7c5ebdb340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f7c5ebdb4d0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f7c5ebdb760"/>
        <function-ref name="enable" scoped="" ref="0x7f7c5ebdb8f0"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ebdba80"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f7c5ebdbc10"/>
        <function-ref name="off" scoped="" ref="0x7f7c5ebdbda0"/>
        <function-ref name="setStop" scoped="" ref="0x7f7c5ebda020"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f7c5ebda1b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f7c5ebda340"/>
        <function-ref name="hasStop" scoped="" ref="0x7f7c5ebda4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7f7c5ebda7a0" loc="82:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f7c5ebda7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f7c5ebdab20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7c5ebdacb0"/>
        <function-ref name="led1On" scoped="" ref="0x7f7c5ebdae40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f7c5ebd9020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f7c5ebd91b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ebd9340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f7c5ebd94d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f7c5ebd9b10"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ebd97f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f7c5ebd9660"/>
        <function-ref name="led0On" scoped="" ref="0x7f7c5ebd9980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7f7c5ebd9de0" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f7c5ebd9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f7c5ebd8180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7c5ebd8310"/>
        <function-ref name="led1On" scoped="" ref="0x7f7c5ebd84a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f7c5ebd8630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f7c5ebd87c0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ebd8950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f7c5ebd8ae0"/>
        <function-ref name="led2On" scoped="" ref="0x7f7c5ebd71b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ebd8e00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f7c5ebd8c70"/>
        <function-ref name="led0On" scoped="" ref="0x7f7c5ebd7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f7c5ebd7480" loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f7c5ebd7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7c5ebd7800"/>
        <function-ref name="runTask" scoped="" ref="0x7f7c5ebd7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f7c5ebe21e0" loc="77:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f7c5ebe21e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f7c5ebe2560"/>
        <function-ref name="stop" scoped="" ref="0x7f7c5ebe26f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f7c5ebe2aa0" loc="78:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f7c5ebe2aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f7c5f1434c0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f7c5f143780"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7c5ebe16f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f7c5ebdfc30"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ebe0330"/>
        <function-ref name="readDone" scoped="" ref="0x7f7c5ebdf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f7c5ebd4ab0" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f7c5ebd4ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f7c5ebd4e30"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f7c5ebd1020"/>
        <function-ref name="setStart" scoped="" ref="0x7f7c5ebd11b0"/>
        <function-ref name="status" scoped="" ref="0x7f7c5ebd1340"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f7c5ebd14d0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f7c5ebd1660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f7c5ebd17f0"/>
        <function-ref name="read" scoped="" ref="0x7f7c5ebd1980"/>
        <function-ref name="init" scoped="" ref="0x7f7c5ebd1b10"/>
        <function-ref name="enableAck" scoped="" ref="0x7f7c5ebd1ca0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f7c5ebd1e30"/>
        <function-ref name="hasStart" scoped="" ref="0x7f7c5ebd0020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f7c5ebd01b0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f7c5ebd0440"/>
        <function-ref name="enable" scoped="" ref="0x7f7c5ebd05d0"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ebd0760"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f7c5ebd08f0"/>
        <function-ref name="off" scoped="" ref="0x7f7c5ebd0a80"/>
        <function-ref name="setStop" scoped="" ref="0x7f7c5ebd0c10"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f7c5ebd0da0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f7c5ebcf020"/>
        <function-ref name="hasStop" scoped="" ref="0x7f7c5ebcf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f7c5ebcc440" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f7c5ebcc440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f7c5ebcc7c0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f7c5ebcc950"/>
        <function-ref name="setStart" scoped="" ref="0x7f7c5ebccae0"/>
        <function-ref name="status" scoped="" ref="0x7f7c5ebccc70"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f7c5ebcce00"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f7c5ebcb020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f7c5ebcb1b0"/>
        <function-ref name="read" scoped="" ref="0x7f7c5ebcb340"/>
        <function-ref name="init" scoped="" ref="0x7f7c5ebcb4d0"/>
        <function-ref name="enableAck" scoped="" ref="0x7f7c5ebcb660"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f7c5ebcb7f0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f7c5ebcb980"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f7c5ebcbb10"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f7c5ebcbda0"/>
        <function-ref name="enable" scoped="" ref="0x7f7c5ebca020"/>
        <function-ref name="write" scoped="" ref="0x7f7c5ebca1b0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f7c5ebca340"/>
        <function-ref name="off" scoped="" ref="0x7f7c5ebca4d0"/>
        <function-ref name="setStop" scoped="" ref="0x7f7c5ebca660"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f7c5ebca7f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f7c5ebca980"/>
        <function-ref name="hasStop" scoped="" ref="0x7f7c5ebcab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7f7c5ebc9020" loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7f7c5ebc9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ebc93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ebc9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ebc96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ebc9850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ebc99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ebc9b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ebc9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ebc8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7f7c5ebc8360" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7f7c5ebc8360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5ebc86e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5ebc8870"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5ebc8a00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5ebc8b90"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ebc8d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5ebc7020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ebc71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5ebc7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f7c5eb914a0" loc="46:../tinyos_ws18/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f7c5eb914a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f7c5eb91820"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7c5eb919b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f7c5eb91b40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f7c5eb91cd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f7c5eb91e60"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eb8e020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f7c5eb8e1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f7c5eb8e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eb8e340"/>
        <function-ref name="led0On" scoped="" ref="0x7f7c5eb8e4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f7c5eb8e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f7c5eb89550" loc="50:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f7c5eb89550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eb898d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eb89a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eb89bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eb89d80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eb88020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eb881b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eb88340"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eb884d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7c5eb8d7c0" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7c5eb8d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5eb8db40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f7c5eb887f0" loc="51:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f7c5eb887f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eb88b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eb88d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eb87020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eb871b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eb87340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eb874d0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eb87660"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eb877f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f7c5eb8ddc0" loc="47:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f7c5eb8ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f7c5eb8a180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7c5eb8a310"/>
        <function-ref name="led1On" scoped="" ref="0x7f7c5eb8a4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f7c5eb8a630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f7c5eb8a7c0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eb8a950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f7c5eb8aae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f7c5eb891b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eb8ac70"/>
        <function-ref name="led0On" scoped="" ref="0x7f7c5eb8ae00"/>
        <function-ref name="led2On" scoped="" ref="0x7f7c5eb89020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f7c5eb87b10" loc="52:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f7c5eb87b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eb86020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eb861b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eb86340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eb864d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eb86660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eb867f0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eb86980"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eb86b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f7c5eb6a1d0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f7c5eb6a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eb6a550"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eb6a6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eb6a870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eb6aa00"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eb6ab90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eb6ad20"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eb69020"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eb691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f7c5eb69510" loc="45:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f7c5eb69510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eb69890"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eb69a20"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eb69bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eb69d40"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eb68020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eb681b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eb68340"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eb684d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f7c5eb67ab0" loc="48:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7c5eb67ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5eb67e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f7c5eb68830" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f7c5eb68830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5eb68bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5eb68d40"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5eb67020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5eb671b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eb67340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5eb674d0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eb67660"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5eb677f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7c5eb5f340" loc="46:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7c5eb5f340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5eb5f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f7c5eb5f980" loc="47:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f7c5eb5f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f7c5eb5fd00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7c5eb5e020"/>
        <function-ref name="led1On" scoped="" ref="0x7f7c5eb5e1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f7c5eb5e340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f7c5eb5e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5eb5e660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f7c5eb5e7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f7c5eb5ee30"/>
        <function-ref name="set" scoped="" ref="0x7f7c5eb5e980"/>
        <function-ref name="led0On" scoped="" ref="0x7f7c5eb5eb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f7c5eb5eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f7c5e97f140" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="FMClickC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f7c5e97f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7c5e97c630"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5e97eb70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7c5e97d920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7c5e97d4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f7c5e97a020"/>
        <function-ref name="gett0" scoped="" ref="0x7f7c5e97cab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7c5e97d020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7c5e97fd30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7c5e97c020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7c5e97e220"/>
        <function-ref name="stop" scoped="" ref="0x7f7c5e97e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f7c5eb35020" loc="49:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f7c5eb35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7c5eb31630"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5eb33a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7c5eb32920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7c5eb324a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f7c5eb30020"/>
        <function-ref name="gett0" scoped="" ref="0x7f7c5eb31ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7c5eb32020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7c5eb35c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7c5eb31020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7c5eb33110"/>
        <function-ref name="stop" scoped="" ref="0x7f7c5eb335e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f7c5eb2cc30" loc="46:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f7c5eb2cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7c5eb27110"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5eb2a6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7c5eb284a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7c5eb28020"/>
        <function-ref name="getdt" scoped="" ref="0x7f7c5eb27a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f7c5eb27590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7c5eb2ab20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7c5eb2b860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7c5eb28ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7c5eb2bd30"/>
        <function-ref name="stop" scoped="" ref="0x7f7c5eb2a220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f7c5eb22500" loc="47:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f7c5eb22500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7c5eb24170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7c5eb30e60" loc="45:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7c5eb30e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5eb2c210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f7c5eb14020" loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f7c5eb14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7c5eb14e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7c5eb13800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7c5eb13340"/>
        <function-ref name="overflow" scoped="" ref="0x7f7c5eb13cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7c5eb23c80" loc="27:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7c5eb23c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5eb1f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f7c5eb17960" loc="28:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f7c5eb17960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7c5eb151b0"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5eb161b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f7c5eb16b30"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7c5eb16670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f7c5eb15670"/>
        <function-ref name="start" scoped="" ref="0x7f7c5eb1e7c0"/>
        <function-ref name="stop" scoped="" ref="0x7f7c5eb1ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f7c5ea1e4b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f7c5ea1e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7c5ea1bdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5ea1dda0"/>
        <function-ref name="startAt" scoped="" ref="0x7f7c5ea1b760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7c5ea1b2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f7c5ea1a2a0"/>
        <function-ref name="start" scoped="" ref="0x7f7c5ea1d3d0"/>
        <function-ref name="stop" scoped="" ref="0x7f7c5ea1d8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7c5ea1fba0" loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7c5ea1fba0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f7c5f34f020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f7c5f34f020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5ea1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f7c5ea1a8d0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f7c5ea1a8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7c5ea19780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7c5ea18150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7c5ea19c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f7c5ea18610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f7c5e2d4190" loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f7c5e2d4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f7c5e2d4510"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f7c5e2d46a0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f7c5e2d4830"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f7c5e2d49c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f7c5e2d4b50"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f7c5e2d4ce0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f7c5e2d4e70"/>
        <function-ref name="setControlA" scoped="" ref="0x7f7c5e2d3030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f7c5e2e09c0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f7c5e2e09c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7c5e2dc260"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5e2de220"/>
        <function-ref name="startAt" scoped="" ref="0x7f7c5e2deba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7c5e2de6e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f7c5e2dc720"/>
        <function-ref name="start" scoped="" ref="0x7f7c5e2df810"/>
        <function-ref name="stop" scoped="" ref="0x7f7c5e2dfd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7c5e2e01b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7c5e2e01b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7c5e2e0530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f7c5e2dcd50" loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f7c5e2dcd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7c5e2dbba0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7c5e2da550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7c5e2da090"/>
        <function-ref name="overflow" scoped="" ref="0x7f7c5e2daa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x7f7c5e2cf780" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f7c5e2cf780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f7c5e2cfb00"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f7c5e2cfc90"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f7c5e2cfe20"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f7c5e2ce020"/>
        <function-ref name="countBusy" scoped="" ref="0x7f7c5e2ce1b0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f7c5e2ce340"/>
        <function-ref name="getAssr" scoped="" ref="0x7f7c5e2ce4d0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f7c5e2ce660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f7c5e2d33e0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f7c5e2d33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f7c5e2d0e60"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5e2d1a60"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e2d1090"/>
        <function-ref name="reset" scoped="" ref="0x7f7c5e2d0020"/>
        <function-ref name="isOn" scoped="" ref="0x7f7c5e2cf350"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e2d1550"/>
        <function-ref name="start" scoped="" ref="0x7f7c5e2d04e0"/>
        <function-ref name="stop" scoped="" ref="0x7f7c5e2d09a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f7c5e2d9020" loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f7c5e2d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f7c5e2d5350"/>
        <function-ref name="test" scoped="" ref="0x7f7c5e2d69a0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e2d9c50"/>
        <function-ref name="setScale" scoped="" ref="0x7f7c5e2d5810"/>
        <function-ref name="getScale" scoped="" ref="0x7f7c5e2d5d20"/>
        <function-ref name="reset" scoped="" ref="0x7f7c5e2d8b20"/>
        <function-ref name="overflow" scoped="" ref="0x7f7c5e2d8660"/>
        <function-ref name="isOn" scoped="" ref="0x7f7c5e2d6e60"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e2d8150"/>
        <function-ref name="start" scoped="" ref="0x7f7c5e2d6020"/>
        <function-ref name="stop" scoped="" ref="0x7f7c5e2d64e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f7c5ea90c10" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f7c5ea90c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f7c5ea8f020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f7c5ea8f1b0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f7c5ea8f340"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f7c5ea8f4d0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f7c5ea8f660"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f7c5ea8f7f0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f7c5ea8f980"/>
        <function-ref name="setControlA" scoped="" ref="0x7f7c5ea8fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7f7c5ea8a570" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f7c5ea8a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f7c5ea8a8f0"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f7c5ea8aa80"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f7c5ea8ac10"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f7c5ea8ada0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f7c5ea89020"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f7c5ea891b0"/>
        <function-ref name="getAssr" scoped="" ref="0x7f7c5ea89340"/>
        <function-ref name="setAssr" scoped="" ref="0x7f7c5ea894d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f7c5ea8e060" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f7c5ea8e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f7c5ea8ca10"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5ea8d6c0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ea8ec90"/>
        <function-ref name="reset" scoped="" ref="0x7f7c5ea8db80"/>
        <function-ref name="isOn" scoped="" ref="0x7f7c5ea8a020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ea8d1b0"/>
        <function-ref name="start" scoped="" ref="0x7f7c5ea8c090"/>
        <function-ref name="stop" scoped="" ref="0x7f7c5ea8c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f7c5ea978f0" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f7c5ea978f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f7c5ea92cd0"/>
        <function-ref name="test" scoped="" ref="0x7f7c5ea92350"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ea945a0"/>
        <function-ref name="setScale" scoped="" ref="0x7f7c5ea901b0"/>
        <function-ref name="getScale" scoped="" ref="0x7f7c5ea906c0"/>
        <function-ref name="reset" scoped="" ref="0x7f7c5ea934e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f7c5ea93020"/>
        <function-ref name="isOn" scoped="" ref="0x7f7c5ea92810"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ea94a60"/>
        <function-ref name="start" scoped="" ref="0x7f7c5ea939a0"/>
        <function-ref name="stop" scoped="" ref="0x7f7c5ea93e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f7c5ea81db0" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f7c5ea81db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f7c5ea80180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f7c5ea80310"/>
        <function-ref name="getControlA" scoped="" ref="0x7f7c5ea804a0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f7c5ea80630"/>
        <function-ref name="setControlB" scoped="" ref="0x7f7c5ea807c0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f7c5ea80950"/>
        <function-ref name="getControlB" scoped="" ref="0x7f7c5ea80ae0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f7c5ea80c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f7c5ea7b4c0" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f7c5ea7b4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f7c5ea7b840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7f7c5ea7bbf0" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f7c5ea7bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f7c5ea7a020"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f7c5ea7a1b0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f7c5ea7a340"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f7c5ea7a4d0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f7c5ea7a660"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f7c5ea7a7f0"/>
        <function-ref name="getAssr" scoped="" ref="0x7f7c5ea7a980"/>
        <function-ref name="setAssr" scoped="" ref="0x7f7c5ea7ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f7c5ea7f1a0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f7c5ea7f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f7c5ea7cb30"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5ea7e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ea7fdd0"/>
        <function-ref name="reset" scoped="" ref="0x7f7c5ea7ecb0"/>
        <function-ref name="isOn" scoped="" ref="0x7f7c5ea7b020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ea7e2e0"/>
        <function-ref name="start" scoped="" ref="0x7f7c5ea7c1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f7c5ea7c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f7c5ea86a10" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f7c5ea86a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f7c5ea82e60"/>
        <function-ref name="test" scoped="" ref="0x7f7c5ea824e0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5ea856b0"/>
        <function-ref name="setScale" scoped="" ref="0x7f7c5ea81350"/>
        <function-ref name="getScale" scoped="" ref="0x7f7c5ea81860"/>
        <function-ref name="reset" scoped="" ref="0x7f7c5ea84590"/>
        <function-ref name="overflow" scoped="" ref="0x7f7c5ea840d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f7c5ea829a0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5ea85b70"/>
        <function-ref name="start" scoped="" ref="0x7f7c5ea84a50"/>
        <function-ref name="stop" scoped="" ref="0x7f7c5ea82020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f7c5e9e5020" loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f7c5e9e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7c5e9e53a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f7c5e9e5530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f7c5e9eacd0" loc="49:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f7c5e9eacd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7c5e9e6670"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5e9e8550"/>
        <function-ref name="startAt" scoped="" ref="0x7f7c5e9e6020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7c5e9e8a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f7c5e9e6b30"/>
        <function-ref name="start" scoped="" ref="0x7f7c5e9e9b60"/>
        <function-ref name="stop" scoped="" ref="0x7f7c5e9e8090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f7c5e9ef830" loc="48:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f7c5e9ef830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7c5e9ebcf0"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5e9ed300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7c5e9eb0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7c5e9edc00"/>
        <function-ref name="getdt" scoped="" ref="0x7f7c5e9ea660"/>
        <function-ref name="gett0" scoped="" ref="0x7f7c5e9ea1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7c5e9ed780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7c5e9ee480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7c5e9eb6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7c5e9ee950"/>
        <function-ref name="stop" scoped="" ref="0x7f7c5e9eee20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f7c5e995a00" loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f7c5e995a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7c5e995d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f7c5e994020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f7c5e99a640" loc="49:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f7c5e99a640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7c5e996c40"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5e9971e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7c5e996020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7c5e997ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f7c5e995590"/>
        <function-ref name="gett0" scoped="" ref="0x7f7c5e995110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7c5e997660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7c5e999390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7c5e996630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7c5e999860"/>
        <function-ref name="stop" scoped="" ref="0x7f7c5e999d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f7c5e9a0150" loc="48:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f7c5e9a0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7c5e99c700"/>
        <function-ref name="fired" scoped="" ref="0x7f7c5e99fc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7c5e99da50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7c5e99d5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f7c5e99a090"/>
        <function-ref name="gett0" scoped="" ref="0x7f7c5e99cba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7c5e99d110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7c5e9a0d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7c5e99c0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7c5e99f2a0"/>
        <function-ref name="stop" scoped="" ref="0x7f7c5e99f790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f7c5e992790" loc="48:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f7c5e992790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7c5e9913f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f7c5e991a60" loc="49:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f7c5e991a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7c5f29a9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7c5f29ad20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7c5e986890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7c5e985260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7c5e986d50"/>
        <function-ref name="overflow" scoped="" ref="0x7f7c5e985720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f7c5e93b020" loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f7c5e93b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e93b7a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e93b930"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e93bac0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e93bc50"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e93bde0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e93a020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e93a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e93a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f7c5e958800" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f7c5e958800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e958b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e958d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e957020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e9571b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e957340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e9574d0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e957660"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e9577f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f7c5e94c670" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f7c5e94c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e94c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e94cb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e94cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e94b020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e94b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e94b340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e94b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e94b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f7c5e941020" loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f7c5e941020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9413a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e941530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9416c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e941850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9419e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e941b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e941d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e940020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f7c5e935350" loc="108:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f7c5e935350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9356d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e935860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9359f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e935b80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e935d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e934020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9341b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e934340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH2" ref="0x7f7c5e932cb0" loc="112:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH2" scoped="" ref="0x7f7c5e932cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9310a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e931230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9313c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e931550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9316e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e931870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e931a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e931b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH7" ref="0x7f7c5e92ccb0" loc="117:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH7" scoped="" ref="0x7f7c5e92ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e92b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e92b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e92b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e92b550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e92b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e92b870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e92ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e92bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ6" ref="0x7f7c5e922350" loc="125:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ6" scoped="" ref="0x7f7c5e922350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9226d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e922860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9229f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e922b80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e922d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e921020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9211b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e921340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK0" ref="0x7f7c5e920990" loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK0" scoped="" ref="0x7f7c5e920990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e920d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e91f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e91f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e91f340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e91f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e91f660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e91f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e91f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL2" ref="0x7f7c5e914990" loc="139:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL2" scoped="" ref="0x7f7c5e914990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e914d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e913020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9131b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e913340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9134d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e913660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9137f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e913980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f7c5e970990" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f7c5e970990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e970d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e96f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e96f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e96f340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e96f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e96f660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e96f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e96f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f7c5e945990" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f7c5e945990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e945d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e944020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9441b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e944340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9444d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e944660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9447f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e944980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f7c5e96d020" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f7c5e96d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e96d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e96d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e96d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e96d850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e96d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e96db70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e96dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e96c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f7c5e961020" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f7c5e961020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9613a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e961530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9616c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e961850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9619e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e961b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e961d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e960020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f7c5e954060" loc="80:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f7c5e954060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9543e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e954570"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e954700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e954890"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e954a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e954bb0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e954d40"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e953020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f7c5e948020" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f7c5e948020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9483a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e948530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9486c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e948850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9489e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e948b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e948d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e947020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f7c5e976b20" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f7c5e976b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e975020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e9751b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e975340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e9754d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e975660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e9757f0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e975980"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e975b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f7c5e96a990" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f7c5e96a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e96ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e969020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9691b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e969340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9694d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e969660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9697f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e969980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f7c5e95d990" loc="72:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f7c5e95d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e95dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e95c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e95c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e95c340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e95c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e95c660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e95c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e95c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f7c5e951990" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f7c5e951990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e951d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e950020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9501b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e950340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9504d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e950660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9507f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e950980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f7c5e93e990" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f7c5e93e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e93ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e93d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e93d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e93d340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e93d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e93d660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e93d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e93d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f7c5e938cb0" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f7c5e938cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9370a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e937230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9373c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e937550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9376e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e937870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e937a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e937b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH0" ref="0x7f7c5e934670" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH0" scoped="" ref="0x7f7c5e934670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9349f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e934b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e934d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e933020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9331b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e933340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9334d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e933660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f7c5e94e020" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f7c5e94e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e94e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e94e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e94e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e94e850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e94e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e94eb70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e94ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e94d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH5" ref="0x7f7c5e92e670" loc="115:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH5" scoped="" ref="0x7f7c5e92e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e92e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e92eb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e92ed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e92d020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e92d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e92d340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e92d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e92d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ1" ref="0x7f7c5e929350" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ1" scoped="" ref="0x7f7c5e929350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9296d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e929860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9299f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e929b80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e929d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e928020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9281b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e928340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ4" ref="0x7f7c5e925cb0" loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ4" scoped="" ref="0x7f7c5e925cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9240a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e924230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9243c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e924550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9246e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e924870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e924a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e924b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK3" ref="0x7f7c5e91c350" loc="131:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK3" scoped="" ref="0x7f7c5e91c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e91c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e91c860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e91c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e91cb80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e91cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e91b020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e91b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e91b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK6" ref="0x7f7c5e919cb0" loc="134:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK6" scoped="" ref="0x7f7c5e919cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9180a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e918230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9183c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e918550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9186e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e918870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e918a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e918b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL0" ref="0x7f7c5e916350" loc="137:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL0" scoped="" ref="0x7f7c5e916350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9166d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e916860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9169f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e916b80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e916d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e915020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9151b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e915340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL5" ref="0x7f7c5e910350" loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL5" scoped="" ref="0x7f7c5e910350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9106d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e910860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9109f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e910b80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e910d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e90f020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e90f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e90f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f7c5e972350" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f7c5e972350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9726d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e972860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9729f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e972b80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e972d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e971020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9711b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e971340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f7c5e966350" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f7c5e966350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9666d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e966860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9669f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e966b80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e966d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e965020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9651b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e965340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f7c5e93a670" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f7c5e93a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e93a9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e93ab80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e93ad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e939020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9391b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e939340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9394d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e939660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f7c5e964990" loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f7c5e964990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e964d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e963020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9631b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e963340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9634d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e963660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9637f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e963980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f7c5e957b20" loc="78:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f7c5e957b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e956020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e9561b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e956340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e9564d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e956660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e9567f0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e956980"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e956b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f7c5e94b990" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f7c5e94b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e94bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e94a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e94a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e94a340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e94a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e94a660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e94a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e94a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f7c5e940350" loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f7c5e940350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9406d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e940860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9409f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e940b80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e940d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e93f020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e93f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e93f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH3" ref="0x7f7c5e930020" loc="113:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH3" scoped="" ref="0x7f7c5e930020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9303a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e930530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9306c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e930850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9309e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e930b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e930d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e92f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ7" ref="0x7f7c5e921670" loc="126:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ7" scoped="" ref="0x7f7c5e921670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9219f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e921b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e921d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e920020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9201b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e920340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9204d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e920660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK1" ref="0x7f7c5e91fcb0" loc="129:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK1" scoped="" ref="0x7f7c5e91fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e91e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e91e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e91e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e91e550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e91e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e91e870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e91ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e91eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL3" ref="0x7f7c5e913cb0" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL3" scoped="" ref="0x7f7c5e913cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9120a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e912230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9123c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e912550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9126e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e912870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e912a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e912b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ2" ref="0x7f7c5e928670" loc="121:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ2" scoped="" ref="0x7f7c5e928670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9289f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e928b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e928d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e927020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9271b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e927340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9274d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e927660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f7c5e96fcb0" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f7c5e96fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e96e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e96e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e96e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e96e550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e96e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e96e870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e96ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e96eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK4" ref="0x7f7c5e91b670" loc="132:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK4" scoped="" ref="0x7f7c5e91b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e91b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e91bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e91bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e91a020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e91a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e91a340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e91a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e91a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL6" ref="0x7f7c5e90f670" loc="143:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL6" scoped="" ref="0x7f7c5e90f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e90f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e90fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e90fd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e90e020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e90e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e90e340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e90e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e90e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f7c5e96c350" loc="59:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f7c5e96c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e96c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e96c860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e96c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e96cb80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e96cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e96b020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e96b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e96b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f7c5e960350" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f7c5e960350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9606d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e960860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9609f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e960b80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e960d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e95e020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e95e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e95e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f7c5e953350" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f7c5e953350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9536d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e953860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9539f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e953b80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e953d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e952020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9521b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e952340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f7c5e947350" loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f7c5e947350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9476d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e947860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9479f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e947b80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e947d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e946020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9461b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e946340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f7c5e975e40" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f7c5e975e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9741e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e974370"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e974500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e974690"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e974820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e9749b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e974b40"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e974cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f7c5e969cb0" loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f7c5e969cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e968180"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e968310"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9684a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e968630"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9687c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e968950"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e968ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e968c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f7c5e95ccb0" loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f7c5e95ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e95b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e95b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e95b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e95b550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e95b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e95b870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e95ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e95bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f7c5e93dcb0" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f7c5e93dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e93c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e93c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e93c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e93c550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e93c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e93c870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e93ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e93cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH1" ref="0x7f7c5e933990" loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH1" scoped="" ref="0x7f7c5e933990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e933d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e932020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9321b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e932340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9324d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e932660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9327f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e932980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f7c5e959350" loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f7c5e959350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9598d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e959a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e959bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e959d80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e958020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e9581b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e958340"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e9584d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f7c5e94d350" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f7c5e94d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e94d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e94d860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e94d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e94db80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e94dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e94c020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e94c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e94c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f7c5e944cb0" loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f7c5e944cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9420a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e942230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9423c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e942550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9426e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e942870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e942a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e942b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f7c5e936020" loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f7c5e936020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9363a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e936530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9366c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e936850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9369e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e936b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e936d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e935020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH6" ref="0x7f7c5e92d990" loc="116:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH6" scoped="" ref="0x7f7c5e92d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e92dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e92c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e92c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e92c340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e92c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e92c660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e92c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e92c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ5" ref="0x7f7c5e923020" loc="124:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ5" scoped="" ref="0x7f7c5e923020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9233a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e923530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9236c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e923850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9239e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e923b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e923d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e922020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK7" ref="0x7f7c5e917020" loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK7" scoped="" ref="0x7f7c5e917020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9173a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e917530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9176c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e917850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9179e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e917b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e917d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e916020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL1" ref="0x7f7c5e915670" loc="138:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL1" scoped="" ref="0x7f7c5e915670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9159f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e915b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e915d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e914020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9141b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e914340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9144d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e914660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f7c5e971670" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f7c5e971670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9719f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e971b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e971d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e970020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9701b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e970340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9704d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e970660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f7c5e965670" loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f7c5e965670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9659f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e965b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e965d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e964020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9641b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e964340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9644d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e964660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f7c5e946670" loc="94:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f7c5e946670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9469f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e946b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e946d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e945020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9451b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e945340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9454d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e945660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f7c5e963cb0" loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f7c5e963cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9620a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e962230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9623c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e962550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9626e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e962870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e962a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e962b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f7c5e956e40" loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f7c5e956e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9551e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e955370"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e955500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e955690"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e955820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e9559b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e955b40"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e955cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f7c5e94acb0" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f7c5e94acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9490a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e949230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9493c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e949550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9496e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e949870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e949a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e949b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f7c5e93f670" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f7c5e93f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e93f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e93fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e93fd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e93e020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e93e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e93e340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e93e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e93e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f7c5e9797f0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f7c5e9797f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e979b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e979d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e976020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e9761b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e976340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e9764d0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e976660"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e9767f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f7c5e96b670" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f7c5e96b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e96b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e96bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e96bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e96a020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e96a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e96a340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e96a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e96a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f7c5e95e670" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f7c5e95e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e95e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e95eb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e95ed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e95d020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e95d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e95d340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e95d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e95d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f7c5e952670" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f7c5e952670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9529f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e952b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e952d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e951020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9511b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e951340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9514d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e951660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f7c5e939990" loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f7c5e939990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e939d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e938020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9381b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e938340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9384d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e938660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9387f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e938980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH4" ref="0x7f7c5e92f350" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH4" scoped="" ref="0x7f7c5e92f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e92f6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e92f860"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e92f9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e92fb80"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e92fd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e92e020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e92e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e92e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ0" ref="0x7f7c5e92a020" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ0" scoped="" ref="0x7f7c5e92a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e92a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e92a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e92a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e92a850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e92a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e92ab70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e92ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e929020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f7c5e950cb0" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f7c5e950cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e94f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e94f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e94f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e94f550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e94f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e94f870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e94fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e94fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ3" ref="0x7f7c5e927990" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ3" scoped="" ref="0x7f7c5e927990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e927d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e925020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9251b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e925340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9254d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e925660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9257f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e925980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK2" ref="0x7f7c5e91d020" loc="130:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK2" scoped="" ref="0x7f7c5e91d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e91d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e91d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e91d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e91d850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e91d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e91db70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e91dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e91c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK5" ref="0x7f7c5e91a990" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK5" scoped="" ref="0x7f7c5e91a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e91ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e919020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9191b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e919340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9194d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e919660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9197f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e919980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL4" ref="0x7f7c5e911020" loc="141:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL4" scoped="" ref="0x7f7c5e911020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9113a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e911530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9116c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e911850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9119e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e911b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e911d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e910020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL7" ref="0x7f7c5e90e990" loc="144:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL7" scoped="" ref="0x7f7c5e90e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e90ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e90d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e90d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e90d340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e90d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e90d660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e90d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e90d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f7c5e95a020" loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f7c5e95a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e95a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e95a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e95a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e95a850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e95a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e95ab70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e95ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e959020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f7c5e973060" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f7c5e973060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9733e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e973570"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e973700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e973890"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e973a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e973bb0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e973d40"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e972020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f7c5e967020" loc="63:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f7c5e967020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9673a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e967530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9676c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e967850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9679e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e967b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e967d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e966020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f7c5e907da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f7c5e907da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e906180"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e906310"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9064a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e906630"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9067c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e906950"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e906ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e906c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f7c5e903440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f7c5e903440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9037c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e903950"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e903ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e903c70"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e903e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e902020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9021b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e902340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f7c5e909a80" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f7c5e909a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e909e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e908020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9081b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e908340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9084d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e908660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e9087f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e908980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f7c5e905020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f7c5e905020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e9053a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e905530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e9056c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e905850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e9059e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e905b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e905d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e904020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f7c5e9025d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f7c5e9025d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e902950"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e902ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e902c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e902e00"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e900020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e9001b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e900340"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e9004d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f7c5e908c10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f7c5e908c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e907020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e9071b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e907340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e9074d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e907660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e9077f0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e907980"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e907b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f7c5e9042b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f7c5e9042b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e904630"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e9047c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e904950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e904ae0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e904c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e904e00"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e903020"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e9031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f7c5e900760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f7c5e900760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e900ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e900c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e900e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8ff020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8ff1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8ff340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8ff4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8ff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e2316d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e2316d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e231a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e231be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e231d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e22f020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e22f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e22f340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e22f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e22f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e22d9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e22d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e22dd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e22c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e22c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e22c340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e22c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e22c660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e22c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e22c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e22ae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e22ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e2291c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e229350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e2294e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e229670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e229800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e229990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e229b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e229cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e2260a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e2260a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e226420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e2265b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e226740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e2268d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e226a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e226bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e226d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e225020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e2203f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e2203f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e220770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e220900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e220a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e220c20"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e220db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e21f020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e21f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e21f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e21d6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e21d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e21da50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e21dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e21dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e21c020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e21c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e21c340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e21c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e21c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e21a9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e21a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e21ad30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e219020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e2191b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e219340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e2194d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e219660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e2197f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e219980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e217e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e217e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e2161c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e216350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e2164e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e216670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e216800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e216990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e216b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e216cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f7c5e8f7020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f7c5e8f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8f73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8f7530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8f76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8f7850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8f79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8f7b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8f7d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f7c5e8f35d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f7c5e8f35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8f3950"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8f3ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8f3c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8f3e00"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8f2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8f21b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8f2340"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8f24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f7c5e8fad30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f7c5e8fad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8f90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8f9270"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8f9400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8f9590"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8f9720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8f98b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8f9a40"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8f9bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f7c5e8f62b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f7c5e8f62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8f6630"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8f67c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8f6950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8f6ae0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8f6c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8f6e00"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8f4020"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8f41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f7c5e8f2760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f7c5e8f2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8f2ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8f2c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8f2e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8f1020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8f11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8f1340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8f14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8f1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f7c5e8f9e60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f7c5e8f9e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8f8210"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8f83a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8f8530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8f86c0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8f8850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8f89e0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8f8b70"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8f8d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f7c5e8f4440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f7c5e8f4440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8f47c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8f4950"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8f4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8f4c70"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8f4e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8f3020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8f31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8f3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f7c5e8f18f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f7c5e8f18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8f1c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8f1e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8f0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8f01b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8f0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8f04d0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8f0660"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8f07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e1c3a60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e1c3a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e1c3de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e1c1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e1c11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e1c1340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e1c14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e1c1660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e1c17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e1c1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e1bfe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e1bfe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e1be1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e1be350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e1be4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e1be670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e1be800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e1be990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e1beb20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e1becb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e1bb0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e1bb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e1bb420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e1bb5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e1bb740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e1bb8d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e1bba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e1bbbf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e1bbd80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e1ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e1b83f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e1b83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e1b8770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e1b8900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e1b8a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e1b8c20"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e1b8db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e1b7020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e1b71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e1b7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e1b56d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e1b56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e1b5a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e1b5be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e1b5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e1b4020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e1b41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e1b4340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e1b44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e1b4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e1b29b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e1b29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e1b2d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e1b1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e1b11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e1b1340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e1b14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e1b1660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e1b17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e1b1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e1afe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e1afe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e1ae1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e1ae350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e1ae4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e1ae670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e1ae800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e1ae990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e1aeb20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e1aecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e1ab0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e1ab0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e1ab420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e1ab5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e1ab740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e1ab8d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e1aba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e1abbf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e1abd80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e1aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f7c5e8e7440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f7c5e8e7440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8e77c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8e7950"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8e7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8e7c70"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8e7e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8e6020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8e61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8e6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f7c5e8e48f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f7c5e8e48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8e4c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8e4e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8e3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8e31b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8e3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8e34d0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8e3660"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8e37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f7c5e8ea020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f7c5e8ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8ea3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8ea530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8ea6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8ea850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8ea9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8eab70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8ead00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f7c5e8e65d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f7c5e8e65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8e6950"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8e6ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8e6c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8e6e00"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8e5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8e51b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8e5340"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8e54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f7c5e8e3a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f7c5e8e3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8e3e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8e2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8e21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8e2340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8e24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8e2660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8e27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8e2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f7c5e8e82b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f7c5e8e82b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8e8630"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8e87c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8e8950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8e8ae0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8e8c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8e8e00"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8e7020"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8e71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f7c5e8e5760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f7c5e8e5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8e5ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8e5c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8e5e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8e4020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8e41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8e4340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8e44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8e4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f7c5e8e2c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f7c5e8e2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8e1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8e11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8e1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8e14d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8e1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8e17f0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8e1980"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8e1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e158c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e158c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e1570a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e157230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e1573c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e157550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e1576e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e157870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e157a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e157b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e155e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e155e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e1531c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e153350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e1534e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e153670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e153800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e153990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e153b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e153cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e1500a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e1500a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e150420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e1505b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e150740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e1508d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e150a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e150bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e150d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e14f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e14d3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e14d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e14d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e14d900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e14da90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e14dc20"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e14ddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e14c020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e14c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e14c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e14a6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e14a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e14aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e14abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e14ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e149020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e1491b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e149340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e1494d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e149660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e1479b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e1479b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e147d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e146020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e1461b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e146340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e1464d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e146660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e1467f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e146980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e144e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e144e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e1431c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e143350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e1434e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e143670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e143800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e143990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e143b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e143cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e1400a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e1400a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e140420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e1405b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e140740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e1408d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e140a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e140bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e140d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e13f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f7c5e8d8760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f7c5e8d8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8d8ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8d8c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8d8e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8d7020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8d71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8d7340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8d74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8d7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f7c5e8d5c10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f7c5e8d5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8d4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8d41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8d4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8d44d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8d4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8d47f0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8d4980"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8d4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f7c5e8da3f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f7c5e8da3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8da770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8da900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8daa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8dac20"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8dadb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8d9020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8d91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8d9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f7c5e8d78f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f7c5e8d78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8d7c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8d7e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8d6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8d61b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8d6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8d64d0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8d6660"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8d67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f7c5e8d4da0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f7c5e8d4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8d3180"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8d3310"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8d34a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8d3630"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8d37c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8d3950"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8d3ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8d3c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f7c5e8d95d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f7c5e8d95d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8d9950"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8d9ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8d9c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8d9e00"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8d8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8d81b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8d8340"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8d84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f7c5e8d6a80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f7c5e8d6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8d6e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8d5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8d51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8d5340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8d54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8d5660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8d57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8d5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f7c5e8d2020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f7c5e8d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8d23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8d2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8d26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8d2850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8d29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8d2b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8d2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e0edc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e0edc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e0ec0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e0ec230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e0ec3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e0ec550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e0ec6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e0ec870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e0eca00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e0ecb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e0eae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e0eae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e0e81c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e0e8350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e0e84e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e0e8670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e0e8800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e0e8990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e0e8b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e0e8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e0e50a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e0e50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e0e5420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e0e55b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e0e5740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e0e58d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e0e5a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e0e5bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e0e5d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e0e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e0e23f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e0e23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e0e2770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e0e2900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e0e2a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e0e2c20"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e0e2db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e0e1020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e0e11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e0e1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e0df6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e0df6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e0dfa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e0dfbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e0dfd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e0de020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e0de1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e0de340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e0de4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e0de660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e0dc9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e0dc9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e0dcd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e0db020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e0db1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e0db340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e0db4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e0db660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e0db7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e0db980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e0d9e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e0d9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e0d81c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e0d8350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e0d84e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e0d8670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e0d8800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e0d8990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e0d8b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e0d8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e0d50a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e0d50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e0d5420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e0d55b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e0d5740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e0d58d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e0d5a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e0d5bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e0d5d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e0d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f7c5e8c9a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f7c5e8c9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8c9e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8c8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8c81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8c8340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8c84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8c8660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8c87f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8c8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f7c5e8c5020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f7c5e8c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8c53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8c5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8c56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8c5850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8c59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8c5b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8c5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f7c5e8cb7a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f7c5e8cb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8cbb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8cbcb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8cbe40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8ca020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8ca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8ca340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8ca4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8ca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f7c5e8c8c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f7c5e8c8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8c7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8c71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8c7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8c74d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8c7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8c77f0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8c7980"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8c7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f7c5e8c32b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f7c5e8c32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8c3630"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8c37c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8c3950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8c3ae0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8c3c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8c3e00"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8c2020"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8c21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f7c5e8ca8f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f7c5e8ca8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8cac70"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8cae00"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8c9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8c91b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8c9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8c94d0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8c9660"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8c97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f7c5e8c7da0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f7c5e8c7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8c6180"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8c6310"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8c64a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8c6630"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8c67c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8c6950"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8c6ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8c6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f7c5e8c2440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f7c5e8c2440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8c27c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8c2950"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8c2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8c2c70"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8c2e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8c1020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8c11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8c1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e082c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e082c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e0810a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e081230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e0813c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e081550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e0816e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e081870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e081a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e081b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e07fe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e07fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e07e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e07e350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e07e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e07e670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e07e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e07e990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e07eb20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e07ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e07b0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e07b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e07b420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e07b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e07b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e07b8d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e07ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e07bbf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e07bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e079020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e0773f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e0773f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e077770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e077900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e077a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e077c20"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e077db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e076020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e0761b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e076340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e0746d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e0746d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e074a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e074be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e074d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e073020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e0731b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e073340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e0734d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e073660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e0719b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e0719b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e071d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e070020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e0701b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e070340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e0704d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e070660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e0707f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e070980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e06ee20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e06ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e06d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e06d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e06d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e06d670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e06d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e06d990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e06db20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e06dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e06a0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e06a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e06a420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e06a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e06a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e06a8d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e06aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e06abf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e06ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e069020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f7c5e8bada0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f7c5e8bada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8b8180"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8b8310"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8b84a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8b8630"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8b87c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8b8950"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8b8ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8b8c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f7c5e8b5440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f7c5e8b5440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8b57c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8b5950"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8b5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8b5c70"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8b5e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8b4020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8b41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8b4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f7c5e8bca20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f7c5e8bca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8bcda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8bb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8bb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8bb340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8bb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8bb660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8bb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8bb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f7c5e8b7020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f7c5e8b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8b73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8b7530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8b76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8b7850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8b79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8b7b70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8b7d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f7c5e8b45d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f7c5e8b45d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8b4950"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8b4ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8b4c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8b4e00"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8b3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8b31b0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8b3340"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8b34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f7c5e8bbc10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f7c5e8bbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8ba020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8ba1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8ba340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8ba4d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8ba660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8ba7f0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8ba980"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8bab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f7c5e8b62b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f7c5e8b62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8b6630"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8b67c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8b6950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8b6ae0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8b6c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8b6e00"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8b5020"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8b51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f7c5e8b3760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f7c5e8b3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8b3ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8b3c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8b3e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8b2020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8b21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8b2340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8b24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8b2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e017c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e017c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e0160a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e016230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e0163c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e016550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e0166e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e016870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e016a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e016b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e014e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e014e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e0131c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e013350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e0134e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e013670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e013800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e013990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e013b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e013cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e0100a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e0100a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e010420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e0105b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e010740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e0108d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e010a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e010bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e010d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e00e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e00c3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e00c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e00c770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e00c900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e00ca90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e00cc20"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e00cdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e00b020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e00b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e00b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e0096d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e0096d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e009a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e009be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e009d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e008020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e0081b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e008340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e0084d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e008660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e0069b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e0069b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e006d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e005020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e0051b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e005340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e0054d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e005660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e0057f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e005980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e003e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e003e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e0021c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e002350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e0024e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e002670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e002800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e002990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e002b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e002cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5dfff0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5dfff0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5dfff420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5dfff5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5dfff740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5dfff8d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5dfffa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5dfffbf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5dfffd80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5dffe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e8ab160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e8ab160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8ab4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8ab670"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8ab800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8ab990"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8abb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8abcb0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8abe40"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e8a7c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e8a7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8a60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8a6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8a63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8a6550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8a66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8a6870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8a6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8a6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e8a16d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e8a16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8a1a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e8a1be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8a1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8a0020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8a01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8a0340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8a04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8a0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e89c160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e89c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e89c4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e89c670"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e89c800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e89c990"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e89cb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e89ccb0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e89ce40"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e89a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e897c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e897c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8960a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e896230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8963c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e896550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8966e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e896870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e896a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e896b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e8916d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e8916d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e891a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e891be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e891d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e890020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8901b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e890340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8904d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e890660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e88c270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e88c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e88c5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e88c780"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e88c910"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e88caa0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e88cc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e88cdc0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e88a020"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e88a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e887d00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e887d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8860a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e886230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8863c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e886550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8866e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e886870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e886a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e886b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e8816d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e8816d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e881a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e881be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e881d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e880020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8801b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e880340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8804d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e880660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e87c160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e87c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e87c4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e87c670"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e87c800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e87c990"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e87cb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e87ccb0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e87ce40"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e87b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e877c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e877c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8760a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e876230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8763c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e876550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8766e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e876870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e876a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e876b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e8716d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e8716d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e871a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e871be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e871d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e870020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8701b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e870340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8704d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e870660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e86c160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e86c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e86c4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e86c670"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e86c800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e86c990"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e86cb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e86ccb0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e86ce40"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e86b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e867c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e867c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8660a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e866230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8663c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e866550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8666e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e866870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e866a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e866b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e84b020" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e84b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e84b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e84b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e84b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e84b850"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e84b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e84bb70"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e84bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e84a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e8466d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e8466d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e846a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e846be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e846d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e845020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8451b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e845340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8454d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e845660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e841c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e841c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8400a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e840230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8403c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e840550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8406e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e840870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e840a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e840b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e83c180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e83c180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e83c500"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e83c690"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e83c820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e83c9b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e83cb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e83ccd0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e83ce60"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e83b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e837830" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e837830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e837bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e837d40"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e836020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8361b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e836340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e8364d0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e836660"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e8367f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e832e20" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e832e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8311c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e831350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8314e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e831670"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e831800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e831990"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e831b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e831cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e82d460" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e82d460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e82d7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e82d970"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e82db00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e82dc90"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e82de20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e82c020"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e82c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e82c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e8289b0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e8289b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e828d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e827020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8271b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e827340"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8274d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e827660"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e8277f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e827980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e822160" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e822160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8224e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e822670"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e822800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e822990"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e822b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e822cb0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e822e40"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e821020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e81e6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e81e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e81ea50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e81ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e81ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e81d020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e81d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e81d340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e81d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e81d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e819c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e819c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8180a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e818230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8183c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e818550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8186e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e818870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e818a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e818b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e814180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e814180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e814500"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e814690"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e814820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8149b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e814b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e814cd0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e814e60"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e812020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e80f6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e80f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e80fa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e80fbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e80fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e80e020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e80e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e80e340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e80e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e80e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e80ac90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e80ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e8090a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e809230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e8093c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e809550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e8096e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e809870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e809a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e809b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e805180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e805180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e805500"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e805690"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e805820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e8059b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e805b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e805cd0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e805e60"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e803020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e8006d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e8006d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e800a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e800be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e800d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e7ff020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e7ff1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e7ff340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7ff4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e7ff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7fbc90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7fbc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e7fa0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e7fa230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e7fa3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e7fa550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e7fa6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e7fa870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7faa00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e7fab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7f6180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7f6180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e7f6500"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e7f6690"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e7f6820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e7f69b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e7f6b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e7f6cd0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7f6e60"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e7f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7f16d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7f16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e7f1a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e7f1be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e7f1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e7f0020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e7f01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e7f0340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7f04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e7f0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7ecc90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7ecc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e7eb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e7eb230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e7eb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e7eb550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e7eb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e7eb870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7eba00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e7ebb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7e7180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7e7180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e7e7500"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e7e7690"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e7e7820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e7e79b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e7e7b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e7e7cd0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7e7e60"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e7e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7e26d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7e26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e7e2a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e7e2be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e7e2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e7e1020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e7e11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e7e1340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7e14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e7e1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7ddc90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7ddc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e7dc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e7dc230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e7dc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e7dc550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e7dc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e7dc870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7dca00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e7dcb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7d8180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7d8180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e7d8500"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e7d8690"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e7d8820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e7d89b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e7d8b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e7d8cd0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7d8e60"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e7d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7d36d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7d36d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e7d3a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e7d3be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e7d3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e7d2020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e7d21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e7d2340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7d24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e7d2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7cec90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7cec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e7cd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e7cd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e7cd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e7cd550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e7cd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e7cd870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7cda00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e7cdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7c9180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7c9180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e7c9500"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e7c9690"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e7c9820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e7c99b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e7c9b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e7c9cd0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7c9e60"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e7c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7c46d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7c46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e7c4a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e7c4be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e7c4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e7c3020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e7c31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e7c3340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7c34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e7c3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7be0a0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7be0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e7be420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e7be5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e7be740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e7be8d0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e7bea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e7bebf0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7bed80"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e7bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7ba6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7ba6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e7baa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e7babe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e7bad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e7b9020"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e7b91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e7b9340"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7b94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e7b9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7b5c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7b5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e7b40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e7b4230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e7b43c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e7b4550"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e7b46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e7b4870"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7b4a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e7b4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7c5e7af180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7c5e7af180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7c5e7af500"/>
        <function-ref name="isInput" scoped="" ref="0x7f7c5e7af690"/>
        <function-ref name="toggle" scoped="" ref="0x7f7c5e7af820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7c5e7af9b0"/>
        <function-ref name="get" scoped="" ref="0x7f7c5e7afb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7c5e7afcd0"/>
        <function-ref name="set" scoped="" ref="0x7f7c5e7afe60"/>
        <function-ref name="clr" scoped="" ref="0x7f7c5e7ae020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../tinyos_ws18/tos/interfaces/Init.nc">
      <documentation loc="34:../tinyos_ws18/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f7c5f1c0740" loc="62:../tinyos_ws18/tos/interfaces/Init.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../tinyos_ws18/tos/interfaces/Boot.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f7c5f1c1350" loc="60:../tinyos_ws18/tos/interfaces/Boot.nc">
        <documentation loc="51:../tinyos_ws18/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f7c5f1b8b70" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f7c5f1b88f0" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f7c5f1bb070" loc="31:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f7c5f1bbaf0" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f7c5f1bb870" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f7c5f1b9630" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f7c5f1b93b0" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f7c5f1b8020" loc="53:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../tinyos_ws18/tos/interfaces/Scheduler.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f7c5f34e6c0" loc="57:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="54:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f7c5f34d6a0" loc="72:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f7c5f34ee30" loc="65:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="59:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f7c5f345610" loc="67:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f7c5f345e60" loc="75:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../tinyos_ws18/tos/interfaces/McuSleep.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f7c5f249270" loc="76:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f7c5f22fb90" loc="62:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f7c5f2ca470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f7c5f22d420" loc="52:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FMClick" loc="9:FMClick.nc">
      <function command="" provided="0" name="seek" ref="0x7f7c5f170580" loc="12:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f7c5f170300" loc="12:FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x7f7c5f16d940" loc="20:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="res" ref="0x7f7c5f16d6c0" loc="20:FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setVolume" ref="0x7f7c5f16f610" loc="16:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7f7c5f16f390" loc="16:FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rdsReceived" ref="0x7f7c5f16b030" loc="24:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><enum-ref ref="0x7f7c5f1837c0"/>
              <typename><typedef-ref name="RDSType" ref="0x7f7c5f1711c0"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f7c5f16ca50" loc="24:FMClick.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref ref="0x7f7c5f1837c0"/>
              <typename><typedef-ref name="RDSType" ref="0x7f7c5f1711c0"/></typename>
            </type-tag>
          </variable>
          <variable name="buf" ref="0x7f7c5f16cd70" loc="24:FMClick.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveRDS" ref="0x7f7c5f16d020" loc="18:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f7c5f16fd10" loc="18:FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="tuneComplete" ref="0x7f7c5f16c350" loc="22:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f7c5f16c0d0" loc="22:FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f7c5f170cc0" loc="14:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tune" ref="0x7f7c5f171bf0" loc="10:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f7c5f171970" loc="10:FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Glcd" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
      <function command="" provided="0" name="drawTextPgm" ref="0x7f7c5f174620" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="109:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawTextPgm&#10;&#10; </short>
          <long>&#10; drawTextPgm&#10;&#10; @param text stored in program memory&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7f7c5f176b50" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7f7c5f174020" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f7c5f174380" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawRect" ref="0x7f7c5f179140" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw rectangle&#10;&#10; </short>
          <long>&#10; Draw rectangle&#10;&#10; @param upper left x&#10; @param upper left y&#10; @param lower right x&#10; @param lower right y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7f7c5f17b3c0" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7f7c5f17b730" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7f7c5f17bac0" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7f7c5f17be30" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawLine" ref="0x7f7c5f17cbc0" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="45:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw line&#10;&#10; </short>
          <long>&#10; Draw line&#10;&#10; @param first point x&#10; @param first point y&#10; @param second point x&#10; @param second point y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7f7c5f17de80" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7f7c5f17c210" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7f7c5f17c5a0" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7f7c5f17c910" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x7f7c5f180ab0" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="12:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Set pixel&#10;&#10; </short>
          <long>&#10; Set pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f7c5f1804c0" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f7c5f180820" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="invertPixel" ref="0x7f7c5f17d6c0" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="34:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Invert pixel&#10;&#10; </short>
          <long>&#10; Invert pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f7c5f17d0d0" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f7c5f17d430" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPixel" ref="0x7f7c5f17e8a0" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="23:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Clear pixel&#10;&#10; </short>
          <long>&#10; Clear pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f7c5f17e2b0" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f7c5f17e610" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawEllipse" ref="0x7f7c5f178730" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw ellipse&#10;&#10; </short>
          <long>&#10; Draw ellipse&#10;&#10; @param center x&#10; @param center y&#10; @param radius horizontal&#10; @param radius vertical&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f7c5f179930" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f7c5f179c90" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_h" ref="0x7f7c5f1780d0" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_v" ref="0x7f7c5f178480" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawText" ref="0x7f7c5f1763b0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="97:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawText&#10;&#10; </short>
          <long>&#10; drawText&#10;&#10; @param text&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7f7c5f177a10" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7f7c5f177d70" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f7c5f176110" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="fill" ref="0x7f7c5f1772a0" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="87:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Fill Display with pattern&#10;&#10; </short>
          <long>&#10; Fill Display with pattern&#10;&#10; @param pattern&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x7f7c5f177020" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f7c5f1219c0" loc="44:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f7c5f120120" loc="45:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f7c5f123b70" loc="42:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f7c5f11f020" loc="47:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f7c5f1212b0" loc="43:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f7c5f120840" loc="46:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f7c5f126d60" loc="40:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f7c5f123480" loc="41:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f7c5f14c8e0" loc="56:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f7c5f14a390" loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f7c5f14c190" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f7c5f14bb20" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f7c5f14b8a0" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f7c5f1509c0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f7c5f14b0e0" loc="63:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7f7c5f142bf0" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7f7c5f142bf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f7c5f13f2d0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f7c5f143b60"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f7c5f141530" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f7c5f143b60"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f7c5f141880" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f7c5f141bd0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f7c5f13f020" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f7c5f139cf0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f7c5f139020" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f7c5f139370" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f7c5f1396c0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f7c5f139a40" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f7c5f13d140" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f7c5f143b60"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f7c5f13e430" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f7c5f143b60"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f7c5f13e780" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f7c5f13ead0" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f7c5f13ee50" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f7c5f13a020" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f7c5f13c1e0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f7c5f13c530" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7c5fc6b610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f7c5f13c880" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f7c5f13cc00" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../tinyos_ws18/tos/interfaces/Resource.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f7c5f146d40" loc="120:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f7c5f148d20" loc="97:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="90:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f7c5f1483b0" loc="88:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f7c5f146570" loc="102:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="99:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f7c5f1458b0" loc="128:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="122:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7c5f132020" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7c5f132020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f7c5f12bc50" loc="136:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="132:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f7c5f12f5b0" loc="83:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f7c5f12d360" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f7c5f12ed60" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f7c5f12d0d0" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f7c5f12e5b0" loc="98:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="94:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f7c5f12aca0" loc="151:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="146:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f7c5f12a420" loc="144:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="138:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f7c5f12fd90" loc="92:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="86:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f7c5f132b90" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f7c5f132910" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f7c5f12b2f0" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="116:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f7c5f12dd00" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f7c5f12b060" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f7c5f130680" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f7c5f130400" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f7c5f130e80" loc="78:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplKS0108" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <short>&#10; Hpl interface for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl interface for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="dataWrite" ref="0x7f7c5f04bbc0" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="48:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write data&#10;&#10; </short>
          <long>&#10; Write data&#10;&#10; @param The controller to write to&#10; @param data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f7c5f04b5b0" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7f7c5f04b930" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f7c5f051940" loc="15:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="10:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Initialize GLCD&#10; &#10; </short>
          <long>&#10; Initialize GLCD&#10; &#10; @return SUCCESS&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataRead" ref="0x7f7c5f04cd60" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="38:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read data&#10;&#10; </short>
          <long>&#10; Read data&#10;&#10; @param The controller to be read from&#10; &#10; @return data&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f7c5f04cae0" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlWrite" ref="0x7f7c5f04c2b0" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write to controller&#10;&#10; </short>
          <long>&#10; Write to controller&#10;&#10; @param The controller to write to&#10; @param controller data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f7c5f04ec50" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7f7c5f04c020" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlRead" ref="0x7f7c5f04e400" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="17:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read controller state&#10;&#10; </short>
          <long>&#10; Read controller state&#10;&#10; @param The controller to be checked&#10; &#10; @return state of the controller&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f7c5f04e180" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7c5efc7430" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7c5efc7430"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f7c5efc7670" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7c5efc7670"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f7c5efc62a0" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7c5efc7670"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f7c5efc6020" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7c5efc7670"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIOPort" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f7c5efcd990" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f7c5efcd710" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f7c5efccc30" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f7c5efcc9b0" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f7c5efcb5b0" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f7c5efcb330" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f7c5efcd020" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f7c5efd0c70" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f7c5efc9750" loc="13:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f7c5efc9020" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f7c5efcbc80" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f7c5efcc2e0" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f7c5efcc060" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f7c5eda54e0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f7c5ed2b8e0" loc="53:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f7c5ed2a270" loc="61:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f7c5ed21a90" loc="65:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f7c5ed21270" loc="59:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f7c5ed288b0" loc="56:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f7c5ed279c0" loc="73:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f7c5ed28020" loc="46:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f7c5ed27190" loc="65:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f7c5ed25350" loc="81:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f7c5ed230e0" loc="90:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f7c5ed23940" loc="98:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f7c5ed18b50" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f7c5ed20b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f7c5ed188d0" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f7c5ed20b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f7c5ed1ca80" loc="53:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f7c5ed19620" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f7c5ed20b00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f7c5ed193a0" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f7c5ed20b00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f7c5ed18020" loc="70:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f7c5ed20b00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../tinyos_ws18/tos/interfaces/Leds.nc">
      <documentation loc="33:../tinyos_ws18/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f7c5ecf5020" loc="61:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f7c5ecf57d0" loc="67:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="63:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f7c5ecf4020" loc="72:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f7c5ecf2020" loc="83:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="79:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f7c5ecf17d0" loc="100:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="96:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f7c5ecf0020" loc="117:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="103:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f7c5ecf47b0" loc="77:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="74:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f7c5ecf0b90" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="120:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f7c5ecf0910" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f7c5ecf6850" loc="56:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f7c5ecf2800" loc="89:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="86:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f7c5ecf1020" loc="94:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="91:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f7c5ec9f020" loc="62:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f7c5eca4db0" loc="95:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f7c5eca16a0" loc="105:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7c5f347020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7f7c5ec85a10" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7f7c5ec41d00" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7f7c5ec40490" loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7f7c5ec3f580" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f7c5ec3f300" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7f7c5ec415e0" loc="52:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7f7c5ec3ce40" loc="65:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f7c5ec37be0" loc="84:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f7c5ec3b830" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f7c5ec3b5b0" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f7c5ec35450" loc="89:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f7c5ec437a0" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7f7c5ec43520" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7f7c5ec3c710" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f7c5ec3c490" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f7c5ec3a120" loc="68:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7f7c5ec3fcc0" loc="61:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f7c5ec38120" loc="75:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7f7c5ec40be0" loc="56:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f7c5ec374a0" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f7c5ec37220" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f7c5ec36d00" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f7c5ec36a80" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7f7c5ec3a920" loc="72:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7f7c5ec43e70" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7f7c5ec3e650" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f7c5ec3e3d0" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7f7c5ec38b40" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f7c5ec388c0" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f7c5ec36390" loc="85:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7f7c5ec3ed80" loc="63:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7c5eb256d0" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7c5eb256d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f7c5eb22020" loc="61:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7c5fc6a170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7c5eb12410" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7c5eb12410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f7c5eb12650" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7c5eb12650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f7c5eb10020" loc="64:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7c5eb12650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f7c5eb0f120" loc="76:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f7c5eb108a0" loc="71:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f7c5eb0f880" loc="82:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="78:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7c5eb1fba0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7c5eb1fba0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f7c5eb1fde0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7c5eb1fde0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f7c5eb189c0" loc="109:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="105:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7c5eb1fde0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f7c5eb1b9b0" loc="78:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f7c5eb18020" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="90:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7c5eb1fde0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7c5eb1fde0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f7c5eb19a10" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7c5eb1fde0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f7c5eb19d50" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7c5eb1fde0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f7c5eb191f0" loc="88:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="81:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f7c5eb171f0" loc="116:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="111:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7c5eb1fde0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f7c5eb1c960" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7c5eb1fde0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f7c5eb1c6e0" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7c5eb1fde0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f7c5eb1b1f0" loc="73:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="68:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f7c5eae1e50" loc="89:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f7c5eae2c40" loc="85:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f7c5eae58c0" loc="79:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f7c5eae1680" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f7c5eae1400" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f7c5eae2470" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f7c5eae21f0" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f7c5eae0890" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f7c5eae0610" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f7c5eae40e0" loc="80:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f7c5eae4a80" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f7c5eae4800" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280TimerSync" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
      <documentation loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changedto Sync for Atm1280&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer2Synchronous" ref="0x7f7c5ead1020" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Turn on timer 2 synchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBBusy" ref="0x7f7c5eacf0e0" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f7c5ead0020" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f7c5ead17a0" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f7c5eacf8f0" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f7c5ead0850" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f7c5ead5be0" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f7c5f27dda0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f7c5f27c230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f7c5ead2660" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f7c5f27dda0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f7c5f27c230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f7c5ead23e0" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f7c5f27dda0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f7c5f27c230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f7c5eadf3d0" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7c5eadf3d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f7c5ead8020" loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f7c5eadb020" loc="58:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f7c5eadfd10" loc="48:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7c5eadf3d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f7c5eadb790" loc="62:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f7c5ead87e0" loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f7c5eadc710" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7c5eadf3d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f7c5eadc490" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7c5eadf3d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f7c5eada020" loc="65:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f7c5eada770" loc="68:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f7c5eaf5a20" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f7c5eaf5a20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f7c5eaed2d0" loc="98:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f7c5eaef350" loc="87:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f7c5eaf2390" loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f7c5eaf5a20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f7c5eaedcb0" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f7c5eaeda30" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f7c5eaec510" loc="110:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f7c5fc6cad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f7c5eaf1c90" loc="75:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f7c5eaf1500" loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f7c5eaefb10" loc="93:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7c5f351500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f7c5eaf2d40" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f7c5eaf5a20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f7c5eaf2ac0" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f7c5eaf5a20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f7c5eaf0420" loc="78:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f7c5eaf0b70" loc="81:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
