<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="20:RadioScannerAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f7701b720c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f7701bae720"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f7701bae720"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f7701bace20"/></to>
    </wire>
    <wire loc="21:RadioScannerAppC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f7701b60980"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f77019f0020"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f77019f0020"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f77019bfb50"/></to>
    </wire>
    <wire loc="22:RadioScannerAppC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x7f7701b71e30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7701aea020"/></to>
    </wire>
    <wire loc="26:FMClick/FMClickC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f7701aea020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7701ae6290"/></to>
    </wire>
    <wire loc="23:RadioScannerAppC.nc">
      <from><interface-ref name="Radio" scoped="" ref="0x7f7701b56d60"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7f7701aea640"/></to>
    </wire>
    <wire loc="27:FMClick/FMClickC.nc">
      <from><interface-ref name="FMClick" scoped="" ref="0x7f7701aea640"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7f7701ae68b0"/></to>
    </wire>
    <wire loc="24:RadioScannerAppC.nc">
      <from><interface-ref name="Keyboard" scoped="" ref="0x7f7701b52600"/></from>
      <to><interface-ref name="PS2" scoped="" ref="0x7f77010c5e60"/></to>
    </wire>
    <wire loc="20:PS2/PS2C.nc">
      <from><interface-ref name="PS2" scoped="" ref="0x7f77010c5e60"/></from>
      <to><interface-ref name="PS2" scoped="" ref="0x7f770109c860"/></to>
    </wire>
    <wire loc="25:RadioScannerAppC.nc">
      <from><interface-ref name="volumeKnob" scoped="" ref="0x7f7701b53060"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f7701055cd0"/></to>
    </wire>
    <wire loc="22:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f7701055cd0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f7700efebe0"/></to>
    </wire>
    <wire loc="26:RadioScannerAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7701b4e220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f7701053b00"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7701053b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f770149f020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f7701badbf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f77005a6c00"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f7701badbf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f770149ae60"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f7701badbf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7700b0c810"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f7701badbf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f77019bd020"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f7701b7e4b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f7701d3ba20"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f7701d3ba20"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f7701c3c990"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f7701b7d020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7701bb0d00"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f7701bb0d00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7701ba20c0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f7701b7d720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f7701badbf0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f7701baad50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f770101d830"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f7701baa020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f7701b90020"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f7701ba1020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7701b91860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f7701ba27a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f77014d2ab0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f7701ba27a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f7701b9a020"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f7701b9a6f0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f7701baad50"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f7701d31bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7701c3b9e0"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f7701c360d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f7701c54080"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f7701c19de0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f77013e64c0"/></to>
    </wire>
    <wire loc="203:RadioScannerP.nc">
      <from><interface-ref name="handleRDS" scoped="" ref="0x7f7701b15ce0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7701d31bd0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:RadioScannerP.nc">
      <from><interface-ref name="inputTuneChannel" scoped="" ref="0x7f7701b3c620"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7701d31bd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:RadioScannerP.nc">
      <from><interface-ref name="handleChar" scoped="" ref="0x7f7701b3a8f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7701d31bd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:RadioScannerP.nc">
      <from><interface-ref name="radioInitFail" scoped="" ref="0x7f7701b21380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7701d31bd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:RadioScannerP.nc">
      <from><interface-ref name="seekBand" scoped="" ref="0x7f7701b26020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7701d31bd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:RadioScannerP.nc">
      <from><interface-ref name="finishedSeeking" scoped="" ref="0x7f7701b1ab70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7701d31bd0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:RadioScannerP.nc">
      <from><interface-ref name="finishedTuning" scoped="" ref="0x7f7701b1f640"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7701d31bd0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:RadioScannerP.nc">
      <from><interface-ref name="readyScreen" scoped="" ref="0x7f7701b25cb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7701d31bd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:FMClick/FMClickC.nc">
      <from><interface-ref name="Int" scoped="" ref="0x7f7701ade600"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7f770171b9e0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f770171b9e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f77016d1c90"/></to>
    </wire>
    <wire loc="31:FMClick/FMClickC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7f7701ad98e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f77016b29f0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f77016b29f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f77016a5530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:FMClick/FMClickC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f7701acb6f0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f77014b0880"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f77014b0880"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f77016a4a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:FMClick/FMClickC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7701ac9620"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f77012ea140"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f77012ea140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f770149f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:FMClick/FMClickC.nc">
      <from><interface-ref name="RSTPin" scoped="" ref="0x7f7701abd920"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f77012c2b20"/></to>
    </wire>
    <wire loc="250:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f77012c2b20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f7701243760"/></to>
    </wire>
    <wire loc="37:FMClick/FMClickC.nc">
      <from><interface-ref name="SDIOPin" scoped="" ref="0x7f7701ac3b30"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f77012c3800"/></to>
    </wire>
    <wire loc="249:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f77012c3800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f77012445d0"/></to>
    </wire>
    <wire loc="38:FMClick/FMClickC.nc">
      <from><interface-ref name="INTPin" scoped="" ref="0x7f7701ac2e40"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7f77012c1e40"/></to>
    </wire>
    <wire loc="251:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f77012c1e40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f77012428f0"/></to>
    </wire>
    <wire loc="40:FMClick/FMClickC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f7701abb020"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f77019f0020"/></to>
    </wire>
    <wire loc="184:FMClick/FMClickP.nc">
      <from><interface-ref name="seek" scoped="" ref="0x7f7701aa82a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7701d31bd0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="182:FMClick/FMClickP.nc">
      <from><interface-ref name="init" scoped="" ref="0x7f7701aab2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7701d31bd0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:FMClick/FMClickP.nc">
      <from><interface-ref name="decodeRDS" scoped="" ref="0x7f7701aa72a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7701d31bd0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:FMClick/FMClickP.nc">
      <from><interface-ref name="tune" scoped="" ref="0x7f7701aaa2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7701d31bd0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Hpl" scoped="" ref="0x7f77019b6640"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7f77019ee640"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="HplKS0108" scoped="" ref="0x7f77019ee640"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7f7701946be0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_0" scoped="" ref="0x7f77019439c0"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x7f77018df020"/></to>
    </wire>
    <wire loc="175:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f77018df020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f770183c760"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_1" scoped="" ref="0x7f7701942ce0"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x7f77018de350"/></to>
    </wire>
    <wire loc="176:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f77018de350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f770183b8f0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RS" scoped="" ref="0x7f7701940020"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7f77018dd670"/></to>
    </wire>
    <wire loc="177:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f77018dd670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f770183aa80"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RW" scoped="" ref="0x7f770193f370"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7f77018dc990"/></to>
    </wire>
    <wire loc="178:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f77018dc990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f7701839c10"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="EN" scoped="" ref="0x7f770193e690"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f77018dbcb0"/></to>
    </wire>
    <wire loc="179:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f77018dbcb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f7701838da0"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RST" scoped="" ref="0x7f770193d9b0"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7f77018d9020"/></to>
    </wire>
    <wire loc="180:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f77018d9020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f7701836020"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="Data" scoped="" ref="0x7f7701934410"/></from>
      <to><interface-ref name="PortA" scoped="" ref="0x7f77017928d0"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortA" scoped="" ref="0x7f77017928d0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f770177aaa0"/></to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f770193a200"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f770172a290"/></to>
    </wire>
    <wire loc="191:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f77018cecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77017de160"/></to>
    </wire>
    <wire loc="165:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f77018ea350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f770184d2b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f770184d2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700d64e20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f770183b8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700cf23f0"/></to>
    </wire>
    <wire loc="185:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f77018d5cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f770182cc10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f770182cc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700c7e3f0"/></to>
    </wire>
    <wire loc="196:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f77018c7060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77017c46d0"/></to>
    </wire>
    <wire loc="143:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f7701902350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f77018752b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f77018752b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700e95e20"/></to>
    </wire>
    <wire loc="183:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f77018d7670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f770182e8f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f770182e8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700c85e20"/></to>
    </wire>
    <wire loc="146:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f7701900990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f770186da20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f770186da20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700e3dc90"/></to>
    </wire>
    <wire loc="157:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f77018f4990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f770185b020"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f770185b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700dcb0a0"/></to>
    </wire>
    <wire loc="168:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f77018e7cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f7701849760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f7701849760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700d5a6d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f7701838da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700ce9e20"/></to>
    </wire>
    <wire loc="138:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f7701909350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f770187b8f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f770187b8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700ea7e20"/></to>
    </wire>
    <wire loc="149:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f77018fc350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f7701869020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f7701869020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700e333f0"/></to>
    </wire>
    <wire loc="160:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f77018f0350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f77018585d0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f77018585d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700dc29b0"/></to>
    </wire>
    <wire loc="171:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f77018e3670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f7701846c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f7701846c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700d500a0"/></to>
    </wire>
    <wire loc="188:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f77018d1670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f77018282b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f77018282b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700c75e20"/></to>
    </wire>
    <wire loc="194:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f77018cab20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77017ce160"/></to>
    </wire>
    <wire loc="174:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f77018e1cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f770183d5d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f770183d5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700cf9e20"/></to>
    </wire>
    <wire loc="141:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f7701905cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f7701878da0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f7701878da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700e9b6d0"/></to>
    </wire>
    <wire loc="152:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f77018f9cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f77018665d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f77018665d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700e2ae20"/></to>
    </wire>
    <wire loc="192:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f77018cc4e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77017d9c90"/></to>
    </wire>
    <wire loc="155:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f77018f6350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f770185ed30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f770185ed30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700dd2c90"/></to>
    </wire>
    <wire loc="166:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f77018e9670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f770184c440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f770184c440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700d600a0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f770183aa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700cef6d0"/></to>
    </wire>
    <wire loc="186:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f77018d3020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f770182bda0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f770182bda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700c7b6d0"/></to>
    </wire>
    <wire loc="144:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f7701901670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f7701874440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f7701874440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700e910a0"/></to>
    </wire>
    <wire loc="147:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f77018ffcb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f770186cc10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f770186cc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700e3ae20"/></to>
    </wire>
    <wire loc="158:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f77018f3cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f770185a2b0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f770185a2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700dc83f0"/></to>
    </wire>
    <wire loc="169:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f77018e5020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f77018488f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f77018488f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700d579b0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f7701836020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700ce50a0"/></to>
    </wire>
    <wire loc="139:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f7701907670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f770187aa80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f770187aa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700ea30a0"/></to>
    </wire>
    <wire loc="150:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f77018fb670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f77018682b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f77018682b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700e306d0"/></to>
    </wire>
    <wire loc="161:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f77018ef670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f7701856760"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f7701856760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700dbfe20"/></to>
    </wire>
    <wire loc="189:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f77018d0990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f7701827440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f7701827440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700c710a0"/></to>
    </wire>
    <wire loc="164:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f77018edcb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f770184e020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f770184e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700d67c90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f770183c760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700cf50a0"/></to>
    </wire>
    <wire loc="184:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f77018d6990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f770182da80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f770182da80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700c810a0"/></to>
    </wire>
    <wire loc="195:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f77018c9e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77017c9c90"/></to>
    </wire>
    <wire loc="142:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f7701903020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f7701876020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f7701876020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700e989b0"/></to>
    </wire>
    <wire loc="153:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f77018f7020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f7701865760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f7701865760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700e260a0"/></to>
    </wire>
    <wire loc="182:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f77018d8350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f770182f7a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f770182f7a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700c88c90"/></to>
    </wire>
    <wire loc="156:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f77018f5670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f770185de60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f770185de60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700dcfe20"/></to>
    </wire>
    <wire loc="167:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f77018e8990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f770184a5d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f770184a5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700d5d3f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f7701839c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700cec9b0"/></to>
    </wire>
    <wire loc="187:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f77018d2350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f7701829020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f7701829020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700c789b0"/></to>
    </wire>
    <wire loc="137:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f770190a020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f770187c6b0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f770187c6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700eaa9b0"/></to>
    </wire>
    <wire loc="148:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f77018fd020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f770186bda0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f770186bda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700e360a0"/></to>
    </wire>
    <wire loc="159:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f77018f1020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f7701859440"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f7701859440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700dc56d0"/></to>
    </wire>
    <wire loc="170:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f77018e4350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f7701847a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f7701847a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700d54e20"/></to>
    </wire>
    <wire loc="193:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f77018cb800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77017d46d0"/></to>
    </wire>
    <wire loc="173:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f77018e2990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f770183e3f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f770183e3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700cfcc90"/></to>
    </wire>
    <wire loc="162:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f77018ee990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f77018558f0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f77018558f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700dbb0a0"/></to>
    </wire>
    <wire loc="140:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f7701906990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f7701879c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f7701879c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700ea03f0"/></to>
    </wire>
    <wire loc="151:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f77018fa990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f7701867440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f7701867440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700e2d9b0"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortL" scoped="" ref="0x7f770177f550"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f77017366c0"/></to>
    </wire>
    <wire loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortD" scoped="" ref="0x7f770178dd20"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7701758910"/></to>
    </wire>
    <wire loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortG" scoped="" ref="0x7f7701783020"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7701749910"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortJ" scoped="" ref="0x7f77017811d0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f77017406c0"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortB" scoped="" ref="0x7f770178fa00"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7701762e80"/></to>
    </wire>
    <wire loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortE" scoped="" ref="0x7f7701786de0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7701753cd0"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortH" scoped="" ref="0x7f7701782100"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7701744780"/></to>
    </wire>
    <wire loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortK" scoped="" ref="0x7f77017803c0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f770173b6c0"/></to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortC" scoped="" ref="0x7f770178eb90"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f770175d390"/></to>
    </wire>
    <wire loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortF" scoped="" ref="0x7f7701785e80"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f770174e390"/></to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7f77017189e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f77016c4c90"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f770171d9e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f77016dada0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7f770171a9e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f77016ccc90"/></to>
    </wire>
    <wire loc="78:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7f77017179e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f77016bfc90"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f770171c9e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f77016d5c90"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7f77017199e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f77016c8c90"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f77019f19b0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f77016f1060"/></to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f77016f1e80"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f7701710860"/></to>
    </wire>
    <wire loc="81:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f77016d9c20"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f7701712020"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f77016d4b40"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f77017127a0"/></to>
    </wire>
    <wire loc="83:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f77016d0b40"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7f7701711020"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f77016cbb40"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7f77017117a0"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f77016c7b40"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7f770170f020"/></to>
    </wire>
    <wire loc="86:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f77016c3b40"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7f770170f7a0"/></to>
    </wire>
    <wire loc="87:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f77016beb40"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7f770170d020"/></to>
    </wire>
    <wire loc="60:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f77016a5530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f77015fd470"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f77016a4a20"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f77015c7370"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f77015c1210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7701617e60"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7701617e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7700b09020"/></to>
    </wire>
    <wire loc="64:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f77015c0020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f770154dc00"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7f77015bdcd0"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7f77015488e0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f7701611c40"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f770154d340"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f770160f9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7701615400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7701615400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7700b07560"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f7701547020"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f770153c0e0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f770153c0e0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f7701538a70"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f7701545ac0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f77014ca980"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f7701543160"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f77014ca980"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f7701616bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f7700b09d80"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7701614060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7700b06270"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7700b06b60"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7701614930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f7700b05440"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f7700b0ce20"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f7700b037a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7701d31bd0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f77015427a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7701d31bd0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7f7701533540"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7f77018edcb0"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7f7701532810"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f77018ea350"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f77014fc4a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f77014f8dc0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f77014d2ab0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f77014f87c0"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f77014f4550"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f77014d51d0"/></to>
    </wire>
    <wire loc="57:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f77014d51d0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f770190a020"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f77014f37f0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f77014d4510"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f77014d4510"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f7701909350"/></to>
    </wire>
    <wire loc="56:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f77014f2b10"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f77014d3830"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f77014d3830"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f7701907670"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f770149f020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f7701497c30"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f7701497c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f770130b150"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f770149ae60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f770148ec80"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f770148d500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f77012fc790"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f770148ec80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f770138aba0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f7701305640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f770135a830"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f7701355cd0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f7701482960"/></to>
    </wire>
    <wire loc="35:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f7701482960"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f77013894b0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f77012f2a60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f770147e020"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f770147e020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f77013858d0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f77013858d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f7700a6ed50"/></to>
    </wire>
    <wire loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f770138aba0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7700a721b0"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f77013894b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f7700a729c0"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7700a6a020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f77014028f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f77014028f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f77013f1a10"/></to>
    </wire>
    <wire loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f7700a65190"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f77013fbc10"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f77013fbc10"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f77013ecdb0"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f7700a643e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f77013f9060"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f77013f9060"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f77013ea1a0"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7f7700a60780"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7f77013f5570"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7f77013f5570"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7f77013e6bf0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f7701350020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7701d31bd0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f7701300a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7701d31bd0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f77012a6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77011ec6d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f77012445d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770087be20"/></to>
    </wire>
    <wire loc="260:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f77012b7670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f7701232c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f7701232c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77008093f0"/></to>
    </wire>
    <wire loc="269:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f77012ac020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f7701222020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f7701222020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770079e3f0"/></to>
    </wire>
    <wire loc="280:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f77012a0350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77011d2c90"/></to>
    </wire>
    <wire loc="284:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH2" scoped="" ref="0x7f770129dcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77011acc90"/></to>
    </wire>
    <wire loc="289:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH7" scoped="" ref="0x7f7701296cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77011939b0"/></to>
    </wire>
    <wire loc="297:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ6" scoped="" ref="0x7f770128d350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770116f180"/></to>
    </wire>
    <wire loc="300:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK0" scoped="" ref="0x7f770128b990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7701166c90"/></to>
    </wire>
    <wire loc="311:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL2" scoped="" ref="0x7f770127f990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7701133180"/></to>
    </wire>
    <wire loc="227:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f77012db990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f770126c5d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f770126c5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77009ab3f0"/></to>
    </wire>
    <wire loc="267:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f77012af990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f7701225c10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f7701225c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77007a5e20"/></to>
    </wire>
    <wire loc="230:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f77012d8020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f7701265d30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f7701265d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700954a60"/></to>
    </wire>
    <wire loc="241:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f77012cb020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f7701252440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f7701252440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77008e20a0"/></to>
    </wire>
    <wire loc="252:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f77012bf060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f7701241a80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f7701241a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77008716d0"/></to>
    </wire>
    <wire loc="263:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f77012b2020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f770122e2b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f770122e2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700800e20"/></to>
    </wire>
    <wire loc="222:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f77012e1b20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f7701273c10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f7701273c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77009bc460"/></to>
    </wire>
    <wire loc="233:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f77012d5990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f77012602b0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f77012602b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770094a3f0"/></to>
    </wire>
    <wire loc="244:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f77012c8990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f770124f8f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f770124f8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77008d99b0"/></to>
    </wire>
    <wire loc="255:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f77012bc990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f770123c020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f770123c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77008670a0"/></to>
    </wire>
    <wire loc="272:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f77012a9990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f770121f5d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f770121f5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700795e20"/></to>
    </wire>
    <wire loc="278:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f77012a3cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77011dc6d0"/></to>
    </wire>
    <wire loc="282:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH0" scoped="" ref="0x7f770129f670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77011b5020"/></to>
    </wire>
    <wire loc="258:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f77012b9020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f77012358f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f77012358f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700810e20"/></to>
    </wire>
    <wire loc="287:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH5" scoped="" ref="0x7f7701299670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770119de20"/></to>
    </wire>
    <wire loc="292:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ1" scoped="" ref="0x7f7701293350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77011896d0"/></to>
    </wire>
    <wire loc="295:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ4" scoped="" ref="0x7f7701290cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770117a6d0"/></to>
    </wire>
    <wire loc="303:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK3" scoped="" ref="0x7f7701287350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7701157c90"/></to>
    </wire>
    <wire loc="306:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK6" scoped="" ref="0x7f7701284cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7701148c90"/></to>
    </wire>
    <wire loc="309:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL0" scoped="" ref="0x7f7701281350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770113e6d0"/></to>
    </wire>
    <wire loc="314:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL5" scoped="" ref="0x7f770127a350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77011256d0"/></to>
    </wire>
    <wire loc="225:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f77012dd350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f770126e2b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f770126e2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77009b3e20"/></to>
    </wire>
    <wire loc="236:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f77012d0350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f770125d760"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f770125d760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700941e20"/></to>
    </wire>
    <wire loc="276:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f77012a5670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77011e6160"/></to>
    </wire>
    <wire loc="239:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f77012ce990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f7701254020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f7701254020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77008e9c90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f7701243760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77008770a0"/></to>
    </wire>
    <wire loc="261:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f77012b6990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f7701231da0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f7701231da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77008066d0"/></to>
    </wire>
    <wire loc="270:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f77012ab350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f77012212b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f77012212b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770079b6d0"/></to>
    </wire>
    <wire loc="285:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH3" scoped="" ref="0x7f770129b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77011a6180"/></to>
    </wire>
    <wire loc="298:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ7" scoped="" ref="0x7f770128c670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770116b6d0"/></to>
    </wire>
    <wire loc="301:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK1" scoped="" ref="0x7f770128acb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7701160180"/></to>
    </wire>
    <wire loc="312:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL3" scoped="" ref="0x7f770127ecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770112f6d0"/></to>
    </wire>
    <wire loc="293:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ2" scoped="" ref="0x7f7701292670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7701184c90"/></to>
    </wire>
    <wire loc="228:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f77012dacb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f770126b760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f770126b760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77009a86d0"/></to>
    </wire>
    <wire loc="304:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK4" scoped="" ref="0x7f7701286670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7701151180"/></to>
    </wire>
    <wire loc="315:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL6" scoped="" ref="0x7f7701279670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7701120c90"/></to>
    </wire>
    <wire loc="231:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f77012d7350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f7701263e60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f7701263e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700951e20"/></to>
    </wire>
    <wire loc="242:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f77012ca350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f77012515d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f77012515d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77008df3f0"/></to>
    </wire>
    <wire loc="253:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f77012be350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f7701240c10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f7701240c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770086e9b0"/></to>
    </wire>
    <wire loc="264:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f77012b1350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f770122d440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f770122d440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77007fc0a0"/></to>
    </wire>
    <wire loc="223:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f77012e0e40"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f7701272da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f7701272da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77009b96d0"/></to>
    </wire>
    <wire loc="234:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f77012d4cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f770125f440"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f770125f440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77009476d0"/></to>
    </wire>
    <wire loc="245:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f77012c7cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f770124ea80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f770124ea80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77008d6e20"/></to>
    </wire>
    <wire loc="273:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f77012a8cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f770121e760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f770121e760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77007910a0"/></to>
    </wire>
    <wire loc="283:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH1" scoped="" ref="0x7f770129e990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77011b16d0"/></to>
    </wire>
    <wire loc="248:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f77012c4350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f77012453f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f77012453f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770087ec90"/></to>
    </wire>
    <wire loc="259:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f77012b8350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f7701234a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f7701234a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770080c0a0"/></to>
    </wire>
    <wire loc="268:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f77012aecb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f7701224da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f7701224da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77007a10a0"/></to>
    </wire>
    <wire loc="279:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f77012a1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77011d6160"/></to>
    </wire>
    <wire loc="288:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH6" scoped="" ref="0x7f7701297990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7701198460"/></to>
    </wire>
    <wire loc="296:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ5" scoped="" ref="0x7f770128e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7701175c90"/></to>
    </wire>
    <wire loc="307:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK7" scoped="" ref="0x7f7701282020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7701142180"/></to>
    </wire>
    <wire loc="310:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL1" scoped="" ref="0x7f7701280670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7701139c90"/></to>
    </wire>
    <wire loc="226:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f77012dc670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f770126d440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f770126d440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77009af0a0"/></to>
    </wire>
    <wire loc="237:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f77012cf670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f770125c8f0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f770125c8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770093c0a0"/></to>
    </wire>
    <wire loc="266:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f77012b0670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f7701226a20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f7701226a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77007a8c90"/></to>
    </wire>
    <wire loc="240:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f77012cdcb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f77012532b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f77012532b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77008e6e20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f77012428f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77008743f0"/></to>
    </wire>
    <wire loc="262:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f77012b4cb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f770122f020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f770122f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77008039b0"/></to>
    </wire>
    <wire loc="271:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f77012aa670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f7701220440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f7701220440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77007989b0"/></to>
    </wire>
    <wire loc="221:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f77012e47f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f7701274a80"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f7701274a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77009bf270"/></to>
    </wire>
    <wire loc="232:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f77012d6670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f7701261020"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f7701261020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770094d0a0"/></to>
    </wire>
    <wire loc="243:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f77012c9670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f7701250760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f7701250760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77008dc6d0"/></to>
    </wire>
    <wire loc="254:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f77012bd670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f770123eda0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f770123eda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770086be20"/></to>
    </wire>
    <wire loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f77012a4990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77011e2c90"/></to>
    </wire>
    <wire loc="286:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH4" scoped="" ref="0x7f770129a350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77011a2830"/></to>
    </wire>
    <wire loc="291:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ0" scoped="" ref="0x7f7701294020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770118d160"/></to>
    </wire>
    <wire loc="257:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f77012bbcb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f77012367a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f77012367a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7700813c90"/></to>
    </wire>
    <wire loc="294:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ3" scoped="" ref="0x7f7701291990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770117e180"/></to>
    </wire>
    <wire loc="302:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK2" scoped="" ref="0x7f7701288020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770115c6d0"/></to>
    </wire>
    <wire loc="305:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK5" scoped="" ref="0x7f7701285990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770114d6d0"/></to>
    </wire>
    <wire loc="313:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL4" scoped="" ref="0x7f770127b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77011290a0"/></to>
    </wire>
    <wire loc="316:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL7" scoped="" ref="0x7f7701278990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f770111a180"/></to>
    </wire>
    <wire loc="246:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f77012c5020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f770124dc10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f770124dc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77008d10a0"/></to>
    </wire>
    <wire loc="224:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f77012de060"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f7701270020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f7701270020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77009b69b0"/></to>
    </wire>
    <wire loc="235:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f77012d1020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f770125e5d0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f770125e5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f77009449b0"/></to>
    </wire>
    <wire loc="21:PS2/PS2C.nc">
      <from><interface-ref name="ClockIRQ" scoped="" ref="0x7f7701094d90"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x7f77010c0ca0"/></to>
    </wire>
    <wire loc="23:PS2/PS2C.nc">
      <from><interface-ref name="ClockPin" scoped="" ref="0x7f77010991c0"/></from>
      <to><interface-ref name="PortK7" scoped="" ref="0x7f7701282020"/></to>
    </wire>
    <wire loc="24:PS2/PS2C.nc">
      <from><interface-ref name="DataPin" scoped="" ref="0x7f77010924f0"/></from>
      <to><interface-ref name="PortK6" scoped="" ref="0x7f7701284cb0"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f7700efebe0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f7701039450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="VolumePin" scoped="" ref="0x7f770104b020"/></from>
      <to><interface-ref name="PortF0" scoped="" ref="0x7f77012b0670"/></to>
    </wire>
    <wire loc="26:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f7700efc320"/></from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f7701049d30"/></to>
    </wire>
    <wire loc="27:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7700efcc10"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f770104d700"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f7701031280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f7700efc320"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f77010301d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f770102fe40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7701029210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7700efcc10"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f7701039450"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f7700f21150"/></to>
    </wire>
    <wire loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f77010364f0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f7700f4b1d0"/></to>
    </wire>
    <wire loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7700f06300"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f77010301d0"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f7700f49a10"/></from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f7701031280"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f7700f08af0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f7700f4e410"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f7700f4a9f0"/></from>
      <to><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f7701025450"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f7701025450"/></from>
      <to><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f770101c830"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f7700f48740"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f770172a290"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f770102fe40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7700f69e70"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7700f69e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f77005a34d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f770101f420"/></from>
      <to><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f770101b330"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7700f65930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7701029210"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f770100b710"/></from>
      <to><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f7700fd8460"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <from><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f7700fd8460"/></from>
      <to><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f7700fd37d0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f7701019be0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f7701baa020"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f7700f61020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f770101c020"/></to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7700f61d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7700f66400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7700f66400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f77005a2b20"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f7700fd1c10"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f7701c1a5a0"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f7700f68c00"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f77005a23a0"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7700f65060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f77005a18b0"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f77005a0210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7700f65930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f77005a09d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f77005a52b0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f770059dc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7701d31bd0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f770056a660"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f7700f61020"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f770056adc0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f7700f61780"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f77005693d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7700f61d50"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7700568020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7700f57990"/></to>
    </wire>
    <wire loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7f7700f36820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f7701d31bd0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../tinyos_ws18/tos/system/MainC.nc">
      <documentation loc="45:../tinyos_ws18/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <documentation loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../tinyos_ws18/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../tinyos_ws18/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../tinyos_ws18/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc" safe="">
      <documentation loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioScannerP" loc="15:RadioScannerP.nc">
      <documentation loc="1:RadioScannerP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file RadioScannerP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-20&#10;&#10; Implementation of the RadioScanner app.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC" loc="11:FMClick/FMClickC.nc">
      <documentation loc="1:FMClick/FMClickC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; Configuration of the FMClick module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="FMClickP" loc="17:FMClick/FMClickP.nc">
      <documentation loc="1:FMClick/FMClickP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; FMClick module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="GlcdC" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
        <short>&#10; High level implementation for KS0108 Glcd&#10; </short>
        <long>&#10; High level implementation for KS0108 Glcd&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="GlcdP" loc="41:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <module/>
    </component>
    <component qname="HplKS0108C" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
        <short>&#10; Configuration for KS0108 GLCD Display&#10; </short>
        <long>&#10; Configuration for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplKS0108P" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
        <short>&#10; Hpl implementation for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl implementation for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10; Based on an implementation of Andreas Hagmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC" loc="6:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortAP" loc="6(HplAtm128GeneralIOFastPortC.PortAP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortBP" loc="6(HplAtm128GeneralIOFastPortC.PortBP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortCP" loc="6(HplAtm128GeneralIOFastPortC.PortCP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortDP" loc="6(HplAtm128GeneralIOFastPortC.PortDP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortEP" loc="6(HplAtm128GeneralIOFastPortC.PortEP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortFP" loc="6(HplAtm128GeneralIOFastPortC.PortFP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortGP" loc="6(HplAtm128GeneralIOFastPortC.PortGP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortHP" loc="6(HplAtm128GeneralIOFastPortC.PortHP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortJP" loc="6(HplAtm128GeneralIOFastPortC.PortJP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortKP" loc="6(HplAtm128GeneralIOFastPortC.PortKP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortLP" loc="6(HplAtm128GeneralIOFastPortC.PortLP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:9">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="38:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc" safe="">
      <documentation loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="FMClickC.I2C" loc="43(FMClickC.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../tinyos_ws18/tos/system/LedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc" safe="">
      <documentation loc="35:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../tinyos_ws18/tos/system/NoLedsC.nc">
      <documentation loc="35:../tinyos_ws18/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC.Timer" loc="44(FMClickC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <documentation loc="11:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC" loc="32(AlarmCounterMilliP.Atm1280AlarmSyncC):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:124">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP" loc="33(AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f7701474160"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280Timer2SyncC" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <documentation loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280Timer2SyncP" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc" safe="">
      <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changed to sync mode&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10; &#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; Changed for Atm1280&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA" loc="40(HplAtm1280GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit0" loc="41(HplAtm1280GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="48">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit1" loc="41(HplAtm1280GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="49">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit2" loc="41(HplAtm1280GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="50">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit3" loc="41(HplAtm1280GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="51">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit4" loc="41(HplAtm1280GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="52">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit5" loc="41(HplAtm1280GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="53">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit6" loc="41(HplAtm1280GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="54">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit7" loc="41(HplAtm1280GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="55">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB" loc="40(HplAtm1280GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit0" loc="41(HplAtm1280GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="56">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit1" loc="41(HplAtm1280GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="57">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit2" loc="41(HplAtm1280GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="58">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit3" loc="41(HplAtm1280GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="59">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit4" loc="41(HplAtm1280GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="60">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit5" loc="41(HplAtm1280GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="61">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit6" loc="41(HplAtm1280GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="62">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit7" loc="41(HplAtm1280GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="63">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC" loc="40(HplAtm1280GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit0" loc="41(HplAtm1280GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="64">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit1" loc="41(HplAtm1280GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="65">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit2" loc="41(HplAtm1280GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="66">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit3" loc="41(HplAtm1280GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="67">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit4" loc="41(HplAtm1280GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="68">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit5" loc="41(HplAtm1280GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="69">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit6" loc="41(HplAtm1280GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="70">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit7" loc="41(HplAtm1280GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="71">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD" loc="40(HplAtm1280GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit0" loc="41(HplAtm1280GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="72">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit1" loc="41(HplAtm1280GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="73">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit2" loc="41(HplAtm1280GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="74">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit3" loc="41(HplAtm1280GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="75">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit4" loc="41(HplAtm1280GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="76">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit5" loc="41(HplAtm1280GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="77">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit6" loc="41(HplAtm1280GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="78">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit7" loc="41(HplAtm1280GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="79">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE" loc="40(HplAtm1280GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit0" loc="41(HplAtm1280GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="80">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit1" loc="41(HplAtm1280GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="81">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit2" loc="41(HplAtm1280GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="82">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit3" loc="41(HplAtm1280GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="83">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit4" loc="41(HplAtm1280GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="84">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit5" loc="41(HplAtm1280GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="85">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit6" loc="41(HplAtm1280GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="86">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit7" loc="41(HplAtm1280GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="87">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF" loc="40(HplAtm1280GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit0" loc="41(HplAtm1280GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="88">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit1" loc="41(HplAtm1280GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="89">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit2" loc="41(HplAtm1280GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="90">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit3" loc="41(HplAtm1280GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="91">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit4" loc="41(HplAtm1280GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="92">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit5" loc="41(HplAtm1280GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="93">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit6" loc="41(HplAtm1280GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="94">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit7" loc="41(HplAtm1280GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="95">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F0" loc="42(HplAtm1280GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F1" loc="42(HplAtm1280GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F2" loc="42(HplAtm1280GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F3" loc="42(HplAtm1280GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F4" loc="42(HplAtm1280GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F5" loc="42(HplAtm1280GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F6" loc="42(HplAtm1280GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F7" loc="42(HplAtm1280GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G0" loc="42(HplAtm1280GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G1" loc="42(HplAtm1280GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G2" loc="42(HplAtm1280GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G3" loc="42(HplAtm1280GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G4" loc="42(HplAtm1280GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G5" loc="42(HplAtm1280GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H0" loc="42(HplAtm1280GeneralIOC.H0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H1" loc="42(HplAtm1280GeneralIOC.H1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H2" loc="42(HplAtm1280GeneralIOC.H2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H3" loc="42(HplAtm1280GeneralIOC.H3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H4" loc="42(HplAtm1280GeneralIOC.H4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H5" loc="42(HplAtm1280GeneralIOC.H5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H6" loc="42(HplAtm1280GeneralIOC.H6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H7" loc="42(HplAtm1280GeneralIOC.H7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J0" loc="42(HplAtm1280GeneralIOC.J0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J1" loc="42(HplAtm1280GeneralIOC.J1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J2" loc="42(HplAtm1280GeneralIOC.J2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J3" loc="42(HplAtm1280GeneralIOC.J3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J4" loc="42(HplAtm1280GeneralIOC.J4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J5" loc="42(HplAtm1280GeneralIOC.J5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J6" loc="42(HplAtm1280GeneralIOC.J6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J7" loc="42(HplAtm1280GeneralIOC.J7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K0" loc="42(HplAtm1280GeneralIOC.K0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K1" loc="42(HplAtm1280GeneralIOC.K1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K2" loc="42(HplAtm1280GeneralIOC.K2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K3" loc="42(HplAtm1280GeneralIOC.K3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K4" loc="42(HplAtm1280GeneralIOC.K4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K5" loc="42(HplAtm1280GeneralIOC.K5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K6" loc="42(HplAtm1280GeneralIOC.K6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K7" loc="42(HplAtm1280GeneralIOC.K7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L0" loc="42(HplAtm1280GeneralIOC.L0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L1" loc="42(HplAtm1280GeneralIOC.L1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L2" loc="42(HplAtm1280GeneralIOC.L2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L3" loc="42(HplAtm1280GeneralIOC.L3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L4" loc="42(HplAtm1280GeneralIOC.L4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L5" loc="42(HplAtm1280GeneralIOC.L5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L6" loc="42(HplAtm1280GeneralIOC.L6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L7" loc="42(HplAtm1280GeneralIOC.L7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PS2C" loc="11:PS2/PS2C.nc">
      <documentation loc="1:PS2/PS2C.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file    PS2C.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; Configuration of the PS2 module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PS2P" loc="18:PS2/PS2P.nc">
      <module/>
    </component>
    <component qname="HplAtmegaPinChange2C" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtmegaPinChange2C.nc">
      <module/>
    </component>
    <component qname="VolumeAdcC" loc="13:VolumeAdc/VolumeAdcC.nc">
      <documentation loc="1:VolumeAdc/VolumeAdcC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file VolumeAdcC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; Configuration of the VolumeAdc module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="VolumeAdcP" loc="13:VolumeAdc/VolumeAdcP.nc">
      <documentation loc="1:VolumeAdc/VolumeAdcP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file VolumeAdcP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; VolumeAdc module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="VolumeAdcC.Adc" loc="21(VolumeAdcC.Adc):../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.  Users of this component must link it to an&#10; implementation of Atm1280AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <documentation loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280AdcP" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc" safe="">
      <documentation loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
        <short>&#10; Internal component of the Atmega1280 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1280 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm1280AdcC" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
        <short>&#10; HPL for the Atmega1280 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1280 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280AdcP" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc" safe="">
      <documentation loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
        <short>&#10; HPL for the Atmega1280 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1280 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter" loc="89(Atm1280AdcC.AdcArbiter):../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter.Queue" loc="42(Atm1280AdcC.AdcArbiter.Queue):../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter.Arbiter" loc="52(Atm1280AdcC.AdcArbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280AdcC.PM" loc="67(Atm1280AdcC.PM):../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC.PM.PowerManager" loc="58(Atm1280AdcC.PM.PowerManager):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc" safe="">
      <documentation loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
        <short>&#10; Convert ATmega1280 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega1280 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RadioScannerAppC.Timer" loc="44(RadioScannerAppC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f77018c4590" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f77018c4900" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f77018c4c70" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f77018b59e0" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f77018b5d70" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f77018b2170" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f77018b24c0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f770181e0d0" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f770181e460" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f770181e7f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f770181eb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortP" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f770177c810" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f770177cb80" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f7701778020" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f77016f03d0" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f77016f0760" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f77016f0af0" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f77016f0e40" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f770169a6f0" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f7701688210" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f770166fbd0" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../tinyos_ws18/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncC" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc" abstract="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f7701474160" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f7701474160"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7f77014744f0" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7f7701474880" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncP" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f7701468200" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f7701468200"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7f7701468590" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7f7701468920" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f770137e160" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f770137e160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f770134c230" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f770134c230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f770134c560" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f77012fdde0" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f77012fdde0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f77011cb4c0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f77011cb860" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f77011cbc00" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f77011ca020" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.  Users of this component must link it to an&#10; implementation of Atm1280AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f7700f965c0" loc="89:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f7700f90e80" loc="42:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadC" loc="23:../tinyos_ws18/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7f7700f201f0" loc="23:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7f7700f201f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f7701badbf0" loc="58:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f7701badbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7701bb0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f7701bae720" loc="57:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f7701bae720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f7701baeaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f7701baad50" loc="52:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f7701baad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7701ba9100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7701bb0d00" loc="46:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7701bb0d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7701bab0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f7701baa020" loc="50:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f7701baa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f7701baa3a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f7701baa530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f7701baa6c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f7701baa850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f7701baa9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f7701ba27a0" loc="45:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f7701ba27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7701ba2b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7701ba20c0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7701ba20c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7701ba2440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f7701ba1020" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f7701ba1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7701ba13a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f7701b9a6f0" loc="4:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f7701b9a6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7701b9aa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f7701b9a020" loc="3:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f7701b9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7701b9a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7701b91860" loc="51:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7701b91860"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f7701d3d3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f7701d3d3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7701b91be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f7701b90020" loc="52:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f7701b90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f7701b903a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f7701b90530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f7701b906c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f7701b90850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f7701b909e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f7701b7d720" loc="60:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f7701b7d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7701b7daa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f7701bace20" loc="57:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f7701bace20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f7701b7e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f7701b7d020" loc="59:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f7701b7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7701b7d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f7701b7e4b0" loc="58:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f7701b7e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7701b7e830"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f7701b7e9c0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f7701b7eb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f7701d31bd0" loc="48:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f7701d31bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7701d65020"/>
        <function-ref name="runTask" scoped="" ref="0x7f7701d651b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f7701d3ba20" loc="47:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f7701d3ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7701d3bda0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f77026e9020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f77026e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f7701c3b9e0" loc="56:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f7701c3b9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7701c3bd60"/>
        <function-ref name="runTask" scoped="" ref="0x7f7701c39020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f7701c360d0" loc="57:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f7701c360d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f7701c36450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f7701c3c990" loc="55:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f7701c3c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7701c3cd10"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f7701c3b020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f7701c3b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f7701c19de0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f7701c19de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f7701c1c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f7701c54080" loc="84:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f7701c54080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f7701c54400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f7701c1a5a0" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f7701c1a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f7701c1a920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="handleRDS" ref="0x7f7701b15ce0" loc="203:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="handleRDS" scoped="" ref="0x7f7701b15ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7701b140a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f7701b14230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f7701b720c0" loc="18:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f7701b720c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f7701b72440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x7f7701b71e30" loc="20:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x7f7701b71e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7701b701e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="volumeKnob" ref="0x7f7701b53060" loc="23:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="volumeKnob" scoped="" ref="0x7f7701b53060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7701b53c50"/>
        <function-ref name="readDone" scoped="" ref="0x7f7701b51110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="inputTuneChannel" ref="0x7f7701b3c620" loc="57:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="inputTuneChannel" scoped="" ref="0x7f7701b3c620"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7701b3c9a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f7701b3cb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Keyboard" ref="0x7f7701b52600" loc="22:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Keyboard" scoped="" ref="0x7f7701b52600"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7701b52980"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f7701b52b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="handleChar" ref="0x7f7701b3a8f0" loc="63:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="handleChar" scoped="" ref="0x7f7701b3a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7701b3ac70"/>
        <function-ref name="runTask" scoped="" ref="0x7f7701b3ae00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioInitFail" ref="0x7f7701b21380" loc="163:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioInitFail" scoped="" ref="0x7f7701b21380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7701b21700"/>
        <function-ref name="runTask" scoped="" ref="0x7f7701b21890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="seekBand" ref="0x7f7701b26020" loc="152:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="seekBand" scoped="" ref="0x7f7701b26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7701b263a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f7701b26530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="finishedSeeking" ref="0x7f7701b1ab70" loc="187:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="finishedSeeking" scoped="" ref="0x7f7701b1ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7701b19020"/>
        <function-ref name="runTask" scoped="" ref="0x7f7701b191b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Radio" ref="0x7f7701b56d60" loc="21:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Radio" scoped="" ref="0x7f7701b56d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f7701b5fe00"/>
        <function-ref name="initDone" scoped="" ref="0x7f7701b5f310"/>
        <function-ref name="setVolume" scoped="" ref="0x7f7701b5f4a0"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f7701b5f630"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f7701b5f7c0"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f7701b5f950"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7701b5fae0"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f7701b5fc70"/>
        <function-ref name="seek" scoped="" ref="0x7f7701b5f180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="finishedTuning" ref="0x7f7701b1f640" loc="169:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="finishedTuning" scoped="" ref="0x7f7701b1f640"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7701b1fac0"/>
        <function-ref name="runTask" scoped="" ref="0x7f7701b1fc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readyScreen" ref="0x7f7701b25cb0" loc="157:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readyScreen" scoped="" ref="0x7f7701b25cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7701b240a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f7701b24230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f7701b60980" loc="19:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f7701b60980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f7701b71b10"/>
        <function-ref name="drawRect" scoped="" ref="0x7f7701b71020"/>
        <function-ref name="drawLine" scoped="" ref="0x7f7701b711b0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f7701b71340"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f7701b714d0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f7701b71660"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f7701b717f0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f7701b60d00"/>
        <function-ref name="drawText" scoped="" ref="0x7f7701b71980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f7701b4e220" loc="24:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f7701b4e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7701b426e0"/>
        <function-ref name="fired" scoped="" ref="0x7f7701b4dc90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7701b43a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7701b435f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f7701b40020"/>
        <function-ref name="gett0" scoped="" ref="0x7f7701b42b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7701b43170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7701b4ee10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7701b420d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7701b4d340"/>
        <function-ref name="stop" scoped="" ref="0x7f7701b4d810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7701aea020" loc="14:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7701aea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7701aea3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7f7701aea640" loc="15:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7f7701aea640"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f7701ae9670"/>
        <function-ref name="initDone" scoped="" ref="0x7f7701aeab50"/>
        <function-ref name="setVolume" scoped="" ref="0x7f7701aeace0"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f7701aeae70"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f7701ae9030"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f7701ae91c0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7701ae9350"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f7701ae94e0"/>
        <function-ref name="seek" scoped="" ref="0x7f7701aea9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="seek" ref="0x7f7701aa82a0" loc="184:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="seek" scoped="" ref="0x7f7701aa82a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7701aa8720"/>
        <function-ref name="runTask" scoped="" ref="0x7f7701aa88b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SDIOPin" ref="0x7f7701ac3b30" loc="30:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SDIOPin" scoped="" ref="0x7f7701ac3b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701ac2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701ac21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701ac2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701ac24d0"/>
        <function-ref name="get" scoped="" ref="0x7f7701ac2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701ac27f0"/>
        <function-ref name="set" scoped="" ref="0x7f7701ac2980"/>
        <function-ref name="clr" scoped="" ref="0x7f7701ac2b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="INTPin" ref="0x7f7701ac2e40" loc="31:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="INTPin" scoped="" ref="0x7f7701ac2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701abc1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701abc370"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701abc500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701abc690"/>
        <function-ref name="get" scoped="" ref="0x7f7701abc820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701abc9b0"/>
        <function-ref name="set" scoped="" ref="0x7f7701abcb40"/>
        <function-ref name="clr" scoped="" ref="0x7f7701abccd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Int" ref="0x7f7701ade600" loc="25:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int" scoped="" ref="0x7f7701ade600"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7701ade980"/>
        <function-ref name="fired" scoped="" ref="0x7f7701adeb10"/>
        <function-ref name="disable" scoped="" ref="0x7f7701adeca0"/>
        <function-ref name="edge" scoped="" ref="0x7f7701adee30"/>
        <function-ref name="enable" scoped="" ref="0x7f7701ae4020"/>
        <function-ref name="getValue" scoped="" ref="0x7f7701ae41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f7701acb6f0" loc="27:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f7701acb6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f7701ad7110"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f7701ad73d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7701add3d0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f7701aca880"/>
        <function-ref name="write" scoped="" ref="0x7f7701acc020"/>
        <function-ref name="readDone" scoped="" ref="0x7f7701accc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init" ref="0x7f7701aab2a0" loc="182:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="init" scoped="" ref="0x7f7701aab2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7701aab620"/>
        <function-ref name="runTask" scoped="" ref="0x7f7701aab7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="decodeRDS" ref="0x7f7701aa72a0" loc="185:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="decodeRDS" scoped="" ref="0x7f7701aa72a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7701aa7620"/>
        <function-ref name="runTask" scoped="" ref="0x7f7701aa77b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7701ae6290" loc="20:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7701ae6290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7701ae6610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7f7701ad98e0" loc="26:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7f7701ad98e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7701ad9c60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7701ad9df0"/>
        <function-ref name="request" scoped="" ref="0x7f7701ae3020"/>
        <function-ref name="granted" scoped="" ref="0x7f7701ae31b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7701ae3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTPin" ref="0x7f7701abd920" loc="29:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTPin" scoped="" ref="0x7f7701abd920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701abdca0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701abde30"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701ac3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701ac31b0"/>
        <function-ref name="get" scoped="" ref="0x7f7701ac3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701ac34d0"/>
        <function-ref name="set" scoped="" ref="0x7f7701ac3660"/>
        <function-ref name="clr" scoped="" ref="0x7f7701ac37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7f7701ae68b0" loc="21:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7f7701ae68b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f7701ae5980"/>
        <function-ref name="initDone" scoped="" ref="0x7f7701ae6dc0"/>
        <function-ref name="setVolume" scoped="" ref="0x7f7701ae5020"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f7701ae51b0"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f7701ae5340"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f7701ae54d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7701ae5660"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f7701ae57f0"/>
        <function-ref name="seek" scoped="" ref="0x7f7701ae6c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f7701abb020" loc="32:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f7701abb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f7701aba1b0"/>
        <function-ref name="drawRect" scoped="" ref="0x7f7701abb530"/>
        <function-ref name="drawLine" scoped="" ref="0x7f7701abb6c0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f7701abb850"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f7701abb9e0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f7701abbb70"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f7701abbd00"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f7701abb3a0"/>
        <function-ref name="drawText" scoped="" ref="0x7f7701aba020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f7701ac9620" loc="28:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f7701ac9620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7701ac5c40"/>
        <function-ref name="fired" scoped="" ref="0x7f7701ac71e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7701ac5020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7701ac7ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f7701ac4590"/>
        <function-ref name="gett0" scoped="" ref="0x7f7701ac4110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7701ac7660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7701ac8390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7701ac5630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7701ac8860"/>
        <function-ref name="stop" scoped="" ref="0x7f7701ac8d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tune" ref="0x7f7701aaa2a0" loc="183:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tune" scoped="" ref="0x7f7701aaa2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7701aaa620"/>
        <function-ref name="runTask" scoped="" ref="0x7f7701aaa7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7f77019f0020" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <component-ref qname="GlcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f77019f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f77019ef1b0"/>
        <function-ref name="drawRect" scoped="" ref="0x7f77019f0530"/>
        <function-ref name="drawLine" scoped="" ref="0x7f77019f06c0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f77019f0850"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f77019f09e0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f77019f0b70"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f77019f0d00"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f77019f03a0"/>
        <function-ref name="drawText" scoped="" ref="0x7f77019ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f77019bd020" loc="44:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f77019bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f77019bd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hpl" ref="0x7f77019b6640" loc="45:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hpl" scoped="" ref="0x7f77019b6640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f77019b69c0"/>
        <function-ref name="init" scoped="" ref="0x7f77019b6b50"/>
        <function-ref name="dataRead" scoped="" ref="0x7f77019b6ce0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f77019b6e70"/>
        <function-ref name="controlRead" scoped="" ref="0x7f77019bb030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7f77019bfb50" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f77019bfb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f77019beca0"/>
        <function-ref name="drawRect" scoped="" ref="0x7f77019be1b0"/>
        <function-ref name="drawLine" scoped="" ref="0x7f77019be340"/>
        <function-ref name="setPixel" scoped="" ref="0x7f77019be4d0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f77019be660"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f77019be7f0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f77019be980"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f77019be020"/>
        <function-ref name="drawText" scoped="" ref="0x7f77019beb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7f77019ee640" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <component-ref qname="HplKS0108C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7f77019ee640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f77019ee9c0"/>
        <function-ref name="init" scoped="" ref="0x7f77019eeb50"/>
        <function-ref name="dataRead" scoped="" ref="0x7f77019eece0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f77019eee70"/>
        <function-ref name="controlRead" scoped="" ref="0x7f7701946030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EN" ref="0x7f770193e690" loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EN" scoped="" ref="0x7f770193e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770193ea10"/>
        <function-ref name="isInput" scoped="" ref="0x7f770193eba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770193ed30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770193d020"/>
        <function-ref name="get" scoped="" ref="0x7f770193d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770193d340"/>
        <function-ref name="set" scoped="" ref="0x7f770193d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f770193d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f770193a200" loc="34:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f770193a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c855c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f7701c85930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f7701931090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_0" ref="0x7f77019439c0" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_0" scoped="" ref="0x7f77019439c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701943d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701942020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77019421b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701942340"/>
        <function-ref name="get" scoped="" ref="0x7f77019424d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701942660"/>
        <function-ref name="set" scoped="" ref="0x7f77019427f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701942980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RST" ref="0x7f770193d9b0" loc="30:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RST" scoped="" ref="0x7f770193d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770193dd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f770193c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f770193c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770193c340"/>
        <function-ref name="get" scoped="" ref="0x7f770193c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770193c660"/>
        <function-ref name="set" scoped="" ref="0x7f770193c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f770193c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RS" ref="0x7f7701940020" loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RS" scoped="" ref="0x7f7701940020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77019403a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701940530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77019406c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701940850"/>
        <function-ref name="get" scoped="" ref="0x7f77019409e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701940b70"/>
        <function-ref name="set" scoped="" ref="0x7f7701940d00"/>
        <function-ref name="clr" scoped="" ref="0x7f770193f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_1" ref="0x7f7701942ce0" loc="26:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_1" scoped="" ref="0x7f7701942ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77019410a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701941230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77019413c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701941550"/>
        <function-ref name="get" scoped="" ref="0x7f77019416e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701941870"/>
        <function-ref name="set" scoped="" ref="0x7f7701941a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701941b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7f7701946be0" loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7f7701946be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f7701943020"/>
        <function-ref name="init" scoped="" ref="0x7f77019431b0"/>
        <function-ref name="dataRead" scoped="" ref="0x7f7701943340"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f77019434d0"/>
        <function-ref name="controlRead" scoped="" ref="0x7f7701943660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RW" ref="0x7f770193f370" loc="28:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RW" scoped="" ref="0x7f770193f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770193f6f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770193f880"/>
        <function-ref name="toggle" scoped="" ref="0x7f770193fa10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770193fba0"/>
        <function-ref name="get" scoped="" ref="0x7f770193fd30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770193e020"/>
        <function-ref name="set" scoped="" ref="0x7f770193e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f770193e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Data" ref="0x7f7701934410" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Data" scoped="" ref="0x7f7701934410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701934790"/>
        <function-ref name="clear" scoped="" ref="0x7f7701934920"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701934ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701934c40"/>
        <function-ref name="read" scoped="" ref="0x7f7701934dd0"/>
        <function-ref name="write" scoped="" ref="0x7f770193b020"/>
        <function-ref name="set" scoped="" ref="0x7f770193b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f77018cecb0" loc="98:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f77018cecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018cd610"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018cd7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018cd930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018cdac0"/>
        <function-ref name="get" scoped="" ref="0x7f77018cdc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018cdde0"/>
        <function-ref name="set" scoped="" ref="0x7f77018cc020"/>
        <function-ref name="clr" scoped="" ref="0x7f77018cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f77018ea350" loc="72:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f77018ea350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018ea6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018ea860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018ea9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018eab80"/>
        <function-ref name="get" scoped="" ref="0x7f77018ead10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018e9020"/>
        <function-ref name="set" scoped="" ref="0x7f77018e91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018e9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f77018de350" loc="83:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f77018de350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018de6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018de860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018de9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018deb80"/>
        <function-ref name="get" scoped="" ref="0x7f77018ded10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018dd020"/>
        <function-ref name="set" scoped="" ref="0x7f77018dd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018dd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f77018d5cb0" loc="92:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f77018d5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018d40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018d4230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018d43c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018d4550"/>
        <function-ref name="get" scoped="" ref="0x7f77018d46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018d4870"/>
        <function-ref name="set" scoped="" ref="0x7f77018d4a00"/>
        <function-ref name="clr" scoped="" ref="0x7f77018d4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f77018c7060" loc="103:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f77018c7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018c73e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018c7570"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018c7700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018c7890"/>
        <function-ref name="get" scoped="" ref="0x7f77018c7a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018c7bb0"/>
        <function-ref name="set" scoped="" ref="0x7f77018c7d40"/>
        <function-ref name="clr" scoped="" ref="0x7f77018c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f7701902350" loc="50:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f7701902350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77019026d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701902860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77019029f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701902b80"/>
        <function-ref name="get" scoped="" ref="0x7f7701902d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701901020"/>
        <function-ref name="set" scoped="" ref="0x7f77019011b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701901340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f77018d7670" loc="90:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f77018d7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018d79f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018d7b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018d7d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018d6020"/>
        <function-ref name="get" scoped="" ref="0x7f77018d61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018d6340"/>
        <function-ref name="set" scoped="" ref="0x7f77018d64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018d6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f7701900990" loc="53:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f7701900990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701900d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018ff020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018ff1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018ff340"/>
        <function-ref name="get" scoped="" ref="0x7f77018ff4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018ff660"/>
        <function-ref name="set" scoped="" ref="0x7f77018ff7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018ff980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f77018f4990" loc="64:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f77018f4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018f4d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018f3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018f31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018f3340"/>
        <function-ref name="get" scoped="" ref="0x7f77018f34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018f3660"/>
        <function-ref name="set" scoped="" ref="0x7f77018f37f0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018f3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f77018e7cb0" loc="75:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f77018e7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018e60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018e6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018e63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018e6550"/>
        <function-ref name="get" scoped="" ref="0x7f77018e66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018e6870"/>
        <function-ref name="set" scoped="" ref="0x7f77018e6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f77018e6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f77018dbcb0" loc="86:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f77018dbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018da0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018da230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018da3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018da550"/>
        <function-ref name="get" scoped="" ref="0x7f77018da6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018da870"/>
        <function-ref name="set" scoped="" ref="0x7f77018daa00"/>
        <function-ref name="clr" scoped="" ref="0x7f77018dab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f7701909350" loc="45:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f7701909350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77019096d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701909860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77019099f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701909b80"/>
        <function-ref name="get" scoped="" ref="0x7f7701909d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701907020"/>
        <function-ref name="set" scoped="" ref="0x7f77019071b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701907340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f77018fc350" loc="56:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f77018fc350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018fc6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018fc860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018fc9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018fcb80"/>
        <function-ref name="get" scoped="" ref="0x7f77018fcd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018fb020"/>
        <function-ref name="set" scoped="" ref="0x7f77018fb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018fb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f77018f0350" loc="67:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f77018f0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018f06d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018f0860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018f09f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018f0b80"/>
        <function-ref name="get" scoped="" ref="0x7f77018f0d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018ef020"/>
        <function-ref name="set" scoped="" ref="0x7f77018ef1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018ef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f77018e3670" loc="78:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f77018e3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018e39f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018e3b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018e3d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018e2020"/>
        <function-ref name="get" scoped="" ref="0x7f77018e21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018e2340"/>
        <function-ref name="set" scoped="" ref="0x7f77018e24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018e2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f77018d1670" loc="95:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f77018d1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018d19f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018d1b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018d1d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018d0020"/>
        <function-ref name="get" scoped="" ref="0x7f77018d01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018d0340"/>
        <function-ref name="set" scoped="" ref="0x7f77018d04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018d0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f77018cab20" loc="101:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f77018cab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018c9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018c91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018c9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018c94d0"/>
        <function-ref name="get" scoped="" ref="0x7f77018c9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018c97f0"/>
        <function-ref name="set" scoped="" ref="0x7f77018c9980"/>
        <function-ref name="clr" scoped="" ref="0x7f77018c9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f77018e1cb0" loc="81:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f77018e1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018e00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018e0230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018e03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018e0550"/>
        <function-ref name="get" scoped="" ref="0x7f77018e06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018e0870"/>
        <function-ref name="set" scoped="" ref="0x7f77018e0a00"/>
        <function-ref name="clr" scoped="" ref="0x7f77018e0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f7701905cb0" loc="48:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f7701905cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77019040a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701904230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77019043c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701904550"/>
        <function-ref name="get" scoped="" ref="0x7f77019046e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701904870"/>
        <function-ref name="set" scoped="" ref="0x7f7701904a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701904b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f77018f9cb0" loc="59:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f77018f9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018f80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018f8230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018f83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018f8550"/>
        <function-ref name="get" scoped="" ref="0x7f77018f86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018f8870"/>
        <function-ref name="set" scoped="" ref="0x7f77018f8a00"/>
        <function-ref name="clr" scoped="" ref="0x7f77018f8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f77018cc4e0" loc="99:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f77018cc4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018cc860"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018cc9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018ccb80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018ccd10"/>
        <function-ref name="get" scoped="" ref="0x7f77018cb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018cb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f77018cb340"/>
        <function-ref name="clr" scoped="" ref="0x7f77018cb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f77018f6350" loc="62:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f77018f6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018f66d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018f6860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018f69f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018f6b80"/>
        <function-ref name="get" scoped="" ref="0x7f77018f6d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018f5020"/>
        <function-ref name="set" scoped="" ref="0x7f77018f51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018f5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f77018e9670" loc="73:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f77018e9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018e99f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018e9b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018e9d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018e8020"/>
        <function-ref name="get" scoped="" ref="0x7f77018e81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018e8340"/>
        <function-ref name="set" scoped="" ref="0x7f77018e84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018e8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f77018dd670" loc="84:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f77018dd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018dd9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018ddb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018ddd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018dc020"/>
        <function-ref name="get" scoped="" ref="0x7f77018dc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018dc340"/>
        <function-ref name="set" scoped="" ref="0x7f77018dc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018dc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f77018d3020" loc="93:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f77018d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018d33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018d3530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018d36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018d3850"/>
        <function-ref name="get" scoped="" ref="0x7f77018d39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018d3b70"/>
        <function-ref name="set" scoped="" ref="0x7f77018d3d00"/>
        <function-ref name="clr" scoped="" ref="0x7f77018d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f7701901670" loc="51:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f7701901670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77019019f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701901b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701901d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701900020"/>
        <function-ref name="get" scoped="" ref="0x7f77019001b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701900340"/>
        <function-ref name="set" scoped="" ref="0x7f77019004d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701900660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f77018ffcb0" loc="54:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f77018ffcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018fe0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018fe230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018fe3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018fe550"/>
        <function-ref name="get" scoped="" ref="0x7f77018fe6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018fe870"/>
        <function-ref name="set" scoped="" ref="0x7f77018fea00"/>
        <function-ref name="clr" scoped="" ref="0x7f77018feb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f77018f3cb0" loc="65:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f77018f3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018f20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018f2230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018f23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018f2550"/>
        <function-ref name="get" scoped="" ref="0x7f77018f26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018f2870"/>
        <function-ref name="set" scoped="" ref="0x7f77018f2a00"/>
        <function-ref name="clr" scoped="" ref="0x7f77018f2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f77018e5020" loc="76:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f77018e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018e53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018e5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018e56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018e5850"/>
        <function-ref name="get" scoped="" ref="0x7f77018e59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018e5b70"/>
        <function-ref name="set" scoped="" ref="0x7f77018e5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f77018e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f77018d9020" loc="87:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f77018d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018d93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018d9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018d96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018d9850"/>
        <function-ref name="get" scoped="" ref="0x7f77018d99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018d9b70"/>
        <function-ref name="set" scoped="" ref="0x7f77018d9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f77018d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f7701907670" loc="46:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f7701907670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77019079f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701907b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701907d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701906020"/>
        <function-ref name="get" scoped="" ref="0x7f77019061b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701906340"/>
        <function-ref name="set" scoped="" ref="0x7f77019064d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701906660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f77018fb670" loc="57:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f77018fb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018fbaf0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018fbc80"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018fbe10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018fa020"/>
        <function-ref name="get" scoped="" ref="0x7f77018fa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018fa340"/>
        <function-ref name="set" scoped="" ref="0x7f77018fa4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018fa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f77018ef670" loc="68:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f77018ef670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018ef9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018efb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018efd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018ee020"/>
        <function-ref name="get" scoped="" ref="0x7f77018ee1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018ee340"/>
        <function-ref name="set" scoped="" ref="0x7f77018ee4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018ee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f77018d0990" loc="96:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f77018d0990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018d0d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018ce020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018ce1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018ce340"/>
        <function-ref name="get" scoped="" ref="0x7f77018ce4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018ce660"/>
        <function-ref name="set" scoped="" ref="0x7f77018ce7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018ce980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f77018edcb0" loc="71:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f77018edcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018eb410"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018eb5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018eb730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018eb8c0"/>
        <function-ref name="get" scoped="" ref="0x7f77018eba50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018ebbe0"/>
        <function-ref name="set" scoped="" ref="0x7f77018ebd70"/>
        <function-ref name="clr" scoped="" ref="0x7f77018ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f77018df020" loc="82:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f77018df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018df3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018df530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018df6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018df850"/>
        <function-ref name="get" scoped="" ref="0x7f77018df9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018dfb70"/>
        <function-ref name="set" scoped="" ref="0x7f77018dfd00"/>
        <function-ref name="clr" scoped="" ref="0x7f77018de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f77018d6990" loc="91:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f77018d6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018d6d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018d5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018d51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018d5340"/>
        <function-ref name="get" scoped="" ref="0x7f77018d54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018d5660"/>
        <function-ref name="set" scoped="" ref="0x7f77018d57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018d5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f77018c9e40" loc="102:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f77018c9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018c81e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018c8370"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018c8500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018c8690"/>
        <function-ref name="get" scoped="" ref="0x7f77018c8820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018c89b0"/>
        <function-ref name="set" scoped="" ref="0x7f77018c8b40"/>
        <function-ref name="clr" scoped="" ref="0x7f77018c8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f7701903020" loc="49:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f7701903020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77019033a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701903530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77019036c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701903850"/>
        <function-ref name="get" scoped="" ref="0x7f77019039e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701903b70"/>
        <function-ref name="set" scoped="" ref="0x7f7701903d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701902020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f77018f7020" loc="60:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f77018f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018f73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018f7530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018f76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018f7850"/>
        <function-ref name="get" scoped="" ref="0x7f77018f79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018f7b70"/>
        <function-ref name="set" scoped="" ref="0x7f77018f7d00"/>
        <function-ref name="clr" scoped="" ref="0x7f77018f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f77018d8350" loc="89:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f77018d8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018d86d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018d8860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018d89f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018d8b80"/>
        <function-ref name="get" scoped="" ref="0x7f77018d8d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018d7020"/>
        <function-ref name="set" scoped="" ref="0x7f77018d71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018d7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f77018f5670" loc="63:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f77018f5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018f59f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018f5b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018f5d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018f4020"/>
        <function-ref name="get" scoped="" ref="0x7f77018f41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018f4340"/>
        <function-ref name="set" scoped="" ref="0x7f77018f44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018f4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f77018e8990" loc="74:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f77018e8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018e8d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018e7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018e71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018e7340"/>
        <function-ref name="get" scoped="" ref="0x7f77018e74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018e7660"/>
        <function-ref name="set" scoped="" ref="0x7f77018e77f0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018e7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f77018dc990" loc="85:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f77018dc990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018dcd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018db020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018db1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018db340"/>
        <function-ref name="get" scoped="" ref="0x7f77018db4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018db660"/>
        <function-ref name="set" scoped="" ref="0x7f77018db7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018db980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f77018d2350" loc="94:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f77018d2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018d26d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018d2860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018d29f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018d2b80"/>
        <function-ref name="get" scoped="" ref="0x7f77018d2d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018d1020"/>
        <function-ref name="set" scoped="" ref="0x7f77018d11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018d1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f770190a020" loc="44:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f770190a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770190a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770190a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f770190a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770190a850"/>
        <function-ref name="get" scoped="" ref="0x7f770190a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770190ab70"/>
        <function-ref name="set" scoped="" ref="0x7f770190ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701909020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f77018fd020" loc="55:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f77018fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018fd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018fd530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018fd6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018fd850"/>
        <function-ref name="get" scoped="" ref="0x7f77018fd9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018fdb70"/>
        <function-ref name="set" scoped="" ref="0x7f77018fdd00"/>
        <function-ref name="clr" scoped="" ref="0x7f77018fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f77018f1020" loc="66:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f77018f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018f13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018f1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018f16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018f1850"/>
        <function-ref name="get" scoped="" ref="0x7f77018f19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018f1b70"/>
        <function-ref name="set" scoped="" ref="0x7f77018f1d00"/>
        <function-ref name="clr" scoped="" ref="0x7f77018f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f77018e4350" loc="77:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f77018e4350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018e46d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018e4860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018e49f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018e4b80"/>
        <function-ref name="get" scoped="" ref="0x7f77018e4d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018e3020"/>
        <function-ref name="set" scoped="" ref="0x7f77018e31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018e3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f77018cb800" loc="100:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f77018cb800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018cbb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018cbd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018ca020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018ca1b0"/>
        <function-ref name="get" scoped="" ref="0x7f77018ca340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018ca4d0"/>
        <function-ref name="set" scoped="" ref="0x7f77018ca660"/>
        <function-ref name="clr" scoped="" ref="0x7f77018ca7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f77018e2990" loc="80:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f77018e2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018e2d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018e1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018e11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018e1340"/>
        <function-ref name="get" scoped="" ref="0x7f77018e14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018e1660"/>
        <function-ref name="set" scoped="" ref="0x7f77018e17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018e1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f77018ee990" loc="69:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f77018ee990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018eed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018ed020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018ed1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018ed340"/>
        <function-ref name="get" scoped="" ref="0x7f77018ed4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018ed660"/>
        <function-ref name="set" scoped="" ref="0x7f77018ed7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018ed980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f7701906990" loc="47:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f7701906990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701906d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701905020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77019051b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701905340"/>
        <function-ref name="get" scoped="" ref="0x7f77019054d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701905660"/>
        <function-ref name="set" scoped="" ref="0x7f77019057f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701905980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f77018fa990" loc="58:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f77018fa990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018fad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018f9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018f91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018f9340"/>
        <function-ref name="get" scoped="" ref="0x7f77018f94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018f9660"/>
        <function-ref name="set" scoped="" ref="0x7f77018f97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f77018f9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f770187aa80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f770187aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770187ae00"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701879020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018791b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701879340"/>
        <function-ref name="get" scoped="" ref="0x7f77018794d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701879660"/>
        <function-ref name="set" scoped="" ref="0x7f77018797f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701879980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f7701876020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f7701876020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018763a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701876530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018766c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701876850"/>
        <function-ref name="get" scoped="" ref="0x7f77018769e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701876b70"/>
        <function-ref name="set" scoped="" ref="0x7f7701876d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701875020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f770187c6b0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f770187c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770187ca30"/>
        <function-ref name="isInput" scoped="" ref="0x7f770187cbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770187cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770187b020"/>
        <function-ref name="get" scoped="" ref="0x7f770187b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770187b340"/>
        <function-ref name="set" scoped="" ref="0x7f770187b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f770187b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f7701879c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f7701879c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701878020"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018781b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701878340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018784d0"/>
        <function-ref name="get" scoped="" ref="0x7f7701878660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018787f0"/>
        <function-ref name="set" scoped="" ref="0x7f7701878980"/>
        <function-ref name="clr" scoped="" ref="0x7f7701878b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f77018752b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f77018752b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701875630"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018757c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701875950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701875ae0"/>
        <function-ref name="get" scoped="" ref="0x7f7701875c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701875e00"/>
        <function-ref name="set" scoped="" ref="0x7f7701874020"/>
        <function-ref name="clr" scoped="" ref="0x7f77018741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f770187b8f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f770187b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770187bc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f770187be00"/>
        <function-ref name="toggle" scoped="" ref="0x7f770187a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770187a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f770187a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770187a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f770187a660"/>
        <function-ref name="clr" scoped="" ref="0x7f770187a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f7701878da0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f7701878da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701877180"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701877310"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018774a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701877630"/>
        <function-ref name="get" scoped="" ref="0x7f77018777c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701877950"/>
        <function-ref name="set" scoped="" ref="0x7f7701877ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701877c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f7701874440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f7701874440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018747c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701874950"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701874ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701874c70"/>
        <function-ref name="get" scoped="" ref="0x7f7701874e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701873020"/>
        <function-ref name="set" scoped="" ref="0x7f77018731b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701873340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700eaa9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700eaa9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700eaad30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700ea9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700ea91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700ea9340"/>
        <function-ref name="get" scoped="" ref="0x7f7700ea94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700ea9660"/>
        <function-ref name="set" scoped="" ref="0x7f7700ea97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700ea9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700ea7e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700ea7e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700ea61c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700ea6350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700ea64e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700ea6670"/>
        <function-ref name="get" scoped="" ref="0x7f7700ea6800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700ea6990"/>
        <function-ref name="set" scoped="" ref="0x7f7700ea6b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7700ea6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700ea30a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700ea30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700ea3420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700ea35b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700ea3740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700ea38d0"/>
        <function-ref name="get" scoped="" ref="0x7f7700ea3a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700ea3bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7700ea3d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7700ea2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700ea03f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700ea03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700ea0770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700ea0900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700ea0a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700ea0c20"/>
        <function-ref name="get" scoped="" ref="0x7f7700ea0db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700e9f020"/>
        <function-ref name="set" scoped="" ref="0x7f7700e9f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700e9f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700e9b6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700e9b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700e9ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700e9bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700e9bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700e9a020"/>
        <function-ref name="get" scoped="" ref="0x7f7700e9a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700e9a340"/>
        <function-ref name="set" scoped="" ref="0x7f7700e9a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700e9a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700e989b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700e989b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700e98d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700e97020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700e971b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700e97340"/>
        <function-ref name="get" scoped="" ref="0x7f7700e974d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700e97660"/>
        <function-ref name="set" scoped="" ref="0x7f7700e977f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700e97980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700e95e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700e95e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700e941c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700e94350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700e944e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700e94670"/>
        <function-ref name="get" scoped="" ref="0x7f7700e94800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700e94990"/>
        <function-ref name="set" scoped="" ref="0x7f7700e94b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7700e94cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700e910a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700e910a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700e91420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700e915b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700e91740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700e918d0"/>
        <function-ref name="get" scoped="" ref="0x7f7700e91a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700e91bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7700e91d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7700e8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f770186bda0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f770186bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770186a180"/>
        <function-ref name="isInput" scoped="" ref="0x7f770186a310"/>
        <function-ref name="toggle" scoped="" ref="0x7f770186a4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770186a630"/>
        <function-ref name="get" scoped="" ref="0x7f770186a7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770186a950"/>
        <function-ref name="set" scoped="" ref="0x7f770186aae0"/>
        <function-ref name="clr" scoped="" ref="0x7f770186ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f7701867440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f7701867440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018677c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701867950"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701867ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701867c70"/>
        <function-ref name="get" scoped="" ref="0x7f7701867e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701866020"/>
        <function-ref name="set" scoped="" ref="0x7f77018661b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701866340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f770186da20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f770186da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770186dda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770186c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f770186c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770186c340"/>
        <function-ref name="get" scoped="" ref="0x7f770186c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770186c660"/>
        <function-ref name="set" scoped="" ref="0x7f770186c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f770186c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f7701869020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f7701869020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018693a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701869530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018696c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701869850"/>
        <function-ref name="get" scoped="" ref="0x7f77018699e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701869b70"/>
        <function-ref name="set" scoped="" ref="0x7f7701869d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701868020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f77018665d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f77018665d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701866950"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701866ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701866c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701866e00"/>
        <function-ref name="get" scoped="" ref="0x7f7701865020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018651b0"/>
        <function-ref name="set" scoped="" ref="0x7f7701865340"/>
        <function-ref name="clr" scoped="" ref="0x7f77018654d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f770186cc10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f770186cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770186b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f770186b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770186b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770186b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f770186b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770186b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f770186b980"/>
        <function-ref name="clr" scoped="" ref="0x7f770186bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f77018682b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f77018682b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701868630"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018687c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701868950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701868ae0"/>
        <function-ref name="get" scoped="" ref="0x7f7701868c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701868e00"/>
        <function-ref name="set" scoped="" ref="0x7f7701867020"/>
        <function-ref name="clr" scoped="" ref="0x7f77018671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f7701865760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f7701865760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701865ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701865c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701865e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701864020"/>
        <function-ref name="get" scoped="" ref="0x7f77018641b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701864340"/>
        <function-ref name="set" scoped="" ref="0x7f77018644d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701864660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700e3dc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700e3dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700e3c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700e3c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700e3c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700e3c550"/>
        <function-ref name="get" scoped="" ref="0x7f7700e3c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700e3c870"/>
        <function-ref name="set" scoped="" ref="0x7f7700e3ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f7700e3cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700e3ae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700e3ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700e391c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700e39350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700e394e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700e39670"/>
        <function-ref name="get" scoped="" ref="0x7f7700e39800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700e39990"/>
        <function-ref name="set" scoped="" ref="0x7f7700e39b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7700e39cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700e360a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700e360a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700e36420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700e365b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700e36740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700e368d0"/>
        <function-ref name="get" scoped="" ref="0x7f7700e36a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700e36bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7700e36d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7700e35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700e333f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700e333f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700e33770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700e33900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700e33a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700e33c20"/>
        <function-ref name="get" scoped="" ref="0x7f7700e33db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700e32020"/>
        <function-ref name="set" scoped="" ref="0x7f7700e321b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700e32340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700e306d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700e306d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700e30a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700e30be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700e30d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700e2f020"/>
        <function-ref name="get" scoped="" ref="0x7f7700e2f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700e2f340"/>
        <function-ref name="set" scoped="" ref="0x7f7700e2f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700e2f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700e2d9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700e2d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700e2dd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700e2c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700e2c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700e2c340"/>
        <function-ref name="get" scoped="" ref="0x7f7700e2c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700e2c660"/>
        <function-ref name="set" scoped="" ref="0x7f7700e2c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700e2c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700e2ae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700e2ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700e291c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700e29350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700e294e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700e29670"/>
        <function-ref name="get" scoped="" ref="0x7f7700e29800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700e29990"/>
        <function-ref name="set" scoped="" ref="0x7f7700e29b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7700e29cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700e260a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700e260a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700e26420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700e265b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700e26740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700e268d0"/>
        <function-ref name="get" scoped="" ref="0x7f7700e26a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700e26bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7700e26d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7700e24020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f770185b020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f770185b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770185b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770185b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f770185b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770185b850"/>
        <function-ref name="get" scoped="" ref="0x7f770185b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770185bb70"/>
        <function-ref name="set" scoped="" ref="0x7f770185bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f770185a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f77018585d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f77018585d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701858950"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701858ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701858c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701858e00"/>
        <function-ref name="get" scoped="" ref="0x7f7701856020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018561b0"/>
        <function-ref name="set" scoped="" ref="0x7f7701856340"/>
        <function-ref name="clr" scoped="" ref="0x7f77018564d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f770185ed30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f770185ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770185d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770185d270"/>
        <function-ref name="toggle" scoped="" ref="0x7f770185d400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770185d590"/>
        <function-ref name="get" scoped="" ref="0x7f770185d720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770185d8b0"/>
        <function-ref name="set" scoped="" ref="0x7f770185da40"/>
        <function-ref name="clr" scoped="" ref="0x7f770185dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f770185a2b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f770185a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770185a630"/>
        <function-ref name="isInput" scoped="" ref="0x7f770185a7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770185a950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770185aae0"/>
        <function-ref name="get" scoped="" ref="0x7f770185ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770185ae00"/>
        <function-ref name="set" scoped="" ref="0x7f7701859020"/>
        <function-ref name="clr" scoped="" ref="0x7f77018591b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f7701856760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f7701856760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701856ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701856c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701856e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701855020"/>
        <function-ref name="get" scoped="" ref="0x7f77018551b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701855340"/>
        <function-ref name="set" scoped="" ref="0x7f77018554d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701855660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f770185de60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f770185de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770185c210"/>
        <function-ref name="isInput" scoped="" ref="0x7f770185c3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770185c530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770185c6c0"/>
        <function-ref name="get" scoped="" ref="0x7f770185c850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770185c9e0"/>
        <function-ref name="set" scoped="" ref="0x7f770185cb70"/>
        <function-ref name="clr" scoped="" ref="0x7f770185cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f7701859440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f7701859440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018597c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701859950"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701859ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701859c70"/>
        <function-ref name="get" scoped="" ref="0x7f7701859e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701858020"/>
        <function-ref name="set" scoped="" ref="0x7f77018581b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701858340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f77018558f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f77018558f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701855c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701855e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701854020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018541b0"/>
        <function-ref name="get" scoped="" ref="0x7f7701854340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018544d0"/>
        <function-ref name="set" scoped="" ref="0x7f7701854660"/>
        <function-ref name="clr" scoped="" ref="0x7f77018547f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700dd2c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700dd2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700dd10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700dd1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700dd13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700dd1550"/>
        <function-ref name="get" scoped="" ref="0x7f7700dd16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700dd1870"/>
        <function-ref name="set" scoped="" ref="0x7f7700dd1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7700dd1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700dcfe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700dcfe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700dce1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700dce350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700dce4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700dce670"/>
        <function-ref name="get" scoped="" ref="0x7f7700dce800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700dce990"/>
        <function-ref name="set" scoped="" ref="0x7f7700dceb20"/>
        <function-ref name="clr" scoped="" ref="0x7f7700dcecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700dcb0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700dcb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700dcb420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700dcb5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700dcb740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700dcb8d0"/>
        <function-ref name="get" scoped="" ref="0x7f7700dcba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700dcbbf0"/>
        <function-ref name="set" scoped="" ref="0x7f7700dcbd80"/>
        <function-ref name="clr" scoped="" ref="0x7f7700dca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700dc83f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700dc83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700dc8770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700dc8900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700dc8a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700dc8c20"/>
        <function-ref name="get" scoped="" ref="0x7f7700dc8db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700dc7020"/>
        <function-ref name="set" scoped="" ref="0x7f7700dc71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700dc7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700dc56d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700dc56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700dc5a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700dc5be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700dc5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700dc4020"/>
        <function-ref name="get" scoped="" ref="0x7f7700dc41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700dc4340"/>
        <function-ref name="set" scoped="" ref="0x7f7700dc44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700dc4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700dc29b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700dc29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700dc2d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700dc1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700dc11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700dc1340"/>
        <function-ref name="get" scoped="" ref="0x7f7700dc14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700dc1660"/>
        <function-ref name="set" scoped="" ref="0x7f7700dc17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700dc1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700dbfe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700dbfe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700dbe1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700dbe350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700dbe4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700dbe670"/>
        <function-ref name="get" scoped="" ref="0x7f7700dbe800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700dbe990"/>
        <function-ref name="set" scoped="" ref="0x7f7700dbeb20"/>
        <function-ref name="clr" scoped="" ref="0x7f7700dbecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700dbb0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700dbb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700dbb420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700dbb5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700dbb740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700dbb8d0"/>
        <function-ref name="get" scoped="" ref="0x7f7700dbba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700dbbbf0"/>
        <function-ref name="set" scoped="" ref="0x7f7700dbbd80"/>
        <function-ref name="clr" scoped="" ref="0x7f7700dba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f770184c440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f770184c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770184c7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770184c950"/>
        <function-ref name="toggle" scoped="" ref="0x7f770184cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770184cc70"/>
        <function-ref name="get" scoped="" ref="0x7f770184ce00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770184a020"/>
        <function-ref name="set" scoped="" ref="0x7f770184a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f770184a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f77018488f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f77018488f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701848c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701848e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701847020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018471b0"/>
        <function-ref name="get" scoped="" ref="0x7f7701847340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018474d0"/>
        <function-ref name="set" scoped="" ref="0x7f7701847660"/>
        <function-ref name="clr" scoped="" ref="0x7f77018477f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f770184e020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f770184e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770184e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770184e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f770184e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770184e850"/>
        <function-ref name="get" scoped="" ref="0x7f770184e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770184eb70"/>
        <function-ref name="set" scoped="" ref="0x7f770184ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f770184d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f770184a5d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f770184a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770184a950"/>
        <function-ref name="isInput" scoped="" ref="0x7f770184aae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770184ac70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770184ae00"/>
        <function-ref name="get" scoped="" ref="0x7f7701849020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018491b0"/>
        <function-ref name="set" scoped="" ref="0x7f7701849340"/>
        <function-ref name="clr" scoped="" ref="0x7f77018494d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f7701847a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f7701847a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701847e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701846020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018461b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701846340"/>
        <function-ref name="get" scoped="" ref="0x7f77018464d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701846660"/>
        <function-ref name="set" scoped="" ref="0x7f77018467f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701846980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f770184d2b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f770184d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770184d630"/>
        <function-ref name="isInput" scoped="" ref="0x7f770184d7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770184d950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770184dae0"/>
        <function-ref name="get" scoped="" ref="0x7f770184dc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770184de00"/>
        <function-ref name="set" scoped="" ref="0x7f770184c020"/>
        <function-ref name="clr" scoped="" ref="0x7f770184c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f7701849760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f7701849760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701849ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701849c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701849e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701848020"/>
        <function-ref name="get" scoped="" ref="0x7f77018481b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701848340"/>
        <function-ref name="set" scoped="" ref="0x7f77018484d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701848660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f7701846c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f7701846c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701845020"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018451b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701845340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018454d0"/>
        <function-ref name="get" scoped="" ref="0x7f7701845660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018457f0"/>
        <function-ref name="set" scoped="" ref="0x7f7701845980"/>
        <function-ref name="clr" scoped="" ref="0x7f7701845b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700d67c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700d67c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700d660a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700d66230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700d663c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700d66550"/>
        <function-ref name="get" scoped="" ref="0x7f7700d666e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700d66870"/>
        <function-ref name="set" scoped="" ref="0x7f7700d66a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7700d66b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700d64e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700d64e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700d631c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700d63350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700d634e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700d63670"/>
        <function-ref name="get" scoped="" ref="0x7f7700d63800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700d63990"/>
        <function-ref name="set" scoped="" ref="0x7f7700d63b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7700d63cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700d600a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700d600a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700d60420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700d605b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700d60740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700d608d0"/>
        <function-ref name="get" scoped="" ref="0x7f7700d60a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700d60bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7700d60d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7700d5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700d5d3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700d5d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700d5d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700d5d900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700d5da90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700d5dc20"/>
        <function-ref name="get" scoped="" ref="0x7f7700d5ddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700d5c020"/>
        <function-ref name="set" scoped="" ref="0x7f7700d5c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700d5c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700d5a6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700d5a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700d5aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700d5abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700d5ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700d59020"/>
        <function-ref name="get" scoped="" ref="0x7f7700d591b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700d59340"/>
        <function-ref name="set" scoped="" ref="0x7f7700d594d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700d59660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700d579b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700d579b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700d57d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700d56020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700d561b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700d56340"/>
        <function-ref name="get" scoped="" ref="0x7f7700d564d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700d56660"/>
        <function-ref name="set" scoped="" ref="0x7f7700d567f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700d56980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700d54e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700d54e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700d531c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700d53350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700d534e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700d53670"/>
        <function-ref name="get" scoped="" ref="0x7f7700d53800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700d53990"/>
        <function-ref name="set" scoped="" ref="0x7f7700d53b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7700d53cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700d500a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700d500a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700d50420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700d505b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700d50740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700d508d0"/>
        <function-ref name="get" scoped="" ref="0x7f7700d50a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700d50bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7700d50d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7700d4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f770183c760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f770183c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770183cae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770183cc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f770183ce00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770183b020"/>
        <function-ref name="get" scoped="" ref="0x7f770183b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770183b340"/>
        <function-ref name="set" scoped="" ref="0x7f770183b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f770183b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f7701839c10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f7701839c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701838020"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018381b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701838340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77018384d0"/>
        <function-ref name="get" scoped="" ref="0x7f7701838660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77018387f0"/>
        <function-ref name="set" scoped="" ref="0x7f7701838980"/>
        <function-ref name="clr" scoped="" ref="0x7f7701838b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f770183e3f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f770183e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770183e770"/>
        <function-ref name="isInput" scoped="" ref="0x7f770183e900"/>
        <function-ref name="toggle" scoped="" ref="0x7f770183ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770183ec20"/>
        <function-ref name="get" scoped="" ref="0x7f770183edb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770183d020"/>
        <function-ref name="set" scoped="" ref="0x7f770183d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f770183d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f770183b8f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f770183b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770183bc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f770183be00"/>
        <function-ref name="toggle" scoped="" ref="0x7f770183a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770183a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f770183a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770183a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f770183a660"/>
        <function-ref name="clr" scoped="" ref="0x7f770183a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f7701838da0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f7701838da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701837180"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701837310"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018374a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701837630"/>
        <function-ref name="get" scoped="" ref="0x7f77018377c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701837950"/>
        <function-ref name="set" scoped="" ref="0x7f7701837ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701837c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f770183d5d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f770183d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770183d950"/>
        <function-ref name="isInput" scoped="" ref="0x7f770183dae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770183dc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770183de00"/>
        <function-ref name="get" scoped="" ref="0x7f770183c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770183c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f770183c340"/>
        <function-ref name="clr" scoped="" ref="0x7f770183c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f770183aa80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f770183aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770183ae00"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701839020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018391b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701839340"/>
        <function-ref name="get" scoped="" ref="0x7f77018394d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701839660"/>
        <function-ref name="set" scoped="" ref="0x7f77018397f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701839980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f7701836020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f7701836020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018363a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701836530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018366c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701836850"/>
        <function-ref name="get" scoped="" ref="0x7f77018369e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701836b70"/>
        <function-ref name="set" scoped="" ref="0x7f7701836d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701835020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700cfcc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700cfcc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700cfb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700cfb230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700cfb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700cfb550"/>
        <function-ref name="get" scoped="" ref="0x7f7700cfb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700cfb870"/>
        <function-ref name="set" scoped="" ref="0x7f7700cfba00"/>
        <function-ref name="clr" scoped="" ref="0x7f7700cfbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700cf9e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700cf9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700cf81c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700cf8350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700cf84e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700cf8670"/>
        <function-ref name="get" scoped="" ref="0x7f7700cf8800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700cf8990"/>
        <function-ref name="set" scoped="" ref="0x7f7700cf8b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7700cf8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700cf50a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700cf50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700cf5420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700cf55b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700cf5740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700cf58d0"/>
        <function-ref name="get" scoped="" ref="0x7f7700cf5a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700cf5bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7700cf5d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7700cf4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700cf23f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700cf23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700cf2770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700cf2900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700cf2a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700cf2c20"/>
        <function-ref name="get" scoped="" ref="0x7f7700cf2db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700cf1020"/>
        <function-ref name="set" scoped="" ref="0x7f7700cf11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700cf1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700cef6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700cef6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700cefa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700cefbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700cefd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700cee020"/>
        <function-ref name="get" scoped="" ref="0x7f7700cee1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700cee340"/>
        <function-ref name="set" scoped="" ref="0x7f7700cee4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700cee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700cec9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700cec9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700cecd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700ceb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700ceb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700ceb340"/>
        <function-ref name="get" scoped="" ref="0x7f7700ceb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700ceb660"/>
        <function-ref name="set" scoped="" ref="0x7f7700ceb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700ceb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700ce9e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700ce9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700ce81c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700ce8350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700ce84e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700ce8670"/>
        <function-ref name="get" scoped="" ref="0x7f7700ce8800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700ce8990"/>
        <function-ref name="set" scoped="" ref="0x7f7700ce8b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7700ce8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700ce50a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700ce50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700ce5420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700ce55b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700ce5740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700ce58d0"/>
        <function-ref name="get" scoped="" ref="0x7f7700ce5a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700ce5bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7700ce5d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7700ce4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f770182da80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f770182da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770182de00"/>
        <function-ref name="isInput" scoped="" ref="0x7f770182c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f770182c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770182c340"/>
        <function-ref name="get" scoped="" ref="0x7f770182c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770182c660"/>
        <function-ref name="set" scoped="" ref="0x7f770182c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f770182c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f7701829020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f7701829020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018293a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701829530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018296c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701829850"/>
        <function-ref name="get" scoped="" ref="0x7f77018299e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701829b70"/>
        <function-ref name="set" scoped="" ref="0x7f7701829d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701828020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f770182f7a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f770182f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770182fb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f770182fcb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770182fe40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770182e020"/>
        <function-ref name="get" scoped="" ref="0x7f770182e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770182e340"/>
        <function-ref name="set" scoped="" ref="0x7f770182e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f770182e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f770182cc10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f770182cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770182b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f770182b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770182b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770182b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f770182b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770182b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f770182b980"/>
        <function-ref name="clr" scoped="" ref="0x7f770182bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f77018282b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f77018282b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701828630"/>
        <function-ref name="isInput" scoped="" ref="0x7f77018287c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701828950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701828ae0"/>
        <function-ref name="get" scoped="" ref="0x7f7701828c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701828e00"/>
        <function-ref name="set" scoped="" ref="0x7f7701827020"/>
        <function-ref name="clr" scoped="" ref="0x7f77018271b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f770182e8f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f770182e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770182ec70"/>
        <function-ref name="isInput" scoped="" ref="0x7f770182ee00"/>
        <function-ref name="toggle" scoped="" ref="0x7f770182d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770182d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f770182d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770182d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f770182d660"/>
        <function-ref name="clr" scoped="" ref="0x7f770182d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f770182bda0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f770182bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770182a180"/>
        <function-ref name="isInput" scoped="" ref="0x7f770182a310"/>
        <function-ref name="toggle" scoped="" ref="0x7f770182a4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770182a630"/>
        <function-ref name="get" scoped="" ref="0x7f770182a7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770182a950"/>
        <function-ref name="set" scoped="" ref="0x7f770182aae0"/>
        <function-ref name="clr" scoped="" ref="0x7f770182ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f7701827440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f7701827440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77018277c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701827950"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701827ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701827c70"/>
        <function-ref name="get" scoped="" ref="0x7f7701827e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701825020"/>
        <function-ref name="set" scoped="" ref="0x7f77018251b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701825340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700c88c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700c88c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700c870a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700c87230"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700c873c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700c87550"/>
        <function-ref name="get" scoped="" ref="0x7f7700c876e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700c87870"/>
        <function-ref name="set" scoped="" ref="0x7f7700c87a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7700c87b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700c85e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700c85e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700c841c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700c84350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700c844e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700c84670"/>
        <function-ref name="get" scoped="" ref="0x7f7700c84800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700c84990"/>
        <function-ref name="set" scoped="" ref="0x7f7700c84b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7700c84cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700c810a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700c810a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700c81420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700c815b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700c81740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700c818d0"/>
        <function-ref name="get" scoped="" ref="0x7f7700c81a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700c81bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7700c81d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7700c80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700c7e3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700c7e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700c7e770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700c7e900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700c7ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700c7ec20"/>
        <function-ref name="get" scoped="" ref="0x7f7700c7edb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700c7d020"/>
        <function-ref name="set" scoped="" ref="0x7f7700c7d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700c7d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700c7b6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700c7b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700c7ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700c7bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700c7bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700c7a020"/>
        <function-ref name="get" scoped="" ref="0x7f7700c7a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700c7a340"/>
        <function-ref name="set" scoped="" ref="0x7f7700c7a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700c7a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700c789b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700c789b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700c78d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700c77020"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700c771b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700c77340"/>
        <function-ref name="get" scoped="" ref="0x7f7700c774d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700c77660"/>
        <function-ref name="set" scoped="" ref="0x7f7700c777f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700c77980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700c75e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700c75e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700c741c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700c74350"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700c744e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700c74670"/>
        <function-ref name="get" scoped="" ref="0x7f7700c74800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700c74990"/>
        <function-ref name="set" scoped="" ref="0x7f7700c74b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7700c74cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700c710a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700c710a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700c71420"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700c715b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700c71740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700c718d0"/>
        <function-ref name="get" scoped="" ref="0x7f7700c71a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700c71bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7700c71d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7700c70020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770181fa20" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770181fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770181fda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701808020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77018081b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701808340"/>
        <function-ref name="get" scoped="" ref="0x7f77018084d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701808660"/>
        <function-ref name="set" scoped="" ref="0x7f77018087f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701808980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77018046d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77018046d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701804a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701804be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701804d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701803020"/>
        <function-ref name="get" scoped="" ref="0x7f77018031b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701803340"/>
        <function-ref name="set" scoped="" ref="0x7f77018034d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701803660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77017fe160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77017fe160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77017fe4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77017fe670"/>
        <function-ref name="toggle" scoped="" ref="0x7f77017fe800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77017fe990"/>
        <function-ref name="get" scoped="" ref="0x7f77017feb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77017fecb0"/>
        <function-ref name="set" scoped="" ref="0x7f77017fee40"/>
        <function-ref name="clr" scoped="" ref="0x7f77017fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77017f9c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77017f9c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77017f80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77017f8230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77017f83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77017f8550"/>
        <function-ref name="get" scoped="" ref="0x7f77017f86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77017f8870"/>
        <function-ref name="set" scoped="" ref="0x7f77017f8a00"/>
        <function-ref name="clr" scoped="" ref="0x7f77017f8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77017f46d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77017f46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77017f4a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f77017f4be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77017f4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77017f3020"/>
        <function-ref name="get" scoped="" ref="0x7f77017f31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77017f3340"/>
        <function-ref name="set" scoped="" ref="0x7f77017f34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77017f3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77017ee160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77017ee160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77017ee4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77017ee670"/>
        <function-ref name="toggle" scoped="" ref="0x7f77017ee800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77017ee990"/>
        <function-ref name="get" scoped="" ref="0x7f77017eeb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77017eecb0"/>
        <function-ref name="set" scoped="" ref="0x7f77017eee40"/>
        <function-ref name="clr" scoped="" ref="0x7f77017ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77017e9c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77017e9c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77017e80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77017e8230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77017e83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77017e8550"/>
        <function-ref name="get" scoped="" ref="0x7f77017e86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77017e8870"/>
        <function-ref name="set" scoped="" ref="0x7f77017e8a00"/>
        <function-ref name="clr" scoped="" ref="0x7f77017e8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77017e46d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77017e46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77017e4a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f77017e4be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77017e4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77017e3020"/>
        <function-ref name="get" scoped="" ref="0x7f77017e31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77017e3340"/>
        <function-ref name="set" scoped="" ref="0x7f77017e34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77017e3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77017de160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77017de160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77017de4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77017de670"/>
        <function-ref name="toggle" scoped="" ref="0x7f77017de800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77017de990"/>
        <function-ref name="get" scoped="" ref="0x7f77017deb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77017decb0"/>
        <function-ref name="set" scoped="" ref="0x7f77017dee40"/>
        <function-ref name="clr" scoped="" ref="0x7f77017dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77017d9c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77017d9c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77017d80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77017d8230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77017d83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77017d8550"/>
        <function-ref name="get" scoped="" ref="0x7f77017d86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77017d8870"/>
        <function-ref name="set" scoped="" ref="0x7f77017d8a00"/>
        <function-ref name="clr" scoped="" ref="0x7f77017d8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77017d46d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77017d46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77017d4a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f77017d4be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77017d4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77017d3020"/>
        <function-ref name="get" scoped="" ref="0x7f77017d31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77017d3340"/>
        <function-ref name="set" scoped="" ref="0x7f77017d34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77017d3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77017ce160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77017ce160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77017ce4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77017ce670"/>
        <function-ref name="toggle" scoped="" ref="0x7f77017ce800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77017ce990"/>
        <function-ref name="get" scoped="" ref="0x7f77017ceb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77017cecb0"/>
        <function-ref name="set" scoped="" ref="0x7f77017cee40"/>
        <function-ref name="clr" scoped="" ref="0x7f77017cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77017c9c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77017c9c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77017c80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77017c8230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77017c83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77017c8550"/>
        <function-ref name="get" scoped="" ref="0x7f77017c86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77017c8870"/>
        <function-ref name="set" scoped="" ref="0x7f77017c8a00"/>
        <function-ref name="clr" scoped="" ref="0x7f77017c8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77017c46d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77017c46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77017c4a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f77017c4be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77017c4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77017c3020"/>
        <function-ref name="get" scoped="" ref="0x7f77017c31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77017c3340"/>
        <function-ref name="set" scoped="" ref="0x7f77017c34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77017c3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA" ref="0x7f77017928d0" loc="7:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA" scoped="" ref="0x7f77017928d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701792c50"/>
        <function-ref name="clear" scoped="" ref="0x7f7701792de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770178f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770178f1b0"/>
        <function-ref name="read" scoped="" ref="0x7f770178f340"/>
        <function-ref name="write" scoped="" ref="0x7f770178f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f770178f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL" ref="0x7f770177f550" loc="18:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL" scoped="" ref="0x7f770177f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770177f8d0"/>
        <function-ref name="clear" scoped="" ref="0x7f770177fa60"/>
        <function-ref name="toggle" scoped="" ref="0x7f770177fbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770177fd80"/>
        <function-ref name="read" scoped="" ref="0x7f770177e020"/>
        <function-ref name="write" scoped="" ref="0x7f770177e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f770177e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD" ref="0x7f770178dd20" loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD" scoped="" ref="0x7f770178dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77017860e0"/>
        <function-ref name="clear" scoped="" ref="0x7f7701786270"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701786400"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701786590"/>
        <function-ref name="read" scoped="" ref="0x7f7701786720"/>
        <function-ref name="write" scoped="" ref="0x7f77017868b0"/>
        <function-ref name="set" scoped="" ref="0x7f7701786a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG" ref="0x7f7701783020" loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG" scoped="" ref="0x7f7701783020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77017833a0"/>
        <function-ref name="clear" scoped="" ref="0x7f7701783530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77017836c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701783850"/>
        <function-ref name="read" scoped="" ref="0x7f77017839e0"/>
        <function-ref name="write" scoped="" ref="0x7f7701783b70"/>
        <function-ref name="set" scoped="" ref="0x7f7701783d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ" ref="0x7f77017811d0" loc="16:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ" scoped="" ref="0x7f77017811d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701781550"/>
        <function-ref name="clear" scoped="" ref="0x7f77017816e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701781870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701781a00"/>
        <function-ref name="read" scoped="" ref="0x7f7701781b90"/>
        <function-ref name="write" scoped="" ref="0x7f7701781d20"/>
        <function-ref name="set" scoped="" ref="0x7f7701780020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB" ref="0x7f770178fa00" loc="8:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB" scoped="" ref="0x7f770178fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770178fd80"/>
        <function-ref name="clear" scoped="" ref="0x7f770178e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f770178e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770178e340"/>
        <function-ref name="read" scoped="" ref="0x7f770178e4d0"/>
        <function-ref name="write" scoped="" ref="0x7f770178e660"/>
        <function-ref name="set" scoped="" ref="0x7f770178e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE" ref="0x7f7701786de0" loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE" scoped="" ref="0x7f7701786de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701785180"/>
        <function-ref name="clear" scoped="" ref="0x7f7701785310"/>
        <function-ref name="toggle" scoped="" ref="0x7f77017854a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701785630"/>
        <function-ref name="read" scoped="" ref="0x7f77017857c0"/>
        <function-ref name="write" scoped="" ref="0x7f7701785950"/>
        <function-ref name="set" scoped="" ref="0x7f7701785ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH" ref="0x7f7701782100" loc="15:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH" scoped="" ref="0x7f7701782100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701782480"/>
        <function-ref name="clear" scoped="" ref="0x7f7701782610"/>
        <function-ref name="toggle" scoped="" ref="0x7f77017827a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701782930"/>
        <function-ref name="read" scoped="" ref="0x7f7701782ac0"/>
        <function-ref name="write" scoped="" ref="0x7f7701782c50"/>
        <function-ref name="set" scoped="" ref="0x7f7701782de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK" ref="0x7f77017803c0" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK" scoped="" ref="0x7f77017803c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701780740"/>
        <function-ref name="clear" scoped="" ref="0x7f77017808d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701780a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701780bf0"/>
        <function-ref name="read" scoped="" ref="0x7f7701780d80"/>
        <function-ref name="write" scoped="" ref="0x7f770177f020"/>
        <function-ref name="set" scoped="" ref="0x7f770177f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC" ref="0x7f770178eb90" loc="9:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC" scoped="" ref="0x7f770178eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770178d020"/>
        <function-ref name="clear" scoped="" ref="0x7f770178d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770178d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770178d4d0"/>
        <function-ref name="read" scoped="" ref="0x7f770178d660"/>
        <function-ref name="write" scoped="" ref="0x7f770178d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f770178d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF" ref="0x7f7701785e80" loc="12:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF" scoped="" ref="0x7f7701785e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701784220"/>
        <function-ref name="clear" scoped="" ref="0x7f77017843b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701784540"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77017846d0"/>
        <function-ref name="read" scoped="" ref="0x7f7701784860"/>
        <function-ref name="write" scoped="" ref="0x7f77017849f0"/>
        <function-ref name="set" scoped="" ref="0x7f7701784b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f770177aaa0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortAP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f770177aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770177ae20"/>
        <function-ref name="clear" scoped="" ref="0x7f7701766020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77017661b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701766340"/>
        <function-ref name="read" scoped="" ref="0x7f77017664d0"/>
        <function-ref name="write" scoped="" ref="0x7f7701766660"/>
        <function-ref name="set" scoped="" ref="0x7f77017667f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f7701762e80" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortBP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7701762e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701761220"/>
        <function-ref name="clear" scoped="" ref="0x7f77017613b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701761540"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77017616d0"/>
        <function-ref name="read" scoped="" ref="0x7f7701761860"/>
        <function-ref name="write" scoped="" ref="0x7f77017619f0"/>
        <function-ref name="set" scoped="" ref="0x7f7701761b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f770175d390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f770175d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770175d710"/>
        <function-ref name="clear" scoped="" ref="0x7f770175d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770175da30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770175dbc0"/>
        <function-ref name="read" scoped="" ref="0x7f770175dd50"/>
        <function-ref name="write" scoped="" ref="0x7f770175c020"/>
        <function-ref name="set" scoped="" ref="0x7f770175c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f7701758910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7701758910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701758c90"/>
        <function-ref name="clear" scoped="" ref="0x7f7701758e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701757020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77017571b0"/>
        <function-ref name="read" scoped="" ref="0x7f7701757340"/>
        <function-ref name="write" scoped="" ref="0x7f77017574d0"/>
        <function-ref name="set" scoped="" ref="0x7f7701757660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f7701753cd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortEP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7701753cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77017520a0"/>
        <function-ref name="clear" scoped="" ref="0x7f7701752230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77017523c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701752550"/>
        <function-ref name="read" scoped="" ref="0x7f77017526e0"/>
        <function-ref name="write" scoped="" ref="0x7f7701752870"/>
        <function-ref name="set" scoped="" ref="0x7f7701752a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f770174e390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortFP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f770174e390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770174e710"/>
        <function-ref name="clear" scoped="" ref="0x7f770174e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770174ea30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770174ebc0"/>
        <function-ref name="read" scoped="" ref="0x7f770174ed50"/>
        <function-ref name="write" scoped="" ref="0x7f770174d020"/>
        <function-ref name="set" scoped="" ref="0x7f770174d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f7701749910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortGP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7701749910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701749c90"/>
        <function-ref name="clear" scoped="" ref="0x7f7701749e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701748020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77017481b0"/>
        <function-ref name="read" scoped="" ref="0x7f7701748340"/>
        <function-ref name="write" scoped="" ref="0x7f77017484d0"/>
        <function-ref name="set" scoped="" ref="0x7f7701748660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f7701744780" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortHP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f7701744780"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701744b00"/>
        <function-ref name="clear" scoped="" ref="0x7f7701744c90"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701744e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701743020"/>
        <function-ref name="read" scoped="" ref="0x7f77017431b0"/>
        <function-ref name="write" scoped="" ref="0x7f7701743340"/>
        <function-ref name="set" scoped="" ref="0x7f77017434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f77017406c0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortJP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f77017406c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701740a40"/>
        <function-ref name="clear" scoped="" ref="0x7f7701740bd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701740d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770173f020"/>
        <function-ref name="read" scoped="" ref="0x7f770173f1b0"/>
        <function-ref name="write" scoped="" ref="0x7f770173f340"/>
        <function-ref name="set" scoped="" ref="0x7f770173f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f770173b6c0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortKP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f770173b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770173ba40"/>
        <function-ref name="clear" scoped="" ref="0x7f770173bbd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770173bd60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770173a020"/>
        <function-ref name="read" scoped="" ref="0x7f770173a1b0"/>
        <function-ref name="write" scoped="" ref="0x7f770173a340"/>
        <function-ref name="set" scoped="" ref="0x7f770173a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f77017366c0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortLP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f77017366c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701736a40"/>
        <function-ref name="clear" scoped="" ref="0x7f7701736bd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701736d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701735020"/>
        <function-ref name="read" scoped="" ref="0x7f77017351b0"/>
        <function-ref name="write" scoped="" ref="0x7f7701735340"/>
        <function-ref name="set" scoped="" ref="0x7f77017354d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f770172a290" loc="40:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f770172a290"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c855c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f7701c85930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f77017290d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7f77017189e0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7f77017189e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7701718d60"/>
        <function-ref name="fired" scoped="" ref="0x7f7701717020"/>
        <function-ref name="disable" scoped="" ref="0x7f77017171b0"/>
        <function-ref name="edge" scoped="" ref="0x7f7701717340"/>
        <function-ref name="enable" scoped="" ref="0x7f77017174d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7701717660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f770171d9e0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f770171d9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f770171dd60"/>
        <function-ref name="fired" scoped="" ref="0x7f770171c020"/>
        <function-ref name="disable" scoped="" ref="0x7f770171c1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f770171c340"/>
        <function-ref name="enable" scoped="" ref="0x7f770171c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f770171c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7f770171a9e0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7f770171a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f770171ad60"/>
        <function-ref name="fired" scoped="" ref="0x7f7701719020"/>
        <function-ref name="disable" scoped="" ref="0x7f77017191b0"/>
        <function-ref name="edge" scoped="" ref="0x7f7701719340"/>
        <function-ref name="enable" scoped="" ref="0x7f77017194d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7701719660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7f77017179e0" loc="52:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7f77017179e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7701717d60"/>
        <function-ref name="fired" scoped="" ref="0x7f7701716020"/>
        <function-ref name="disable" scoped="" ref="0x7f77017161b0"/>
        <function-ref name="edge" scoped="" ref="0x7f7701716340"/>
        <function-ref name="enable" scoped="" ref="0x7f77017164d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7701716660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f770171c9e0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f770171c9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f770171cd60"/>
        <function-ref name="fired" scoped="" ref="0x7f770171b020"/>
        <function-ref name="disable" scoped="" ref="0x7f770171b1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f770171b340"/>
        <function-ref name="enable" scoped="" ref="0x7f770171b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f770171b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7f77017199e0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7f77017199e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7701719d60"/>
        <function-ref name="fired" scoped="" ref="0x7f7701718020"/>
        <function-ref name="disable" scoped="" ref="0x7f77017181b0"/>
        <function-ref name="edge" scoped="" ref="0x7f7701718340"/>
        <function-ref name="enable" scoped="" ref="0x7f77017184d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7701718660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f77019f19b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f77019f19b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f77019f1d30"/>
        <function-ref name="fired" scoped="" ref="0x7f770171d020"/>
        <function-ref name="disable" scoped="" ref="0x7f770171d1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f770171d340"/>
        <function-ref name="enable" scoped="" ref="0x7f770171d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f770171d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f770171b9e0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f770171b9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f770171bd60"/>
        <function-ref name="fired" scoped="" ref="0x7f770171a020"/>
        <function-ref name="disable" scoped="" ref="0x7f770171a1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f770171a340"/>
        <function-ref name="enable" scoped="" ref="0x7f770171a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f770171a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7f770170f7a0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7f770170f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f770170fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f7701712020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f7701712020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f77017123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7f77017117a0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7f77017117a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7701711b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7f770170d020" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7f770170d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f770170d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f77017127a0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f77017127a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7701712b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7f770170f020" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7f770170f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f770170f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f7701710860" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f7701710860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7701710be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7f7701711020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7f7701711020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f77017113a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f77016f1060" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f77016f1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f77016f13e0"/>
        <function-ref name="fired" scoped="" ref="0x7f77016f1570"/>
        <function-ref name="disable" scoped="" ref="0x7f77016f1700"/>
        <function-ref name="edge" scoped="" ref="0x7f77016f1890"/>
        <function-ref name="enable" scoped="" ref="0x7f77016f1a20"/>
        <function-ref name="getValue" scoped="" ref="0x7f77016f1bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f77016f1e80" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f77016f1e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f77016dc220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f77016dada0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f77016dada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f77016d9180"/>
        <function-ref name="fired" scoped="" ref="0x7f77016d9310"/>
        <function-ref name="disable" scoped="" ref="0x7f77016d94a0"/>
        <function-ref name="edge" scoped="" ref="0x7f77016d9630"/>
        <function-ref name="enable" scoped="" ref="0x7f77016d97c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f77016d9950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f77016d9c20" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f77016d9c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f77016d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f77016d5c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f77016d5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f77016d40a0"/>
        <function-ref name="fired" scoped="" ref="0x7f77016d4230"/>
        <function-ref name="disable" scoped="" ref="0x7f77016d43c0"/>
        <function-ref name="edge" scoped="" ref="0x7f77016d4550"/>
        <function-ref name="enable" scoped="" ref="0x7f77016d46e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f77016d4870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f77016d4b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f77016d4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f77016d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f77016d1c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f77016d1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f77016d00a0"/>
        <function-ref name="fired" scoped="" ref="0x7f77016d0230"/>
        <function-ref name="disable" scoped="" ref="0x7f77016d03c0"/>
        <function-ref name="edge" scoped="" ref="0x7f77016d0550"/>
        <function-ref name="enable" scoped="" ref="0x7f77016d06e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f77016d0870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f77016d0b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f77016d0b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f77016cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f77016ccc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f77016ccc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f77016cb0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f77016cb230"/>
        <function-ref name="disable" scoped="" ref="0x7f77016cb3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f77016cb550"/>
        <function-ref name="enable" scoped="" ref="0x7f77016cb6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f77016cb870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f77016cbb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f77016cbb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f77016ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f77016c8c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f77016c8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f77016c70a0"/>
        <function-ref name="fired" scoped="" ref="0x7f77016c7230"/>
        <function-ref name="disable" scoped="" ref="0x7f77016c73c0"/>
        <function-ref name="edge" scoped="" ref="0x7f77016c7550"/>
        <function-ref name="enable" scoped="" ref="0x7f77016c76e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f77016c7870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f77016c7b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f77016c7b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f77016c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f77016c4c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f77016c4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f77016c30a0"/>
        <function-ref name="fired" scoped="" ref="0x7f77016c3230"/>
        <function-ref name="disable" scoped="" ref="0x7f77016c33c0"/>
        <function-ref name="edge" scoped="" ref="0x7f77016c3550"/>
        <function-ref name="enable" scoped="" ref="0x7f77016c36e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f77016c3870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f77016c3b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f77016c3b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f77016c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f77016bfc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f77016bfc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f77016be0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f77016be230"/>
        <function-ref name="disable" scoped="" ref="0x7f77016be3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f77016be550"/>
        <function-ref name="enable" scoped="" ref="0x7f77016be6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f77016be870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f77016beb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f77016beb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f77016bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f77016b29f0" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f77016b29f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f77016b2d70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f77014b0020"/>
        <function-ref name="request" scoped="" ref="0x7f77014b01b0"/>
        <function-ref name="granted" scoped="" ref="0x7f77014b0340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f77014b04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f77014b0880" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f77014b0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f7701ad7110"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f7701ad73d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f77014af500"/>
        <function-ref name="writeDone" scoped="" ref="0x7f77014ad9b0"/>
        <function-ref name="write" scoped="" ref="0x7f77014ae150"/>
        <function-ref name="readDone" scoped="" ref="0x7f77014aed60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f77016a5530" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f77016a5530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f77016a58b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f77016a5a40"/>
        <function-ref name="request" scoped="" ref="0x7f77016a5bd0"/>
        <function-ref name="granted" scoped="" ref="0x7f77016a5d60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f77016a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f77016a4a20" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f77016a4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f7701ad7110"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f7701ad73d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f77016a36b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f77016a0c30"/>
        <function-ref name="write" scoped="" ref="0x7f77016a1330"/>
        <function-ref name="readDone" scoped="" ref="0x7f77016a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f7701616bf0" loc="92:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f7701616bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f7701615020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f77016151b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f7701614930" loc="96:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7701614930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f7701614cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f7701614e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f7701615400" loc="93:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7701615400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7701615780"/>
        <function-ref name="requested" scoped="" ref="0x7f7701615910"/>
        <function-ref name="granted" scoped="" ref="0x7f7701615aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7701615c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7701615dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7701617e60" loc="91:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f7701617e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7701616230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f77016163c0"/>
        <function-ref name="request" scoped="" ref="0x7f7701616550"/>
        <function-ref name="granted" scoped="" ref="0x7f77016166e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7701616870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f7701614060" loc="94:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7701614060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f77016143e0"/>
        <function-ref name="userId" scoped="" ref="0x7f7701614570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7700b0c810" loc="44:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7700b0c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7700b0cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f7700b0ce20" loc="45:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f7700b0ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f7700b0b1c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f7700b0b350"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f7700b0b4e0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f7700b0b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f7700b09d80" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f7700b09d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f7700b07180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7700b07310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f7700b06b60" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7700b06b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f7700b05020"/>
        <function-ref name="configure" scoped="" ref="0x7f7700b051b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f7700b05440" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f7700b05440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f7700b057c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f7700b05950"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f7700b05ae0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f7700b05c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f7700b07560" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7700b07560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7700b078e0"/>
        <function-ref name="requested" scoped="" ref="0x7f7700b07a70"/>
        <function-ref name="granted" scoped="" ref="0x7f7700b07c00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7700b07d90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7700b06020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f7700b04020" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f7700b04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f7700b043a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7700b04530"/>
        <function-ref name="led1On" scoped="" ref="0x7f7700b046c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f7700b04850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f7700b049e0"/>
        <function-ref name="get" scoped="" ref="0x7f7700b04b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f7700b04d00"/>
        <function-ref name="led0On" scoped="" ref="0x7f7700b034d0"/>
        <function-ref name="set" scoped="" ref="0x7f7700b031b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f7700b03020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f7700b03340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7700b09020" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f7700b09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7700b093c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7700b09550"/>
        <function-ref name="request" scoped="" ref="0x7f7700b096e0"/>
        <function-ref name="granted" scoped="" ref="0x7f7700b09870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7700b09a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f7700b06270" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7700b06270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f7700b065f0"/>
        <function-ref name="userId" scoped="" ref="0x7f7700b06780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f7700b037a0" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f7700b037a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7700b03b20"/>
        <function-ref name="runTask" scoped="" ref="0x7f7700b03cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f770160f400" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f770160f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f770160f780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f770160f9d0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f770160f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f770160fd50"/>
        <function-ref name="requested" scoped="" ref="0x7f7701601020"/>
        <function-ref name="granted" scoped="" ref="0x7f77016011b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7701601340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f77016014d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f7701611c40" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f7701611c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f770160f020"/>
        <function-ref name="stop" scoped="" ref="0x7f770160f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f7701601720" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7701601720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f7701601aa0"/>
        <function-ref name="userId" scoped="" ref="0x7f7701601c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7f77015bdcd0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f77015bdcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f77015bb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f77015c0020" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f77015c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f7701ad7110"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f7701ad73d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f77015c0c50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f77015bd150"/>
        <function-ref name="write" scoped="" ref="0x7f77015bf8c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f77015be510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f77015bb330" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f77015bb330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f77015bb6b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f77015bb840"/>
        <function-ref name="led1On" scoped="" ref="0x7f77015bb9d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f77015bbb60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f77015bbcf0"/>
        <function-ref name="get" scoped="" ref="0x7f77015bbe80"/>
        <function-ref name="led1Off" scoped="" ref="0x7f77015ba030"/>
        <function-ref name="led2On" scoped="" ref="0x7f77015ba670"/>
        <function-ref name="set" scoped="" ref="0x7f77015ba350"/>
        <function-ref name="led2Off" scoped="" ref="0x7f77015ba1c0"/>
        <function-ref name="led0On" scoped="" ref="0x7f77015ba4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f77015fd470" loc="41:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f77015fd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f77015fd810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f77015fd9a0"/>
        <function-ref name="request" scoped="" ref="0x7f77015fdb30"/>
        <function-ref name="granted" scoped="" ref="0x7f77015fdcc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f77015fde50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f77015c7370" loc="42:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f77015c7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f7701ad7110"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f7701ad73d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f77015c5020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f77015c3510"/>
        <function-ref name="write" scoped="" ref="0x7f77015c5c50"/>
        <function-ref name="readDone" scoped="" ref="0x7f77015c48c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f77015c1210" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f77015c1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f77015c15b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f77015c1740"/>
        <function-ref name="request" scoped="" ref="0x7f77015c18d0"/>
        <function-ref name="granted" scoped="" ref="0x7f77015c1a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f77015c1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7f77015488e0" loc="79:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f77015488e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f7701548c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f7701547020" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f7701547020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f77015473a0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f7701547530"/>
        <function-ref name="setStart" scoped="" ref="0x7f77015476c0"/>
        <function-ref name="status" scoped="" ref="0x7f7701547850"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f77015479e0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f7701547b70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f7701547d00"/>
        <function-ref name="read" scoped="" ref="0x7f7701546020"/>
        <function-ref name="init" scoped="" ref="0x7f77015461b0"/>
        <function-ref name="enableAck" scoped="" ref="0x7f7701546340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f77015464d0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f7701546660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f77015467f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f7701546a80"/>
        <function-ref name="enable" scoped="" ref="0x7f7701546c10"/>
        <function-ref name="write" scoped="" ref="0x7f7701546da0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f7701545020"/>
        <function-ref name="off" scoped="" ref="0x7f77015451b0"/>
        <function-ref name="setStop" scoped="" ref="0x7f7701545340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f77015454d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f7701545660"/>
        <function-ref name="hasStop" scoped="" ref="0x7f77015457f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7f7701545ac0" loc="82:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f7701545ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f7701545e40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7701544020"/>
        <function-ref name="led1On" scoped="" ref="0x7f77015441b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f7701544340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f77015444d0"/>
        <function-ref name="get" scoped="" ref="0x7f7701544660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f77015447f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f7701544e30"/>
        <function-ref name="set" scoped="" ref="0x7f7701544b10"/>
        <function-ref name="led2Off" scoped="" ref="0x7f7701544980"/>
        <function-ref name="led0On" scoped="" ref="0x7f7701544ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7f7701543160" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f7701543160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f77015434e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7701543670"/>
        <function-ref name="led1On" scoped="" ref="0x7f7701543800"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f7701543990"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f7701543b20"/>
        <function-ref name="get" scoped="" ref="0x7f7701543cb0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f7701543e40"/>
        <function-ref name="led2On" scoped="" ref="0x7f77015424d0"/>
        <function-ref name="set" scoped="" ref="0x7f77015421b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f7701542020"/>
        <function-ref name="led0On" scoped="" ref="0x7f7701542340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f77015427a0" loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f77015427a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7701542b20"/>
        <function-ref name="runTask" scoped="" ref="0x7f7701542cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f770154d340" loc="77:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f770154d340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f770154d6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f770154d850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f770154dc00" loc="78:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f770154dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f7701ad7110"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f7701ad73d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f770154c8a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f7701549d20"/>
        <function-ref name="write" scoped="" ref="0x7f770154b4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f7701549110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f770153c0e0" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f770153c0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f770153c460"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f770153c5f0"/>
        <function-ref name="setStart" scoped="" ref="0x7f770153c780"/>
        <function-ref name="status" scoped="" ref="0x7f770153c910"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f770153caa0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f770153cc30"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f770153cdc0"/>
        <function-ref name="read" scoped="" ref="0x7f770153b020"/>
        <function-ref name="init" scoped="" ref="0x7f770153b1b0"/>
        <function-ref name="enableAck" scoped="" ref="0x7f770153b340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f770153b4d0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f770153b660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f770153b7f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f770153ba80"/>
        <function-ref name="enable" scoped="" ref="0x7f770153bc10"/>
        <function-ref name="write" scoped="" ref="0x7f770153bda0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f770153a020"/>
        <function-ref name="off" scoped="" ref="0x7f770153a1b0"/>
        <function-ref name="setStop" scoped="" ref="0x7f770153a340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f770153a4d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f770153a660"/>
        <function-ref name="hasStop" scoped="" ref="0x7f770153a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f7701538a70" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f7701538a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f7701538df0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f7701535020"/>
        <function-ref name="setStart" scoped="" ref="0x7f77015351b0"/>
        <function-ref name="status" scoped="" ref="0x7f7701535340"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f77015354d0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f7701535660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f77015357f0"/>
        <function-ref name="read" scoped="" ref="0x7f7701535980"/>
        <function-ref name="init" scoped="" ref="0x7f7701535b10"/>
        <function-ref name="enableAck" scoped="" ref="0x7f7701535ca0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f7701535e30"/>
        <function-ref name="hasStart" scoped="" ref="0x7f7701534020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f77015341b0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f7701534440"/>
        <function-ref name="enable" scoped="" ref="0x7f77015345d0"/>
        <function-ref name="write" scoped="" ref="0x7f7701534760"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f77015348f0"/>
        <function-ref name="off" scoped="" ref="0x7f7701534a80"/>
        <function-ref name="setStop" scoped="" ref="0x7f7701534c10"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f7701534da0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f7701533020"/>
        <function-ref name="hasStop" scoped="" ref="0x7f77015331b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7f7701533540" loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7f7701533540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77015338c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701533a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701533be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701533d70"/>
        <function-ref name="get" scoped="" ref="0x7f7701532020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77015321b0"/>
        <function-ref name="set" scoped="" ref="0x7f7701532340"/>
        <function-ref name="clr" scoped="" ref="0x7f77015324d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7f7701532810" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7f7701532810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701532b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701532d20"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701531020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77015311b0"/>
        <function-ref name="get" scoped="" ref="0x7f7701531340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77015314d0"/>
        <function-ref name="set" scoped="" ref="0x7f7701531660"/>
        <function-ref name="clr" scoped="" ref="0x7f77015317f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f77014fc4a0" loc="46:../tinyos_ws18/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f77014fc4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f77014fc820"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f77014fc9b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f77014fcb40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f77014fccd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f77014fce60"/>
        <function-ref name="get" scoped="" ref="0x7f77014f9020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f77014f91b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f77014f97f0"/>
        <function-ref name="set" scoped="" ref="0x7f77014f9340"/>
        <function-ref name="led0On" scoped="" ref="0x7f77014f94d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f77014f9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f77014f4550" loc="50:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f77014f4550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77014f48d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77014f4a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f77014f4bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77014f4d80"/>
        <function-ref name="get" scoped="" ref="0x7f77014f3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77014f31b0"/>
        <function-ref name="set" scoped="" ref="0x7f77014f3340"/>
        <function-ref name="clr" scoped="" ref="0x7f77014f34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f77014f87c0" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f77014f87c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f77014f8b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f77014f37f0" loc="51:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f77014f37f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77014f3b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f77014f3d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f77014f2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77014f21b0"/>
        <function-ref name="get" scoped="" ref="0x7f77014f2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77014f24d0"/>
        <function-ref name="set" scoped="" ref="0x7f77014f2660"/>
        <function-ref name="clr" scoped="" ref="0x7f77014f27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f77014f8dc0" loc="47:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f77014f8dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f77014f5180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f77014f5310"/>
        <function-ref name="led1On" scoped="" ref="0x7f77014f54a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f77014f5630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f77014f57c0"/>
        <function-ref name="get" scoped="" ref="0x7f77014f5950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f77014f5ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f77014f41b0"/>
        <function-ref name="set" scoped="" ref="0x7f77014f5c70"/>
        <function-ref name="led0On" scoped="" ref="0x7f77014f5e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f77014f4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f77014f2b10" loc="52:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f77014f2b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77014f0020"/>
        <function-ref name="isInput" scoped="" ref="0x7f77014f01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77014f0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77014f04d0"/>
        <function-ref name="get" scoped="" ref="0x7f77014f0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77014f07f0"/>
        <function-ref name="set" scoped="" ref="0x7f77014f0980"/>
        <function-ref name="clr" scoped="" ref="0x7f77014f0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f77014d51d0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f77014d51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77014d5550"/>
        <function-ref name="isInput" scoped="" ref="0x7f77014d56e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77014d5870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77014d5a00"/>
        <function-ref name="get" scoped="" ref="0x7f77014d5b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77014d5d20"/>
        <function-ref name="set" scoped="" ref="0x7f77014d4020"/>
        <function-ref name="clr" scoped="" ref="0x7f77014d41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f77014d4510" loc="45:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f77014d4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77014d4890"/>
        <function-ref name="isInput" scoped="" ref="0x7f77014d4a20"/>
        <function-ref name="toggle" scoped="" ref="0x7f77014d4bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77014d4d40"/>
        <function-ref name="get" scoped="" ref="0x7f77014d3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77014d31b0"/>
        <function-ref name="set" scoped="" ref="0x7f77014d3340"/>
        <function-ref name="clr" scoped="" ref="0x7f77014d34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f77014d2ab0" loc="48:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f77014d2ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f77014d2e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f77014d3830" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f77014d3830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77014d3bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77014d3d40"/>
        <function-ref name="toggle" scoped="" ref="0x7f77014d2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77014d21b0"/>
        <function-ref name="get" scoped="" ref="0x7f77014d2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77014d24d0"/>
        <function-ref name="set" scoped="" ref="0x7f77014d2660"/>
        <function-ref name="clr" scoped="" ref="0x7f77014d27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f77014ca340" loc="46:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f77014ca340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f77014ca6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f77014ca980" loc="47:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f77014ca980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f77014cad00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f77014c8020"/>
        <function-ref name="led1On" scoped="" ref="0x7f77014c81b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f77014c8340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f77014c84d0"/>
        <function-ref name="get" scoped="" ref="0x7f77014c8660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f77014c87f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f77014c8e30"/>
        <function-ref name="set" scoped="" ref="0x7f77014c8980"/>
        <function-ref name="led0On" scoped="" ref="0x7f77014c8b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f77014c8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f77012ea140" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="FMClickC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f77012ea140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f77012e6630"/>
        <function-ref name="fired" scoped="" ref="0x7f77012e9b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f77012e8920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f77012e84a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f77012e5020"/>
        <function-ref name="gett0" scoped="" ref="0x7f77012e6ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f77012e8020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f77012ead30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f77012e6020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f77012e9220"/>
        <function-ref name="stop" scoped="" ref="0x7f77012e96f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f770149f020" loc="49:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f770149f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f770149c630"/>
        <function-ref name="fired" scoped="" ref="0x7f770149ea60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f770149d920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f770149d4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f770149a020"/>
        <function-ref name="gett0" scoped="" ref="0x7f770149cab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f770149d020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f770149fc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f770149c020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f770149e110"/>
        <function-ref name="stop" scoped="" ref="0x7f770149e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f7701497c30" loc="46:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f7701497c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7701492110"/>
        <function-ref name="fired" scoped="" ref="0x7f77014946a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f77014934a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7701493020"/>
        <function-ref name="getdt" scoped="" ref="0x7f7701492a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f7701492590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7701494b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7701496860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7701493ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7701496d30"/>
        <function-ref name="stop" scoped="" ref="0x7f7701494220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f770148d500" loc="47:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f770148d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f770148f170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f770149ae60" loc="45:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f770149ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7701497210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f770147e020" loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f770147e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f770147ee30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7701478800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7701478340"/>
        <function-ref name="overflow" scoped="" ref="0x7f7701478cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f770148ec80" loc="27:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f770148ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f770148a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f7701482960" loc="28:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f7701482960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f77014801b0"/>
        <function-ref name="fired" scoped="" ref="0x7f77014881b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f7701488b30"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7701488670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f7701480670"/>
        <function-ref name="start" scoped="" ref="0x7f77014897c0"/>
        <function-ref name="stop" scoped="" ref="0x7f7701489cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f77013894b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f77013894b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7701386db0"/>
        <function-ref name="fired" scoped="" ref="0x7f7701387da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f7701386760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f77013862a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f77013852a0"/>
        <function-ref name="start" scoped="" ref="0x7f77013873d0"/>
        <function-ref name="stop" scoped="" ref="0x7f77013878e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f770138aba0" loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f770138aba0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f7701d3d020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f7701d3d020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7701389020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f77013858d0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f77013858d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7701384780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7701382150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7701384c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f7701382610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f7700a65190" loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f7700a65190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f7700a65510"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f7700a656a0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f7700a65830"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f7700a659c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f7700a65b50"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f7700a65ce0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f7700a65e70"/>
        <function-ref name="setControlA" scoped="" ref="0x7f7700a64030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f7700a729c0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f7700a729c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7700a6e260"/>
        <function-ref name="fired" scoped="" ref="0x7f7700a6f220"/>
        <function-ref name="startAt" scoped="" ref="0x7f7700a6fba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7700a6f6e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f7700a6e720"/>
        <function-ref name="start" scoped="" ref="0x7f7700a70810"/>
        <function-ref name="stop" scoped="" ref="0x7f7700a70d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7700a721b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7700a721b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7700a72530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f7700a6ed50" loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f7700a6ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7700a6dba0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7700a6b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7700a6b090"/>
        <function-ref name="overflow" scoped="" ref="0x7f7700a6ba10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x7f7700a60780" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f7700a60780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f7700a60b00"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f7700a60c90"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f7700a60e20"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f7700a5f020"/>
        <function-ref name="countBusy" scoped="" ref="0x7f7700a5f1b0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f7700a5f340"/>
        <function-ref name="getAssr" scoped="" ref="0x7f7700a5f4d0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f7700a5f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f7700a643e0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f7700a643e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f7700a62e60"/>
        <function-ref name="fired" scoped="" ref="0x7f7700a63a60"/>
        <function-ref name="get" scoped="" ref="0x7f7700a63090"/>
        <function-ref name="reset" scoped="" ref="0x7f7700a62020"/>
        <function-ref name="isOn" scoped="" ref="0x7f7700a60350"/>
        <function-ref name="set" scoped="" ref="0x7f7700a63550"/>
        <function-ref name="start" scoped="" ref="0x7f7700a624e0"/>
        <function-ref name="stop" scoped="" ref="0x7f7700a629a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f7700a6a020" loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f7700a6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f7700a66350"/>
        <function-ref name="test" scoped="" ref="0x7f7700a689a0"/>
        <function-ref name="get" scoped="" ref="0x7f7700a6ac50"/>
        <function-ref name="setScale" scoped="" ref="0x7f7700a66810"/>
        <function-ref name="getScale" scoped="" ref="0x7f7700a66d20"/>
        <function-ref name="reset" scoped="" ref="0x7f7700a69b20"/>
        <function-ref name="overflow" scoped="" ref="0x7f7700a69660"/>
        <function-ref name="isOn" scoped="" ref="0x7f7700a68e60"/>
        <function-ref name="set" scoped="" ref="0x7f7700a69150"/>
        <function-ref name="start" scoped="" ref="0x7f7700a68020"/>
        <function-ref name="stop" scoped="" ref="0x7f7700a684e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f77013fbc10" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f77013fbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f77013fa020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f77013fa1b0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f77013fa340"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f77013fa4d0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f77013fa660"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f77013fa7f0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f77013fa980"/>
        <function-ref name="setControlA" scoped="" ref="0x7f77013fab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7f77013f5570" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f77013f5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f77013f58f0"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f77013f5a80"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f77013f5c10"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f77013f5da0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f77013f4020"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f77013f41b0"/>
        <function-ref name="getAssr" scoped="" ref="0x7f77013f4340"/>
        <function-ref name="setAssr" scoped="" ref="0x7f77013f44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f77013f9060" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f77013f9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f77013f6a10"/>
        <function-ref name="fired" scoped="" ref="0x7f77013f86c0"/>
        <function-ref name="get" scoped="" ref="0x7f77013f9c90"/>
        <function-ref name="reset" scoped="" ref="0x7f77013f8b80"/>
        <function-ref name="isOn" scoped="" ref="0x7f77013f5020"/>
        <function-ref name="set" scoped="" ref="0x7f77013f81b0"/>
        <function-ref name="start" scoped="" ref="0x7f77013f6090"/>
        <function-ref name="stop" scoped="" ref="0x7f77013f6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f77014028f0" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f77014028f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f77013fccd0"/>
        <function-ref name="test" scoped="" ref="0x7f77013fc350"/>
        <function-ref name="get" scoped="" ref="0x7f77013ff5a0"/>
        <function-ref name="setScale" scoped="" ref="0x7f77013fb1b0"/>
        <function-ref name="getScale" scoped="" ref="0x7f77013fb6c0"/>
        <function-ref name="reset" scoped="" ref="0x7f77013fe4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f77013fe020"/>
        <function-ref name="isOn" scoped="" ref="0x7f77013fc810"/>
        <function-ref name="set" scoped="" ref="0x7f77013ffa60"/>
        <function-ref name="start" scoped="" ref="0x7f77013fe9a0"/>
        <function-ref name="stop" scoped="" ref="0x7f77013fee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f77013ecdb0" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f77013ecdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f77013eb180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f77013eb310"/>
        <function-ref name="getControlA" scoped="" ref="0x7f77013eb4a0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f77013eb630"/>
        <function-ref name="setControlB" scoped="" ref="0x7f77013eb7c0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f77013eb950"/>
        <function-ref name="getControlB" scoped="" ref="0x7f77013ebae0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f77013ebc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f77013e64c0" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f77013e64c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f77013e6840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7f77013e6bf0" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f77013e6bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f77013e5020"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f77013e51b0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f77013e5340"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f77013e54d0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f77013e5660"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f77013e57f0"/>
        <function-ref name="getAssr" scoped="" ref="0x7f77013e5980"/>
        <function-ref name="setAssr" scoped="" ref="0x7f77013e5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f77013ea1a0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f77013ea1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f77013e7b30"/>
        <function-ref name="fired" scoped="" ref="0x7f77013e87f0"/>
        <function-ref name="get" scoped="" ref="0x7f77013eadd0"/>
        <function-ref name="reset" scoped="" ref="0x7f77013e8cb0"/>
        <function-ref name="isOn" scoped="" ref="0x7f77013e6020"/>
        <function-ref name="set" scoped="" ref="0x7f77013e82e0"/>
        <function-ref name="start" scoped="" ref="0x7f77013e71b0"/>
        <function-ref name="stop" scoped="" ref="0x7f77013e7670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f77013f1a10" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f77013f1a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f77013ede60"/>
        <function-ref name="test" scoped="" ref="0x7f77013ed4e0"/>
        <function-ref name="get" scoped="" ref="0x7f77013f06b0"/>
        <function-ref name="setScale" scoped="" ref="0x7f77013ec350"/>
        <function-ref name="getScale" scoped="" ref="0x7f77013ec860"/>
        <function-ref name="reset" scoped="" ref="0x7f77013ee590"/>
        <function-ref name="overflow" scoped="" ref="0x7f77013ee0d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f77013ed9a0"/>
        <function-ref name="set" scoped="" ref="0x7f77013f0b70"/>
        <function-ref name="start" scoped="" ref="0x7f77013eea50"/>
        <function-ref name="stop" scoped="" ref="0x7f77013ed020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f7701350020" loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f7701350020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f77013503a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f7701350530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f7701355cd0" loc="49:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f7701355cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7701351670"/>
        <function-ref name="fired" scoped="" ref="0x7f7701352550"/>
        <function-ref name="startAt" scoped="" ref="0x7f7701351020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7701352a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f7701351b30"/>
        <function-ref name="start" scoped="" ref="0x7f7701353b60"/>
        <function-ref name="stop" scoped="" ref="0x7f7701352090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f770135a830" loc="48:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f770135a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7701356cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f7701357300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f77013560d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7701357c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f7701355660"/>
        <function-ref name="gett0" scoped="" ref="0x7f77013551e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7701357780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7701359480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f77013566e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7701359950"/>
        <function-ref name="stop" scoped="" ref="0x7f7701359e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f7701300a00" loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f7701300a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7701300d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f77012fe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f7701305640" loc="49:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f7701305640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7701301c40"/>
        <function-ref name="fired" scoped="" ref="0x7f77013021e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7701301020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7701302ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f7701300590"/>
        <function-ref name="gett0" scoped="" ref="0x7f7701300110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7701302660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7701303390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7701301630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7701303860"/>
        <function-ref name="stop" scoped="" ref="0x7f7701303d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f770130b150" loc="48:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f770130b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7701306700"/>
        <function-ref name="fired" scoped="" ref="0x7f7701309c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7701308a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f77013085b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f7701305090"/>
        <function-ref name="gett0" scoped="" ref="0x7f7701306ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7701308110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f770130bd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f77013060d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f77013092a0"/>
        <function-ref name="stop" scoped="" ref="0x7f7701309790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f77012fc790" loc="48:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f77012fc790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f77012f23f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f77012f2a60" loc="49:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f77012f2a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f77012f1890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f77012f0260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f77012f1d50"/>
        <function-ref name="overflow" scoped="" ref="0x7f77012f0720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f77012a6020" loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f77012a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012a67a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012a6930"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012a6ac0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012a6c50"/>
        <function-ref name="get" scoped="" ref="0x7f77012a6de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012a5020"/>
        <function-ref name="set" scoped="" ref="0x7f77012a51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012a5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f77012c3800" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f77012c3800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012c3b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012c3d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012c2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012c21b0"/>
        <function-ref name="get" scoped="" ref="0x7f77012c2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012c24d0"/>
        <function-ref name="set" scoped="" ref="0x7f77012c2660"/>
        <function-ref name="clr" scoped="" ref="0x7f77012c27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f77012b7670" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f77012b7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012b79f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012b7b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012b7d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012b6020"/>
        <function-ref name="get" scoped="" ref="0x7f77012b61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012b6340"/>
        <function-ref name="set" scoped="" ref="0x7f77012b64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012b6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f77012ac020" loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f77012ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012ac3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012ac530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012ac6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012ac850"/>
        <function-ref name="get" scoped="" ref="0x7f77012ac9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012acb70"/>
        <function-ref name="set" scoped="" ref="0x7f77012acd00"/>
        <function-ref name="clr" scoped="" ref="0x7f77012ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f77012a0350" loc="108:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f77012a0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012a06d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012a0860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012a09f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012a0b80"/>
        <function-ref name="get" scoped="" ref="0x7f77012a0d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770129f020"/>
        <function-ref name="set" scoped="" ref="0x7f770129f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f770129f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH2" ref="0x7f770129dcb0" loc="112:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH2" scoped="" ref="0x7f770129dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770129c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770129c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f770129c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770129c550"/>
        <function-ref name="get" scoped="" ref="0x7f770129c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770129c870"/>
        <function-ref name="set" scoped="" ref="0x7f770129ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f770129cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH7" ref="0x7f7701296cb0" loc="117:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH7" scoped="" ref="0x7f7701296cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012950a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701295230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012953c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701295550"/>
        <function-ref name="get" scoped="" ref="0x7f77012956e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701295870"/>
        <function-ref name="set" scoped="" ref="0x7f7701295a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701295b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ6" ref="0x7f770128d350" loc="125:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ6" scoped="" ref="0x7f770128d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770128d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770128d860"/>
        <function-ref name="toggle" scoped="" ref="0x7f770128d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770128db80"/>
        <function-ref name="get" scoped="" ref="0x7f770128dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770128c020"/>
        <function-ref name="set" scoped="" ref="0x7f770128c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f770128c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK0" ref="0x7f770128b990" loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK0" scoped="" ref="0x7f770128b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770128bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f770128a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f770128a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770128a340"/>
        <function-ref name="get" scoped="" ref="0x7f770128a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770128a660"/>
        <function-ref name="set" scoped="" ref="0x7f770128a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f770128a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL2" ref="0x7f770127f990" loc="139:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL2" scoped="" ref="0x7f770127f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770127fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f770127e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f770127e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770127e340"/>
        <function-ref name="get" scoped="" ref="0x7f770127e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770127e660"/>
        <function-ref name="set" scoped="" ref="0x7f770127e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f770127e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f77012db990" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f77012db990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012dbd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012da020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012da1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012da340"/>
        <function-ref name="get" scoped="" ref="0x7f77012da4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012da660"/>
        <function-ref name="set" scoped="" ref="0x7f77012da7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012da980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f77012af990" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f77012af990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012afd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012ae020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012ae1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012ae340"/>
        <function-ref name="get" scoped="" ref="0x7f77012ae4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012ae660"/>
        <function-ref name="set" scoped="" ref="0x7f77012ae7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012ae980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f77012d8020" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f77012d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012d83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012d8530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012d86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012d8850"/>
        <function-ref name="get" scoped="" ref="0x7f77012d89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012d8b70"/>
        <function-ref name="set" scoped="" ref="0x7f77012d8d00"/>
        <function-ref name="clr" scoped="" ref="0x7f77012d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f77012cb020" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f77012cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012cb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012cb530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012cb6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012cb850"/>
        <function-ref name="get" scoped="" ref="0x7f77012cb9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012cbb70"/>
        <function-ref name="set" scoped="" ref="0x7f77012cbd00"/>
        <function-ref name="clr" scoped="" ref="0x7f77012ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f77012bf060" loc="80:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f77012bf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012bf3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012bf570"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012bf700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012bf890"/>
        <function-ref name="get" scoped="" ref="0x7f77012bfa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012bfbb0"/>
        <function-ref name="set" scoped="" ref="0x7f77012bfd40"/>
        <function-ref name="clr" scoped="" ref="0x7f77012be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f77012b2020" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f77012b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012b23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012b2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012b26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012b2850"/>
        <function-ref name="get" scoped="" ref="0x7f77012b29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012b2b70"/>
        <function-ref name="set" scoped="" ref="0x7f77012b2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f77012b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f77012e1b20" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f77012e1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012e0020"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012e01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012e0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012e04d0"/>
        <function-ref name="get" scoped="" ref="0x7f77012e0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012e07f0"/>
        <function-ref name="set" scoped="" ref="0x7f77012e0980"/>
        <function-ref name="clr" scoped="" ref="0x7f77012e0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f77012d5990" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f77012d5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012d5d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012d4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012d41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012d4340"/>
        <function-ref name="get" scoped="" ref="0x7f77012d44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012d4660"/>
        <function-ref name="set" scoped="" ref="0x7f77012d47f0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012d4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f77012c8990" loc="72:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f77012c8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012c8d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012c7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012c71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012c7340"/>
        <function-ref name="get" scoped="" ref="0x7f77012c74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012c7660"/>
        <function-ref name="set" scoped="" ref="0x7f77012c77f0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012c7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f77012bc990" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f77012bc990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012bcd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012bb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012bb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012bb340"/>
        <function-ref name="get" scoped="" ref="0x7f77012bb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012bb660"/>
        <function-ref name="set" scoped="" ref="0x7f77012bb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012bb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f77012a9990" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f77012a9990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012a9d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012a8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012a81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012a8340"/>
        <function-ref name="get" scoped="" ref="0x7f77012a84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012a8660"/>
        <function-ref name="set" scoped="" ref="0x7f77012a87f0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012a8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f77012a3cb0" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f77012a3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012a20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012a2230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012a23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012a2550"/>
        <function-ref name="get" scoped="" ref="0x7f77012a26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012a2870"/>
        <function-ref name="set" scoped="" ref="0x7f77012a2a00"/>
        <function-ref name="clr" scoped="" ref="0x7f77012a2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH0" ref="0x7f770129f670" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH0" scoped="" ref="0x7f770129f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770129f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770129fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f770129fd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770129e020"/>
        <function-ref name="get" scoped="" ref="0x7f770129e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770129e340"/>
        <function-ref name="set" scoped="" ref="0x7f770129e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f770129e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f77012b9020" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f77012b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012b93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012b9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012b96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012b9850"/>
        <function-ref name="get" scoped="" ref="0x7f77012b99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012b9b70"/>
        <function-ref name="set" scoped="" ref="0x7f77012b9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f77012b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH5" ref="0x7f7701299670" loc="115:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH5" scoped="" ref="0x7f7701299670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012999f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701299b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701299d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701297020"/>
        <function-ref name="get" scoped="" ref="0x7f77012971b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701297340"/>
        <function-ref name="set" scoped="" ref="0x7f77012974d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701297660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ1" ref="0x7f7701293350" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ1" scoped="" ref="0x7f7701293350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012936d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701293860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012939f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701293b80"/>
        <function-ref name="get" scoped="" ref="0x7f7701293d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701292020"/>
        <function-ref name="set" scoped="" ref="0x7f77012921b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701292340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ4" ref="0x7f7701290cb0" loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ4" scoped="" ref="0x7f7701290cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770128f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770128f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f770128f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770128f550"/>
        <function-ref name="get" scoped="" ref="0x7f770128f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770128f870"/>
        <function-ref name="set" scoped="" ref="0x7f770128fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f770128fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK3" ref="0x7f7701287350" loc="131:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK3" scoped="" ref="0x7f7701287350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012876d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701287860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012879f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701287b80"/>
        <function-ref name="get" scoped="" ref="0x7f7701287d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701286020"/>
        <function-ref name="set" scoped="" ref="0x7f77012861b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701286340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK6" ref="0x7f7701284cb0" loc="134:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK6" scoped="" ref="0x7f7701284cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012830a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701283230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012833c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701283550"/>
        <function-ref name="get" scoped="" ref="0x7f77012836e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701283870"/>
        <function-ref name="set" scoped="" ref="0x7f7701283a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701283b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL0" ref="0x7f7701281350" loc="137:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL0" scoped="" ref="0x7f7701281350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012816d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701281860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012819f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701281b80"/>
        <function-ref name="get" scoped="" ref="0x7f7701281d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701280020"/>
        <function-ref name="set" scoped="" ref="0x7f77012801b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701280340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL5" ref="0x7f770127a350" loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL5" scoped="" ref="0x7f770127a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770127a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770127a860"/>
        <function-ref name="toggle" scoped="" ref="0x7f770127a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770127ab80"/>
        <function-ref name="get" scoped="" ref="0x7f770127ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701279020"/>
        <function-ref name="set" scoped="" ref="0x7f77012791b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701279340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f77012dd350" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f77012dd350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012dd6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012dd860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012dd9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012ddb80"/>
        <function-ref name="get" scoped="" ref="0x7f77012ddd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012dc020"/>
        <function-ref name="set" scoped="" ref="0x7f77012dc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012dc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f77012d0350" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f77012d0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012d06d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012d0860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012d09f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012d0b80"/>
        <function-ref name="get" scoped="" ref="0x7f77012d0d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012cf020"/>
        <function-ref name="set" scoped="" ref="0x7f77012cf1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012cf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f77012a5670" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f77012a5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012a59f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012a5b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012a5d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012a4020"/>
        <function-ref name="get" scoped="" ref="0x7f77012a41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012a4340"/>
        <function-ref name="set" scoped="" ref="0x7f77012a44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012a4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f77012ce990" loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f77012ce990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012ced10"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012cd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012cd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012cd340"/>
        <function-ref name="get" scoped="" ref="0x7f77012cd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012cd660"/>
        <function-ref name="set" scoped="" ref="0x7f77012cd7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012cd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f77012c2b20" loc="78:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f77012c2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012c1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012c11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012c1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012c14d0"/>
        <function-ref name="get" scoped="" ref="0x7f77012c1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012c17f0"/>
        <function-ref name="set" scoped="" ref="0x7f77012c1980"/>
        <function-ref name="clr" scoped="" ref="0x7f77012c1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f77012b6990" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f77012b6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012b6d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012b4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012b41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012b4340"/>
        <function-ref name="get" scoped="" ref="0x7f77012b44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012b4660"/>
        <function-ref name="set" scoped="" ref="0x7f77012b47f0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012b4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f77012ab350" loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f77012ab350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012ab6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012ab860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012ab9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012abb80"/>
        <function-ref name="get" scoped="" ref="0x7f77012abd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012aa020"/>
        <function-ref name="set" scoped="" ref="0x7f77012aa1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012aa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH3" ref="0x7f770129b020" loc="113:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH3" scoped="" ref="0x7f770129b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770129b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770129b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f770129b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770129b850"/>
        <function-ref name="get" scoped="" ref="0x7f770129b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770129bb70"/>
        <function-ref name="set" scoped="" ref="0x7f770129bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f770129a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ7" ref="0x7f770128c670" loc="126:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ7" scoped="" ref="0x7f770128c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770128c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770128cb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f770128cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770128b020"/>
        <function-ref name="get" scoped="" ref="0x7f770128b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770128b340"/>
        <function-ref name="set" scoped="" ref="0x7f770128b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f770128b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK1" ref="0x7f770128acb0" loc="129:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK1" scoped="" ref="0x7f770128acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012890a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701289230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012893c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701289550"/>
        <function-ref name="get" scoped="" ref="0x7f77012896e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701289870"/>
        <function-ref name="set" scoped="" ref="0x7f7701289a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701289b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL3" ref="0x7f770127ecb0" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL3" scoped="" ref="0x7f770127ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770127d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770127d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f770127d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770127d550"/>
        <function-ref name="get" scoped="" ref="0x7f770127d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770127d870"/>
        <function-ref name="set" scoped="" ref="0x7f770127da00"/>
        <function-ref name="clr" scoped="" ref="0x7f770127db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ2" ref="0x7f7701292670" loc="121:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ2" scoped="" ref="0x7f7701292670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012929f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701292b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701292d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701291020"/>
        <function-ref name="get" scoped="" ref="0x7f77012911b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701291340"/>
        <function-ref name="set" scoped="" ref="0x7f77012914d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701291660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f77012dacb0" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f77012dacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012d90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012d9230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012d93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012d9550"/>
        <function-ref name="get" scoped="" ref="0x7f77012d96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012d9870"/>
        <function-ref name="set" scoped="" ref="0x7f77012d9a00"/>
        <function-ref name="clr" scoped="" ref="0x7f77012d9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK4" ref="0x7f7701286670" loc="132:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK4" scoped="" ref="0x7f7701286670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012869f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701286b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701286d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701285020"/>
        <function-ref name="get" scoped="" ref="0x7f77012851b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701285340"/>
        <function-ref name="set" scoped="" ref="0x7f77012854d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701285660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL6" ref="0x7f7701279670" loc="143:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL6" scoped="" ref="0x7f7701279670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012799f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701279b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701279d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701278020"/>
        <function-ref name="get" scoped="" ref="0x7f77012781b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701278340"/>
        <function-ref name="set" scoped="" ref="0x7f77012784d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701278660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f77012d7350" loc="59:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f77012d7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012d76d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012d7860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012d79f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012d7b80"/>
        <function-ref name="get" scoped="" ref="0x7f77012d7d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012d6020"/>
        <function-ref name="set" scoped="" ref="0x7f77012d61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012d6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f77012ca350" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f77012ca350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012ca6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012ca860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012ca9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012cab80"/>
        <function-ref name="get" scoped="" ref="0x7f77012cad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012c9020"/>
        <function-ref name="set" scoped="" ref="0x7f77012c91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012c9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f77012be350" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f77012be350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012be6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012be860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012be9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012beb80"/>
        <function-ref name="get" scoped="" ref="0x7f77012bed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012bd020"/>
        <function-ref name="set" scoped="" ref="0x7f77012bd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012bd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f77012b1350" loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f77012b1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012b16d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012b1860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012b19f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012b1b80"/>
        <function-ref name="get" scoped="" ref="0x7f77012b1d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012b0020"/>
        <function-ref name="set" scoped="" ref="0x7f77012b01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012b0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f77012e0e40" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f77012e0e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012df1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012df370"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012df500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012df690"/>
        <function-ref name="get" scoped="" ref="0x7f77012df820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012df9b0"/>
        <function-ref name="set" scoped="" ref="0x7f77012dfb40"/>
        <function-ref name="clr" scoped="" ref="0x7f77012dfcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f77012d4cb0" loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f77012d4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012d3180"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012d3310"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012d34a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012d3630"/>
        <function-ref name="get" scoped="" ref="0x7f77012d37c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012d3950"/>
        <function-ref name="set" scoped="" ref="0x7f77012d3ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012d3c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f77012c7cb0" loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f77012c7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012c60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012c6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012c63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012c6550"/>
        <function-ref name="get" scoped="" ref="0x7f77012c66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012c6870"/>
        <function-ref name="set" scoped="" ref="0x7f77012c6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f77012c6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f77012a8cb0" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f77012a8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012a70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012a7230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012a73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012a7550"/>
        <function-ref name="get" scoped="" ref="0x7f77012a76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012a7870"/>
        <function-ref name="set" scoped="" ref="0x7f77012a7a00"/>
        <function-ref name="clr" scoped="" ref="0x7f77012a7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH1" ref="0x7f770129e990" loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH1" scoped="" ref="0x7f770129e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770129ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f770129d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f770129d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770129d340"/>
        <function-ref name="get" scoped="" ref="0x7f770129d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770129d660"/>
        <function-ref name="set" scoped="" ref="0x7f770129d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f770129d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f77012c4350" loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f77012c4350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012c48d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012c4a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012c4bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012c4d80"/>
        <function-ref name="get" scoped="" ref="0x7f77012c3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012c31b0"/>
        <function-ref name="set" scoped="" ref="0x7f77012c3340"/>
        <function-ref name="clr" scoped="" ref="0x7f77012c34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f77012b8350" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f77012b8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012b86d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012b8860"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012b89f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012b8b80"/>
        <function-ref name="get" scoped="" ref="0x7f77012b8d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012b7020"/>
        <function-ref name="set" scoped="" ref="0x7f77012b71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012b7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f77012aecb0" loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f77012aecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012ad0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012ad230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012ad3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012ad550"/>
        <function-ref name="get" scoped="" ref="0x7f77012ad6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012ad870"/>
        <function-ref name="set" scoped="" ref="0x7f77012ada00"/>
        <function-ref name="clr" scoped="" ref="0x7f77012adb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f77012a1020" loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f77012a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012a13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012a1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012a16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012a1850"/>
        <function-ref name="get" scoped="" ref="0x7f77012a19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012a1b70"/>
        <function-ref name="set" scoped="" ref="0x7f77012a1d00"/>
        <function-ref name="clr" scoped="" ref="0x7f77012a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH6" ref="0x7f7701297990" loc="116:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH6" scoped="" ref="0x7f7701297990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701297d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701296020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012961b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701296340"/>
        <function-ref name="get" scoped="" ref="0x7f77012964d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701296660"/>
        <function-ref name="set" scoped="" ref="0x7f77012967f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701296980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ5" ref="0x7f770128e020" loc="124:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ5" scoped="" ref="0x7f770128e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770128e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770128e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f770128e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770128e850"/>
        <function-ref name="get" scoped="" ref="0x7f770128e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770128eb70"/>
        <function-ref name="set" scoped="" ref="0x7f770128ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f770128d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK7" ref="0x7f7701282020" loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK7" scoped="" ref="0x7f7701282020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012823a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701282530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012826c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701282850"/>
        <function-ref name="get" scoped="" ref="0x7f77012829e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701282b70"/>
        <function-ref name="set" scoped="" ref="0x7f7701282d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701281020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL1" ref="0x7f7701280670" loc="138:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL1" scoped="" ref="0x7f7701280670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012809f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701280b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701280d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770127f020"/>
        <function-ref name="get" scoped="" ref="0x7f770127f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770127f340"/>
        <function-ref name="set" scoped="" ref="0x7f770127f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f770127f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f77012dc670" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f77012dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012dc9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012dcb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012dcd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012db020"/>
        <function-ref name="get" scoped="" ref="0x7f77012db1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012db340"/>
        <function-ref name="set" scoped="" ref="0x7f77012db4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012db660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f77012cf670" loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f77012cf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012cf9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012cfb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012cfd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012ce020"/>
        <function-ref name="get" scoped="" ref="0x7f77012ce1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012ce340"/>
        <function-ref name="set" scoped="" ref="0x7f77012ce4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012ce660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f77012b0670" loc="94:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f77012b0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012b09f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012b0b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012b0d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012af020"/>
        <function-ref name="get" scoped="" ref="0x7f77012af1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012af340"/>
        <function-ref name="set" scoped="" ref="0x7f77012af4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012af660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f77012cdcb0" loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f77012cdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012cc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012cc230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012cc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012cc550"/>
        <function-ref name="get" scoped="" ref="0x7f77012cc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012cc870"/>
        <function-ref name="set" scoped="" ref="0x7f77012cca00"/>
        <function-ref name="clr" scoped="" ref="0x7f77012ccb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f77012c1e40" loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f77012c1e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012c01e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012c0370"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012c0500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012c0690"/>
        <function-ref name="get" scoped="" ref="0x7f77012c0820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012c09b0"/>
        <function-ref name="set" scoped="" ref="0x7f77012c0b40"/>
        <function-ref name="clr" scoped="" ref="0x7f77012c0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f77012b4cb0" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f77012b4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012b30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012b3230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012b33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012b3550"/>
        <function-ref name="get" scoped="" ref="0x7f77012b36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012b3870"/>
        <function-ref name="set" scoped="" ref="0x7f77012b3a00"/>
        <function-ref name="clr" scoped="" ref="0x7f77012b3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f77012aa670" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f77012aa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012aa9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012aab80"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012aad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012a9020"/>
        <function-ref name="get" scoped="" ref="0x7f77012a91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012a9340"/>
        <function-ref name="set" scoped="" ref="0x7f77012a94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012a9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f77012e47f0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f77012e47f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012e4b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012e4d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012e1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012e11b0"/>
        <function-ref name="get" scoped="" ref="0x7f77012e1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012e14d0"/>
        <function-ref name="set" scoped="" ref="0x7f77012e1660"/>
        <function-ref name="clr" scoped="" ref="0x7f77012e17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f77012d6670" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f77012d6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012d69f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012d6b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012d6d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012d5020"/>
        <function-ref name="get" scoped="" ref="0x7f77012d51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012d5340"/>
        <function-ref name="set" scoped="" ref="0x7f77012d54d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012d5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f77012c9670" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f77012c9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012c99f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012c9b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012c9d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012c8020"/>
        <function-ref name="get" scoped="" ref="0x7f77012c81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012c8340"/>
        <function-ref name="set" scoped="" ref="0x7f77012c84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012c8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f77012bd670" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f77012bd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012bd9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012bdb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012bdd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012bc020"/>
        <function-ref name="get" scoped="" ref="0x7f77012bc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012bc340"/>
        <function-ref name="set" scoped="" ref="0x7f77012bc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012bc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f77012a4990" loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f77012a4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012a4d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012a3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012a31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012a3340"/>
        <function-ref name="get" scoped="" ref="0x7f77012a34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012a3660"/>
        <function-ref name="set" scoped="" ref="0x7f77012a37f0"/>
        <function-ref name="clr" scoped="" ref="0x7f77012a3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH4" ref="0x7f770129a350" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH4" scoped="" ref="0x7f770129a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770129a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770129a860"/>
        <function-ref name="toggle" scoped="" ref="0x7f770129a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770129ab80"/>
        <function-ref name="get" scoped="" ref="0x7f770129ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701299020"/>
        <function-ref name="set" scoped="" ref="0x7f77012991b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701299340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ0" ref="0x7f7701294020" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ0" scoped="" ref="0x7f7701294020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012943a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701294530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012946c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701294850"/>
        <function-ref name="get" scoped="" ref="0x7f77012949e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701294b70"/>
        <function-ref name="set" scoped="" ref="0x7f7701294d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701293020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f77012bbcb0" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f77012bbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012ba0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012ba230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012ba3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012ba550"/>
        <function-ref name="get" scoped="" ref="0x7f77012ba6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012ba870"/>
        <function-ref name="set" scoped="" ref="0x7f77012baa00"/>
        <function-ref name="clr" scoped="" ref="0x7f77012bab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ3" ref="0x7f7701291990" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ3" scoped="" ref="0x7f7701291990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701291d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701290020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012901b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701290340"/>
        <function-ref name="get" scoped="" ref="0x7f77012904d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701290660"/>
        <function-ref name="set" scoped="" ref="0x7f77012907f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701290980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK2" ref="0x7f7701288020" loc="130:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK2" scoped="" ref="0x7f7701288020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012883a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701288530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012886c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701288850"/>
        <function-ref name="get" scoped="" ref="0x7f77012889e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701288b70"/>
        <function-ref name="set" scoped="" ref="0x7f7701288d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701287020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK5" ref="0x7f7701285990" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK5" scoped="" ref="0x7f7701285990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701285d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701284020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012841b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701284340"/>
        <function-ref name="get" scoped="" ref="0x7f77012844d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701284660"/>
        <function-ref name="set" scoped="" ref="0x7f77012847f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701284980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL4" ref="0x7f770127b020" loc="141:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL4" scoped="" ref="0x7f770127b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770127b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770127b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f770127b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770127b850"/>
        <function-ref name="get" scoped="" ref="0x7f770127b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770127bb70"/>
        <function-ref name="set" scoped="" ref="0x7f770127bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f770127a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL7" ref="0x7f7701278990" loc="144:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL7" scoped="" ref="0x7f7701278990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701278d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701277020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012771b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701277340"/>
        <function-ref name="get" scoped="" ref="0x7f77012774d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701277660"/>
        <function-ref name="set" scoped="" ref="0x7f77012777f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701277980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f77012c5020" loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f77012c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012c53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012c5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012c56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012c5850"/>
        <function-ref name="get" scoped="" ref="0x7f77012c59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012c5b70"/>
        <function-ref name="set" scoped="" ref="0x7f77012c5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f77012c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f77012de060" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f77012de060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012de3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012de570"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012de700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012de890"/>
        <function-ref name="get" scoped="" ref="0x7f77012dea20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012debb0"/>
        <function-ref name="set" scoped="" ref="0x7f77012ded40"/>
        <function-ref name="clr" scoped="" ref="0x7f77012dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f77012d1020" loc="63:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f77012d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012d13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012d1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012d16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012d1850"/>
        <function-ref name="get" scoped="" ref="0x7f77012d19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012d1b70"/>
        <function-ref name="set" scoped="" ref="0x7f77012d1d00"/>
        <function-ref name="clr" scoped="" ref="0x7f77012d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f7701272da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f7701272da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701271180"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701271310"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012714a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701271630"/>
        <function-ref name="get" scoped="" ref="0x7f77012717c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701271950"/>
        <function-ref name="set" scoped="" ref="0x7f7701271ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701271c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f770126d440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f770126d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770126d7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770126d950"/>
        <function-ref name="toggle" scoped="" ref="0x7f770126dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770126dc70"/>
        <function-ref name="get" scoped="" ref="0x7f770126de00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770126c020"/>
        <function-ref name="set" scoped="" ref="0x7f770126c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f770126c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f7701274a80" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f7701274a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701274e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701273020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012731b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701273340"/>
        <function-ref name="get" scoped="" ref="0x7f77012734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701273660"/>
        <function-ref name="set" scoped="" ref="0x7f77012737f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701273980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f7701270020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f7701270020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012703a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701270530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012706c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701270850"/>
        <function-ref name="get" scoped="" ref="0x7f77012709e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701270b70"/>
        <function-ref name="set" scoped="" ref="0x7f7701270d00"/>
        <function-ref name="clr" scoped="" ref="0x7f770126e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f770126c5d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f770126c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770126c950"/>
        <function-ref name="isInput" scoped="" ref="0x7f770126cae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770126cc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770126ce00"/>
        <function-ref name="get" scoped="" ref="0x7f770126b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770126b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f770126b340"/>
        <function-ref name="clr" scoped="" ref="0x7f770126b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f7701273c10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f7701273c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701272020"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012721b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701272340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012724d0"/>
        <function-ref name="get" scoped="" ref="0x7f7701272660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012727f0"/>
        <function-ref name="set" scoped="" ref="0x7f7701272980"/>
        <function-ref name="clr" scoped="" ref="0x7f7701272b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f770126e2b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f770126e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770126e630"/>
        <function-ref name="isInput" scoped="" ref="0x7f770126e7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770126e950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770126eae0"/>
        <function-ref name="get" scoped="" ref="0x7f770126ec70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770126ee00"/>
        <function-ref name="set" scoped="" ref="0x7f770126d020"/>
        <function-ref name="clr" scoped="" ref="0x7f770126d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f770126b760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f770126b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770126bae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770126bc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f770126be00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770126a020"/>
        <function-ref name="get" scoped="" ref="0x7f770126a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770126a340"/>
        <function-ref name="set" scoped="" ref="0x7f770126a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f770126a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77009bf270" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77009bf270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77009bf5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77009bf780"/>
        <function-ref name="toggle" scoped="" ref="0x7f77009bf910"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77009bfaa0"/>
        <function-ref name="get" scoped="" ref="0x7f77009bfc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77009bfdc0"/>
        <function-ref name="set" scoped="" ref="0x7f77009be020"/>
        <function-ref name="clr" scoped="" ref="0x7f77009be1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77009bc460" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77009bc460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77009bc7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77009bc970"/>
        <function-ref name="toggle" scoped="" ref="0x7f77009bcb00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77009bcc90"/>
        <function-ref name="get" scoped="" ref="0x7f77009bce20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77009bb020"/>
        <function-ref name="set" scoped="" ref="0x7f77009bb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f77009bb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77009b96d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77009b96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77009b9a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f77009b9be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77009b9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77009b8020"/>
        <function-ref name="get" scoped="" ref="0x7f77009b81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77009b8340"/>
        <function-ref name="set" scoped="" ref="0x7f77009b84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77009b8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77009b69b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77009b69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77009b6d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f77009b5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77009b51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77009b5340"/>
        <function-ref name="get" scoped="" ref="0x7f77009b54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77009b5660"/>
        <function-ref name="set" scoped="" ref="0x7f77009b57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f77009b5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77009b3e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77009b3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77009b21c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77009b2350"/>
        <function-ref name="toggle" scoped="" ref="0x7f77009b24e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77009b2670"/>
        <function-ref name="get" scoped="" ref="0x7f77009b2800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77009b2990"/>
        <function-ref name="set" scoped="" ref="0x7f77009b2b20"/>
        <function-ref name="clr" scoped="" ref="0x7f77009b2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77009af0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77009af0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77009af420"/>
        <function-ref name="isInput" scoped="" ref="0x7f77009af5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77009af740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77009af8d0"/>
        <function-ref name="get" scoped="" ref="0x7f77009afa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77009afbf0"/>
        <function-ref name="set" scoped="" ref="0x7f77009afd80"/>
        <function-ref name="clr" scoped="" ref="0x7f77009ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77009ab3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77009ab3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77009ab770"/>
        <function-ref name="isInput" scoped="" ref="0x7f77009ab900"/>
        <function-ref name="toggle" scoped="" ref="0x7f77009aba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77009abc20"/>
        <function-ref name="get" scoped="" ref="0x7f77009abdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77009aa020"/>
        <function-ref name="set" scoped="" ref="0x7f77009aa1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f77009aa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77009a86d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77009a86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77009a8a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f77009a8be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77009a8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77009a7020"/>
        <function-ref name="get" scoped="" ref="0x7f77009a71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77009a7340"/>
        <function-ref name="set" scoped="" ref="0x7f77009a74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77009a7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f7701261020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f7701261020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012613a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701261530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012616c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701261850"/>
        <function-ref name="get" scoped="" ref="0x7f77012619e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701261b70"/>
        <function-ref name="set" scoped="" ref="0x7f7701261d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701260020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f770125e5d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f770125e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770125e950"/>
        <function-ref name="isInput" scoped="" ref="0x7f770125eae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770125ec70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770125ee00"/>
        <function-ref name="get" scoped="" ref="0x7f770125d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770125d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f770125d340"/>
        <function-ref name="clr" scoped="" ref="0x7f770125d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f7701265d30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f7701265d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012630e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701263270"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701263400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701263590"/>
        <function-ref name="get" scoped="" ref="0x7f7701263720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012638b0"/>
        <function-ref name="set" scoped="" ref="0x7f7701263a40"/>
        <function-ref name="clr" scoped="" ref="0x7f7701263bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f77012602b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f77012602b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701260630"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012607c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701260950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701260ae0"/>
        <function-ref name="get" scoped="" ref="0x7f7701260c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701260e00"/>
        <function-ref name="set" scoped="" ref="0x7f770125f020"/>
        <function-ref name="clr" scoped="" ref="0x7f770125f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f770125d760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f770125d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770125dae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770125dc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f770125de00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770125c020"/>
        <function-ref name="get" scoped="" ref="0x7f770125c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770125c340"/>
        <function-ref name="set" scoped="" ref="0x7f770125c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f770125c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f7701263e60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f7701263e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701262210"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012623a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701262530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012626c0"/>
        <function-ref name="get" scoped="" ref="0x7f7701262850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012629e0"/>
        <function-ref name="set" scoped="" ref="0x7f7701262b70"/>
        <function-ref name="clr" scoped="" ref="0x7f7701262d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f770125f440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f770125f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770125f7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770125f950"/>
        <function-ref name="toggle" scoped="" ref="0x7f770125fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770125fc70"/>
        <function-ref name="get" scoped="" ref="0x7f770125fe00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770125e020"/>
        <function-ref name="set" scoped="" ref="0x7f770125e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f770125e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f770125c8f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f770125c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770125cc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f770125ce00"/>
        <function-ref name="toggle" scoped="" ref="0x7f770125b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770125b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f770125b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770125b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f770125b660"/>
        <function-ref name="clr" scoped="" ref="0x7f770125b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700954a60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700954a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700954de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700953020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77009531b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700953340"/>
        <function-ref name="get" scoped="" ref="0x7f77009534d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700953660"/>
        <function-ref name="set" scoped="" ref="0x7f77009537f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700953980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700951e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700951e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77009501c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700950350"/>
        <function-ref name="toggle" scoped="" ref="0x7f77009504e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700950670"/>
        <function-ref name="get" scoped="" ref="0x7f7700950800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700950990"/>
        <function-ref name="set" scoped="" ref="0x7f7700950b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7700950cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770094d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770094d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770094d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f770094d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770094d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770094d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f770094da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770094dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f770094dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f770094c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770094a3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770094a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770094a770"/>
        <function-ref name="isInput" scoped="" ref="0x7f770094a900"/>
        <function-ref name="toggle" scoped="" ref="0x7f770094aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770094ac20"/>
        <function-ref name="get" scoped="" ref="0x7f770094adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700949020"/>
        <function-ref name="set" scoped="" ref="0x7f77009491b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700949340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77009476d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77009476d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700947a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700947be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700947d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700946020"/>
        <function-ref name="get" scoped="" ref="0x7f77009461b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700946340"/>
        <function-ref name="set" scoped="" ref="0x7f77009464d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700946660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77009449b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77009449b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700944d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700943020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77009431b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700943340"/>
        <function-ref name="get" scoped="" ref="0x7f77009434d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700943660"/>
        <function-ref name="set" scoped="" ref="0x7f77009437f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700943980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700941e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700941e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770093f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770093f350"/>
        <function-ref name="toggle" scoped="" ref="0x7f770093f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770093f670"/>
        <function-ref name="get" scoped="" ref="0x7f770093f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770093f990"/>
        <function-ref name="set" scoped="" ref="0x7f770093fb20"/>
        <function-ref name="clr" scoped="" ref="0x7f770093fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770093c0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770093c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770093c420"/>
        <function-ref name="isInput" scoped="" ref="0x7f770093c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770093c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770093c8d0"/>
        <function-ref name="get" scoped="" ref="0x7f770093ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770093cbf0"/>
        <function-ref name="set" scoped="" ref="0x7f770093cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f770093b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f7701252440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f7701252440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012527c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701252950"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701252ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701252c70"/>
        <function-ref name="get" scoped="" ref="0x7f7701252e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701251020"/>
        <function-ref name="set" scoped="" ref="0x7f77012511b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701251340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f770124f8f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f770124f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770124fc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f770124fe00"/>
        <function-ref name="toggle" scoped="" ref="0x7f770124e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770124e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f770124e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770124e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f770124e660"/>
        <function-ref name="clr" scoped="" ref="0x7f770124e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f7701254020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f7701254020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012543a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701254530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012546c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701254850"/>
        <function-ref name="get" scoped="" ref="0x7f77012549e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701254b70"/>
        <function-ref name="set" scoped="" ref="0x7f7701254d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701253020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f77012515d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f77012515d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701251950"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701251ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701251c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701251e00"/>
        <function-ref name="get" scoped="" ref="0x7f7701250020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012501b0"/>
        <function-ref name="set" scoped="" ref="0x7f7701250340"/>
        <function-ref name="clr" scoped="" ref="0x7f77012504d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f770124ea80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f770124ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770124ee00"/>
        <function-ref name="isInput" scoped="" ref="0x7f770124d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f770124d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770124d340"/>
        <function-ref name="get" scoped="" ref="0x7f770124d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770124d660"/>
        <function-ref name="set" scoped="" ref="0x7f770124d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f770124d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f77012532b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f77012532b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701253630"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012537c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701253950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701253ae0"/>
        <function-ref name="get" scoped="" ref="0x7f7701253c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701253e00"/>
        <function-ref name="set" scoped="" ref="0x7f7701252020"/>
        <function-ref name="clr" scoped="" ref="0x7f77012521b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f7701250760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f7701250760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701250ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701250c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701250e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770124f020"/>
        <function-ref name="get" scoped="" ref="0x7f770124f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770124f340"/>
        <function-ref name="set" scoped="" ref="0x7f770124f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f770124f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f770124dc10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f770124dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770124c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f770124c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770124c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770124c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f770124c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770124c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f770124c980"/>
        <function-ref name="clr" scoped="" ref="0x7f770124cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77008e9c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77008e9c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77008e80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77008e8230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77008e83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77008e8550"/>
        <function-ref name="get" scoped="" ref="0x7f77008e86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77008e8870"/>
        <function-ref name="set" scoped="" ref="0x7f77008e8a00"/>
        <function-ref name="clr" scoped="" ref="0x7f77008e8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77008e6e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77008e6e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77008e51c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77008e5350"/>
        <function-ref name="toggle" scoped="" ref="0x7f77008e54e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77008e5670"/>
        <function-ref name="get" scoped="" ref="0x7f77008e5800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77008e5990"/>
        <function-ref name="set" scoped="" ref="0x7f77008e5b20"/>
        <function-ref name="clr" scoped="" ref="0x7f77008e5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77008e20a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77008e20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77008e2420"/>
        <function-ref name="isInput" scoped="" ref="0x7f77008e25b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77008e2740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77008e28d0"/>
        <function-ref name="get" scoped="" ref="0x7f77008e2a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77008e2bf0"/>
        <function-ref name="set" scoped="" ref="0x7f77008e2d80"/>
        <function-ref name="clr" scoped="" ref="0x7f77008e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77008df3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77008df3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77008df770"/>
        <function-ref name="isInput" scoped="" ref="0x7f77008df900"/>
        <function-ref name="toggle" scoped="" ref="0x7f77008dfa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77008dfc20"/>
        <function-ref name="get" scoped="" ref="0x7f77008dfdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77008de020"/>
        <function-ref name="set" scoped="" ref="0x7f77008de1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f77008de340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77008dc6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77008dc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77008dca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f77008dcbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77008dcd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77008db020"/>
        <function-ref name="get" scoped="" ref="0x7f77008db1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77008db340"/>
        <function-ref name="set" scoped="" ref="0x7f77008db4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77008db660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77008d99b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77008d99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77008d9d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f77008d8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77008d81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77008d8340"/>
        <function-ref name="get" scoped="" ref="0x7f77008d84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77008d8660"/>
        <function-ref name="set" scoped="" ref="0x7f77008d87f0"/>
        <function-ref name="clr" scoped="" ref="0x7f77008d8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77008d6e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77008d6e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77008d41c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77008d4350"/>
        <function-ref name="toggle" scoped="" ref="0x7f77008d44e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77008d4670"/>
        <function-ref name="get" scoped="" ref="0x7f77008d4800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77008d4990"/>
        <function-ref name="set" scoped="" ref="0x7f77008d4b20"/>
        <function-ref name="clr" scoped="" ref="0x7f77008d4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77008d10a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77008d10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77008d1420"/>
        <function-ref name="isInput" scoped="" ref="0x7f77008d15b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77008d1740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77008d18d0"/>
        <function-ref name="get" scoped="" ref="0x7f77008d1a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77008d1bf0"/>
        <function-ref name="set" scoped="" ref="0x7f77008d1d80"/>
        <function-ref name="clr" scoped="" ref="0x7f77008d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f7701243760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f7701243760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701243ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701243c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701243e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701242020"/>
        <function-ref name="get" scoped="" ref="0x7f77012421b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701242340"/>
        <function-ref name="set" scoped="" ref="0x7f77012424d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701242660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f7701240c10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f7701240c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770123e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f770123e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770123e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770123e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f770123e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770123e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f770123e980"/>
        <function-ref name="clr" scoped="" ref="0x7f770123eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f77012453f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f77012453f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701245770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701245900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701245a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701245c20"/>
        <function-ref name="get" scoped="" ref="0x7f7701245db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701244020"/>
        <function-ref name="set" scoped="" ref="0x7f77012441b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701244340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f77012428f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f77012428f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701242c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701242e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701241020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012411b0"/>
        <function-ref name="get" scoped="" ref="0x7f7701241340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012414d0"/>
        <function-ref name="set" scoped="" ref="0x7f7701241660"/>
        <function-ref name="clr" scoped="" ref="0x7f77012417f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f770123eda0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f770123eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770123d180"/>
        <function-ref name="isInput" scoped="" ref="0x7f770123d310"/>
        <function-ref name="toggle" scoped="" ref="0x7f770123d4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770123d630"/>
        <function-ref name="get" scoped="" ref="0x7f770123d7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770123d950"/>
        <function-ref name="set" scoped="" ref="0x7f770123dae0"/>
        <function-ref name="clr" scoped="" ref="0x7f770123dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f77012445d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f77012445d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701244950"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701244ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701244c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701244e00"/>
        <function-ref name="get" scoped="" ref="0x7f7701243020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012431b0"/>
        <function-ref name="set" scoped="" ref="0x7f7701243340"/>
        <function-ref name="clr" scoped="" ref="0x7f77012434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f7701241a80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f7701241a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701241e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701240020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012401b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701240340"/>
        <function-ref name="get" scoped="" ref="0x7f77012404d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701240660"/>
        <function-ref name="set" scoped="" ref="0x7f77012407f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701240980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f770123c020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f770123c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770123c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770123c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f770123c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770123c850"/>
        <function-ref name="get" scoped="" ref="0x7f770123c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770123cb70"/>
        <function-ref name="set" scoped="" ref="0x7f770123cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f770123b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770087ec90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770087ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770087d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770087d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f770087d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770087d550"/>
        <function-ref name="get" scoped="" ref="0x7f770087d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770087d870"/>
        <function-ref name="set" scoped="" ref="0x7f770087da00"/>
        <function-ref name="clr" scoped="" ref="0x7f770087db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770087be20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770087be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770087a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770087a350"/>
        <function-ref name="toggle" scoped="" ref="0x7f770087a4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770087a670"/>
        <function-ref name="get" scoped="" ref="0x7f770087a800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770087a990"/>
        <function-ref name="set" scoped="" ref="0x7f770087ab20"/>
        <function-ref name="clr" scoped="" ref="0x7f770087acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77008770a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77008770a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700877420"/>
        <function-ref name="isInput" scoped="" ref="0x7f77008775b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700877740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77008778d0"/>
        <function-ref name="get" scoped="" ref="0x7f7700877a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700877bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7700877d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7700876020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77008743f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77008743f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700874770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700874900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700874a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700874c20"/>
        <function-ref name="get" scoped="" ref="0x7f7700874db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700873020"/>
        <function-ref name="set" scoped="" ref="0x7f77008731b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700873340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77008716d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77008716d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700871a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700871be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700871d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700870020"/>
        <function-ref name="get" scoped="" ref="0x7f77008701b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700870340"/>
        <function-ref name="set" scoped="" ref="0x7f77008704d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700870660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770086e9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770086e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770086ed30"/>
        <function-ref name="isInput" scoped="" ref="0x7f770086d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f770086d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770086d340"/>
        <function-ref name="get" scoped="" ref="0x7f770086d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770086d660"/>
        <function-ref name="set" scoped="" ref="0x7f770086d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f770086d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770086be20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770086be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770086a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770086a350"/>
        <function-ref name="toggle" scoped="" ref="0x7f770086a4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770086a670"/>
        <function-ref name="get" scoped="" ref="0x7f770086a800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770086a990"/>
        <function-ref name="set" scoped="" ref="0x7f770086ab20"/>
        <function-ref name="clr" scoped="" ref="0x7f770086acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77008670a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77008670a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700867420"/>
        <function-ref name="isInput" scoped="" ref="0x7f77008675b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700867740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77008678d0"/>
        <function-ref name="get" scoped="" ref="0x7f7700867a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700867bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7700867d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7700865020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f7701234a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f7701234a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701234e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701232020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012321b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701232340"/>
        <function-ref name="get" scoped="" ref="0x7f77012324d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701232660"/>
        <function-ref name="set" scoped="" ref="0x7f77012327f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701232980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f770122f020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f770122f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770122f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770122f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f770122f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770122f850"/>
        <function-ref name="get" scoped="" ref="0x7f770122f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770122fb70"/>
        <function-ref name="set" scoped="" ref="0x7f770122fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f770122e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f77012367a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f77012367a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701236b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701236cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701236e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701235020"/>
        <function-ref name="get" scoped="" ref="0x7f77012351b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701235340"/>
        <function-ref name="set" scoped="" ref="0x7f77012354d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701235660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f7701232c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f7701232c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701231020"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012311b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701231340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012314d0"/>
        <function-ref name="get" scoped="" ref="0x7f7701231660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012317f0"/>
        <function-ref name="set" scoped="" ref="0x7f7701231980"/>
        <function-ref name="clr" scoped="" ref="0x7f7701231b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f770122e2b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f770122e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770122e630"/>
        <function-ref name="isInput" scoped="" ref="0x7f770122e7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770122e950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770122eae0"/>
        <function-ref name="get" scoped="" ref="0x7f770122ec70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770122ee00"/>
        <function-ref name="set" scoped="" ref="0x7f770122d020"/>
        <function-ref name="clr" scoped="" ref="0x7f770122d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f77012358f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f77012358f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701235c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701235e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701234020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012341b0"/>
        <function-ref name="get" scoped="" ref="0x7f7701234340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012344d0"/>
        <function-ref name="set" scoped="" ref="0x7f7701234660"/>
        <function-ref name="clr" scoped="" ref="0x7f77012347f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f7701231da0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f7701231da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701230180"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701230310"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012304a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701230630"/>
        <function-ref name="get" scoped="" ref="0x7f77012307c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701230950"/>
        <function-ref name="set" scoped="" ref="0x7f7701230ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701230c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f770122d440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f770122d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770122d7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770122d950"/>
        <function-ref name="toggle" scoped="" ref="0x7f770122dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770122dc70"/>
        <function-ref name="get" scoped="" ref="0x7f770122de00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770122c020"/>
        <function-ref name="set" scoped="" ref="0x7f770122c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f770122c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700813c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700813c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77008120a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700812230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77008123c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700812550"/>
        <function-ref name="get" scoped="" ref="0x7f77008126e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700812870"/>
        <function-ref name="set" scoped="" ref="0x7f7700812a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7700812b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700810e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700810e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770080f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770080f350"/>
        <function-ref name="toggle" scoped="" ref="0x7f770080f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770080f670"/>
        <function-ref name="get" scoped="" ref="0x7f770080f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770080f990"/>
        <function-ref name="set" scoped="" ref="0x7f770080fb20"/>
        <function-ref name="clr" scoped="" ref="0x7f770080fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770080c0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770080c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770080c420"/>
        <function-ref name="isInput" scoped="" ref="0x7f770080c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770080c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770080c8d0"/>
        <function-ref name="get" scoped="" ref="0x7f770080ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770080cbf0"/>
        <function-ref name="set" scoped="" ref="0x7f770080cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f770080b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77008093f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77008093f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700809770"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700809900"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700809a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700809c20"/>
        <function-ref name="get" scoped="" ref="0x7f7700809db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700808020"/>
        <function-ref name="set" scoped="" ref="0x7f77008081b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700808340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77008066d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77008066d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700806a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700806be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700806d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700805020"/>
        <function-ref name="get" scoped="" ref="0x7f77008051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700805340"/>
        <function-ref name="set" scoped="" ref="0x7f77008054d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700805660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77008039b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77008039b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700803d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700802020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77008021b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700802340"/>
        <function-ref name="get" scoped="" ref="0x7f77008024d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700802660"/>
        <function-ref name="set" scoped="" ref="0x7f77008027f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700802980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700800e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700800e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77007ff1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77007ff350"/>
        <function-ref name="toggle" scoped="" ref="0x7f77007ff4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77007ff670"/>
        <function-ref name="get" scoped="" ref="0x7f77007ff800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77007ff990"/>
        <function-ref name="set" scoped="" ref="0x7f77007ffb20"/>
        <function-ref name="clr" scoped="" ref="0x7f77007ffcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77007fc0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77007fc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77007fc420"/>
        <function-ref name="isInput" scoped="" ref="0x7f77007fc5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77007fc740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77007fc8d0"/>
        <function-ref name="get" scoped="" ref="0x7f77007fca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77007fcbf0"/>
        <function-ref name="set" scoped="" ref="0x7f77007fcd80"/>
        <function-ref name="clr" scoped="" ref="0x7f77007fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f7701224da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f7701224da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701223180"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701223310"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012234a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701223630"/>
        <function-ref name="get" scoped="" ref="0x7f77012237c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701223950"/>
        <function-ref name="set" scoped="" ref="0x7f7701223ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701223c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f7701220440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f7701220440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012207c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701220950"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701220ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701220c70"/>
        <function-ref name="get" scoped="" ref="0x7f7701220e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770121f020"/>
        <function-ref name="set" scoped="" ref="0x7f770121f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f770121f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f7701226a20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f7701226a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701226da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701225020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012251b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701225340"/>
        <function-ref name="get" scoped="" ref="0x7f77012254d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701225660"/>
        <function-ref name="set" scoped="" ref="0x7f77012257f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701225980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f7701222020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f7701222020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012223a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701222530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012226c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701222850"/>
        <function-ref name="get" scoped="" ref="0x7f77012229e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701222b70"/>
        <function-ref name="set" scoped="" ref="0x7f7701222d00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701221020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f770121f5d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f770121f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770121f950"/>
        <function-ref name="isInput" scoped="" ref="0x7f770121fae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770121fc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770121fe00"/>
        <function-ref name="get" scoped="" ref="0x7f770121e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770121e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f770121e340"/>
        <function-ref name="clr" scoped="" ref="0x7f770121e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f7701225c10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f7701225c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701224020"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012241b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701224340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77012244d0"/>
        <function-ref name="get" scoped="" ref="0x7f7701224660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77012247f0"/>
        <function-ref name="set" scoped="" ref="0x7f7701224980"/>
        <function-ref name="clr" scoped="" ref="0x7f7701224b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f77012212b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f77012212b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701221630"/>
        <function-ref name="isInput" scoped="" ref="0x7f77012217c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701221950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701221ae0"/>
        <function-ref name="get" scoped="" ref="0x7f7701221c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701221e00"/>
        <function-ref name="set" scoped="" ref="0x7f7701220020"/>
        <function-ref name="clr" scoped="" ref="0x7f77012201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f770121e760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f770121e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770121eae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770121ec70"/>
        <function-ref name="toggle" scoped="" ref="0x7f770121ee00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770121d020"/>
        <function-ref name="get" scoped="" ref="0x7f770121d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770121d340"/>
        <function-ref name="set" scoped="" ref="0x7f770121d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f770121d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77007a8c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77007a8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77007a70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77007a7230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77007a73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77007a7550"/>
        <function-ref name="get" scoped="" ref="0x7f77007a76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77007a7870"/>
        <function-ref name="set" scoped="" ref="0x7f77007a7a00"/>
        <function-ref name="clr" scoped="" ref="0x7f77007a7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77007a5e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77007a5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77007a41c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77007a4350"/>
        <function-ref name="toggle" scoped="" ref="0x7f77007a44e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77007a4670"/>
        <function-ref name="get" scoped="" ref="0x7f77007a4800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77007a4990"/>
        <function-ref name="set" scoped="" ref="0x7f77007a4b20"/>
        <function-ref name="clr" scoped="" ref="0x7f77007a4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77007a10a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77007a10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77007a1420"/>
        <function-ref name="isInput" scoped="" ref="0x7f77007a15b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77007a1740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77007a18d0"/>
        <function-ref name="get" scoped="" ref="0x7f77007a1a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77007a1bf0"/>
        <function-ref name="set" scoped="" ref="0x7f77007a1d80"/>
        <function-ref name="clr" scoped="" ref="0x7f77007a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770079e3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770079e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770079e770"/>
        <function-ref name="isInput" scoped="" ref="0x7f770079e900"/>
        <function-ref name="toggle" scoped="" ref="0x7f770079ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770079ec20"/>
        <function-ref name="get" scoped="" ref="0x7f770079edb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770079d020"/>
        <function-ref name="set" scoped="" ref="0x7f770079d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f770079d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770079b6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770079b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770079ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f770079bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770079bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770079a020"/>
        <function-ref name="get" scoped="" ref="0x7f770079a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770079a340"/>
        <function-ref name="set" scoped="" ref="0x7f770079a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f770079a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77007989b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77007989b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700798d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700797020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77007971b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700797340"/>
        <function-ref name="get" scoped="" ref="0x7f77007974d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700797660"/>
        <function-ref name="set" scoped="" ref="0x7f77007977f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7700797980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7700795e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7700795e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77007941c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7700794350"/>
        <function-ref name="toggle" scoped="" ref="0x7f77007944e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7700794670"/>
        <function-ref name="get" scoped="" ref="0x7f7700794800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700794990"/>
        <function-ref name="set" scoped="" ref="0x7f7700794b20"/>
        <function-ref name="clr" scoped="" ref="0x7f7700794cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77007910a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77007910a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7700791420"/>
        <function-ref name="isInput" scoped="" ref="0x7f77007915b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7700791740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77007918d0"/>
        <function-ref name="get" scoped="" ref="0x7f7700791a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7700791bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7700791d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7700790020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7701216160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7701216160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012164e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701216670"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701216800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701216990"/>
        <function-ref name="get" scoped="" ref="0x7f7701216b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701216cb0"/>
        <function-ref name="set" scoped="" ref="0x7f7701216e40"/>
        <function-ref name="clr" scoped="" ref="0x7f7701215020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7701212c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7701212c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012100a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701210230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012103c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701210550"/>
        <function-ref name="get" scoped="" ref="0x7f77012106e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701210870"/>
        <function-ref name="set" scoped="" ref="0x7f7701210a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701210b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770120c6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770120c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770120ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f770120cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770120cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770120b020"/>
        <function-ref name="get" scoped="" ref="0x7f770120b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770120b340"/>
        <function-ref name="set" scoped="" ref="0x7f770120b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f770120b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7701206160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7701206160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012064e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701206670"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701206800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701206990"/>
        <function-ref name="get" scoped="" ref="0x7f7701206b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701206cb0"/>
        <function-ref name="set" scoped="" ref="0x7f7701206e40"/>
        <function-ref name="clr" scoped="" ref="0x7f7701205020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7701202c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7701202c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77012010a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701201230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77012013c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701201550"/>
        <function-ref name="get" scoped="" ref="0x7f77012016e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701201870"/>
        <function-ref name="set" scoped="" ref="0x7f7701201a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701201b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77011fc6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77011fc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011fca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f77011fcbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011fcd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77011fb020"/>
        <function-ref name="get" scoped="" ref="0x7f77011fb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77011fb340"/>
        <function-ref name="set" scoped="" ref="0x7f77011fb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77011fb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77011f6270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77011f6270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011f65f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77011f6780"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011f6910"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77011f6aa0"/>
        <function-ref name="get" scoped="" ref="0x7f77011f6c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77011f6dc0"/>
        <function-ref name="set" scoped="" ref="0x7f77011f5020"/>
        <function-ref name="clr" scoped="" ref="0x7f77011f51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77011f2d00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77011f2d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011f10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77011f1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011f13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77011f1550"/>
        <function-ref name="get" scoped="" ref="0x7f77011f16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77011f1870"/>
        <function-ref name="set" scoped="" ref="0x7f77011f1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f77011f1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77011ec6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77011ec6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011eca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f77011ecbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011ecd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77011eb020"/>
        <function-ref name="get" scoped="" ref="0x7f77011eb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77011eb340"/>
        <function-ref name="set" scoped="" ref="0x7f77011eb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77011eb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77011e6160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77011e6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011e64e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77011e6670"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011e6800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77011e6990"/>
        <function-ref name="get" scoped="" ref="0x7f77011e6b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77011e6cb0"/>
        <function-ref name="set" scoped="" ref="0x7f77011e6e40"/>
        <function-ref name="clr" scoped="" ref="0x7f77011e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77011e2c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77011e2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011e10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77011e1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011e13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77011e1550"/>
        <function-ref name="get" scoped="" ref="0x7f77011e16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77011e1870"/>
        <function-ref name="set" scoped="" ref="0x7f77011e1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f77011e1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77011dc6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77011dc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011dca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f77011dcbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011dcd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77011db020"/>
        <function-ref name="get" scoped="" ref="0x7f77011db1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77011db340"/>
        <function-ref name="set" scoped="" ref="0x7f77011db4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77011db660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77011d6160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77011d6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011d64e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77011d6670"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011d6800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77011d6990"/>
        <function-ref name="get" scoped="" ref="0x7f77011d6b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77011d6cb0"/>
        <function-ref name="set" scoped="" ref="0x7f77011d6e40"/>
        <function-ref name="clr" scoped="" ref="0x7f77011d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77011d2c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77011d2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011d10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77011d1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011d13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77011d1550"/>
        <function-ref name="get" scoped="" ref="0x7f77011d16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77011d1870"/>
        <function-ref name="set" scoped="" ref="0x7f77011d1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f77011d1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77011b5020" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77011b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011b53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77011b5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011b56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77011b5850"/>
        <function-ref name="get" scoped="" ref="0x7f77011b59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77011b5b70"/>
        <function-ref name="set" scoped="" ref="0x7f77011b5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f77011b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77011b16d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77011b16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011b1a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f77011b1be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011b1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77011b0020"/>
        <function-ref name="get" scoped="" ref="0x7f77011b01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77011b0340"/>
        <function-ref name="set" scoped="" ref="0x7f77011b04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f77011b0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77011acc90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77011acc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011ab0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77011ab230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011ab3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77011ab550"/>
        <function-ref name="get" scoped="" ref="0x7f77011ab6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77011ab870"/>
        <function-ref name="set" scoped="" ref="0x7f77011aba00"/>
        <function-ref name="clr" scoped="" ref="0x7f77011abb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77011a6180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77011a6180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011a6500"/>
        <function-ref name="isInput" scoped="" ref="0x7f77011a6690"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011a6820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77011a69b0"/>
        <function-ref name="get" scoped="" ref="0x7f77011a6b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77011a6cd0"/>
        <function-ref name="set" scoped="" ref="0x7f77011a6e60"/>
        <function-ref name="clr" scoped="" ref="0x7f77011a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77011a2830" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77011a2830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011a2bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f77011a2d40"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011a1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77011a11b0"/>
        <function-ref name="get" scoped="" ref="0x7f77011a1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77011a14d0"/>
        <function-ref name="set" scoped="" ref="0x7f77011a1660"/>
        <function-ref name="clr" scoped="" ref="0x7f77011a17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770119de20" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770119de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770119c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770119c350"/>
        <function-ref name="toggle" scoped="" ref="0x7f770119c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770119c670"/>
        <function-ref name="get" scoped="" ref="0x7f770119c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770119c990"/>
        <function-ref name="set" scoped="" ref="0x7f770119cb20"/>
        <function-ref name="clr" scoped="" ref="0x7f770119ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7701198460" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7701198460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011987e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701198970"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701198b00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701198c90"/>
        <function-ref name="get" scoped="" ref="0x7f7701198e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701196020"/>
        <function-ref name="set" scoped="" ref="0x7f77011961b0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701196340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77011939b0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77011939b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701193d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701192020"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011921b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701192340"/>
        <function-ref name="get" scoped="" ref="0x7f77011924d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701192660"/>
        <function-ref name="set" scoped="" ref="0x7f77011927f0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701192980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770118d160" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770118d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770118d4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770118d670"/>
        <function-ref name="toggle" scoped="" ref="0x7f770118d800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770118d990"/>
        <function-ref name="get" scoped="" ref="0x7f770118db20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770118dcb0"/>
        <function-ref name="set" scoped="" ref="0x7f770118de40"/>
        <function-ref name="clr" scoped="" ref="0x7f770118c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77011896d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77011896d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701189a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701189be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701189d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701187020"/>
        <function-ref name="get" scoped="" ref="0x7f77011871b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701187340"/>
        <function-ref name="set" scoped="" ref="0x7f77011874d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701187660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7701184c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7701184c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011830a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701183230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011833c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701183550"/>
        <function-ref name="get" scoped="" ref="0x7f77011836e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701183870"/>
        <function-ref name="set" scoped="" ref="0x7f7701183a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701183b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770117e180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770117e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770117e500"/>
        <function-ref name="isInput" scoped="" ref="0x7f770117e690"/>
        <function-ref name="toggle" scoped="" ref="0x7f770117e820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770117e9b0"/>
        <function-ref name="get" scoped="" ref="0x7f770117eb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770117ecd0"/>
        <function-ref name="set" scoped="" ref="0x7f770117ee60"/>
        <function-ref name="clr" scoped="" ref="0x7f770117d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770117a6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770117a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770117aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f770117abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770117ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701179020"/>
        <function-ref name="get" scoped="" ref="0x7f77011791b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701179340"/>
        <function-ref name="set" scoped="" ref="0x7f77011794d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701179660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7701175c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7701175c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011740a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701174230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011743c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701174550"/>
        <function-ref name="get" scoped="" ref="0x7f77011746e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701174870"/>
        <function-ref name="set" scoped="" ref="0x7f7701174a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701174b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770116f180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770116f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770116f500"/>
        <function-ref name="isInput" scoped="" ref="0x7f770116f690"/>
        <function-ref name="toggle" scoped="" ref="0x7f770116f820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770116f9b0"/>
        <function-ref name="get" scoped="" ref="0x7f770116fb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770116fcd0"/>
        <function-ref name="set" scoped="" ref="0x7f770116fe60"/>
        <function-ref name="clr" scoped="" ref="0x7f770116e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770116b6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770116b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770116ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f770116bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770116bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770116a020"/>
        <function-ref name="get" scoped="" ref="0x7f770116a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770116a340"/>
        <function-ref name="set" scoped="" ref="0x7f770116a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f770116a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7701166c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7701166c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011650a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701165230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011653c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701165550"/>
        <function-ref name="get" scoped="" ref="0x7f77011656e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701165870"/>
        <function-ref name="set" scoped="" ref="0x7f7701165a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701165b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7701160180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7701160180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701160500"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701160690"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701160820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77011609b0"/>
        <function-ref name="get" scoped="" ref="0x7f7701160b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701160cd0"/>
        <function-ref name="set" scoped="" ref="0x7f7701160e60"/>
        <function-ref name="clr" scoped="" ref="0x7f770115f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770115c6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770115c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770115ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f770115cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770115cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770115b020"/>
        <function-ref name="get" scoped="" ref="0x7f770115b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770115b340"/>
        <function-ref name="set" scoped="" ref="0x7f770115b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f770115b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7701157c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7701157c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011560a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701156230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011563c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701156550"/>
        <function-ref name="get" scoped="" ref="0x7f77011566e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701156870"/>
        <function-ref name="set" scoped="" ref="0x7f7701156a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701156b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7701151180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7701151180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701151500"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701151690"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701151820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77011519b0"/>
        <function-ref name="get" scoped="" ref="0x7f7701151b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701151cd0"/>
        <function-ref name="set" scoped="" ref="0x7f7701151e60"/>
        <function-ref name="clr" scoped="" ref="0x7f7701150020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770114d6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770114d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770114da50"/>
        <function-ref name="isInput" scoped="" ref="0x7f770114dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770114dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770114c020"/>
        <function-ref name="get" scoped="" ref="0x7f770114c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770114c340"/>
        <function-ref name="set" scoped="" ref="0x7f770114c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f770114c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7701148c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7701148c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011470a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701147230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011473c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701147550"/>
        <function-ref name="get" scoped="" ref="0x7f77011476e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701147870"/>
        <function-ref name="set" scoped="" ref="0x7f7701147a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701147b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7701142180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7701142180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701142500"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701142690"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701142820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77011429b0"/>
        <function-ref name="get" scoped="" ref="0x7f7701142b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701142cd0"/>
        <function-ref name="set" scoped="" ref="0x7f7701142e60"/>
        <function-ref name="clr" scoped="" ref="0x7f7701141020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770113e6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770113e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770113ea50"/>
        <function-ref name="isInput" scoped="" ref="0x7f770113ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770113ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770113d020"/>
        <function-ref name="get" scoped="" ref="0x7f770113d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770113d340"/>
        <function-ref name="set" scoped="" ref="0x7f770113d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f770113d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7701139c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7701139c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f77011380a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701138230"/>
        <function-ref name="toggle" scoped="" ref="0x7f77011383c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701138550"/>
        <function-ref name="get" scoped="" ref="0x7f77011386e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701138870"/>
        <function-ref name="set" scoped="" ref="0x7f7701138a00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701138b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7701133180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7701133180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701133500"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701133690"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701133820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77011339b0"/>
        <function-ref name="get" scoped="" ref="0x7f7701133b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701133cd0"/>
        <function-ref name="set" scoped="" ref="0x7f7701133e60"/>
        <function-ref name="clr" scoped="" ref="0x7f7701132020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770112f6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770112f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770112fa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f770112fbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f770112fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770112e020"/>
        <function-ref name="get" scoped="" ref="0x7f770112e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770112e340"/>
        <function-ref name="set" scoped="" ref="0x7f770112e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f770112e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77011290a0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77011290a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701129420"/>
        <function-ref name="isInput" scoped="" ref="0x7f77011295b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701129740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77011298d0"/>
        <function-ref name="get" scoped="" ref="0x7f7701129a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701129bf0"/>
        <function-ref name="set" scoped="" ref="0x7f7701129d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7701128020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f77011256d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f77011256d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701125a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701125be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701125d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701123020"/>
        <function-ref name="get" scoped="" ref="0x7f77011231b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701123340"/>
        <function-ref name="set" scoped="" ref="0x7f77011234d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7701123660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7701120c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7701120c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770111f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770111f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f770111f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770111f550"/>
        <function-ref name="get" scoped="" ref="0x7f770111f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770111f870"/>
        <function-ref name="set" scoped="" ref="0x7f770111fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f770111fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f770111a180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f770111a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770111a500"/>
        <function-ref name="isInput" scoped="" ref="0x7f770111a690"/>
        <function-ref name="toggle" scoped="" ref="0x7f770111a820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770111a9b0"/>
        <function-ref name="get" scoped="" ref="0x7f770111ab40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770111acd0"/>
        <function-ref name="set" scoped="" ref="0x7f770111ae60"/>
        <function-ref name="clr" scoped="" ref="0x7f7701119020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PS2" ref="0x7f77010c5e60" loc="12:PS2/PS2C.nc">
      <component-ref qname="PS2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PS2" scoped="" ref="0x7f77010c5e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f77010c2210"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f77010c23a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClockIRQ" ref="0x7f7701094d90" loc="22:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClockIRQ" scoped="" ref="0x7f7701094d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f770109a180"/>
        <function-ref name="fired" scoped="" ref="0x7f770109a310"/>
        <function-ref name="disable" scoped="" ref="0x7f770109a4a0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f770109a630"/>
        <function-ref name="reset" scoped="" ref="0x7f770109a7c0"/>
        <function-ref name="setMask" scoped="" ref="0x7f770109a950"/>
        <function-ref name="enable" scoped="" ref="0x7f770109aae0"/>
        <function-ref name="getPins" scoped="" ref="0x7f770109ac70"/>
        <function-ref name="getMask" scoped="" ref="0x7f770109ae00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClockPin" ref="0x7f77010991c0" loc="23:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClockPin" scoped="" ref="0x7f77010991c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701099540"/>
        <function-ref name="isInput" scoped="" ref="0x7f77010996d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701099860"/>
        <function-ref name="isOutput" scoped="" ref="0x7f77010999f0"/>
        <function-ref name="get" scoped="" ref="0x7f7701099b80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7701099d10"/>
        <function-ref name="set" scoped="" ref="0x7f7701092020"/>
        <function-ref name="clr" scoped="" ref="0x7f77010921b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataPin" ref="0x7f77010924f0" loc="24:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataPin" scoped="" ref="0x7f77010924f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7701092870"/>
        <function-ref name="isInput" scoped="" ref="0x7f7701092a00"/>
        <function-ref name="toggle" scoped="" ref="0x7f7701092b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7701092d20"/>
        <function-ref name="get" scoped="" ref="0x7f7701091020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f77010911b0"/>
        <function-ref name="set" scoped="" ref="0x7f7701091340"/>
        <function-ref name="clr" scoped="" ref="0x7f77010914d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PS2" ref="0x7f770109c860" loc="19:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PS2" scoped="" ref="0x7f770109c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f770109cbe0"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f770109cd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x7f77010c0ca0" loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtmegaPinChange2C.nc">
      <component-ref qname="HplAtmegaPinChange2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x7f77010c0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f770106a0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f770106a230"/>
        <function-ref name="disable" scoped="" ref="0x7f770106a3c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f770106a550"/>
        <function-ref name="reset" scoped="" ref="0x7f770106a6e0"/>
        <function-ref name="setMask" scoped="" ref="0x7f770106a870"/>
        <function-ref name="enable" scoped="" ref="0x7f770106aa00"/>
        <function-ref name="getPins" scoped="" ref="0x7f770106ab90"/>
        <function-ref name="getMask" scoped="" ref="0x7f770106ad20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f7701055cd0" loc="14:VolumeAdc/VolumeAdcC.nc">
      <component-ref qname="VolumeAdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f7701055cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7701052940"/>
        <function-ref name="readDone" scoped="" ref="0x7f7701052dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f770104d700" loc="17:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f770104d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f770104da80"/>
        <function-ref name="configure" scoped="" ref="0x7f770104dc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumePin" ref="0x7f770104b020" loc="19:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumePin" scoped="" ref="0x7f770104b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f770104b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f770104b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f770104b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f770104b850"/>
        <function-ref name="get" scoped="" ref="0x7f770104b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f770104bb70"/>
        <function-ref name="set" scoped="" ref="0x7f770104bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f7701048020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcConfig" ref="0x7f7701049d30" loc="16:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f7701049d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f770104d0e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f770104d270"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f770104d400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f7700efcc10" loc="25:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7700efcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f7700efb020"/>
        <function-ref name="configure" scoped="" ref="0x7f7700efb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f7700efebe0" loc="22:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f7700efebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7700efd860"/>
        <function-ref name="readDone" scoped="" ref="0x7f7700efdce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f7700efc320" loc="24:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f7700efc320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f7700efc6a0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7700efc830"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f7700efc9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f7701039450" loc="19:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f7701039450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7701037090"/>
        <function-ref name="readDone" scoped="" ref="0x7f7701037510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f77010364f0" loc="20:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f77010364f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7701035150"/>
        <function-ref name="readDone" scoped="" ref="0x7f7701035610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f77010301d0" loc="24:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f77010301d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7701030550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f77010306e0"/>
        <function-ref name="request" scoped="" ref="0x7f7701030870"/>
        <function-ref name="granted" scoped="" ref="0x7f7701030a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7701030b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f7701031280" loc="23:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f7701031280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f7701031600"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7701031790"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f7701031920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f7701029210" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7701029210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f7701029590"/>
        <function-ref name="configure" scoped="" ref="0x7f7701029720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcSingle" ref="0x7f7701025450" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f7701025450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f77010257d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7701025960"/>
        <function-ref name="dataReady" scoped="" ref="0x7f7701025af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f770102fe40" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f770102fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f770102c1e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f770102c370"/>
        <function-ref name="request" scoped="" ref="0x7f770102c500"/>
        <function-ref name="granted" scoped="" ref="0x7f770102c690"/>
        <function-ref name="isOwner" scoped="" ref="0x7f770102c820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcMultiple" ref="0x7f770101f420" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f770101f420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f770101f7a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f770101f930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm1280Adc" ref="0x7f770100b710" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f770100b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f770100ba90"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f770100bc20"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f770100bdb0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f770101a020"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f770101a1b0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f770101a340"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f770101a4d0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f770101a660"/>
        <function-ref name="cancel" scoped="" ref="0x7f770101a7f0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f770101a980"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f770101ab10"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f770101aca0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f770101ae30"/>
        <function-ref name="isStarted" scoped="" ref="0x7f7701019120"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f77010192b0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f7701019440"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f77010195d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7701019760"/>
        <function-ref name="dataReady" scoped="" ref="0x7f77010198f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcSingle" ref="0x7f770101c830" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f770101c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f770101cbb0"/>
        <function-ref name="cancel" scoped="" ref="0x7f770101cd40"/>
        <function-ref name="dataReady" scoped="" ref="0x7f770101b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f770101d830" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f770101d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f770101dbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f7701019be0" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f7701019be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f770100a020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f770100a1b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f770100a340"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f770100a4d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f770100a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f770101c020" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f770101c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f770101c3a0"/>
        <function-ref name="stop" scoped="" ref="0x7f770101c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcMultiple" ref="0x7f770101b330" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f770101b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f770101b6b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f770101b840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1280Adc" ref="0x7f7700fd8460" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <component-ref qname="HplAtm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f7700fd8460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f7700fd87e0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f7700fd8970"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f7700fd8b00"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f7700fd8c90"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f7700fd8e20"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f7700fd7020"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f7700fd71b0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f7700fd7340"/>
        <function-ref name="cancel" scoped="" ref="0x7f7700fd74d0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f7700fd7660"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f7700fd77f0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f7700fd7980"/>
        <function-ref name="startConversion" scoped="" ref="0x7f7700fd7b10"/>
        <function-ref name="isStarted" scoped="" ref="0x7f7700fd7da0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f7700fd6020"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f7700fd61b0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f7700fd6340"/>
        <function-ref name="getValue" scoped="" ref="0x7f7700fd64d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f7700fd6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f7700fd1c10" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
      <component-ref qname="HplAtm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f7700fd1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f7700fd0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1280Adc" ref="0x7f7700fd37d0" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
      <component-ref qname="HplAtm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f7700fd37d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f7700fd3b50"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f7700fd3ce0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f7700fd3e70"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f7700fd2030"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f7700fd21c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f7700fd2350"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f7700fd24e0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f7700fd2670"/>
        <function-ref name="cancel" scoped="" ref="0x7f7700fd2800"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f7700fd2990"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f7700fd2b20"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f7700fd2cb0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f7700fd2e40"/>
        <function-ref name="isStarted" scoped="" ref="0x7f7700fd1120"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f7700fd12b0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f7700fd1440"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f7700fd15d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f7700fd1760"/>
        <function-ref name="dataReady" scoped="" ref="0x7f7700fd18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f7700f68c00" loc="92:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f7700f68c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f7700f66020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7700f661b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f7700f65930" loc="96:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7700f65930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f7700f65cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f7700f65e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f7700f66400" loc="93:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7700f66400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7700f66780"/>
        <function-ref name="requested" scoped="" ref="0x7f7700f66910"/>
        <function-ref name="granted" scoped="" ref="0x7f7700f66aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7700f66c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7700f66dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7700f69e70" loc="91:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f7700f69e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7700f68240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7700f683d0"/>
        <function-ref name="request" scoped="" ref="0x7f7700f68560"/>
        <function-ref name="granted" scoped="" ref="0x7f7700f686f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7700f68880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f7700f65060" loc="94:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7700f65060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f7700f653e0"/>
        <function-ref name="userId" scoped="" ref="0x7f7700f65570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f77005a6c00" loc="44:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f77005a6c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f77005a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f77005a52b0" loc="45:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f77005a52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f77005a5630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f77005a57c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f77005a5950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f77005a5ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f77005a23a0" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f77005a23a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f77005a2740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f77005a28d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f77005a0210" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f77005a0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f77005a05b0"/>
        <function-ref name="configure" scoped="" ref="0x7f77005a0740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f77005a09d0" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f77005a09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f77005a0d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f770059e020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f770059e1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f770059e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f77005a2b20" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f77005a2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f77005a1020"/>
        <function-ref name="requested" scoped="" ref="0x7f77005a11b0"/>
        <function-ref name="granted" scoped="" ref="0x7f77005a1340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f77005a14d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f77005a1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f770059e590" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f770059e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f770059e910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f770059eaa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f770059ec30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f770059edc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f770059d020"/>
        <function-ref name="get" scoped="" ref="0x7f770059d1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f770059d340"/>
        <function-ref name="led0On" scoped="" ref="0x7f770059d980"/>
        <function-ref name="set" scoped="" ref="0x7f770059d660"/>
        <function-ref name="led2On" scoped="" ref="0x7f770059d4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f770059d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f77005a34d0" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f77005a34d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f77005a3870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f77005a3a00"/>
        <function-ref name="request" scoped="" ref="0x7f77005a3b90"/>
        <function-ref name="granted" scoped="" ref="0x7f77005a3d20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f77005a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f77005a18b0" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f77005a18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f77005a1c30"/>
        <function-ref name="userId" scoped="" ref="0x7f77005a1dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f770059dc50" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f770059dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f770059c020"/>
        <function-ref name="runTask" scoped="" ref="0x7f770059c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f7700f61780" loc="72:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f7700f61780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f7700f61b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f7700f61d50" loc="73:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f7700f61d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7700f57100"/>
        <function-ref name="requested" scoped="" ref="0x7f7700f57290"/>
        <function-ref name="granted" scoped="" ref="0x7f7700f57420"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7700f575b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7700f57740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f7700f61020" loc="70:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f7700f61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f7700f613a0"/>
        <function-ref name="stop" scoped="" ref="0x7f7700f61530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f7700f57990" loc="74:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7700f57990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f7700f57d10"/>
        <function-ref name="userId" scoped="" ref="0x7f7700f56020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f770056adc0" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f770056adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f7700569180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f77005693d0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f77005693d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7700569750"/>
        <function-ref name="requested" scoped="" ref="0x7f77005698e0"/>
        <function-ref name="granted" scoped="" ref="0x7f7700569a70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7700569c00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7700569d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f770056a660" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f770056a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f770056a9e0"/>
        <function-ref name="stop" scoped="" ref="0x7f770056ab70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f7700568020" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7700568020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f77005683a0"/>
        <function-ref name="userId" scoped="" ref="0x7f7700568530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f7700f48740" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f7700f48740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c855c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f7701c85930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f7700f465b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcSingle" ref="0x7f7700f4a9f0" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f7700f4a9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f7700f4ad70"/>
        <function-ref name="cancel" scoped="" ref="0x7f7700f49020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f7700f491b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f7700f4e410" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f7700f4e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7700f4d020"/>
        <function-ref name="readDone" scoped="" ref="0x7f7700f4d4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f7700f4b1d0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f7700f4b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7700f4be00"/>
        <function-ref name="readDone" scoped="" ref="0x7f7700f4a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f7700f49a10" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f7700f49a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f7700f49d90"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7700f48020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f7700f481b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7f7700f36820" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7f7700f36820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7700f36ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f7700f36d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f7700f21150" loc="24:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f7700f21150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7700f21d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f7700f08260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f7700f08af0" loc="26:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f7700f08af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7700f07750"/>
        <function-ref name="readDone" scoped="" ref="0x7f7700f07bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f7700f06300" loc="27:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f7700f06300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7700f066a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7700f06830"/>
        <function-ref name="request" scoped="" ref="0x7f7700f069c0"/>
        <function-ref name="granted" scoped="" ref="0x7f7700f06b50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7700f06ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f7701053b00" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioScannerAppC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f7701053b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c871a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7701c87510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7700ef4110"/>
        <function-ref name="fired" scoped="" ref="0x7f7700ef75b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7700ef54a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7700ef5020"/>
        <function-ref name="getdt" scoped="" ref="0x7f7700ef4a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f7700ef4590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7700ef7a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7700ef8750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7700ef5ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7700ef8c20"/>
        <function-ref name="stop" scoped="" ref="0x7f7700ef7130"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../tinyos_ws18/tos/interfaces/Init.nc">
      <documentation loc="34:../tinyos_ws18/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f7701bad740" loc="62:../tinyos_ws18/tos/interfaces/Init.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../tinyos_ws18/tos/interfaces/Boot.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f7701bae350" loc="60:../tinyos_ws18/tos/interfaces/Boot.nc">
        <documentation loc="51:../tinyos_ws18/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f7701ba5b70" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f7701ba58f0" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f7701ba8070" loc="31:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f7701ba8af0" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f7701ba8870" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f7701ba6630" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f7701ba63b0" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f7701ba5020" loc="53:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../tinyos_ws18/tos/interfaces/Scheduler.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f7701d3c6c0" loc="57:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="54:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f7701d3b6a0" loc="72:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f7701d3ce30" loc="65:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="59:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f7701d33a30" loc="67:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f7701d312b0" loc="75:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../tinyos_ws18/tos/interfaces/McuSleep.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f7701c39d40" loc="76:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f7701c19940" loc="62:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f7701cb8470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f7701c1a1f0" loc="52:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../tinyos_ws18/tos/interfaces/Read.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f7701b54420" loc="49:../tinyos_ws18/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f7701b54420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f7701b54ce0" loc="55:../tinyos_ws18/tos/interfaces/Read.nc">
        <documentation loc="50:../tinyos_ws18/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f7701b50a60" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f7701b54420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f7701b504b0" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f7701b507d0" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f7701b54420"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PS2" loc="1:PS2/PS2.nc">
      <function command="" provided="0" name="init" ref="0x7f7701b5e890" loc="4:PS2/PS2.nc">
        <interfacedef-ref qname="PS2"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedChar" ref="0x7f7701b522a0" loc="7:PS2/PS2.nc">
        <interfacedef-ref qname="PS2"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="chr" ref="0x7f7701b52020" loc="7:PS2/PS2.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FMClick" loc="19:FMClick/FMClick.nc">
      <function command="" provided="0" name="seek" ref="0x7f7701b5b470" loc="22:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f7701b707d0"/>
              <typename><typedef-ref name="seekmode_t" ref="0x7f7701b5d390"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f7701b5b1f0" loc="22:FMClick/FMClick.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f7701b707d0"/>
              <typename><typedef-ref name="seekmode_t" ref="0x7f7701b5d390"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x7f7701b58940" loc="30:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="res" ref="0x7f7701b586c0" loc="30:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setVolume" ref="0x7f7701b59540" loc="26:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7f7701b592c0" loc="26:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rdsReceived" ref="0x7f7701b56a20" loc="36:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f7701b5d620"/>
              <typename><typedef-ref name="RDSType" ref="0x7f7701b5c090"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f7701b56470" loc="36:FMClick/FMClick.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f7701b5d620"/>
              <typename><typedef-ref name="RDSType" ref="0x7f7701b5c090"/></typename>
            </type-tag>
          </variable>
          <variable name="buf" ref="0x7f7701b56790" loc="36:FMClick/FMClick.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveRDS" ref="0x7f7701b58020" loc="28:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f7701b59c40" loc="28:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="tuneComplete" ref="0x7f7701b57350" loc="32:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f7701b570d0" loc="32:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f7701b5bbb0" loc="24:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="seekComplete" ref="0x7f7701b57d10" loc="34:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f7701b57a90" loc="34:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tune" ref="0x7f7701b5cac0" loc="20:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f7701b5c840" loc="20:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Glcd" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
      <function command="" provided="0" name="drawTextPgm" ref="0x7f7701b60620" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="109:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawTextPgm&#10;&#10; </short>
          <long>&#10; drawTextPgm&#10;&#10; @param text stored in program memory&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7f7701b62bf0" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7f7701b60020" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f7701b60380" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawRect" ref="0x7f7701b652d0" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw rectangle&#10;&#10; </short>
          <long>&#10; Draw rectangle&#10;&#10; @param upper left x&#10; @param upper left y&#10; @param lower right x&#10; @param lower right y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7f7701b67560" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7f7701b678d0" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7f7701b67c60" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7f7701b65020" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawLine" ref="0x7f7701b68d40" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="45:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw line&#10;&#10; </short>
          <long>&#10; Draw line&#10;&#10; @param first point x&#10; @param first point y&#10; @param second point x&#10; @param second point y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7f7701b68020" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7f7701b68390" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7f7701b68720" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7f7701b68a90" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x7f7701b6cb60" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="12:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Set pixel&#10;&#10; </short>
          <long>&#10; Set pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f7701b6c570" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f7701b6c8d0" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="invertPixel" ref="0x7f7701b69710" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="34:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Invert pixel&#10;&#10; </short>
          <long>&#10; Invert pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f7701b69120" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f7701b69480" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPixel" ref="0x7f7701b6a940" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="23:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Clear pixel&#10;&#10; </short>
          <long>&#10; Clear pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f7701b6a350" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f7701b6a6b0" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawEllipse" ref="0x7f7701b648a0" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw ellipse&#10;&#10; </short>
          <long>&#10; Draw ellipse&#10;&#10; @param center x&#10; @param center y&#10; @param radius horizontal&#10; @param radius vertical&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f7701b65ac0" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f7701b65e20" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_h" ref="0x7f7701b64240" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_v" ref="0x7f7701b645f0" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawText" ref="0x7f7701b62450" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="97:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawText&#10;&#10; </short>
          <long>&#10; drawText&#10;&#10; @param text&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7f7701b63ac0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7f7701b63e20" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f7701b621b0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="fill" ref="0x7f7701b63350" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="87:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Fill Display with pattern&#10;&#10; </short>
          <long>&#10; Fill Display with pattern&#10;&#10; @param pattern&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x7f7701b630d0" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7701b51e40" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7701b51e40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f7701b46c10" loc="136:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="132:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f7701b4a420" loc="83:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f7701b472b0" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f7701b48bd0" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f7701b47020" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f7701b48420" loc="98:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="94:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f7701b45c60" loc="151:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="146:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f7701b453e0" loc="144:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="138:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f7701b4ac00" loc="92:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="86:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f7701b4c9d0" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f7701b4c750" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f7701b462b0" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="116:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f7701b47c50" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f7701b46020" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f7701b4b4d0" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f7701b4b250" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f7701b4bcd0" loc="78:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f7701abe020" loc="44:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f7701abe750" loc="45:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f7701ac0190" loc="42:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f7701abd5e0" loc="47:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f7701ac0890" loc="43:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f7701abee70" loc="46:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f7701ac1350" loc="40:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f7701ac1a20" loc="41:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f7701ae0770" loc="56:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f7701ade2b0" loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f7701ae0020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f7701adfa60" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f7701adf7e0" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f7701ae2790" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f7701adf020" loc="63:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7f7701ad67e0" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7f7701ad67e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f7701ad5de0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f7701ad77b0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f7701ad5110" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f7701ad77b0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f7701ad5460" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f7701ad57b0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f7701ad5b30" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f7701ace9a0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f7701acdc70" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f7701ace020" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f7701ace370" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f7701ace6f0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f7701ad2cf0" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f7701ad77b0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f7701ad2020" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f7701ad77b0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f7701ad2370" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f7701ad26c0" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f7701ad2a40" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f7701ad0cf0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f7701ad0020" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f7701ad0370" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f7701ad06c0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f7701ad0a40" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../tinyos_ws18/tos/interfaces/Resource.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f7701adb9c0" loc="120:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f7701adc9a0" loc="97:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="90:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f7701adc030" loc="88:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f7701adb1f0" loc="102:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="99:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f7701ad9470" loc="128:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="122:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplKS0108" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <short>&#10; Hpl interface for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl interface for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="dataWrite" ref="0x7f77019b62b0" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="48:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write data&#10;&#10; </short>
          <long>&#10; Write data&#10;&#10; @param The controller to write to&#10; @param data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f77019b7c40" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7f77019b6020" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f77019b9030" loc="15:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="10:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Initialize GLCD&#10; &#10; </short>
          <long>&#10; Initialize GLCD&#10; &#10; @return SUCCESS&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataRead" ref="0x7f77019b7440" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="38:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read data&#10;&#10; </short>
          <long>&#10; Read data&#10;&#10; @param The controller to be read from&#10; &#10; @return data&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f77019b71c0" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlWrite" ref="0x7f77019b8940" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write to controller&#10;&#10; </short>
          <long>&#10; Write to controller&#10;&#10; @param The controller to write to&#10; @param controller data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f77019b8330" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7f77019b86b0" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlRead" ref="0x7f77019b9ab0" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="17:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read controller state&#10;&#10; </short>
          <long>&#10; Read controller state&#10;&#10; @param The controller to be checked&#10; &#10; @return state of the controller&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f77019b9830" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f770193bd30" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f770193bd30"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f7701932020" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7701932020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f7701932b50" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7701932020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f77019328d0" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7701932020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIOPort" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f77019382a0" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f7701938020" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f77019375b0" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f7701937330" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f7701935020" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f7701937c80" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f7701939870" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f77019395f0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f77019340e0" loc="13:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f7701935970" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f77019356f0" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f7701938bd0" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f7701938950" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f77017104e0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f7701698a70" loc="53:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f77016953e0" loc="61:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f770168cbb0" loc="65:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f770168c390" loc="59:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f7701692970" loc="56:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f7701691aa0" loc="73:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f77016920e0" loc="46:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f7701691270" loc="65:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f7701690420" loc="81:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f770168e270" loc="90:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f770168ead0" loc="98:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f7701682c10" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f770168dcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f7701682990" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f770168dcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f7701687c50" loc="53:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f77016847a0" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f770168dcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f7701684520" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f770168dcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f77016820e0" loc="70:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f770168dcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../tinyos_ws18/tos/interfaces/Leds.nc">
      <documentation loc="33:../tinyos_ws18/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f7701660390" loc="61:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f7701660b40" loc="67:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="63:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f770165f350" loc="72:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f770165d2b0" loc="83:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="79:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f770165ca20" loc="100:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="96:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f770165b270" loc="117:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="103:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f770165fae0" loc="77:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="74:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f770165bde0" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="120:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f770165bb60" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f7701661bd0" loc="56:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f770165da90" loc="89:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="86:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f770165c270" loc="94:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="91:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f7701608020" loc="62:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f770160edb0" loc="95:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f770160b6a0" loc="105:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7f77015efa10" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7f77015acd00" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7f77015ab490" loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7f77015aa580" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f77015aa300" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7f77015ac5e0" loc="52:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7f77015a7e40" loc="65:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f77015a2be0" loc="84:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f77015a6830" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f77015a65b0" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f770159f450" loc="89:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f77015ad7a0" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7f77015ad520" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7f77015a7710" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f77015a7490" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f77015a4120" loc="68:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7f77015aacc0" loc="61:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f77015a3120" loc="75:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7f77015abbe0" loc="56:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f77015a24a0" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f77015a2220" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f77015a1d00" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f77015a1a80" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7f77015a4920" loc="72:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7f77015ade70" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7f77015a8650" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f77015a83d0" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7f77015a3b40" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f77015a38c0" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f77015a1390" loc="85:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7f77015a8d80" loc="63:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f77014906d0" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f77014906d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f770148d020" loc="61:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f7702658170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f770147b410" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f770147b410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f770147b650" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f770147b650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f770147a020" loc="64:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f770147b650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f7701479120" loc="76:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f770147a8a0" loc="71:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f7701479880" loc="82:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="78:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f770148aba0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f770148aba0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f770148ade0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f770148ade0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f77014839c0" loc="109:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="105:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f770148ade0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f77014859b0" loc="78:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f7701483020" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="90:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f770148ade0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f770148ade0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f7701484a10" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f770148ade0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f7701484d50" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f770148ade0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f77014841f0" loc="88:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="81:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f77014821f0" loc="116:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="111:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f770148ade0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f7701486960" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f770148ade0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f77014866e0" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f770148ade0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f77014851f0" loc="73:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="68:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f770144ce50" loc="89:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f770144dc40" loc="85:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f770144f8c0" loc="79:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f770144c680" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f770144c400" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f770144d470" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f770144d1f0" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f770144a890" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f770144a610" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f770144e0e0" loc="80:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f770144ea80" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f770144e800" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280TimerSync" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
      <documentation loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changedto Sync for Atm1280&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer2Synchronous" ref="0x7f770143c020" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Turn on timer 2 synchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBBusy" ref="0x7f77014390e0" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f770143a020" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f770143c7a0" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f77014398f0" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f770143a850" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f7701440be0" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f7701c6a4d0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f7701c6a8f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f770143d660" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f7701c6a4d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f7701c6a8f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f770143d3e0" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f7701c6a4d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f7701c6a8f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f77014503d0" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f77014503d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f7701443020" loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f7701446020" loc="58:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f7701450d10" loc="48:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f77014503d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f7701446790" loc="62:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f77014437e0" loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f7701447710" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f77014503d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f7701447490" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f77014503d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f7701444020" loc="65:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f7701444770" loc="68:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f770145fa20" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f770145fa20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f77014572d0" loc="98:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f7701458350" loc="87:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f770145c390" loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f770145fa20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f7701457cb0" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f7701457a30" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f7701456510" loc="110:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f770145bc90" loc="75:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f770145b500" loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f7701458b10" loc="93:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f770145cd40" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f770145fa20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f770145cac0" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f770145fa20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f770145a420" loc="78:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f770145ab70" loc="81:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x7f7701097270" loc="43:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f770109bad0" loc="40:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f7701096800" loc="54:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f7701095020" loc="57:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f7701097980" loc="46:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x7f77010942a0" loc="65:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f7701094020" loc="65:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f77010960e0" loc="51:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x7f7701094a30" loc="70:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x7f77010957b0" loc="62:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcConfig" loc="19:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
      <documentation loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7f7701049190" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM1280_ADC_VREF_xxx values from Atm1280Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f770104a8c0" loc="25:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="20:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM1280_ADC_SNGL_xxx&#10;   or ATM1280_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7f77010499e0" loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM1280_ADC_PRESCALE_xxx values from Atm1280Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../tinyos_ws18/tos/interfaces/ReadNow.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f7701034390" loc="52:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f7701034390"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f7701034c90" loc="58:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f7701033a20" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f7701034390"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f7701033470" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f7701d353a0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f7701033790" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f7701034390"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcSingle" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
      <documentation loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega1280 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega1280 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f7701027460" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM1280_ADC_VREF_xxx constants in Atm1280ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM1280_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega1280 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f7701028710" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f7701028a90" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f7701028e10" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f77010271b0" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f7701025020" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f77010265f0" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f7701026020" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f7701026360" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcMultiple" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
      <documentation loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm1280ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f7701023d40" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM1280_ADC_VREF_xxx constants in Atm1280ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM1280_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f7701023020" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f77010233a0" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f7701023720" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f7701023a90" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f7701020b90" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <documentation loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f7701021a40" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f7701021d80" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f7701020110" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7f77010204f0" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7f77010208d0" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280Adc" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <short>&#10; HPL interface to the Atmega1280 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega1280 A/D conversion subsystem. Please see the&#10; Atmega1280 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega1280 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7f7701010c40" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7f77010188a0" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c93eb0"/>
            <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f7701c923a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7f770100c040" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM1280_ADC_PRESCALE_xxx&#10;   values from Atm1280Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f770100dda0" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f770265aad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f770100f530" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="118:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7f7701014650" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7f7701016350" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c93eb0"/>
              <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f7701c923a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7f77010160d0" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7701c93eb0"/>
              <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f7701c923a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7f77010135a0" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7f770100d540" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f770100c840" loc="150:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7f7701014db0" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7f77010114f0" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7f7701013d50" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f7701011c80" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7f770100fd00" loc="127:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f7701d3f500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7f7701015650" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f7701c8ccb0"/>
              <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f7701c8b440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7f77010153d0" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f7701c8ccb0"/>
              <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f7701c8b440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7f77010104f0" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7f7701016ba0" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f7701c8ccb0"/>
            <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f7701c8b440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f7701015e60" loc="75:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f770100b400" loc="156:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="152:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f770100b180" loc="156:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f7702659610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
