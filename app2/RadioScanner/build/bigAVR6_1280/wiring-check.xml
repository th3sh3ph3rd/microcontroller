<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="20:RadioScannerAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f9292d860c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f9292dc2720"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f9292dc2720"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f9292dc0e20"/></to>
    </wire>
    <wire loc="21:RadioScannerAppC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f9292d74980"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f9292888220"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f9292888220"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f9292855bf0"/></to>
    </wire>
    <wire loc="22:RadioScannerAppC.nc">
      <from><interface-ref name="DBInit" scoped="" ref="0x7f9292d85e10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9292ce10c0"/></to>
    </wire>
    <wire loc="35:Database/DatabaseC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9292ce10c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9292cd7620"/></to>
    </wire>
    <wire loc="23:RadioScannerAppC.nc">
      <from><interface-ref name="DB" scoped="" ref="0x7f9292d6b590"/></from>
      <to><interface-ref name="Database" scoped="" ref="0x7f9292ce16f0"/></to>
    </wire>
    <wire loc="36:Database/DatabaseC.nc">
      <from><interface-ref name="Database" scoped="" ref="0x7f9292ce16f0"/></from>
      <to><interface-ref name="Database" scoped="" ref="0x7f9292cd7c50"/></to>
    </wire>
    <wire loc="24:RadioScannerAppC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x7f9292d734d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929229e850"/></to>
    </wire>
    <wire loc="26:FMClick/FMClickC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f929229e850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9292299c10"/></to>
    </wire>
    <wire loc="25:RadioScannerAppC.nc">
      <from><interface-ref name="Radio" scoped="" ref="0x7f9292d60360"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7f929229ee70"/></to>
    </wire>
    <wire loc="27:FMClick/FMClickC.nc">
      <from><interface-ref name="FMClick" scoped="" ref="0x7f929229ee70"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7f92922962c0"/></to>
    </wire>
    <wire loc="26:RadioScannerAppC.nc">
      <from><interface-ref name="Keyboard" scoped="" ref="0x7f9292d5dd20"/></from>
      <to><interface-ref name="PS2" scoped="" ref="0x7f9291d95e60"/></to>
    </wire>
    <wire loc="20:PS2/PS2C.nc">
      <from><interface-ref name="PS2" scoped="" ref="0x7f9291d95e60"/></from>
      <to><interface-ref name="PS2" scoped="" ref="0x7f9291d67860"/></to>
    </wire>
    <wire loc="27:RadioScannerAppC.nc">
      <from><interface-ref name="volumeKnob" scoped="" ref="0x7f9292d5a860"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f9291d204d0"/></to>
    </wire>
    <wire loc="22:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f9291d204d0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f9291bc9be0"/></to>
    </wire>
    <wire loc="28:RadioScannerAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9292d4fe20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9291d1eb00"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9291d1eb00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9292af3aa0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9292dc1bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929114fc00"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9292dc1bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929164dc20"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9292dc1bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f92916843a0"/></to>
    </wire>
    <wire loc="96:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9292dc1bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f92917224c0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9292dc1bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9292853020"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9292dc1bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9292aec7a0"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9292dc1bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9292b31020"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9292dc1bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9292c09020"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f9292d924b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f9292f4fa20"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f9292f4fa20"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f9292e50990"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f9292d91020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9292dc4d00"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9292dc4d00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9292db60c0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9292d91720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f9292dc1bf0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f9292dbed50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9291ce8150"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9292dbe020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9292da4020"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f9292db5020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9292da5860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f9292db67a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9291fddab0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f9292db67a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f9292dae020"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f9292dae6f0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f9292dbed50"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292e4f9e0"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f9292e4a0d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f9292e68080"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9292e2dde0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9292a39020"/></to>
    </wire>
    <wire loc="59:RadioScannerP.nc">
      <from><interface-ref name="inputTuneChannel" scoped="" ref="0x7f9292d46840"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:RadioScannerP.nc">
      <from><interface-ref name="handleChar" scoped="" ref="0x7f9292d45ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:RadioScannerP.nc">
      <from><interface-ref name="radioInitFail" scoped="" ref="0x7f9292d25940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:RadioScannerP.nc">
      <from><interface-ref name="seekBand" scoped="" ref="0x7f9292d30590"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="204:RadioScannerP.nc">
      <from><interface-ref name="finishedSeeking" scoped="" ref="0x7f9292d1d190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="220:RadioScannerP.nc">
      <from><interface-ref name="handleRDS" scoped="" ref="0x7f9292d18190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:RadioScannerP.nc">
      <from><interface-ref name="finishedTuning" scoped="" ref="0x7f9292d23b60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:RadioScannerP.nc">
      <from><interface-ref name="readyScreen" scoped="" ref="0x7f9292d2e1d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="Mac" scoped="" ref="0x7f9292bb2490"/></from>
      <to><interface-ref name="Mac" scoped="" ref="0x7f9292bb87f0"/></to>
    </wire>
    <wire loc="38:Database/DatabaseC.nc">
      <from><interface-ref name="Mac" scoped="" ref="0x7f9292bb2490"/></from>
      <to><interface-ref name="Mac" scoped="" ref="0x7f92928896f0"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="Mac" scoped="" ref="0x7f92928896f0"/></from>
      <to><interface-ref name="Mac" scoped="" ref="0x7f92925aeb00"/></to>
    </wire>
    <wire loc="40:Database/DatabaseC.nc">
      <from><interface-ref name="UdpSend" scoped="" ref="0x7f9292cd5020"/></from>
      <to><interface-ref name="UdpSend" scoped="" ref="0x7f92923491f0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <from><interface-ref name="UdpSend" scoped="" ref="0x7f92923491f0"/></from>
      <to><interface-ref name="UdpSend" scoped="" ref="0x7f92916b6c50"/></to>
    </wire>
    <wire loc="41:Database/DatabaseC.nc">
      <from><interface-ref name="UdpReceive" scoped="" ref="0x7f9292cca140"/></from>
      <to><interface-ref name="UdpReceive" scoped="" ref="0x7f9292349990"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <from><interface-ref name="UdpReceive" scoped="" ref="0x7f9292349990"/></from>
      <to><interface-ref name="UdpReceive" scoped="" ref="0x7f9292342330"/>
      <arguments>
        <value cst="I:50000">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:Database/DatabaseC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7f9292cd4080"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7f9292c1f020"/></to>
    </wire>
    <wire loc="28:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7f9292c1f020"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7f9292c0f690"/></to>
    </wire>
    <wire loc="43:Database/DatabaseC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x7f9292cc0180"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f92925b0330"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f92925b0330"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f9292572cf0"/></to>
    </wire>
    <wire loc="44:Database/DatabaseC.nc">
      <from><interface-ref name="MsgPool" scoped="" ref="0x7f9292cbbe80"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f92922f5cd0"/></to>
    </wire>
    <wire loc="49:../tinyos_ws18/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f92922f5cd0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f9291684a90"/></to>
    </wire>
    <wire loc="45:Database/DatabaseC.nc">
      <from><interface-ref name="SendQ" scoped="" ref="0x7f9292cafb00"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f92922ca720"/></to>
    </wire>
    <wire loc="46:Database/DatabaseC.nc">
      <from><interface-ref name="RecvQ" scoped="" ref="0x7f9292cac700"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f92922aad10"/></to>
    </wire>
    <wire loc="48:Database/DatabaseC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f9292ca70f0"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f9292888220"/></to>
    </wire>
    <wire loc="48:Database/DatabaseP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f9292ca54f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:Database/DatabaseP.nc">
      <from><interface-ref name="recvTask" scoped="" ref="0x7f9292ca33c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9292c24620"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9292c12360"/></to>
    </wire>
    <wire loc="32:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpPacket" scoped="" ref="0x7f9292c1caf0"/></from>
      <to><interface-ref name="IpPacket" scoped="" ref="0x7f9292c09690"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f9292c1d8a0"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f9292c0f020"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7f9292c0a580"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7f9292bc55f0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7f9292bc55f0"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7f9291ba81b0"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f9292c0c020"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f9292bc5d90"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f9292bc5d90"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f9292bbe520"/>
      <arguments>
        <value cst="I:2048">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="Arp" scoped="" ref="0x7f9292bff820"/></from>
      <to><interface-ref name="Arp" scoped="" ref="0x7f9292b470c0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="Arp" scoped="" ref="0x7f9292b470c0"/></from>
      <to><interface-ref name="Arp" scoped="" ref="0x7f9292b43020"/></to>
    </wire>
    <wire loc="30:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7f9292b478c0"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7f9292c0f690"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcQueue" scoped="" ref="0x7f9291ba8950"/></from>
      <to><interface-ref name="LlcQueue" scoped="" ref="0x7f9292b911d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9292bc0930"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9292bb5290"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f9292bbe520"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f9292bb4e30"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="MacControl" scoped="" ref="0x7f9292bb6140"/></from>
      <to><interface-ref name="MacControl" scoped="" ref="0x7f9292bb1020"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <from><interface-ref name="LlcQueue" scoped="" ref="0x7f9292b911d0"/></from>
      <to><interface-ref name="LlcQueue" scoped="" ref="0x7f9292b5b840"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9292b60d50"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9292bc0930"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f9292b5a250"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f9292b8fe10"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f9292b8fe10"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f9291b9fa00"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9291b9c770"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9292b60d50"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f9291b9bd60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="Timeout" scoped="" ref="0x7f9292b3e0b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f929293d140"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f929293d140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9292af3aa0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="ClearCacheTimeout" scoped="" ref="0x7f9292b396e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9292937b00"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9292937b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9292af3aa0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7f9292b34a10"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7f9292930700"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7f9292930700"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7f9291b108f0"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f9292b33320"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f929292e020"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f929292e020"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f9292bbe520"/>
      <arguments>
        <value cst="I:2054">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7f9292b33990"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7f9292b478c0"/></to>
    </wire>
    <wire loc="28:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="MacControl" scoped="" ref="0x7f9292b32960"/></from>
      <to><interface-ref name="MacControl" scoped="" ref="0x7f9292bb6140"/></to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f9292b41260"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f929292c4a0"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f929292c4a0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f9291b07510"/></to>
    </wire>
    <wire loc="30:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f929292a360"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9292b439e0"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f9292af3aa0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9292ae95a0"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f9292ae95a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f929295d150"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9292aec7a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9292adf7a0"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f9292ae3020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f929294f790"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9292adf7a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f92929ddba0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f9292957640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f92929ad830"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f92929a8cd0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f9292adb440"/></to>
    </wire>
    <wire loc="35:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f9292adb440"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f92929dc4b0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f929294ea60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f9292accb40"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f9292accb40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f92929d98d0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f92929d98d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9291b778d0"/></to>
    </wire>
    <wire loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f92929ddba0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9291b7ccb0"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f92929dc4b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9291b7b530"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9291b74bc0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9292a54190"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9292a54190"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9292a44270"/></to>
    </wire>
    <wire loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f9291b6fe20"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f9292a4f570"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f9292a4f570"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f9292a3f7b0"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f9291b6d0a0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9292a4d9d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f9292a4d9d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9292a3eb60"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7f9291b69450"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7f9292a4ad60"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7f9292a4ad60"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7f9292a39750"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f92929a3020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f9292952a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcQueue" scoped="" ref="0x7f9291b0f0c0"/></from>
      <to><interface-ref name="LlcQueue" scoped="" ref="0x7f9292b911d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9291b05240"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f929292a360"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f9291b03840"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/ping/PingC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7f92928917a0"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7f929291d5f0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7f929291d5f0"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7f9291af1870"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/ping/PingC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7f9292891130"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7f929291dd90"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7f929291dd90"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7f929290c610"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpQueue" scoped="" ref="0x7f9291af0060"/></from>
      <to><interface-ref name="IcmpQueue" scoped="" ref="0x7f92928ae410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f92929179e0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f92928d9290"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7f929290c610"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7f92928d8df0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f92928d7c90"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f9292909bd0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f9292909bd0"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f9292c1d8a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7f92928d7490"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7f9292909430"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7f9292909430"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7f9291aeb680"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpQueue" scoped="" ref="0x7f9291aebe20"/></from>
      <to><interface-ref name="IpQueue" scoped="" ref="0x7f92928f8d60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <from><interface-ref name="IpQueue" scoped="" ref="0x7f92928f8d60"/></from>
      <to><interface-ref name="IpQueue" scoped="" ref="0x7f92928ee9f0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f92928eb4e0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f92928f3060"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f92928f3060"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f9291ae2b70"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f92928f0020"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9292c24620"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9291ae0890"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f92928f0020"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f9291add020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <from><interface-ref name="IcmpQueue" scoped="" ref="0x7f92928ae410"/></from>
      <to><interface-ref name="IcmpQueue" scoped="" ref="0x7f92928a3450"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f92928a3e30"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f92928abae0"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f92928abae0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f9291ac6020"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f92928a99d0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f92929179e0"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9291ac4d20"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f92928a99d0"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f9291ac2340"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Hpl" scoped="" ref="0x7f929284c640"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7f9292886640"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="HplKS0108" scoped="" ref="0x7f9292886640"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7f92927ddbe0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_0" scoped="" ref="0x7f92927d37b0"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x7f9292771350"/></to>
    </wire>
    <wire loc="175:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f9292771350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f92926ce020"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_1" scoped="" ref="0x7f92927d99c0"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x7f9292770670"/></to>
    </wire>
    <wire loc="176:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f9292770670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f92926cd2b0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RS" scoped="" ref="0x7f92927d8cd0"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7f929276f990"/></to>
    </wire>
    <wire loc="177:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f929276f990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f92926cc440"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RW" scoped="" ref="0x7f92927d1020"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7f929276ecb0"/></to>
    </wire>
    <wire loc="178:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f929276ecb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f92926cb5d0"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="EN" scoped="" ref="0x7f92927d0370"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f929276b020"/></to>
    </wire>
    <wire loc="179:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f929276b020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f92926c9760"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RST" scoped="" ref="0x7f92927cf690"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7f929276a350"/></to>
    </wire>
    <wire loc="180:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f929276a350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f92926c88f0"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="Data" scoped="" ref="0x7f92927c6d40"/></from>
      <to><interface-ref name="PortA" scoped="" ref="0x7f929261fc40"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortA" scoped="" ref="0x7f929261fc40"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f929260dc90"/></to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f92927c2a00"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f92925bd2e0"/></to>
    </wire>
    <wire loc="191:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f929275f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92926716d0"/></to>
    </wire>
    <wire loc="165:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f929277c800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f92926dfc10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f92926dfc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291934e20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f92926cd2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92918c23f0"/></to>
    </wire>
    <wire loc="185:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f9292765020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f92926bd5d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f92926bd5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92918573f0"/></to>
    </wire>
    <wire loc="196:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f9292759350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9292656c90"/></to>
    </wire>
    <wire loc="143:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f9292794990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9292708a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9292708a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291a649b0"/></to>
    </wire>
    <wire loc="183:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f9292768990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f92926c02b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f92926c02b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929185ee20"/></to>
    </wire>
    <wire loc="146:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f9292791020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f92926ff3f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f92926ff3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291a0da60"/></to>
    </wire>
    <wire loc="157:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f9292784020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f92926eda80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f92926eda80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929199b0a0"/></to>
    </wire>
    <wire loc="168:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f9292778060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f92926db2b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f92926db2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92919296d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f92926c9760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92918b8e20"/></to>
    </wire>
    <wire loc="138:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f929279ab20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f929270d2b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f929270d2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291a7e9b0"/></to>
    </wire>
    <wire loc="149:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f929278e990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f92926fc8f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f92926fc8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291a023f0"/></to>
    </wire>
    <wire loc="160:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f9292781990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f92926e9020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f92926e9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92919919b0"/></to>
    </wire>
    <wire loc="171:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f9292775990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f92926d8760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f92926d8760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929191f0a0"/></to>
    </wire>
    <wire loc="188:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f9292762990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f92926baa80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f92926baa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929184de20"/></to>
    </wire>
    <wire loc="194:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f929275ccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92926616d0"/></to>
    </wire>
    <wire loc="174:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f9292772020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f92926d0e60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f92926d0e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92918c9e20"/></to>
    </wire>
    <wire loc="141:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f9292796350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f929270a760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f929270a760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291a733f0"/></to>
    </wire>
    <wire loc="152:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f929278a350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f92926f8da0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f92926f8da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92919f9e20"/></to>
    </wire>
    <wire loc="192:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f929275e670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929266b160"/></to>
    </wire>
    <wire loc="155:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f9292787990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f92926f07a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f92926f07a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92919a2c90"/></to>
    </wire>
    <wire loc="166:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f929277bb20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f92926deda0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f92926deda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92919300a0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f92926cc440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92918be6d0"/></to>
    </wire>
    <wire loc="186:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f9292764350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f92926bc760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f92926bc760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92918546d0"/></to>
    </wire>
    <wire loc="144:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f9292793cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9292706c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9292706c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291a61e20"/></to>
    </wire>
    <wire loc="147:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f9292790350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f92926fe5d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f92926fe5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291a0ae20"/></to>
    </wire>
    <wire loc="158:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f9292783350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f92926ecc10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f92926ecc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92919973f0"/></to>
    </wire>
    <wire loc="169:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f9292777350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f92926da440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f92926da440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92919269b0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f92926c88f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92918b40a0"/></to>
    </wire>
    <wire loc="139:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f9292799e40"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f929270c440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f929270c440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291a7ae20"/></to>
    </wire>
    <wire loc="150:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f929278dcb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f92926faa80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f92926faa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92919ff6d0"/></to>
    </wire>
    <wire loc="161:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f9292780cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f92926e82b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f92926e82b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929198ee20"/></to>
    </wire>
    <wire loc="189:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f9292761cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f92926b9c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f92926b9c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92918490a0"/></to>
    </wire>
    <wire loc="164:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f929277d350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f92926e0a20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f92926e0a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291937c90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f92926ce020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92918c50a0"/></to>
    </wire>
    <wire loc="184:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f9292767cb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f92926bf440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f92926bf440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929185a0a0"/></to>
    </wire>
    <wire loc="195:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f929275a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929265b160"/></to>
    </wire>
    <wire loc="142:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f9292795670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f92927098f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f92927098f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291a676d0"/></to>
    </wire>
    <wire loc="153:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f9292788670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f92926f6020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f92926f6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92919f50a0"/></to>
    </wire>
    <wire loc="182:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f9292769670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f92926c1020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f92926c1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291861c90"/></to>
    </wire>
    <wire loc="156:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f9292786cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f92926ee8f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f92926ee8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929199fe20"/></to>
    </wire>
    <wire loc="167:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f929277ae40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f92926dc020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f92926dc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929192d3f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f92926cb5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92918bb9b0"/></to>
    </wire>
    <wire loc="187:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f9292763670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f92926bb8f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f92926bb8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92918509b0"/></to>
    </wire>
    <wire loc="137:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f929279d860"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f929270e140"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f929270e140"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291a816d0"/></to>
    </wire>
    <wire loc="148:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f929278f670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f92926fd760"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f92926fd760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291a060a0"/></to>
    </wire>
    <wire loc="159:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f9292782670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f92926ebda0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f92926ebda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92919946d0"/></to>
    </wire>
    <wire loc="170:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f9292776670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f92926d95d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f92926d95d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291923e20"/></to>
    </wire>
    <wire loc="193:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f929275d990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9292666c90"/></to>
    </wire>
    <wire loc="173:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f9292774cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f92926d1d30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f92926d1d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92918ccc90"/></to>
    </wire>
    <wire loc="162:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f929277e020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f92926e7440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f92926e7440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929198a0a0"/></to>
    </wire>
    <wire loc="140:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f9292797060"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f929270b5d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f929270b5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291a760a0"/></to>
    </wire>
    <wire loc="151:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f929278b020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f92926f9c10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f92926f9c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92919fc9b0"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortL" scoped="" ref="0x7f9292612870"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f92925c9c90"/></to>
    </wire>
    <wire loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortD" scoped="" ref="0x7f929261ae80"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f92925ebcd0"/></to>
    </wire>
    <wire loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortG" scoped="" ref="0x7f92926161d0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f92925dccd0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortJ" scoped="" ref="0x7f9292614550"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f92925d2c90"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortB" scoped="" ref="0x7f929261cd20"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f92925f4390"/></to>
    </wire>
    <wire loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortE" scoped="" ref="0x7f9292618020"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f92925e5390"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortH" scoped="" ref="0x7f92926153c0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f92925d7c90"/></to>
    </wire>
    <wire loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortK" scoped="" ref="0x7f92926136e0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f92925cec90"/></to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortC" scoped="" ref="0x7f929261bde0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f92925ef910"/></to>
    </wire>
    <wire loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortF" scoped="" ref="0x7f9292617100"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f92925e0910"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="Enc28j60Control" scoped="" ref="0x7f929257aba0"/></from>
      <to><interface-ref name="Enc28j60Control" scoped="" ref="0x7f929256c880"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f929256b430"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f9292501b00"/></to>
    </wire>
    <wire loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f9292501b00"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f92924f1340"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9292572020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9292500bd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="ssETH" scoped="" ref="0x7f92925786c0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f9292791020"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="rstETH" scoped="" ref="0x7f92925779d0"/></from>
      <to><interface-ref name="PortB4" scoped="" ref="0x7f929278dcb0"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="intETH" scoped="" ref="0x7f929256e620"/></from>
      <to><interface-ref name="Int2" scoped="" ref="0x7f92923b9b70"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f92923b9b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9292372c90"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="intPin" scoped="" ref="0x7f9292576cf0"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f929277bb20"/></to>
    </wire>
    <wire loc="179:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <from><interface-ref name="checkInterruptflag" scoped="" ref="0x7f92925365d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f92924f5e60"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f92924f05f0"/></to>
    </wire>
    <wire loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9292506300"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f92924f2670"/></to>
    </wire>
    <wire loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f92924fc400"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f92924f1980"/></to>
    </wire>
    <wire loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9292500bd0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f92924ef320"/></to>
    </wire>
    <wire loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="SpiControl" scoped="" ref="0x7f92925014a0"/></from>
      <to><interface-ref name="SpiControl" scoped="" ref="0x7f92924f2cb0"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f92924d2740"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f92923c6520"/></to>
    </wire>
    <wire loc="98:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f92923c6520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f92917209d0"/></to>
    </wire>
    <wire loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f92924cdcd0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f92923c5b20"/></to>
    </wire>
    <wire loc="100:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f92923c5b20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929171e020"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f92924d3340"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f929247e100"/></to>
    </wire>
    <wire loc="83:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f929247e100"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f9292477060"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f92924cf510"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f9292e2e5a0"/></to>
    </wire>
    <wire loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f92924abde0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f929246eb30"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f9292e2e5a0"/></to>
    </wire>
    <wire loc="86:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f9292473020"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f9292791020"/></to>
    </wire>
    <wire loc="87:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f9292472330"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f9292790350"/></to>
    </wire>
    <wire loc="88:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f92924704e0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f929278f670"/></to>
    </wire>
    <wire loc="89:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f929246f7f0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f929278e990"/></to>
    </wire>
    <wire loc="99:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f92923c53a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f929171f850"/></to>
    </wire>
    <wire loc="101:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929171e910"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f92923c4570"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f929171d120"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f9291722ad0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f929171dc20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7f92923b4b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9292360c90"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f92923bab70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9292376da0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7f92923b6b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9292369c90"/></to>
    </wire>
    <wire loc="78:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7f92923b3b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f929235cc90"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7f92923b5b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9292364c90"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f92923bdb20"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f929238d060"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f92923b8b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f929236dc90"/></to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f929238de80"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f92923aca00"/></to>
    </wire>
    <wire loc="81:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9292375c20"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f92923ae230"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9292370b40"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f92923ae9b0"/></to>
    </wire>
    <wire loc="83:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f929236cb40"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7f92923ad150"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9292368b40"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7f92923ad8d0"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9292363b40"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7f92923ab0b0"/></to>
    </wire>
    <wire loc="86:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f929235fb40"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7f92923ab830"/></to>
    </wire>
    <wire loc="87:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f929235bb40"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7f92923aa020"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <from><interface-ref name="UdpQueue" scoped="" ref="0x7f92916b5440"/></from>
      <to><interface-ref name="UdpQueue" scoped="" ref="0x7f92923111d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9292344710"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f929233eb90"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="UdpReceive" scoped="" ref="0x7f9292342330"/></from>
      <to><interface-ref name="UdpReceive" scoped="" ref="0x7f929233a730"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7f9292339c70"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7f929233de60"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7f929233de60"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7f92916a8b10"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f9292339600"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f929233f2b0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f929233f2b0"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f9292c1d8a0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7f929233ad80"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7f92923409d0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7f92923409d0"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7f92916af0c0"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="IpPacket" scoped="" ref="0x7f92923384a0"/></from>
      <to><interface-ref name="IpPacket" scoped="" ref="0x7f9292c1caf0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpQueue" scoped="" ref="0x7f92916af860"/></from>
      <to><interface-ref name="IpQueue" scoped="" ref="0x7f92928f8d60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7f929233c630"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7f929290c610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpQueue" scoped="" ref="0x7f92916a7440"/></from>
      <to><interface-ref name="IcmpQueue" scoped="" ref="0x7f92928ae410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <from><interface-ref name="UdpQueue" scoped="" ref="0x7f92923111d0"/></from>
      <to><interface-ref name="UdpQueue" scoped="" ref="0x7f92923071d0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f9292307bb0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f929230f790"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f929230f790"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f929169b0b0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f929230c620"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f9292344710"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f9291699dd0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f929230c620"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f92916974e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:FMClick/FMClickC.nc">
      <from><interface-ref name="Int" scoped="" ref="0x7f9292295750"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7f92923b8b70"/></to>
    </wire>
    <wire loc="31:FMClick/FMClickC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7f92922946a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929219f9f0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929219f9f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f92921949b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:FMClick/FMClickC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f92922846f0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9291fbc880"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f9291fbc880"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f929218f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:FMClick/FMClickC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9292282620"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9291fb6b80"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9291fb6b80"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9292af3aa0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:FMClick/FMClickC.nc">
      <from><interface-ref name="RSTPin" scoped="" ref="0x7f929227da60"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f9291f8d670"/></to>
    </wire>
    <wire loc="250:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f9291f8d670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9291f0e440"/></to>
    </wire>
    <wire loc="37:FMClick/FMClickC.nc">
      <from><interface-ref name="SDIOPin" scoped="" ref="0x7f929227ccc0"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f9291f8e350"/></to>
    </wire>
    <wire loc="249:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f9291f8e350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9291f0f2b0"/></to>
    </wire>
    <wire loc="38:FMClick/FMClickC.nc">
      <from><interface-ref name="INTPin" scoped="" ref="0x7f929227a020"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7f9291f8c990"/></to>
    </wire>
    <wire loc="251:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f9291f8c990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9291f0d5d0"/></to>
    </wire>
    <wire loc="40:FMClick/FMClickC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f92922792a0"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f9292888220"/></to>
    </wire>
    <wire loc="184:FMClick/FMClickP.nc">
      <from><interface-ref name="seek" scoped="" ref="0x7f92922662a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="182:FMClick/FMClickP.nc">
      <from><interface-ref name="init" scoped="" ref="0x7f92922692a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:FMClick/FMClickP.nc">
      <from><interface-ref name="decodeRDS" scoped="" ref="0x7f92922652a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:FMClick/FMClickP.nc">
      <from><interface-ref name="tune" scoped="" ref="0x7f92922682a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f92921949b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f92920d3020"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f929218f020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f92920d2020"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f92920cee40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9292122e60"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9292122e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f92916494d0"/></to>
    </wire>
    <wire loc="64:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f92920cdc40"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9292059c00"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7f92920c88e0"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7f92920548e0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f929211a550"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9292059340"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f929210d2f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9292120400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9292120400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9291648b20"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f9292053020"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f92920470e0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f92920470e0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f9292044a70"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f9292051ac0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9291fd5980"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f929204e160"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9291fd5980"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f9292121bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f92916483a0"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929211e060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f92916478b0"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9291646210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929211e930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f92916469d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f929164c2b0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f9291644c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f929204d7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7f929203f540"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7f929277d350"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7f929203e810"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f929277c800"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f92920074a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9292003dc0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9291fddab0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f92920037c0"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f9291fff550"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f9291fe11d0"/></to>
    </wire>
    <wire loc="57:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f9291fe11d0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f929279d860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f9291ffe7f0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f9291fe0510"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f9291fe0510"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f929279ab20"/></to>
    </wire>
    <wire loc="56:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f9291ffdb10"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f9291fdf830"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f9291fdf830"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f9292799e40"/></to>
    </wire>
    <wire loc="275:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f9291f72cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291eb76d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9291f0f2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291424e20"/></to>
    </wire>
    <wire loc="260:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f9291f82350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9291efd8f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9291efd8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92913b23f0"/></to>
    </wire>
    <wire loc="269:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f9291f78cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9291eeec10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9291eeec10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92913473f0"/></to>
    </wire>
    <wire loc="280:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f9291f6b060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e9dc90"/></to>
    </wire>
    <wire loc="284:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH2" scoped="" ref="0x7f9291f68990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e77c90"/></to>
    </wire>
    <wire loc="289:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH7" scoped="" ref="0x7f9291f61990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e5e9b0"/></to>
    </wire>
    <wire loc="297:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ6" scoped="" ref="0x7f9291f58020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e3a180"/></to>
    </wire>
    <wire loc="300:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK0" scoped="" ref="0x7f9291f56670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e31c90"/></to>
    </wire>
    <wire loc="311:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL2" scoped="" ref="0x7f9291f4a670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291dfe180"/></to>
    </wire>
    <wire loc="227:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f9291fa6350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9291f372b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9291f372b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291559e20"/></to>
    </wire>
    <wire loc="267:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f9291f7a670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9291ef08f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9291ef08f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929134ee20"/></to>
    </wire>
    <wire loc="230:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f9291fa4990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9291f30a20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9291f30a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92914fdc90"/></to>
    </wire>
    <wire loc="241:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f9291f97990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9291f1d020"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9291f1d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929148b0a0"/></to>
    </wire>
    <wire loc="252:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f9291f8bcb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9291f0c760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9291f0c760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929141a6d0"/></to>
    </wire>
    <wire loc="263:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f9291f7ecb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9291efada0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9291efada0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92913a9e20"/></to>
    </wire>
    <wire loc="222:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f9291fac4e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9291f3e8f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9291f3e8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929156ae20"/></to>
    </wire>
    <wire loc="233:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f9291fa0350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9291f2b020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9291f2b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92914f33f0"/></to>
    </wire>
    <wire loc="244:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f9291f93350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9291f1a5d0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9291f1a5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92914829b0"/></to>
    </wire>
    <wire loc="255:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f9291f87670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9291f08c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9291f08c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929140f0a0"/></to>
    </wire>
    <wire loc="272:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f9291f74670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9291eea2b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9291eea2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929133ee20"/></to>
    </wire>
    <wire loc="278:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f9291f6eb20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291ea76d0"/></to>
    </wire>
    <wire loc="282:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH0" scoped="" ref="0x7f9291f6a350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e80020"/></to>
    </wire>
    <wire loc="258:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f9291f85cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9291f005d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9291f005d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92913b9e20"/></to>
    </wire>
    <wire loc="287:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH5" scoped="" ref="0x7f9291f64350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e68e20"/></to>
    </wire>
    <wire loc="292:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ1" scoped="" ref="0x7f9291f5e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e546d0"/></to>
    </wire>
    <wire loc="295:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ4" scoped="" ref="0x7f9291f5b990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e456d0"/></to>
    </wire>
    <wire loc="303:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK3" scoped="" ref="0x7f9291f52020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e22c90"/></to>
    </wire>
    <wire loc="306:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK6" scoped="" ref="0x7f9291f4f990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e13c90"/></to>
    </wire>
    <wire loc="309:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL0" scoped="" ref="0x7f9291f4c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e096d0"/></to>
    </wire>
    <wire loc="314:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL5" scoped="" ref="0x7f9291f45020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291df06d0"/></to>
    </wire>
    <wire loc="225:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f9291fa9e40"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9291f3ada0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9291f3ada0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92915606d0"/></to>
    </wire>
    <wire loc="236:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f9291f9ccb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9291f285d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9291f285d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92914e9e20"/></to>
    </wire>
    <wire loc="276:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f9291f704e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291eb1160"/></to>
    </wire>
    <wire loc="239:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f9291f99350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9291f20d30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9291f20d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291492c90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9291f0e440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92914200a0"/></to>
    </wire>
    <wire loc="261:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f9291f81670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9291efca80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9291efca80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92913af6d0"/></to>
    </wire>
    <wire loc="270:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f9291f76020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9291eedda0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9291eedda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92913446d0"/></to>
    </wire>
    <wire loc="285:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH3" scoped="" ref="0x7f9291f67cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e71180"/></to>
    </wire>
    <wire loc="298:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ7" scoped="" ref="0x7f9291f57350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e366d0"/></to>
    </wire>
    <wire loc="301:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK1" scoped="" ref="0x7f9291f55990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e2b180"/></to>
    </wire>
    <wire loc="312:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL3" scoped="" ref="0x7f9291f49990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291dfa6d0"/></to>
    </wire>
    <wire loc="293:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ2" scoped="" ref="0x7f9291f5d350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e4fc90"/></to>
    </wire>
    <wire loc="228:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f9291fa5670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9291f36440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9291f36440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92915550a0"/></to>
    </wire>
    <wire loc="304:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK4" scoped="" ref="0x7f9291f51350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e1c180"/></to>
    </wire>
    <wire loc="315:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL6" scoped="" ref="0x7f9291f44350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291debc90"/></to>
    </wire>
    <wire loc="231:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f9291fa3cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9291f2ec10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9291f2ec10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92914fae20"/></to>
    </wire>
    <wire loc="242:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f9291f96cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9291f1c2b0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9291f1c2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92914883f0"/></to>
    </wire>
    <wire loc="253:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f9291f89020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9291f0b8f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9291f0b8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92914179b0"/></to>
    </wire>
    <wire loc="264:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f9291f7c020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9291ef8020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9291ef8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92913a40a0"/></to>
    </wire>
    <wire loc="223:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f9291fab800"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9291f3da80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9291f3da80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92915660a0"/></to>
    </wire>
    <wire loc="234:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f9291f9f670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9291f2a2b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9291f2a2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92914f06d0"/></to>
    </wire>
    <wire loc="245:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f9291f92670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9291f19760"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9291f19760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929147ee20"/></to>
    </wire>
    <wire loc="273:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f9291f73990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9291ee9440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9291ee9440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929133a0a0"/></to>
    </wire>
    <wire loc="283:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH1" scoped="" ref="0x7f9291f69670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e7c6d0"/></to>
    </wire>
    <wire loc="248:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f9291f90cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9291f10020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9291f10020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291427c90"/></to>
    </wire>
    <wire loc="259:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f9291f83020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9291eff760"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9291eff760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92913b50a0"/></to>
    </wire>
    <wire loc="268:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f9291f79990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9291eefa80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9291eefa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929134a0a0"/></to>
    </wire>
    <wire loc="279:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f9291f6de40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291ea1160"/></to>
    </wire>
    <wire loc="288:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH6" scoped="" ref="0x7f9291f62670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e63460"/></to>
    </wire>
    <wire loc="296:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ5" scoped="" ref="0x7f9291f5acb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e40c90"/></to>
    </wire>
    <wire loc="307:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK7" scoped="" ref="0x7f9291f4ecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e0d180"/></to>
    </wire>
    <wire loc="310:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL1" scoped="" ref="0x7f9291f4b350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e04c90"/></to>
    </wire>
    <wire loc="226:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f9291fa7060"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9291f38020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9291f38020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929155c9b0"/></to>
    </wire>
    <wire loc="237:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f9291f9a020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9291f27760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9291f27760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92914e50a0"/></to>
    </wire>
    <wire loc="266:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f9291f7b350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9291ef17a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9291ef17a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291351c90"/></to>
    </wire>
    <wire loc="240:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f9291f98670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9291f1fe60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9291f1fe60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929148fe20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9291f0d5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929141d3f0"/></to>
    </wire>
    <wire loc="262:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f9291f7f990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9291efbc10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9291efbc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92913ac9b0"/></to>
    </wire>
    <wire loc="271:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f9291f75350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9291eeb020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9291eeb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92913419b0"/></to>
    </wire>
    <wire loc="221:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f9291fad1e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9291f3f7a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9291f3f7a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929156db00"/></to>
    </wire>
    <wire loc="232:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f9291fa1020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9291f2dda0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9291f2dda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92914f60a0"/></to>
    </wire>
    <wire loc="243:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f9291f94020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9291f1b440"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9291f1b440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92914856d0"/></to>
    </wire>
    <wire loc="254:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f9291f88350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9291f09a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9291f09a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291414e20"/></to>
    </wire>
    <wire loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f9291f6f800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291eadc90"/></to>
    </wire>
    <wire loc="286:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH4" scoped="" ref="0x7f9291f65020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e6d830"/></to>
    </wire>
    <wire loc="291:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ0" scoped="" ref="0x7f9291f60cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e58160"/></to>
    </wire>
    <wire loc="257:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f9291f86990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9291f013f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9291f013f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92913bcc90"/></to>
    </wire>
    <wire loc="294:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ3" scoped="" ref="0x7f9291f5c670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e49180"/></to>
    </wire>
    <wire loc="302:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK2" scoped="" ref="0x7f9291f54cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e276d0"/></to>
    </wire>
    <wire loc="305:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK5" scoped="" ref="0x7f9291f50670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291e186d0"/></to>
    </wire>
    <wire loc="313:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL4" scoped="" ref="0x7f9291f48cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291df40a0"/></to>
    </wire>
    <wire loc="316:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL7" scoped="" ref="0x7f9291f43670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9291de5180"/></to>
    </wire>
    <wire loc="246:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f9291f91990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9291f188f0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9291f188f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929147a0a0"/></to>
    </wire>
    <wire loc="224:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f9291faab20"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9291f3cc10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9291f3cc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92915633f0"/></to>
    </wire>
    <wire loc="235:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f9291f9e990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9291f29440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9291f29440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f92914ed9b0"/></to>
    </wire>
    <wire loc="21:PS2/PS2C.nc">
      <from><interface-ref name="ClockIRQ" scoped="" ref="0x7f9291d5fd90"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x7f9291d8bca0"/></to>
    </wire>
    <wire loc="23:PS2/PS2C.nc">
      <from><interface-ref name="ClockPin" scoped="" ref="0x7f9291d641c0"/></from>
      <to><interface-ref name="PortK7" scoped="" ref="0x7f9291f4ecb0"/></to>
    </wire>
    <wire loc="24:PS2/PS2C.nc">
      <from><interface-ref name="DataPin" scoped="" ref="0x7f9291d5d4f0"/></from>
      <to><interface-ref name="PortK6" scoped="" ref="0x7f9291f4f990"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f9291bc9be0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f9291d07df0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="VolumePin" scoped="" ref="0x7f9291d188e0"/></from>
      <to><interface-ref name="PortF0" scoped="" ref="0x7f9291f7b350"/></to>
    </wire>
    <wire loc="26:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f9291bc7320"/></from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f9291d15540"/></to>
    </wire>
    <wire loc="27:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9291bc7c10"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9291d18020"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f9291cfdc30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f9291bc7320"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9291cfcb50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9291cf88c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9291cf4af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9291bc7c10"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f9291d07df0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f9291bec150"/></to>
    </wire>
    <wire loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f9291cfee60"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f9291c161d0"/></to>
    </wire>
    <wire loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9291bd1300"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9291cfcb50"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f9291c14a10"/></from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f9291cfdc30"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f9291bd3af0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f9291c19410"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f9291c159f0"/></from>
      <to><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f9291cf1dd0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f9291cf1dd0"/></from>
      <to><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f9291ce7020"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f9291c13740"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f92925bd2e0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9291cf88c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9291c34e70"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9291c34e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929114c4d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f9291cebc90"/></from>
      <to><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f9291ce79d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9291c30930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9291cf4af0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f9291ce5020"/></from>
      <to><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f9291ce9d30"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <from><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f9291ce9d30"/></from>
      <to><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f9291c9e200"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9291cd6630"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9292dbe020"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9291c2c020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9291ce87c0"/></to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9291c2cd50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9291c31400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9291c31400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f929114bb20"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f9291c9c7f0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f9292e2e5a0"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f9291c33c00"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f929114b3a0"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9291c30060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929114a8b0"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9291148210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9291c30930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f92911489d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f929114e2b0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f9291146c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9291113660"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9291c2c020"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f9291113dc0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f9291c2c780"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f92911123d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9291c2cd50"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9291111020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9291c22990"/></to>
    </wire>
    <wire loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7f9291c01820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../tinyos_ws18/tos/system/MainC.nc">
      <documentation loc="45:../tinyos_ws18/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <documentation loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../tinyos_ws18/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../tinyos_ws18/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../tinyos_ws18/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc" safe="">
      <documentation loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioScannerP" loc="15:RadioScannerP.nc">
      <documentation loc="1:RadioScannerP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file RadioScannerP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-20&#10;&#10; Implementation of the RadioScanner app.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="DatabaseC" loc="14:Database/DatabaseC.nc">
      <configuration/>
    </component>
    <component qname="DatabaseP" loc="20:Database/DatabaseP.nc">
      <module/>
    </component>
    <component qname="IpTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IpTransceiverP" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <module/>
    </component>
    <component qname="IpTransceiverC.LlcC" loc="10(IpTransceiverC.LlcC):../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LlcC"/>
        <arguments>
          <value cst="I:2048">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LlcTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LlcTransceiverP" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IpTransceiverC.LlcC.LlcP" loc="10(IpTransceiverC.LlcC.LlcP):../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LlcP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LlcQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LlcQueueC.PacketQueueC" loc="8(LlcQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9292c137e0"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f9292c13d60"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LlcQueueC.PacketQueueC.PacketQueueP" loc="11(LlcQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="0">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f9292b90b30"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LlcQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ArpC" loc="8:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ArpP" loc="11:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ArpC.TimerMilliC" loc="44(ArpC.TimerMilliC):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <documentation loc="11:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC" loc="32(AlarmCounterMilliP.Atm1280AlarmSyncC):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:124">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP" loc="33(AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f9292acbc70"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280Timer2SyncC" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <documentation loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280Timer2SyncP" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc" safe="">
      <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changed to sync mode&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10; &#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ArpC.ClearCacheTimeoutC" loc="44(ArpC.ClearCacheTimeoutC):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArpC.LlcC" loc="10(ArpC.LlcC):../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LlcC"/>
        <arguments>
          <value cst="I:2054">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ArpC.LlcC.LlcP" loc="10(ArpC.LlcC.LlcP):../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LlcP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ArpC.PacketQueueC" loc="8(ArpC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f9292c03cc0"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f9292c02650"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ArpC.PacketQueueC.PacketQueueP" loc="11(ArpC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="1">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f9292b90b30"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PingC.IcmpC" loc="10(PingC.IcmpC):../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <instance number="0">
        <component-ref qname="IcmpC"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IcmpTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IcmpTransceiverC.IpC" loc="10(IcmpTransceiverC.IpC):../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IpC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IcmpTransceiverC.IpC.IpP" loc="10(IcmpTransceiverC.IpC.IpP):../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IpQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IpQueueC.PacketQueueC" loc="8(IpQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f9292cd8b70"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f9292cd7180"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IpQueueC.PacketQueueC.PacketQueueP" loc="11(IpQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="2">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f9292b90b30"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IpQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IcmpTransceiverP" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PingC.IcmpC.IcmpP" loc="10(PingC.IcmpC.IcmpP):../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IcmpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IcmpQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IcmpQueueC.PacketQueueC" loc="8(IcmpQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f9292919b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f9292918230"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IcmpQueueC.PacketQueueC.PacketQueueP" loc="11(IcmpQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="3">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f9292b90b30"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IcmpQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PingP" loc="8:../tinyos_ws18/tos/lib_ecs/ping/PingP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ping/PingP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="GlcdC" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
        <short>&#10; High level implementation for KS0108 Glcd&#10; </short>
        <long>&#10; High level implementation for KS0108 Glcd&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="GlcdP" loc="41:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <module/>
    </component>
    <component qname="HplKS0108C" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
        <short>&#10; Configuration for KS0108 GLCD Display&#10; </short>
        <long>&#10; Configuration for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplKS0108P" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
        <short>&#10; Hpl implementation for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl implementation for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10; Based on an implementation of Andreas Hagmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC" loc="6:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortAP" loc="6(HplAtm128GeneralIOFastPortC.PortAP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortBP" loc="6(HplAtm128GeneralIOFastPortC.PortBP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortCP" loc="6(HplAtm128GeneralIOFastPortC.PortCP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortDP" loc="6(HplAtm128GeneralIOFastPortC.PortDP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortEP" loc="6(HplAtm128GeneralIOFastPortC.PortEP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortFP" loc="6(HplAtm128GeneralIOFastPortC.PortFP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortGP" loc="6(HplAtm128GeneralIOFastPortC.PortGP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortHP" loc="6(HplAtm128GeneralIOFastPortC.PortHP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortJP" loc="6(HplAtm128GeneralIOFastPortC.PortJP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortKP" loc="6(HplAtm128GeneralIOFastPortC.PortKP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortLP" loc="6(HplAtm128GeneralIOFastPortC.PortLP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:9">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="38:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc" safe="">
      <documentation loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Enc28j60C" loc="7:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Harald Glanzer, 0727156 TU Wien&#10;&#10; overhauled by Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Enc28j60P" loc="9:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/enc28j60/enc28j60.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Harald Glanzer, 0727156 TU Wien&#10;&#10; overhauled by Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm1280SpiC" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <documentation loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280SpiP" loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc" safe="">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.h">
        <short>&#10; </short>
        <long>&#10; @author Markus Hartmann e988811@student.tuwien.ac.at&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm1280SpiC.Arbiter" loc="83(Atm1280SpiC.Arbiter):../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280SpiC.Arbiter.Queue" loc="42(Atm1280SpiC.Arbiter.Queue):../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280SpiC.Arbiter.Arbiter" loc="49(Atm1280SpiC.Arbiter.Arbiter):../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DatabaseC.UdpC" loc="10(DatabaseC.UdpC):../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="UdpC"/>
        <arguments>
          <value cst="I:50000">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC.IpC" loc="10(UdpTransceiverC.IpC):../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="IpC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC.IpC.IpP" loc="10(UdpTransceiverC.IpC.IpP):../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="IpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UdpTransceiverP" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UdpTransceiverC.IcmpC" loc="10(UdpTransceiverC.IcmpC):../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <instance number="1">
        <component-ref qname="IcmpC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC.IcmpC.IcmpP" loc="10(UdpTransceiverC.IcmpC.IcmpP):../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="IcmpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DatabaseC.UdpC.UdpP" loc="10(DatabaseC.UdpC.UdpP):../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="UdpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UdpQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UdpQueueC.PacketQueueC" loc="8(UdpQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9292cd0770"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f9292cd0da0"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpQueueC.PacketQueueC.PacketQueueP" loc="11(UdpQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="4">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f9292b90b30"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UdpQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DatabaseC.UdpMsgPool" loc="41(DatabaseC.UdpMsgPool):../tinyos_ws18/tos/system/PoolC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:130" alignment="I:1"><struct-ref name="udp_msg" ref="0x7f9292ce52e0"/>
            <typename><typedef-ref name="udp_msg_t" ref="0x7f9292ce5c20"/></typename>
          </type-tag>
          <value cst="I:25">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DatabaseC.UdpMsgPool.PoolP" loc="53(DatabaseC.UdpMsgPool.PoolP):../tinyos_ws18/tos/system/PoolP.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f92922f4340"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DatabaseC.UdpSendQ" loc="42(DatabaseC.UdpSendQ):../tinyos_ws18/tos/system/QueueC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:130" alignment="I:1"><struct-ref name="udp_msg" ref="0x7f9292ce52e0"/>
              <typename><typedef-ref name="udp_msg_t" ref="0x7f9292ce5c20"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DatabaseC.UdpRecvQ" loc="42(DatabaseC.UdpRecvQ):../tinyos_ws18/tos/system/QueueC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:130" alignment="I:1"><struct-ref name="udp_msg" ref="0x7f9292ce52e0"/>
              <typename><typedef-ref name="udp_msg_t" ref="0x7f9292ce5c20"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="FMClickC" loc="11:FMClick/FMClickC.nc">
      <documentation loc="1:FMClick/FMClickC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; Configuration of the FMClick module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="FMClickP" loc="17:FMClick/FMClickP.nc">
      <documentation loc="1:FMClick/FMClickP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; FMClick module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC.I2C" loc="43(FMClickC.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../tinyos_ws18/tos/system/LedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc" safe="">
      <documentation loc="35:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../tinyos_ws18/tos/system/NoLedsC.nc">
      <documentation loc="35:../tinyos_ws18/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC.Timer" loc="44(FMClickC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; Changed for Atm1280&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA" loc="40(HplAtm1280GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit0" loc="41(HplAtm1280GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="48">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit1" loc="41(HplAtm1280GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="49">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit2" loc="41(HplAtm1280GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="50">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit3" loc="41(HplAtm1280GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="51">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit4" loc="41(HplAtm1280GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="52">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit5" loc="41(HplAtm1280GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="53">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit6" loc="41(HplAtm1280GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="54">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit7" loc="41(HplAtm1280GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="55">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB" loc="40(HplAtm1280GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit0" loc="41(HplAtm1280GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="56">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit1" loc="41(HplAtm1280GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="57">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit2" loc="41(HplAtm1280GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="58">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit3" loc="41(HplAtm1280GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="59">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit4" loc="41(HplAtm1280GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="60">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit5" loc="41(HplAtm1280GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="61">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit6" loc="41(HplAtm1280GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="62">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit7" loc="41(HplAtm1280GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="63">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC" loc="40(HplAtm1280GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit0" loc="41(HplAtm1280GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="64">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit1" loc="41(HplAtm1280GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="65">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit2" loc="41(HplAtm1280GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="66">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit3" loc="41(HplAtm1280GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="67">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit4" loc="41(HplAtm1280GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="68">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit5" loc="41(HplAtm1280GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="69">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit6" loc="41(HplAtm1280GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="70">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit7" loc="41(HplAtm1280GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="71">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD" loc="40(HplAtm1280GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit0" loc="41(HplAtm1280GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="72">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit1" loc="41(HplAtm1280GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="73">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit2" loc="41(HplAtm1280GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="74">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit3" loc="41(HplAtm1280GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="75">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit4" loc="41(HplAtm1280GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="76">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit5" loc="41(HplAtm1280GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="77">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit6" loc="41(HplAtm1280GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="78">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit7" loc="41(HplAtm1280GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="79">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE" loc="40(HplAtm1280GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit0" loc="41(HplAtm1280GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="80">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit1" loc="41(HplAtm1280GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="81">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit2" loc="41(HplAtm1280GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="82">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit3" loc="41(HplAtm1280GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="83">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit4" loc="41(HplAtm1280GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="84">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit5" loc="41(HplAtm1280GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="85">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit6" loc="41(HplAtm1280GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="86">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit7" loc="41(HplAtm1280GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="87">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF" loc="40(HplAtm1280GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit0" loc="41(HplAtm1280GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="88">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit1" loc="41(HplAtm1280GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="89">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit2" loc="41(HplAtm1280GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="90">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit3" loc="41(HplAtm1280GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="91">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit4" loc="41(HplAtm1280GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="92">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit5" loc="41(HplAtm1280GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="93">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit6" loc="41(HplAtm1280GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="94">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit7" loc="41(HplAtm1280GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="95">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F0" loc="42(HplAtm1280GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F1" loc="42(HplAtm1280GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F2" loc="42(HplAtm1280GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F3" loc="42(HplAtm1280GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F4" loc="42(HplAtm1280GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F5" loc="42(HplAtm1280GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F6" loc="42(HplAtm1280GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F7" loc="42(HplAtm1280GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G0" loc="42(HplAtm1280GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G1" loc="42(HplAtm1280GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G2" loc="42(HplAtm1280GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G3" loc="42(HplAtm1280GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G4" loc="42(HplAtm1280GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G5" loc="42(HplAtm1280GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H0" loc="42(HplAtm1280GeneralIOC.H0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H1" loc="42(HplAtm1280GeneralIOC.H1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H2" loc="42(HplAtm1280GeneralIOC.H2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H3" loc="42(HplAtm1280GeneralIOC.H3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H4" loc="42(HplAtm1280GeneralIOC.H4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H5" loc="42(HplAtm1280GeneralIOC.H5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H6" loc="42(HplAtm1280GeneralIOC.H6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H7" loc="42(HplAtm1280GeneralIOC.H7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J0" loc="42(HplAtm1280GeneralIOC.J0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J1" loc="42(HplAtm1280GeneralIOC.J1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J2" loc="42(HplAtm1280GeneralIOC.J2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J3" loc="42(HplAtm1280GeneralIOC.J3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J4" loc="42(HplAtm1280GeneralIOC.J4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J5" loc="42(HplAtm1280GeneralIOC.J5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J6" loc="42(HplAtm1280GeneralIOC.J6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J7" loc="42(HplAtm1280GeneralIOC.J7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K0" loc="42(HplAtm1280GeneralIOC.K0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K1" loc="42(HplAtm1280GeneralIOC.K1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K2" loc="42(HplAtm1280GeneralIOC.K2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K3" loc="42(HplAtm1280GeneralIOC.K3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K4" loc="42(HplAtm1280GeneralIOC.K4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K5" loc="42(HplAtm1280GeneralIOC.K5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K6" loc="42(HplAtm1280GeneralIOC.K6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K7" loc="42(HplAtm1280GeneralIOC.K7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L0" loc="42(HplAtm1280GeneralIOC.L0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L1" loc="42(HplAtm1280GeneralIOC.L1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L2" loc="42(HplAtm1280GeneralIOC.L2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L3" loc="42(HplAtm1280GeneralIOC.L3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L4" loc="42(HplAtm1280GeneralIOC.L4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L5" loc="42(HplAtm1280GeneralIOC.L5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L6" loc="42(HplAtm1280GeneralIOC.L6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L7" loc="42(HplAtm1280GeneralIOC.L7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PS2C" loc="11:PS2/PS2C.nc">
      <documentation loc="1:PS2/PS2C.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file    PS2C.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; Configuration of the PS2 module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PS2P" loc="18:PS2/PS2P.nc">
      <module/>
    </component>
    <component qname="HplAtmegaPinChange2C" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtmegaPinChange2C.nc">
      <module/>
    </component>
    <component qname="VolumeAdcC" loc="13:VolumeAdc/VolumeAdcC.nc">
      <documentation loc="1:VolumeAdc/VolumeAdcC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file VolumeAdcC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; Configuration of the VolumeAdc module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="VolumeAdcP" loc="13:VolumeAdc/VolumeAdcP.nc">
      <documentation loc="1:VolumeAdc/VolumeAdcP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file VolumeAdcP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; VolumeAdc module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="VolumeAdcC.Adc" loc="21(VolumeAdcC.Adc):../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.  Users of this component must link it to an&#10; implementation of Atm1280AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <documentation loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280AdcP" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc" safe="">
      <documentation loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
        <short>&#10; Internal component of the Atmega1280 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1280 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm1280AdcC" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
        <short>&#10; HPL for the Atmega1280 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1280 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280AdcP" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc" safe="">
      <documentation loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
        <short>&#10; HPL for the Atmega1280 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1280 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter" loc="89(Atm1280AdcC.AdcArbiter):../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter.Queue" loc="42(Atm1280AdcC.AdcArbiter.Queue):../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter.Arbiter" loc="52(Atm1280AdcC.AdcArbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280AdcC.PM" loc="67(Atm1280AdcC.PM):../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC.PM.PowerManager" loc="58(Atm1280AdcC.PM.PowerManager):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc" safe="">
      <documentation loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
        <short>&#10; Convert ATmega1280 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega1280 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RadioScannerAppC.Timer" loc="44(RadioScannerAppC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LlcC" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="ETHER_TYPE" ref="0x7f9292c18670" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
          <component-ref qname="LlcC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LlcP" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="ETHER_TYPE" ref="0x7f9292bc1530" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
          <component-ref qname="LlcP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PacketQueueC" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <typedef name="ITEM_TYPE" ref="0x7f9292b90b30" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
          <component-ref qname="PacketQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f9292b90b30"/></type-var>
        </typedef>
        <constant name="LEN" ref="0x7f9292b90e60" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
          <component-ref qname="PacketQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc" abstract="">
      <parameters>
        <typedef name="ITEM_TYPE" ref="0x7f9292b81ad0" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
          <component-ref qname="PacketQueueP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f9292b81ad0"/></type-var>
        </typedef>
        <constant name="QUEUE_LEN" ref="0x7f9292b81e40" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
          <component-ref qname="PacketQueueP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../tinyos_ws18/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncC" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc" abstract="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f9292acbc70" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f9292acbc70"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7f9292ac8060" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7f9292ac83f0" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncP" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f9292abc020" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f9292abc020"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7f9292abc3b0" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7f9292abc740" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f92929d2160" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f92929d2160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f929299e230" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f929299e230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f929299e560" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9292950de0" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9292950de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="IcmpC" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc" abstract="">
      <parameters>
        <constant name="TYPE" ref="0x7f9292918650" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
          <component-ref qname="IcmpC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IpC" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PROTOCOL" ref="0x7f929290b6b0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
          <component-ref qname="IpC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IpP" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PROTOCOL" ref="0x7f9292907650" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
          <component-ref qname="IpP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="IcmpP" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="TYPE" ref="0x7f92928bb020" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
          <component-ref qname="IcmpP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9292755900" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9292755c70" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9292752020" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9292748d00" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f92927450d0" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9292745460" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f92927457b0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f92926b2890" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f92926b2c20" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f92926af020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f92926af370" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortP" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f929260eba0" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f929260b020" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f929260b390" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f9292424e40" loc="83:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f9292416210" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../tinyos_ws18/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f929238c3d0" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f929238c760" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f929238caf0" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f929238ce40" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="UdpC" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PORT" ref="0x7f929234b450" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
          <component-ref qname="UdpC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="UdpP" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PORT" ref="0x7f9292345e70" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
          <component-ref qname="UdpP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:../tinyos_ws18/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:../tinyos_ws18/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f92922f4340" loc="41:../tinyos_ws18/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f92922f4340"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7f92922f46b0" loc="41:../tinyos_ws18/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:../tinyos_ws18/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:../tinyos_ws18/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f92922ed5c0" loc="53:../tinyos_ws18/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f92922ed5c0"/></type-var>
        </typedef>
        <constant name="size" ref="0x7f92922ed900" loc="53:../tinyos_ws18/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../tinyos_ws18/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../tinyos_ws18/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f92922cc760" loc="42:../tinyos_ws18/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f92922cc760"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f92922ccae0" loc="42:../tinyos_ws18/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f9292189c20" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbiterP" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f9292179a00" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9291e964c0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9291e96860" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9291e96c00" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f9291e95020" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.  Users of this component must link it to an&#10; implementation of Atm1280AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f9291c61020" loc="89:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f9291c5bac0" loc="42:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadC" loc="23:../tinyos_ws18/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7f9291beb1f0" loc="23:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7f9291beb1f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f9292dc1bf0" loc="58:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f9292dc1bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292dc4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f9292dc2720" loc="57:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f9292dc2720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f9292dc2aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f9292dbed50" loc="52:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f9292dbed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292dbd100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9292dc4d00" loc="46:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9292dc4d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292dbf0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f9292dbe020" loc="50:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9292dbe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f9292dbe3a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f9292dbe530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f9292dbe6c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f9292dbe850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f9292dbe9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f9292db67a0" loc="45:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f9292db67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292db6b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9292db60c0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9292db60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292db6440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f9292db5020" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f9292db5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292db53a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f9292dae6f0" loc="4:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f9292dae6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292daea70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f9292dae020" loc="3:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f9292dae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292dae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9292da5860" loc="51:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9292da5860"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9292f513a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9292f513a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292da5be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f9292da4020" loc="52:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9292da4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f9292da43a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f9292da4530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f9292da46c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f9292da4850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f9292da49e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f9292d91720" loc="60:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f9292d91720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292d91aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f9292dc0e20" loc="57:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f9292dc0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f9292d921c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f9292d91020" loc="59:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f9292d91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292d913a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f9292d924b0" loc="58:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f9292d924b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292d92830"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f9292d929c0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f9292d92b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f9292f45bd0" loc="48:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f9292f45bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9292f79020"/>
        <function-ref name="runTask" scoped="" ref="0x7f9292f791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f9292f4fa20" loc="47:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f9292f4fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292f4fda0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f92938fd020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f92938fd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f9292e4f9e0" loc="56:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f9292e4f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9292e4fd60"/>
        <function-ref name="runTask" scoped="" ref="0x7f9292e4d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f9292e4a0d0" loc="57:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f9292e4a0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f9292e4a450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f9292e50990" loc="55:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f9292e50990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292e50d10"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f9292e4f020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f9292e4f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f9292e2dde0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9292e2dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f9292e30180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f9292e68080" loc="84:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f9292e68080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f9292e68400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f9292e2e5a0" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f9292e2e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f9292e2e920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DB" ref="0x7f9292d6b590" loc="21:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DB" scoped="" ref="0x7f9292d6b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Database"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannelList" scoped="" ref="0x7f9292d6b910"/>
        <function-ref name="receivedChannelEntry" scoped="" ref="0x7f9292d6baa0"/>
        <function-ref name="saveChannel" scoped="" ref="0x7f9292d6bc30"/>
        <function-ref name="savedChannel" scoped="" ref="0x7f9292d6bdc0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9292d73020"/>
        <function-ref name="purgeChannelList" scoped="" ref="0x7f9292d731b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f9292d860c0" loc="18:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f9292d860c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f9292d86440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x7f9292d734d0" loc="22:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x7f9292d734d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292d73850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="volumeKnob" ref="0x7f9292d5a860" loc="25:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="volumeKnob" scoped="" ref="0x7f9292d5a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9292d5f480"/>
        <function-ref name="readDone" scoped="" ref="0x7f9292d5f900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="inputTuneChannel" ref="0x7f9292d46840" loc="59:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="inputTuneChannel" scoped="" ref="0x7f9292d46840"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9292d46bc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9292d46d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Keyboard" ref="0x7f9292d5dd20" loc="24:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Keyboard" scoped="" ref="0x7f9292d5dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292d690e0"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f9292d69270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="handleChar" ref="0x7f9292d45ad0" loc="66:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="handleChar" scoped="" ref="0x7f9292d45ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9292d45e50"/>
        <function-ref name="runTask" scoped="" ref="0x7f9292d43020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioInitFail" ref="0x7f9292d25940" loc="180:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioInitFail" scoped="" ref="0x7f9292d25940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9292d25cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9292d25e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="seekBand" ref="0x7f9292d30590" loc="157:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="seekBand" scoped="" ref="0x7f9292d30590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9292d30910"/>
        <function-ref name="runTask" scoped="" ref="0x7f9292d30aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="finishedSeeking" ref="0x7f9292d1d190" loc="204:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="finishedSeeking" scoped="" ref="0x7f9292d1d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9292d1d510"/>
        <function-ref name="runTask" scoped="" ref="0x7f9292d1d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="handleRDS" ref="0x7f9292d18190" loc="220:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="handleRDS" scoped="" ref="0x7f9292d18190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9292d18510"/>
        <function-ref name="runTask" scoped="" ref="0x7f9292d186a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DBInit" ref="0x7f9292d85e10" loc="20:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DBInit" scoped="" ref="0x7f9292d85e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292d841c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Radio" ref="0x7f9292d60360" loc="23:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Radio" scoped="" ref="0x7f9292d60360"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f9292d6a4d0"/>
        <function-ref name="initDone" scoped="" ref="0x7f9292d60870"/>
        <function-ref name="setVolume" scoped="" ref="0x7f9292d60a00"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f9292d60b90"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f9292d60d20"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f9292d6a020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9292d6a1b0"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f9292d6a340"/>
        <function-ref name="seek" scoped="" ref="0x7f9292d606e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="finishedTuning" ref="0x7f9292d23b60" loc="186:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="finishedTuning" scoped="" ref="0x7f9292d23b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9292d22020"/>
        <function-ref name="runTask" scoped="" ref="0x7f9292d221b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readyScreen" ref="0x7f9292d2e1d0" loc="162:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readyScreen" scoped="" ref="0x7f9292d2e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9292d2e650"/>
        <function-ref name="runTask" scoped="" ref="0x7f9292d2e7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f9292d74980" loc="19:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f9292d74980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f9292d85b10"/>
        <function-ref name="drawRect" scoped="" ref="0x7f9292d85020"/>
        <function-ref name="drawLine" scoped="" ref="0x7f9292d851b0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f9292d85340"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f9292d854d0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f9292d85660"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f9292d857f0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f9292d74d00"/>
        <function-ref name="drawText" scoped="" ref="0x7f9292d85980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9292d4fe20" loc="26:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9292d4fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9292d4c390"/>
        <function-ref name="fired" scoped="" ref="0x7f9292d4e970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9292d4d720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9292d4d2a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9292d4cc90"/>
        <function-ref name="gett0" scoped="" ref="0x7f9292d4c810"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9292d4edf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9292d58a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9292d4dd30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9292d4e020"/>
        <function-ref name="stop" scoped="" ref="0x7f9292d4e4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9292ce10c0" loc="17:Database/DatabaseC.nc">
      <component-ref qname="DatabaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9292ce10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292ce1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Database" ref="0x7f9292ce16f0" loc="18:Database/DatabaseC.nc">
      <component-ref qname="DatabaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Database" scoped="" ref="0x7f9292ce16f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Database"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannelList" scoped="" ref="0x7f9292ce1a70"/>
        <function-ref name="receivedChannelEntry" scoped="" ref="0x7f9292ce1c00"/>
        <function-ref name="saveChannel" scoped="" ref="0x7f9292ce1d90"/>
        <function-ref name="savedChannel" scoped="" ref="0x7f9292ce0020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9292ce01b0"/>
        <function-ref name="purgeChannelList" scoped="" ref="0x7f9292ce0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RecvQ" ref="0x7f9292cac700" loc="34:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RecvQ" scoped="" ref="0x7f9292cac700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:130" alignment="I:1"><struct-ref name="udp_msg" ref="0x7f9292ce52e0"/>
              <typename><typedef-ref name="udp_msg_t" ref="0x7f9292ce5c20"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f9292caa5f0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f9292ca83a0"/>
        <function-ref name="element" scoped="" ref="0x7f9292ca8a10"/>
        <function-ref name="full" scoped="" ref="0x7f9292cab810"/>
        <function-ref name="maxSize" scoped="" ref="0x7f9292caa170"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9292caaca0"/>
        <function-ref name="empty" scoped="" ref="0x7f9292cab390"/>
        <function-ref name="size" scoped="" ref="0x7f9292cabc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQ" ref="0x7f9292cafb00" loc="33:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQ" scoped="" ref="0x7f9292cafb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:130" alignment="I:1"><struct-ref name="udp_msg" ref="0x7f9292ce52e0"/>
              <typename><typedef-ref name="udp_msg_t" ref="0x7f9292ce5c20"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f9292cb7990"/>
        <function-ref name="enqueue" scoped="" ref="0x7f9292cad740"/>
        <function-ref name="element" scoped="" ref="0x7f9292caddb0"/>
        <function-ref name="full" scoped="" ref="0x7f9292cb8bd0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f9292cb7510"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9292cad090"/>
        <function-ref name="empty" scoped="" ref="0x7f9292cb8750"/>
        <function-ref name="size" scoped="" ref="0x7f9292cb7090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpControl" ref="0x7f9292cd4080" loc="30:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f9292cd4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f9292cd4400"/>
        <function-ref name="getGateway" scoped="" ref="0x7f9292cd4590"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f9292cd4720"/>
        <function-ref name="getIp" scoped="" ref="0x7f9292cd48b0"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f9292cd4a40"/>
        <function-ref name="setIp" scoped="" ref="0x7f9292cd4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f9292ca54f0" loc="48:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f9292ca54f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9292ca5870"/>
        <function-ref name="runTask" scoped="" ref="0x7f9292ca5a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9292cd7620" loc="23:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9292cd7620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292cd79a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Database" ref="0x7f9292cd7c50" loc="24:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Database" scoped="" ref="0x7f9292cd7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Database"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannelList" scoped="" ref="0x7f9292cd6020"/>
        <function-ref name="receivedChannelEntry" scoped="" ref="0x7f9292cd61b0"/>
        <function-ref name="saveChannel" scoped="" ref="0x7f9292cd6340"/>
        <function-ref name="savedChannel" scoped="" ref="0x7f9292cd64d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9292cd6660"/>
        <function-ref name="purgeChannelList" scoped="" ref="0x7f9292cd67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UdpSend" ref="0x7f9292cd5020" loc="28:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpSend" scoped="" ref="0x7f9292cd5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292cd53a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292cd5530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Control" ref="0x7f9292cc0180" loc="31:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Control" scoped="" ref="0x7f9292cc0180"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f9292cc0500"/>
        <function-ref name="stopDone" scoped="" ref="0x7f9292cc0690"/>
        <function-ref name="start" scoped="" ref="0x7f9292cc0820"/>
        <function-ref name="stop" scoped="" ref="0x7f9292cc09b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UdpReceive" ref="0x7f9292cca140" loc="29:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7f9292cca140"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9292cca4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MsgPool" ref="0x7f9292cbbe80" loc="32:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MsgPool" scoped="" ref="0x7f9292cbbe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:130" alignment="I:1"><struct-ref name="udp_msg" ref="0x7f9292ce52e0"/>
            <typename><typedef-ref name="udp_msg_t" ref="0x7f9292ce5c20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9292cb9090"/>
        <function-ref name="maxSize" scoped="" ref="0x7f9292cba4a0"/>
        <function-ref name="empty" scoped="" ref="0x7f9292cc4a90"/>
        <function-ref name="put" scoped="" ref="0x7f9292cba920"/>
        <function-ref name="size" scoped="" ref="0x7f9292cba020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f9292ca70f0" loc="36:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f9292ca70f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f9292ca61b0"/>
        <function-ref name="drawRect" scoped="" ref="0x7f9292ca7600"/>
        <function-ref name="drawLine" scoped="" ref="0x7f9292ca7790"/>
        <function-ref name="setPixel" scoped="" ref="0x7f9292ca7920"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f9292ca7ab0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f9292ca7c40"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f9292ca7dd0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f9292ca7470"/>
        <function-ref name="drawText" scoped="" ref="0x7f9292ca6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="recvTask" ref="0x7f9292ca33c0" loc="49:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="recvTask" scoped="" ref="0x7f9292ca33c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9292ca3740"/>
        <function-ref name="runTask" scoped="" ref="0x7f9292ca38d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f9292c24620" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9292c24620"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9292f513a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9292f513a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f9292cd8b70"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f9292cd7180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292c23390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292c238a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpControl" ref="0x7f9292c1f020" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f9292c1f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f9292c1f3a0"/>
        <function-ref name="getGateway" scoped="" ref="0x7f9292c1f530"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f9292c1f6c0"/>
        <function-ref name="getIp" scoped="" ref="0x7f9292c1f850"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f9292c1f9e0"/>
        <function-ref name="setIp" scoped="" ref="0x7f9292c1fb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpPacket" ref="0x7f9292c1caf0" loc="14:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpPacket" scoped="" ref="0x7f9292c1caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacket" scoped="" ref="0x7f9292c1ce70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7f9292c1d8a0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f9292c1d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9292c1dc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f9292c12360" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9292c12360"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f9292cd8b70"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f9292cd7180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292c11020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292c11530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcReceive" ref="0x7f9292c0c020" loc="16:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f9292c0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9292c0c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpControl" ref="0x7f9292c0f690" loc="14:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f9292c0f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f9292c0fa10"/>
        <function-ref name="getGateway" scoped="" ref="0x7f9292c0fba0"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f9292c0fd30"/>
        <function-ref name="getIp" scoped="" ref="0x7f9292c0e020"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f9292c0e1b0"/>
        <function-ref name="setIp" scoped="" ref="0x7f9292c0e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcSend" ref="0x7f9292c0a580" loc="15:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f9292c0a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292c0a900"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292c0aa90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Arp" ref="0x7f9292bff820" loc="17:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Arp" scoped="" ref="0x7f9292bff820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Arp"/>
      </instance>
      <interface-functions>
        <function-ref name="resolve" scoped="" ref="0x7f9292bffba0"/>
        <function-ref name="resolved" scoped="" ref="0x7f9292bffd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9292c09020" loc="18:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9292c09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292c093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpPacket" ref="0x7f9292c09690" loc="19:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpPacket" scoped="" ref="0x7f9292c09690"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacket" scoped="" ref="0x7f9292c09a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7f9292c0f020" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f9292c0f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9292c0f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7f9292bc5d90" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="IpTransceiverC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f9292bc5d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9292b4b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7f9292bc55f0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="IpTransceiverC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f9292bc55f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292bc5970"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292bc5b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f9292bc0930" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9292bc0930"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9292f513a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9292f513a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9292c137e0"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f9292c13d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292bbf560"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292bbfa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7f9292bbe520" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f9292bbe520"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9292bbe8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MacControl" ref="0x7f9292bb6140" loc="14:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MacControl" scoped="" ref="0x7f9292bb6140"/></type-interface>
      <instance>
        <interfacedef-ref qname="MacControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getMac" scoped="" ref="0x7f9292bb64c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mac" ref="0x7f9292bb87f0" loc="13:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7f9292bb87f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292bb8b70"/>
        <function-ref name="received" scoped="" ref="0x7f9292bb8d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292bbd020"/>
        <function-ref name="getMac" scoped="" ref="0x7f9292bbd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f9292bb5290" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9292bb5290"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9292c137e0"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f9292c13d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292bb5e80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292bb43b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7f9292bb4e30" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f9292bb4e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9292bb21e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MacControl" ref="0x7f9292bb1020" loc="14:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MacControl" scoped="" ref="0x7f9292bb1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MacControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getMac" scoped="" ref="0x7f9292bb13a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mac" ref="0x7f9292bb2490" loc="13:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7f9292bb2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292bb2810"/>
        <function-ref name="received" scoped="" ref="0x7f9292bb29a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292bb2b30"/>
        <function-ref name="getMac" scoped="" ref="0x7f9292bb2cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7f9291ba81b0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="IpTransceiverC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f9291ba81b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9291ba8530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9291ba86c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcQueue" ref="0x7f9291ba8950" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="IpTransceiverC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7f9291ba8950"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9291ba8cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9291ba8e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcQueue" ref="0x7f9292b911d0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <component-ref qname="LlcQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7f9292b911d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292b91550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292b916e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f9292b60d50" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="LlcQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9292b60d50"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9292f513a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9292f513a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9292c137e0"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f9292c13d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292b5f980"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292b5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f9292b8fe10" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="LlcQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9292b8fe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9292c137e0"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f9292c13d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292b60020"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9292b8ea80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292b604f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f9291b9c770" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="LlcQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9291b9c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9292c137e0"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f9292c13d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9291b9b390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9291b9b8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f9291b9fa00" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="LlcQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9291b9fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9292c137e0"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f9292c13d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9291b9db80"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9291b9d670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9291b9c090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f9291b9bd60" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="LlcQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f9291b9bd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9291b99180"/>
        <function-ref name="runTask" scoped="" ref="0x7f9291b99310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f9292b5a250" loc="13:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueP.nc">
      <component-ref qname="LlcQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9292b5a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9292c137e0"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f9292c13d60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292b58380"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9292b5ae40"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292b58850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcQueue" ref="0x7f9292b5b840" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueP.nc">
      <component-ref qname="LlcQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7f9292b5b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292b5bbc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292b5bd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpControl" ref="0x7f9292b478c0" loc="10:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <component-ref qname="ArpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f9292b478c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f9292b47c40"/>
        <function-ref name="getGateway" scoped="" ref="0x7f9292b47dd0"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f9292b46020"/>
        <function-ref name="getIp" scoped="" ref="0x7f9292b461b0"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f9292b46340"/>
        <function-ref name="setIp" scoped="" ref="0x7f9292b464d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Arp" ref="0x7f9292b470c0" loc="9:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <component-ref qname="ArpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Arp" scoped="" ref="0x7f9292b470c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Arp"/>
      </instance>
      <interface-functions>
        <function-ref name="resolve" scoped="" ref="0x7f9292b47440"/>
        <function-ref name="resolved" scoped="" ref="0x7f9292b475d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f9292b439e0" loc="13:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9292b439e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f9292c03cc0"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f9292c02650"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292b42670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292b42b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timeout" ref="0x7f9292b3e0b0" loc="15:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timeout" scoped="" ref="0x7f9292b3e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9292b3b630"/>
        <function-ref name="fired" scoped="" ref="0x7f9292b3db00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9292b3c920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9292b3c4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9292b39020"/>
        <function-ref name="gett0" scoped="" ref="0x7f9292b3bab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9292b3c020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9292b3eca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9292b3b020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9292b3d1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f9292b3d680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClearCacheTimeout" ref="0x7f9292b396e0" loc="16:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClearCacheTimeout" scoped="" ref="0x7f9292b396e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9292b36c40"/>
        <function-ref name="fired" scoped="" ref="0x7f9292b371e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9292b36020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9292b37ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9292b34590"/>
        <function-ref name="gett0" scoped="" ref="0x7f9292b34110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9292b37660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9292b38390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9292b36630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9292b38860"/>
        <function-ref name="stop" scoped="" ref="0x7f9292b38d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcReceive" ref="0x7f9292b33320" loc="18:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f9292b33320"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9292b336a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f9292b41260" loc="14:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9292b41260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f9292c03cc0"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f9292c02650"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292b40390"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9292b41e50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292b40860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Arp" ref="0x7f9292b43020" loc="12:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Arp" scoped="" ref="0x7f9292b43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Arp"/>
      </instance>
      <interface-functions>
        <function-ref name="resolve" scoped="" ref="0x7f9292b433a0"/>
        <function-ref name="resolved" scoped="" ref="0x7f9292b43530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcSend" ref="0x7f9292b34a10" loc="17:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f9292b34a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292b34d90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292b33020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpControl" ref="0x7f9292b33990" loc="19:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f9292b33990"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f9292b33d10"/>
        <function-ref name="getGateway" scoped="" ref="0x7f9292b32020"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f9292b321b0"/>
        <function-ref name="getIp" scoped="" ref="0x7f9292b32340"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f9292b324d0"/>
        <function-ref name="setIp" scoped="" ref="0x7f9292b32660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MacControl" ref="0x7f9292b32960" loc="20:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MacControl" scoped="" ref="0x7f9292b32960"/></type-interface>
      <instance>
        <interfacedef-ref qname="MacControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getMac" scoped="" ref="0x7f9292b32ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9292b31020" loc="21:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9292b31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292b313a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f929293d140" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="ArpC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f929293d140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9292939630"/>
        <function-ref name="fired" scoped="" ref="0x7f929293cb70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f929293a920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f929293a4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9292938020"/>
        <function-ref name="gett0" scoped="" ref="0x7f9292939ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929293a020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f929293dd30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9292939020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f929293c220"/>
        <function-ref name="stop" scoped="" ref="0x7f929293c6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f9292af3aa0" loc="49:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f9292af3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9292aee020"/>
        <function-ref name="fired" scoped="" ref="0x7f9292af1510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9292aef300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9292af1e10"/>
        <function-ref name="getdt" scoped="" ref="0x7f9292aee920"/>
        <function-ref name="gett0" scoped="" ref="0x7f9292aee4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9292af1990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9292af26b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9292aef910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9292af2b80"/>
        <function-ref name="stop" scoped="" ref="0x7f9292af1090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f9292ae95a0" loc="46:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f9292ae95a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9292ae6a80"/>
        <function-ref name="fired" scoped="" ref="0x7f9292ae7090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9292ae7e10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9292ae7990"/>
        <function-ref name="getdt" scoped="" ref="0x7f9292ae44a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f9292ae4020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9292ae7510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9292ae8200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9292ae6470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9292ae86d0"/>
        <function-ref name="stop" scoped="" ref="0x7f9292ae8ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f9292ae3020" loc="47:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f9292ae3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9292ae3c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9292aec7a0" loc="45:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9292aec7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292aecb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f9292accb40" loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f9292accb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9292ad1970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9292ad0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9292ad1e30"/>
        <function-ref name="overflow" scoped="" ref="0x7f9292ad0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9292adf7a0" loc="27:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9292adf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292adfb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f9292adb440" loc="28:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f9292adb440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9292ad3db0"/>
        <function-ref name="fired" scoped="" ref="0x7f9292adada0"/>
        <function-ref name="startAt" scoped="" ref="0x7f9292ad3760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9292ad32a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9292ad22a0"/>
        <function-ref name="start" scoped="" ref="0x7f9292ada3d0"/>
        <function-ref name="stop" scoped="" ref="0x7f9292ada8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f92929dc4b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f92929dc4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f92929dadb0"/>
        <function-ref name="fired" scoped="" ref="0x7f92929dbda0"/>
        <function-ref name="startAt" scoped="" ref="0x7f92929da760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f92929da2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f92929d92a0"/>
        <function-ref name="start" scoped="" ref="0x7f92929db3d0"/>
        <function-ref name="stop" scoped="" ref="0x7f92929db8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f92929ddba0" loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f92929ddba0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f9292f51020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f9292f51020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f92929dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f92929d98d0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f92929d98d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f92929d7780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f92929d6150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f92929d7c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f92929d6610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f9291b6fe20" loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9291b6fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9291b6e1c0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9291b6e350"/>
        <function-ref name="getControlA" scoped="" ref="0x7f9291b6e4e0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f9291b6e670"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9291b6e800"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9291b6e990"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9291b6eb20"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9291b6ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9291b7b530" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f9291b7b530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9291b78db0"/>
        <function-ref name="fired" scoped="" ref="0x7f9291b79da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f9291b78760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9291b782a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9291b772a0"/>
        <function-ref name="start" scoped="" ref="0x7f9291b793d0"/>
        <function-ref name="stop" scoped="" ref="0x7f9291b798e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9291b7ccb0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9291b7ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9291b7b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9291b778d0" loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9291b778d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9291b76780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9291b74150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9291b76c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f9291b74610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x7f9291b69450" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f9291b69450"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f9291b697d0"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f9291b69960"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f9291b69af0"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f9291b69c80"/>
        <function-ref name="countBusy" scoped="" ref="0x7f9291b69e10"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f9291b68020"/>
        <function-ref name="getAssr" scoped="" ref="0x7f9291b681b0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f9291b68340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f9291b6d0a0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f9291b6d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9291b6ba10"/>
        <function-ref name="fired" scoped="" ref="0x7f9291b6c6c0"/>
        <function-ref name="get" scoped="" ref="0x7f9291b6dcd0"/>
        <function-ref name="reset" scoped="" ref="0x7f9291b6cb80"/>
        <function-ref name="isOn" scoped="" ref="0x7f9291b69020"/>
        <function-ref name="set" scoped="" ref="0x7f9291b6c1b0"/>
        <function-ref name="start" scoped="" ref="0x7f9291b6b090"/>
        <function-ref name="stop" scoped="" ref="0x7f9291b6b550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9291b74bc0" loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9291b74bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9291b6f020"/>
        <function-ref name="test" scoped="" ref="0x7f9291b71590"/>
        <function-ref name="get" scoped="" ref="0x7f9291b73820"/>
        <function-ref name="setScale" scoped="" ref="0x7f9291b6f4e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f9291b6f9f0"/>
        <function-ref name="reset" scoped="" ref="0x7f9291b72720"/>
        <function-ref name="overflow" scoped="" ref="0x7f9291b72260"/>
        <function-ref name="isOn" scoped="" ref="0x7f9291b71a50"/>
        <function-ref name="set" scoped="" ref="0x7f9291b73ce0"/>
        <function-ref name="start" scoped="" ref="0x7f9291b72be0"/>
        <function-ref name="stop" scoped="" ref="0x7f9291b710d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f9292a4f570" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9292a4f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9292a4f8f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9292a4fa80"/>
        <function-ref name="getControlA" scoped="" ref="0x7f9292a4fc10"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f9292a4fda0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9292a4d020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9292a4d1b0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9292a4d340"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9292a4d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7f9292a4ad60" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f9292a4ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f9292a48180"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f9292a48310"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f9292a484a0"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f9292a48630"/>
        <function-ref name="countBusy" scoped="" ref="0x7f9292a487c0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f9292a48950"/>
        <function-ref name="getAssr" scoped="" ref="0x7f9292a48ae0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f9292a48c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9292a4d9d0" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f9292a4d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9292a4a350"/>
        <function-ref name="fired" scoped="" ref="0x7f9292a4b020"/>
        <function-ref name="get" scoped="" ref="0x7f9292a4c630"/>
        <function-ref name="reset" scoped="" ref="0x7f9292a4b4e0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9292a4a810"/>
        <function-ref name="set" scoped="" ref="0x7f9292a4caf0"/>
        <function-ref name="start" scoped="" ref="0x7f9292a4b9a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9292a4be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9292a54190" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9292a54190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9292a504e0"/>
        <function-ref name="test" scoped="" ref="0x7f9292a51b30"/>
        <function-ref name="get" scoped="" ref="0x7f9292a54dc0"/>
        <function-ref name="setScale" scoped="" ref="0x7f9292a509a0"/>
        <function-ref name="getScale" scoped="" ref="0x7f9292a4f020"/>
        <function-ref name="reset" scoped="" ref="0x7f9292a52cb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9292a527f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9292a50020"/>
        <function-ref name="set" scoped="" ref="0x7f9292a522e0"/>
        <function-ref name="start" scoped="" ref="0x7f9292a511b0"/>
        <function-ref name="stop" scoped="" ref="0x7f9292a51670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f9292a3f7b0" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9292a3f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9292a3fb30"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9292a3fcc0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f9292a3fe50"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f9292a3e020"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9292a3e1b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9292a3e340"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9292a3e4d0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9292a3e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f9292a39020" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9292a39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f9292a393a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7f9292a39750" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f9292a39750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f9292a39ad0"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f9292a39c60"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f9292a39df0"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f9292a38020"/>
        <function-ref name="countBusy" scoped="" ref="0x7f9292a381b0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f9292a38340"/>
        <function-ref name="getAssr" scoped="" ref="0x7f9292a384d0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f9292a38660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9292a3eb60" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f9292a3eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9292a3b550"/>
        <function-ref name="fired" scoped="" ref="0x7f9292a3c1f0"/>
        <function-ref name="get" scoped="" ref="0x7f9292a3d7d0"/>
        <function-ref name="reset" scoped="" ref="0x7f9292a3c6b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9292a3ba10"/>
        <function-ref name="set" scoped="" ref="0x7f9292a3dc90"/>
        <function-ref name="start" scoped="" ref="0x7f9292a3cb70"/>
        <function-ref name="stop" scoped="" ref="0x7f9292a3b090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9292a44270" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9292a44270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9292a41810"/>
        <function-ref name="test" scoped="" ref="0x7f9292a42e60"/>
        <function-ref name="get" scoped="" ref="0x7f9292a43020"/>
        <function-ref name="setScale" scoped="" ref="0x7f9292a41cd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f9292a3f260"/>
        <function-ref name="reset" scoped="" ref="0x7f9292a42020"/>
        <function-ref name="overflow" scoped="" ref="0x7f9292a439f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9292a41350"/>
        <function-ref name="set" scoped="" ref="0x7f9292a434e0"/>
        <function-ref name="start" scoped="" ref="0x7f9292a424e0"/>
        <function-ref name="stop" scoped="" ref="0x7f9292a429a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f92929a3020" loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f92929a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f92929a33a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f92929a3530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f92929a8cd0" loc="49:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f92929a8cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f92929a5670"/>
        <function-ref name="fired" scoped="" ref="0x7f92929a6550"/>
        <function-ref name="startAt" scoped="" ref="0x7f92929a5020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f92929a6a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f92929a5b30"/>
        <function-ref name="start" scoped="" ref="0x7f92929a7b60"/>
        <function-ref name="stop" scoped="" ref="0x7f92929a6090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f92929ad830" loc="48:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f92929ad830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f92929aacf0"/>
        <function-ref name="fired" scoped="" ref="0x7f92929ab300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f92929aa0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f92929abc00"/>
        <function-ref name="getdt" scoped="" ref="0x7f92929a8660"/>
        <function-ref name="gett0" scoped="" ref="0x7f92929a81e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f92929ab780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f92929ac480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f92929aa6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f92929ac950"/>
        <function-ref name="stop" scoped="" ref="0x7f92929ace20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f9292952a00" loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f9292952a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9292952d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f9292951020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f9292957640" loc="49:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f9292957640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9292953c40"/>
        <function-ref name="fired" scoped="" ref="0x7f92929551e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9292953020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9292955ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9292952590"/>
        <function-ref name="gett0" scoped="" ref="0x7f9292952110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9292955660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9292956390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9292953630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9292956860"/>
        <function-ref name="stop" scoped="" ref="0x7f9292956d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f929295d150" loc="48:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f929295d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9292959700"/>
        <function-ref name="fired" scoped="" ref="0x7f929295cc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f929295aa50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f929295a5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9292957090"/>
        <function-ref name="gett0" scoped="" ref="0x7f9292959ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929295a110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f929295dd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f92929590d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f929295c2a0"/>
        <function-ref name="stop" scoped="" ref="0x7f929295c790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f929294f790" loc="48:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f929294f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929294e3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f929294ea60" loc="49:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f929294ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9292944890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9292942260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9292944d50"/>
        <function-ref name="overflow" scoped="" ref="0x7f9292942720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9292937b00" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="ArpC.ClearCacheTimeoutC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9292937b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9292932110"/>
        <function-ref name="fired" scoped="" ref="0x7f92929345b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f92929334a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9292933020"/>
        <function-ref name="getdt" scoped="" ref="0x7f9292932a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f9292932590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9292934a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9292936750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9292933ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9292936c20"/>
        <function-ref name="stop" scoped="" ref="0x7f9292934130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7f929292e020" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="ArpC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f929292e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f929292e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7f9292930700" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="ArpC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f9292930700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292930a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292930c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7f9291b108f0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="ArpC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f9291b108f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9291b10c70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9291b10e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcQueue" ref="0x7f9291b0f0c0" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="ArpC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7f9291b0f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9291b0f440"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9291b0f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f929292a360" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="ArpC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f929292a360"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9292f513a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9292f513a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f9292c03cc0"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f9292c02650"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292928020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292928530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f929292c4a0" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="ArpC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f929292c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f9292c03cc0"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f9292c02650"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929292b5e0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f929292b0d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929292bab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f9291b05240" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="ArpC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9291b05240"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f9292c03cc0"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f9292c02650"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9291b05e30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9291b03380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f9291b07510" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="ArpC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9291b07510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f9292c03cc0"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f9292c02650"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9291b06640"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9291b06130"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9291b06b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f9291b03840" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="ArpC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f9291b03840"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9291b03bc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9291b03d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7f929291dd90" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="PingC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f929291dd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9292894180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7f929291d5f0" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="PingC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f929291d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929291d970"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929291db00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f92929179e0" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <component-ref qname="IcmpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f92929179e0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9292f513a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9292f513a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f9292919b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f9292918230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929290e670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929290eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7f929290c610" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <component-ref qname="IcmpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f929290c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f929290c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7f9292909430" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="IcmpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f9292909430"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92929097b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292909940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7f9292909bd0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="IcmpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f9292909bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f92928dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7f9291aeb680" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="IcmpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f9291aeb680"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9291aeba00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9291aebb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpQueue" ref="0x7f9291aebe20" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="IcmpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7f9291aebe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9291aea1c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9291aea350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpQueue" ref="0x7f92928f8d60" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <component-ref qname="IpQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7f92928f8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92928f5180"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92928f5310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f92928f0020" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f92928f0020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9292f513a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9292f513a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f9292cd8b70"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f9292cd7180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92928f0c10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92928ef170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f92928f3060" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f92928f3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f9292cd8b70"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f9292cd7180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92928f11b0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f92928f3c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92928f1680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f9291ae0890" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9291ae0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f9292cd8b70"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f9292cd7180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9291adf4c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9291adf9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f9291ae2b70" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9291ae2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f9292cd8b70"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f9292cd7180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9291ae1ca0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9291ae1790"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9291ae01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f9291add020" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f9291add020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9291add3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9291add530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpQueue" ref="0x7f92928ee9f0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpQueueP.nc">
      <component-ref qname="IpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7f92928ee9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92928eed70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92928eb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f92928eb4e0" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpQueueP.nc">
      <component-ref qname="IpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f92928eb4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f9292cd8b70"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f9292cd7180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92928e9620"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f92928e9110"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92928e9af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f92928d9290" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f92928d9290"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f9292919b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f9292918230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92928d9e80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92928d83b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpSend" ref="0x7f92928d7490" loc="13:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f92928d7490"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92928d7810"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92928d79a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7f92928d8df0" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f92928d8df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f92928d71c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpReceive" ref="0x7f92928d7c90" loc="14:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f92928d7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f92928d60a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpQueue" ref="0x7f9291af0060" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="PingC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7f9291af0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9291af03e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9291af0570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7f9291af1870" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="PingC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f9291af1870"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9291af1bf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9291af1d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpQueue" ref="0x7f92928ae410" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <component-ref qname="IcmpQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7f92928ae410"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92928ae790"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92928ae920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f92928a99d0" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f92928a99d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9292f513a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9292f513a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f9292919b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f9292918230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92928a75f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92928a7b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f92928abae0" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f92928abae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f9292919b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f9292918230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92928aac60"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f92928aa750"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92928a9170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f9291ac4d20" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9291ac4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f9292919b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f9292918230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9291ac3940"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9291ac3e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f9291ac6020" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9291ac6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f9292919b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f9292918230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9291ac4170"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f9291ac6c10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9291ac4640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f9291ac2340" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f9291ac2340"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9291ac26c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9291ac2850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpQueue" ref="0x7f92928a3450" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueP.nc">
      <component-ref qname="IcmpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7f92928a3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92928a37d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92928a3960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f92928a3e30" loc="13:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueP.nc">
      <component-ref qname="IcmpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f92928a3e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f9292919b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f9292918230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92928a1020"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f92928a2a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92928a14f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpReceive" ref="0x7f9292891130" loc="9:../tinyos_ws18/tos/lib_ecs/ping/PingP.nc">
      <component-ref qname="PingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f9292891130"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f92928914b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpSend" ref="0x7f92928917a0" loc="10:../tinyos_ws18/tos/lib_ecs/ping/PingP.nc">
      <component-ref qname="PingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f92928917a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292891b20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292891cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7f9292888220" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <component-ref qname="GlcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f9292888220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f9292887340"/>
        <function-ref name="drawRect" scoped="" ref="0x7f9292888730"/>
        <function-ref name="drawLine" scoped="" ref="0x7f92928888c0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f9292888a50"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f9292888be0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f9292888d70"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f9292887020"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f92928885a0"/>
        <function-ref name="drawText" scoped="" ref="0x7f92928871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9292853020" loc="44:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9292853020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f92928533a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hpl" ref="0x7f929284c640" loc="45:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hpl" scoped="" ref="0x7f929284c640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f929284c9c0"/>
        <function-ref name="init" scoped="" ref="0x7f929284cb50"/>
        <function-ref name="dataRead" scoped="" ref="0x7f929284cce0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f929284ce70"/>
        <function-ref name="controlRead" scoped="" ref="0x7f9292852030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7f9292855bf0" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f9292855bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f9292854ca0"/>
        <function-ref name="drawRect" scoped="" ref="0x7f92928541b0"/>
        <function-ref name="drawLine" scoped="" ref="0x7f9292854340"/>
        <function-ref name="setPixel" scoped="" ref="0x7f92928544d0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f9292854660"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f92928547f0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f9292854980"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f9292854020"/>
        <function-ref name="drawText" scoped="" ref="0x7f9292854b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7f9292886640" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <component-ref qname="HplKS0108C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7f9292886640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f92928869c0"/>
        <function-ref name="init" scoped="" ref="0x7f9292886b50"/>
        <function-ref name="dataRead" scoped="" ref="0x7f9292886ce0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f9292886e70"/>
        <function-ref name="controlRead" scoped="" ref="0x7f92927dd030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EN" ref="0x7f92927d0370" loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EN" scoped="" ref="0x7f92927d0370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927d06f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92927d0880"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927d0a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92927d0ba0"/>
        <function-ref name="get" scoped="" ref="0x7f92927d0d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92927cf020"/>
        <function-ref name="set" scoped="" ref="0x7f92927cf1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f92927cf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f92927c2a00" loc="34:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f92927c2a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e995c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9292e99930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f92927cb890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_0" ref="0x7f92927d37b0" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_0" scoped="" ref="0x7f92927d37b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927d3b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f92927d3cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927d3e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92927d9020"/>
        <function-ref name="get" scoped="" ref="0x7f92927d91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92927d9340"/>
        <function-ref name="set" scoped="" ref="0x7f92927d94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f92927d9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RST" ref="0x7f92927cf690" loc="30:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RST" scoped="" ref="0x7f92927cf690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927cfa10"/>
        <function-ref name="isInput" scoped="" ref="0x7f92927cfba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927cfd30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92927ce020"/>
        <function-ref name="get" scoped="" ref="0x7f92927ce1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92927ce340"/>
        <function-ref name="set" scoped="" ref="0x7f92927ce4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f92927ce660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RS" ref="0x7f92927d8cd0" loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RS" scoped="" ref="0x7f92927d8cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927d20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92927d2230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927d23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92927d2550"/>
        <function-ref name="get" scoped="" ref="0x7f92927d26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92927d2870"/>
        <function-ref name="set" scoped="" ref="0x7f92927d2a00"/>
        <function-ref name="clr" scoped="" ref="0x7f92927d2b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_1" ref="0x7f92927d99c0" loc="26:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_1" scoped="" ref="0x7f92927d99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927d9d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f92927d8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927d81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92927d8340"/>
        <function-ref name="get" scoped="" ref="0x7f92927d84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92927d8660"/>
        <function-ref name="set" scoped="" ref="0x7f92927d87f0"/>
        <function-ref name="clr" scoped="" ref="0x7f92927d8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7f92927ddbe0" loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7f92927ddbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f92927da020"/>
        <function-ref name="init" scoped="" ref="0x7f92927da1b0"/>
        <function-ref name="dataRead" scoped="" ref="0x7f92927da340"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f92927da4d0"/>
        <function-ref name="controlRead" scoped="" ref="0x7f92927da660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RW" ref="0x7f92927d1020" loc="28:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RW" scoped="" ref="0x7f92927d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927d13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92927d1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927d16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92927d1850"/>
        <function-ref name="get" scoped="" ref="0x7f92927d19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92927d1b70"/>
        <function-ref name="set" scoped="" ref="0x7f92927d1d00"/>
        <function-ref name="clr" scoped="" ref="0x7f92927d0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Data" ref="0x7f92927c6d40" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Data" scoped="" ref="0x7f92927c6d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927cc0e0"/>
        <function-ref name="clear" scoped="" ref="0x7f92927cc270"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927cc400"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92927cc590"/>
        <function-ref name="read" scoped="" ref="0x7f92927cc720"/>
        <function-ref name="write" scoped="" ref="0x7f92927cc8b0"/>
        <function-ref name="set" scoped="" ref="0x7f92927cca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f929275f020" loc="98:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f929275f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929275f7a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929275f930"/>
        <function-ref name="toggle" scoped="" ref="0x7f929275fac0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929275fc50"/>
        <function-ref name="get" scoped="" ref="0x7f929275fde0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929275e020"/>
        <function-ref name="set" scoped="" ref="0x7f929275e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f929275e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f929277c800" loc="72:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f929277c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929277cb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f929277cd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f929277b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929277b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f929277b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929277b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f929277b660"/>
        <function-ref name="clr" scoped="" ref="0x7f929277b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f9292770670" loc="83:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f9292770670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927709f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292770b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292770d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929276f020"/>
        <function-ref name="get" scoped="" ref="0x7f929276f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929276f340"/>
        <function-ref name="set" scoped="" ref="0x7f929276f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f929276f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f9292765020" loc="92:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f9292765020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927653a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292765530"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927656c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292765850"/>
        <function-ref name="get" scoped="" ref="0x7f92927659e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292765b70"/>
        <function-ref name="set" scoped="" ref="0x7f9292765d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9292764020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f9292759350" loc="103:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f9292759350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927596d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292759860"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927599f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292759b80"/>
        <function-ref name="get" scoped="" ref="0x7f9292759d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292758020"/>
        <function-ref name="set" scoped="" ref="0x7f92927581b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292758340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f9292794990" loc="50:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f9292794990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292794d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292793020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927931b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292793340"/>
        <function-ref name="get" scoped="" ref="0x7f92927934d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292793660"/>
        <function-ref name="set" scoped="" ref="0x7f92927937f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292793980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f9292768990" loc="90:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f9292768990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292768d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292767020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927671b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292767340"/>
        <function-ref name="get" scoped="" ref="0x7f92927674d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292767660"/>
        <function-ref name="set" scoped="" ref="0x7f92927677f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292767980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f9292791020" loc="53:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f9292791020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927913a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292791530"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927916c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292791850"/>
        <function-ref name="get" scoped="" ref="0x7f92927919e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292791b70"/>
        <function-ref name="set" scoped="" ref="0x7f9292791d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9292790020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f9292784020" loc="64:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f9292784020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927843a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292784530"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927846c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292784850"/>
        <function-ref name="get" scoped="" ref="0x7f92927849e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292784b70"/>
        <function-ref name="set" scoped="" ref="0x7f9292784d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9292783020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f9292778060" loc="75:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f9292778060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927783e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292778570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292778700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292778890"/>
        <function-ref name="get" scoped="" ref="0x7f9292778a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292778bb0"/>
        <function-ref name="set" scoped="" ref="0x7f9292778d40"/>
        <function-ref name="clr" scoped="" ref="0x7f9292777020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f929276b020" loc="86:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f929276b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929276b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929276b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f929276b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929276b850"/>
        <function-ref name="get" scoped="" ref="0x7f929276b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929276bb70"/>
        <function-ref name="set" scoped="" ref="0x7f929276bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f929276a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f929279ab20" loc="45:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f929279ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292799020"/>
        <function-ref name="isInput" scoped="" ref="0x7f92927991b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292799340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92927994d0"/>
        <function-ref name="get" scoped="" ref="0x7f9292799660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92927997f0"/>
        <function-ref name="set" scoped="" ref="0x7f9292799980"/>
        <function-ref name="clr" scoped="" ref="0x7f9292799b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f929278e990" loc="56:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f929278e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929278ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f929278d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f929278d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929278d340"/>
        <function-ref name="get" scoped="" ref="0x7f929278d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929278d660"/>
        <function-ref name="set" scoped="" ref="0x7f929278d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f929278d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f9292781990" loc="67:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f9292781990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292781d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292780020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927801b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292780340"/>
        <function-ref name="get" scoped="" ref="0x7f92927804d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292780660"/>
        <function-ref name="set" scoped="" ref="0x7f92927807f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292780980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f9292775990" loc="78:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f9292775990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292775d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292774020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927741b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292774340"/>
        <function-ref name="get" scoped="" ref="0x7f92927744d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292774660"/>
        <function-ref name="set" scoped="" ref="0x7f92927747f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292774980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f9292762990" loc="95:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f9292762990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292762d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292761020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927611b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292761340"/>
        <function-ref name="get" scoped="" ref="0x7f92927614d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292761660"/>
        <function-ref name="set" scoped="" ref="0x7f92927617f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292761980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f929275ccb0" loc="101:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f929275ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929275b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929275b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f929275b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929275b550"/>
        <function-ref name="get" scoped="" ref="0x7f929275b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929275b870"/>
        <function-ref name="set" scoped="" ref="0x7f929275ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f929275bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f9292772020" loc="81:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f9292772020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927723a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292772530"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927726c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292772850"/>
        <function-ref name="get" scoped="" ref="0x7f92927729e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292772b70"/>
        <function-ref name="set" scoped="" ref="0x7f9292772d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9292771020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f9292796350" loc="48:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f9292796350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927966d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292796860"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927969f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292796b80"/>
        <function-ref name="get" scoped="" ref="0x7f9292796d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292795020"/>
        <function-ref name="set" scoped="" ref="0x7f92927951b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292795340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f929278a350" loc="59:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f929278a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929278a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929278a860"/>
        <function-ref name="toggle" scoped="" ref="0x7f929278a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929278ab80"/>
        <function-ref name="get" scoped="" ref="0x7f929278ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292788020"/>
        <function-ref name="set" scoped="" ref="0x7f92927881b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292788340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f929275e670" loc="99:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f929275e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929275e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929275eb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f929275ed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929275d020"/>
        <function-ref name="get" scoped="" ref="0x7f929275d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929275d340"/>
        <function-ref name="set" scoped="" ref="0x7f929275d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f929275d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f9292787990" loc="62:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f9292787990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292787d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292786020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927861b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292786340"/>
        <function-ref name="get" scoped="" ref="0x7f92927864d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292786660"/>
        <function-ref name="set" scoped="" ref="0x7f92927867f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292786980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f929277bb20" loc="73:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f929277bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929277a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929277a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929277a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929277a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f929277a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929277a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f929277a980"/>
        <function-ref name="clr" scoped="" ref="0x7f929277ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f929276f990" loc="84:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f929276f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929276fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f929276e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f929276e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929276e340"/>
        <function-ref name="get" scoped="" ref="0x7f929276e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929276e660"/>
        <function-ref name="set" scoped="" ref="0x7f929276e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f929276e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f9292764350" loc="93:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f9292764350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927646d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292764860"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927649f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292764b80"/>
        <function-ref name="get" scoped="" ref="0x7f9292764d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292763020"/>
        <function-ref name="set" scoped="" ref="0x7f92927631b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292763340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f9292793cb0" loc="51:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f9292793cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927920a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292792230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927923c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292792550"/>
        <function-ref name="get" scoped="" ref="0x7f92927926e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292792870"/>
        <function-ref name="set" scoped="" ref="0x7f9292792a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9292792b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f9292790350" loc="54:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f9292790350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927906d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292790860"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927909f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292790b80"/>
        <function-ref name="get" scoped="" ref="0x7f9292790d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929278f020"/>
        <function-ref name="set" scoped="" ref="0x7f929278f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f929278f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f9292783350" loc="65:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f9292783350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927836d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292783860"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927839f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292783b80"/>
        <function-ref name="get" scoped="" ref="0x7f9292783d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292782020"/>
        <function-ref name="set" scoped="" ref="0x7f92927821b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292782340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f9292777350" loc="76:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f9292777350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927776d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292777860"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927779f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292777b80"/>
        <function-ref name="get" scoped="" ref="0x7f9292777d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292776020"/>
        <function-ref name="set" scoped="" ref="0x7f92927761b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292776340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f929276a350" loc="87:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f929276a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929276a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929276a860"/>
        <function-ref name="toggle" scoped="" ref="0x7f929276a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929276ab80"/>
        <function-ref name="get" scoped="" ref="0x7f929276ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292769020"/>
        <function-ref name="set" scoped="" ref="0x7f92927691b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292769340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f9292799e40" loc="46:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f9292799e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927981e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292798370"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292798500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292798690"/>
        <function-ref name="get" scoped="" ref="0x7f9292798820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92927989b0"/>
        <function-ref name="set" scoped="" ref="0x7f9292798b40"/>
        <function-ref name="clr" scoped="" ref="0x7f9292798cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f929278dcb0" loc="57:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f929278dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929278c180"/>
        <function-ref name="isInput" scoped="" ref="0x7f929278c310"/>
        <function-ref name="toggle" scoped="" ref="0x7f929278c4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929278c630"/>
        <function-ref name="get" scoped="" ref="0x7f929278c7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929278c950"/>
        <function-ref name="set" scoped="" ref="0x7f929278cae0"/>
        <function-ref name="clr" scoped="" ref="0x7f929278cc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f9292780cb0" loc="68:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f9292780cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929277f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929277f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f929277f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929277f550"/>
        <function-ref name="get" scoped="" ref="0x7f929277f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929277f870"/>
        <function-ref name="set" scoped="" ref="0x7f929277fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f929277fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f9292761cb0" loc="96:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f9292761cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927600a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292760230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927603c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292760550"/>
        <function-ref name="get" scoped="" ref="0x7f92927606e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292760870"/>
        <function-ref name="set" scoped="" ref="0x7f9292760a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9292760b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f929277d350" loc="71:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f929277d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929277d8d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929277da60"/>
        <function-ref name="toggle" scoped="" ref="0x7f929277dbf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929277dd80"/>
        <function-ref name="get" scoped="" ref="0x7f929277c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929277c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f929277c340"/>
        <function-ref name="clr" scoped="" ref="0x7f929277c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f9292771350" loc="82:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f9292771350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927716d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292771860"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927719f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292771b80"/>
        <function-ref name="get" scoped="" ref="0x7f9292771d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292770020"/>
        <function-ref name="set" scoped="" ref="0x7f92927701b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292770340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f9292767cb0" loc="91:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f9292767cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927660a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292766230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927663c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292766550"/>
        <function-ref name="get" scoped="" ref="0x7f92927666e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292766870"/>
        <function-ref name="set" scoped="" ref="0x7f9292766a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9292766b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f929275a020" loc="102:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f929275a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929275a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929275a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f929275a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929275a850"/>
        <function-ref name="get" scoped="" ref="0x7f929275a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929275ab70"/>
        <function-ref name="set" scoped="" ref="0x7f929275ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f9292759020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f9292795670" loc="49:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f9292795670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927959f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292795b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292795d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292794020"/>
        <function-ref name="get" scoped="" ref="0x7f92927941b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292794340"/>
        <function-ref name="set" scoped="" ref="0x7f92927944d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292794660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f9292788670" loc="60:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f9292788670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927889f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292788b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292788d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292787020"/>
        <function-ref name="get" scoped="" ref="0x7f92927871b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292787340"/>
        <function-ref name="set" scoped="" ref="0x7f92927874d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292787660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f9292769670" loc="89:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f9292769670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927699f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292769b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292769d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292768020"/>
        <function-ref name="get" scoped="" ref="0x7f92927681b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292768340"/>
        <function-ref name="set" scoped="" ref="0x7f92927684d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292768660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f9292786cb0" loc="63:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f9292786cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927850a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292785230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927853c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292785550"/>
        <function-ref name="get" scoped="" ref="0x7f92927856e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292785870"/>
        <function-ref name="set" scoped="" ref="0x7f9292785a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9292785b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f929277ae40" loc="74:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f929277ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927791e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292779370"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292779500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292779690"/>
        <function-ref name="get" scoped="" ref="0x7f9292779820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92927799b0"/>
        <function-ref name="set" scoped="" ref="0x7f9292779b40"/>
        <function-ref name="clr" scoped="" ref="0x7f9292779cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f929276ecb0" loc="85:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f929276ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929276c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929276c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f929276c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929276c550"/>
        <function-ref name="get" scoped="" ref="0x7f929276c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929276c870"/>
        <function-ref name="set" scoped="" ref="0x7f929276ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f929276cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f9292763670" loc="94:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f9292763670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927639f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292763b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292763d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292762020"/>
        <function-ref name="get" scoped="" ref="0x7f92927621b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292762340"/>
        <function-ref name="set" scoped="" ref="0x7f92927624d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292762660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f929279d860" loc="44:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f929279d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929279dbe0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929279dd70"/>
        <function-ref name="toggle" scoped="" ref="0x7f929279a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929279a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f929279a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929279a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f929279a660"/>
        <function-ref name="clr" scoped="" ref="0x7f929279a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f929278f670" loc="55:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f929278f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929278f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929278fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f929278fd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929278e020"/>
        <function-ref name="get" scoped="" ref="0x7f929278e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929278e340"/>
        <function-ref name="set" scoped="" ref="0x7f929278e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f929278e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f9292782670" loc="66:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f9292782670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927829f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292782b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292782d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292781020"/>
        <function-ref name="get" scoped="" ref="0x7f92927811b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292781340"/>
        <function-ref name="set" scoped="" ref="0x7f92927814d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292781660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f9292776670" loc="77:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f9292776670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927769f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292776b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292776d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292775020"/>
        <function-ref name="get" scoped="" ref="0x7f92927751b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292775340"/>
        <function-ref name="set" scoped="" ref="0x7f92927754d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292775660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f929275d990" loc="100:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f929275d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929275dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f929275c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f929275c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929275c340"/>
        <function-ref name="get" scoped="" ref="0x7f929275c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929275c660"/>
        <function-ref name="set" scoped="" ref="0x7f929275c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f929275c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f9292774cb0" loc="80:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f9292774cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927730a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292773230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927733c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292773550"/>
        <function-ref name="get" scoped="" ref="0x7f92927736e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292773870"/>
        <function-ref name="set" scoped="" ref="0x7f9292773a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9292773b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f929277e020" loc="69:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f929277e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929277e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929277e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f929277e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929277e850"/>
        <function-ref name="get" scoped="" ref="0x7f929277e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929277eb70"/>
        <function-ref name="set" scoped="" ref="0x7f929277ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f929277d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f9292797060" loc="47:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f9292797060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92927973e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292797570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292797700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292797890"/>
        <function-ref name="get" scoped="" ref="0x7f9292797a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292797bb0"/>
        <function-ref name="set" scoped="" ref="0x7f9292797d40"/>
        <function-ref name="clr" scoped="" ref="0x7f9292796020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f929278b020" loc="58:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f929278b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929278b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929278b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f929278b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929278b850"/>
        <function-ref name="get" scoped="" ref="0x7f929278b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929278bb70"/>
        <function-ref name="set" scoped="" ref="0x7f929278bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f929278a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f929270c440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f929270c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929270c7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929270c950"/>
        <function-ref name="toggle" scoped="" ref="0x7f929270cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929270cc70"/>
        <function-ref name="get" scoped="" ref="0x7f929270ce00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929270b020"/>
        <function-ref name="set" scoped="" ref="0x7f929270b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f929270b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f92927098f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f92927098f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292709c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292709e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292708020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92927081b0"/>
        <function-ref name="get" scoped="" ref="0x7f9292708340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92927084d0"/>
        <function-ref name="set" scoped="" ref="0x7f9292708660"/>
        <function-ref name="clr" scoped="" ref="0x7f92927087f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f929270e140" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f929270e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929270e4c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929270e650"/>
        <function-ref name="toggle" scoped="" ref="0x7f929270e7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929270e970"/>
        <function-ref name="get" scoped="" ref="0x7f929270eb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929270ec90"/>
        <function-ref name="set" scoped="" ref="0x7f929270ee20"/>
        <function-ref name="clr" scoped="" ref="0x7f929270d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f929270b5d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f929270b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929270b950"/>
        <function-ref name="isInput" scoped="" ref="0x7f929270bae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929270bc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929270be00"/>
        <function-ref name="get" scoped="" ref="0x7f929270a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929270a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f929270a340"/>
        <function-ref name="clr" scoped="" ref="0x7f929270a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9292708a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9292708a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292708e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292706020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92927061b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292706340"/>
        <function-ref name="get" scoped="" ref="0x7f92927064d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292706660"/>
        <function-ref name="set" scoped="" ref="0x7f92927067f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292706980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f929270d2b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f929270d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929270d630"/>
        <function-ref name="isInput" scoped="" ref="0x7f929270d7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929270d950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929270dae0"/>
        <function-ref name="get" scoped="" ref="0x7f929270dc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929270de00"/>
        <function-ref name="set" scoped="" ref="0x7f929270c020"/>
        <function-ref name="clr" scoped="" ref="0x7f929270c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f929270a760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f929270a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929270aae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929270ac70"/>
        <function-ref name="toggle" scoped="" ref="0x7f929270ae00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292709020"/>
        <function-ref name="get" scoped="" ref="0x7f92927091b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292709340"/>
        <function-ref name="set" scoped="" ref="0x7f92927094d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292709660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9292706c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9292706c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292705020"/>
        <function-ref name="isInput" scoped="" ref="0x7f92927051b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292705340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92927054d0"/>
        <function-ref name="get" scoped="" ref="0x7f9292705660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92927057f0"/>
        <function-ref name="set" scoped="" ref="0x7f9292705980"/>
        <function-ref name="clr" scoped="" ref="0x7f9292705b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291a816d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291a816d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291a81a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291a81be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291a81d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291a80020"/>
        <function-ref name="get" scoped="" ref="0x7f9291a801b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291a80340"/>
        <function-ref name="set" scoped="" ref="0x7f9291a804d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291a80660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291a7e9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291a7e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291a7ed30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291a7c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291a7c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291a7c340"/>
        <function-ref name="get" scoped="" ref="0x7f9291a7c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291a7c660"/>
        <function-ref name="set" scoped="" ref="0x7f9291a7c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291a7c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291a7ae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291a7ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291a791c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291a79350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291a794e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291a79670"/>
        <function-ref name="get" scoped="" ref="0x7f9291a79800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291a79990"/>
        <function-ref name="set" scoped="" ref="0x7f9291a79b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9291a79cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291a760a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291a760a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291a76420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291a765b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291a76740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291a768d0"/>
        <function-ref name="get" scoped="" ref="0x7f9291a76a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291a76bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9291a76d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9291a75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291a733f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291a733f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291a73770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291a73900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291a73a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291a73c20"/>
        <function-ref name="get" scoped="" ref="0x7f9291a73db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291a72020"/>
        <function-ref name="set" scoped="" ref="0x7f9291a721b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291a72340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291a676d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291a676d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291a67a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291a67be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291a67d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291a66020"/>
        <function-ref name="get" scoped="" ref="0x7f9291a661b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291a66340"/>
        <function-ref name="set" scoped="" ref="0x7f9291a664d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291a66660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291a649b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291a649b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291a64d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291a63020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291a631b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291a63340"/>
        <function-ref name="get" scoped="" ref="0x7f9291a634d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291a63660"/>
        <function-ref name="set" scoped="" ref="0x7f9291a637f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291a63980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291a61e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291a61e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291a601c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291a60350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291a604e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291a60670"/>
        <function-ref name="get" scoped="" ref="0x7f9291a60800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291a60990"/>
        <function-ref name="set" scoped="" ref="0x7f9291a60b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9291a60cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f92926fd760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f92926fd760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926fdae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926fdc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926fde00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926fc020"/>
        <function-ref name="get" scoped="" ref="0x7f92926fc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926fc340"/>
        <function-ref name="set" scoped="" ref="0x7f92926fc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f92926fc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f92926f9c10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f92926f9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926f8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926f81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926f8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926f84d0"/>
        <function-ref name="get" scoped="" ref="0x7f92926f8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926f87f0"/>
        <function-ref name="set" scoped="" ref="0x7f92926f8980"/>
        <function-ref name="clr" scoped="" ref="0x7f92926f8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f92926ff3f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f92926ff3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926ff770"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926ff900"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926ffa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926ffc20"/>
        <function-ref name="get" scoped="" ref="0x7f92926ffdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926fe020"/>
        <function-ref name="set" scoped="" ref="0x7f92926fe1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f92926fe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f92926fc8f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f92926fc8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926fcc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926fce00"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926fa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926fa1b0"/>
        <function-ref name="get" scoped="" ref="0x7f92926fa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926fa4d0"/>
        <function-ref name="set" scoped="" ref="0x7f92926fa660"/>
        <function-ref name="clr" scoped="" ref="0x7f92926fa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f92926f8da0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f92926f8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926f7180"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926f7310"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926f74a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926f7630"/>
        <function-ref name="get" scoped="" ref="0x7f92926f77c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926f7950"/>
        <function-ref name="set" scoped="" ref="0x7f92926f7ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f92926f7c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f92926fe5d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f92926fe5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926fe950"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926feae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926fec70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926fee00"/>
        <function-ref name="get" scoped="" ref="0x7f92926fd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926fd1b0"/>
        <function-ref name="set" scoped="" ref="0x7f92926fd340"/>
        <function-ref name="clr" scoped="" ref="0x7f92926fd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f92926faa80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f92926faa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926fae00"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926f9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926f91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926f9340"/>
        <function-ref name="get" scoped="" ref="0x7f92926f94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926f9660"/>
        <function-ref name="set" scoped="" ref="0x7f92926f97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f92926f9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f92926f6020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f92926f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926f63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926f6530"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926f66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926f6850"/>
        <function-ref name="get" scoped="" ref="0x7f92926f69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926f6b70"/>
        <function-ref name="set" scoped="" ref="0x7f92926f6d00"/>
        <function-ref name="clr" scoped="" ref="0x7f92926f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291a0da60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291a0da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291a0dde0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291a0c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291a0c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291a0c340"/>
        <function-ref name="get" scoped="" ref="0x7f9291a0c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291a0c660"/>
        <function-ref name="set" scoped="" ref="0x7f9291a0c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291a0c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291a0ae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291a0ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291a091c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291a09350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291a094e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291a09670"/>
        <function-ref name="get" scoped="" ref="0x7f9291a09800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291a09990"/>
        <function-ref name="set" scoped="" ref="0x7f9291a09b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9291a09cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291a060a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291a060a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291a06420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291a065b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291a06740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291a068d0"/>
        <function-ref name="get" scoped="" ref="0x7f9291a06a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291a06bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9291a06d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9291a04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291a023f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291a023f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291a02770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291a02900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291a02a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291a02c20"/>
        <function-ref name="get" scoped="" ref="0x7f9291a02db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291a01020"/>
        <function-ref name="set" scoped="" ref="0x7f9291a011b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291a01340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92919ff6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92919ff6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92919ffa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f92919ffbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92919ffd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92919fe020"/>
        <function-ref name="get" scoped="" ref="0x7f92919fe1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92919fe340"/>
        <function-ref name="set" scoped="" ref="0x7f92919fe4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f92919fe660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92919fc9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92919fc9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92919fcd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f92919fb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92919fb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92919fb340"/>
        <function-ref name="get" scoped="" ref="0x7f92919fb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92919fb660"/>
        <function-ref name="set" scoped="" ref="0x7f92919fb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f92919fb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92919f9e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92919f9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92919f81c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92919f8350"/>
        <function-ref name="toggle" scoped="" ref="0x7f92919f84e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92919f8670"/>
        <function-ref name="get" scoped="" ref="0x7f92919f8800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92919f8990"/>
        <function-ref name="set" scoped="" ref="0x7f92919f8b20"/>
        <function-ref name="clr" scoped="" ref="0x7f92919f8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92919f50a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92919f50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92919f5420"/>
        <function-ref name="isInput" scoped="" ref="0x7f92919f55b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92919f5740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92919f58d0"/>
        <function-ref name="get" scoped="" ref="0x7f92919f5a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92919f5bf0"/>
        <function-ref name="set" scoped="" ref="0x7f92919f5d80"/>
        <function-ref name="clr" scoped="" ref="0x7f92919f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f92926eda80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f92926eda80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926ede00"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926ec020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926ec1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926ec340"/>
        <function-ref name="get" scoped="" ref="0x7f92926ec4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926ec660"/>
        <function-ref name="set" scoped="" ref="0x7f92926ec7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f92926ec980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f92926e9020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f92926e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926e93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926e9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926e96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926e9850"/>
        <function-ref name="get" scoped="" ref="0x7f92926e99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926e9b70"/>
        <function-ref name="set" scoped="" ref="0x7f92926e9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f92926e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f92926f07a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f92926f07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926f0b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926f0cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926f0e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926ee020"/>
        <function-ref name="get" scoped="" ref="0x7f92926ee1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926ee340"/>
        <function-ref name="set" scoped="" ref="0x7f92926ee4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f92926ee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f92926ecc10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f92926ecc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926eb020"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926eb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926eb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926eb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f92926eb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926eb7f0"/>
        <function-ref name="set" scoped="" ref="0x7f92926eb980"/>
        <function-ref name="clr" scoped="" ref="0x7f92926ebb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f92926e82b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f92926e82b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926e8630"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926e87c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926e8950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926e8ae0"/>
        <function-ref name="get" scoped="" ref="0x7f92926e8c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926e8e00"/>
        <function-ref name="set" scoped="" ref="0x7f92926e7020"/>
        <function-ref name="clr" scoped="" ref="0x7f92926e71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f92926ee8f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f92926ee8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926eec70"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926eee00"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926ed020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926ed1b0"/>
        <function-ref name="get" scoped="" ref="0x7f92926ed340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926ed4d0"/>
        <function-ref name="set" scoped="" ref="0x7f92926ed660"/>
        <function-ref name="clr" scoped="" ref="0x7f92926ed7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f92926ebda0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f92926ebda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926ea180"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926ea310"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926ea4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926ea630"/>
        <function-ref name="get" scoped="" ref="0x7f92926ea7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926ea950"/>
        <function-ref name="set" scoped="" ref="0x7f92926eaae0"/>
        <function-ref name="clr" scoped="" ref="0x7f92926eac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f92926e7440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f92926e7440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926e77c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926e7950"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926e7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926e7c70"/>
        <function-ref name="get" scoped="" ref="0x7f92926e7e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926e6020"/>
        <function-ref name="set" scoped="" ref="0x7f92926e61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f92926e6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92919a2c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92919a2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92919a10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92919a1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92919a13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92919a1550"/>
        <function-ref name="get" scoped="" ref="0x7f92919a16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92919a1870"/>
        <function-ref name="set" scoped="" ref="0x7f92919a1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f92919a1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929199fe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929199fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929199e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929199e350"/>
        <function-ref name="toggle" scoped="" ref="0x7f929199e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929199e670"/>
        <function-ref name="get" scoped="" ref="0x7f929199e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929199e990"/>
        <function-ref name="set" scoped="" ref="0x7f929199eb20"/>
        <function-ref name="clr" scoped="" ref="0x7f929199ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929199b0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929199b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929199b420"/>
        <function-ref name="isInput" scoped="" ref="0x7f929199b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929199b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929199b8d0"/>
        <function-ref name="get" scoped="" ref="0x7f929199ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929199bbf0"/>
        <function-ref name="set" scoped="" ref="0x7f929199bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9291999020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92919973f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92919973f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291997770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291997900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291997a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291997c20"/>
        <function-ref name="get" scoped="" ref="0x7f9291997db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291996020"/>
        <function-ref name="set" scoped="" ref="0x7f92919961b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291996340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92919946d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92919946d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291994a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291994be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291994d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291993020"/>
        <function-ref name="get" scoped="" ref="0x7f92919931b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291993340"/>
        <function-ref name="set" scoped="" ref="0x7f92919934d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291993660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92919919b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92919919b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291991d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291990020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92919901b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291990340"/>
        <function-ref name="get" scoped="" ref="0x7f92919904d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291990660"/>
        <function-ref name="set" scoped="" ref="0x7f92919907f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291990980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929198ee20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929198ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929198d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929198d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f929198d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929198d670"/>
        <function-ref name="get" scoped="" ref="0x7f929198d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929198d990"/>
        <function-ref name="set" scoped="" ref="0x7f929198db20"/>
        <function-ref name="clr" scoped="" ref="0x7f929198dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929198a0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929198a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929198a420"/>
        <function-ref name="isInput" scoped="" ref="0x7f929198a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929198a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929198a8d0"/>
        <function-ref name="get" scoped="" ref="0x7f929198aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929198abf0"/>
        <function-ref name="set" scoped="" ref="0x7f929198ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f9291989020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f92926deda0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f92926deda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926dd180"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926dd310"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926dd4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926dd630"/>
        <function-ref name="get" scoped="" ref="0x7f92926dd7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926dd950"/>
        <function-ref name="set" scoped="" ref="0x7f92926ddae0"/>
        <function-ref name="clr" scoped="" ref="0x7f92926ddc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f92926da440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f92926da440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926da7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926da950"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926daae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926dac70"/>
        <function-ref name="get" scoped="" ref="0x7f92926dae00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926d9020"/>
        <function-ref name="set" scoped="" ref="0x7f92926d91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f92926d9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f92926e0a20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f92926e0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926e0da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926df020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926df1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926df340"/>
        <function-ref name="get" scoped="" ref="0x7f92926df4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926df660"/>
        <function-ref name="set" scoped="" ref="0x7f92926df7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f92926df980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f92926dc020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f92926dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926dc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926dc530"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926dc6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926dc850"/>
        <function-ref name="get" scoped="" ref="0x7f92926dc9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926dcb70"/>
        <function-ref name="set" scoped="" ref="0x7f92926dcd00"/>
        <function-ref name="clr" scoped="" ref="0x7f92926db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f92926d95d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f92926d95d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926d9950"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926d9ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926d9c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926d9e00"/>
        <function-ref name="get" scoped="" ref="0x7f92926d8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926d81b0"/>
        <function-ref name="set" scoped="" ref="0x7f92926d8340"/>
        <function-ref name="clr" scoped="" ref="0x7f92926d84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f92926dfc10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f92926dfc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926de020"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926de1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926de340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926de4d0"/>
        <function-ref name="get" scoped="" ref="0x7f92926de660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926de7f0"/>
        <function-ref name="set" scoped="" ref="0x7f92926de980"/>
        <function-ref name="clr" scoped="" ref="0x7f92926deb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f92926db2b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f92926db2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926db630"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926db7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926db950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926dbae0"/>
        <function-ref name="get" scoped="" ref="0x7f92926dbc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926dbe00"/>
        <function-ref name="set" scoped="" ref="0x7f92926da020"/>
        <function-ref name="clr" scoped="" ref="0x7f92926da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f92926d8760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f92926d8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926d8ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926d8c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926d8e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926d7020"/>
        <function-ref name="get" scoped="" ref="0x7f92926d71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926d7340"/>
        <function-ref name="set" scoped="" ref="0x7f92926d74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f92926d7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291937c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291937c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92919360a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291936230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92919363c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291936550"/>
        <function-ref name="get" scoped="" ref="0x7f92919366e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291936870"/>
        <function-ref name="set" scoped="" ref="0x7f9291936a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291936b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291934e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291934e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92919331c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291933350"/>
        <function-ref name="toggle" scoped="" ref="0x7f92919334e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291933670"/>
        <function-ref name="get" scoped="" ref="0x7f9291933800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291933990"/>
        <function-ref name="set" scoped="" ref="0x7f9291933b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9291933cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92919300a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92919300a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291930420"/>
        <function-ref name="isInput" scoped="" ref="0x7f92919305b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291930740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92919308d0"/>
        <function-ref name="get" scoped="" ref="0x7f9291930a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291930bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9291930d80"/>
        <function-ref name="clr" scoped="" ref="0x7f929192f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929192d3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929192d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929192d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f929192d900"/>
        <function-ref name="toggle" scoped="" ref="0x7f929192da90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929192dc20"/>
        <function-ref name="get" scoped="" ref="0x7f929192ddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929192b020"/>
        <function-ref name="set" scoped="" ref="0x7f929192b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f929192b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92919296d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92919296d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291929a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291929be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291929d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291928020"/>
        <function-ref name="get" scoped="" ref="0x7f92919281b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291928340"/>
        <function-ref name="set" scoped="" ref="0x7f92919284d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291928660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92919269b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92919269b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291926d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291925020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92919251b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291925340"/>
        <function-ref name="get" scoped="" ref="0x7f92919254d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291925660"/>
        <function-ref name="set" scoped="" ref="0x7f92919257f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291925980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291923e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291923e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92919221c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291922350"/>
        <function-ref name="toggle" scoped="" ref="0x7f92919224e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291922670"/>
        <function-ref name="get" scoped="" ref="0x7f9291922800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291922990"/>
        <function-ref name="set" scoped="" ref="0x7f9291922b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9291922cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929191f0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929191f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929191f420"/>
        <function-ref name="isInput" scoped="" ref="0x7f929191f5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929191f740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929191f8d0"/>
        <function-ref name="get" scoped="" ref="0x7f929191fa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929191fbf0"/>
        <function-ref name="set" scoped="" ref="0x7f929191fd80"/>
        <function-ref name="clr" scoped="" ref="0x7f929191e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f92926ce020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f92926ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926ce3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926ce530"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926ce6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926ce850"/>
        <function-ref name="get" scoped="" ref="0x7f92926ce9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926ceb70"/>
        <function-ref name="set" scoped="" ref="0x7f92926ced00"/>
        <function-ref name="clr" scoped="" ref="0x7f92926cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f92926cb5d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f92926cb5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926cb950"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926cbae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926cbc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926cbe00"/>
        <function-ref name="get" scoped="" ref="0x7f92926c9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926c91b0"/>
        <function-ref name="set" scoped="" ref="0x7f92926c9340"/>
        <function-ref name="clr" scoped="" ref="0x7f92926c94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f92926d1d30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f92926d1d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926d00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926d0270"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926d0400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926d0590"/>
        <function-ref name="get" scoped="" ref="0x7f92926d0720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926d08b0"/>
        <function-ref name="set" scoped="" ref="0x7f92926d0a40"/>
        <function-ref name="clr" scoped="" ref="0x7f92926d0bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f92926cd2b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f92926cd2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926cd630"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926cd7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926cd950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926cdae0"/>
        <function-ref name="get" scoped="" ref="0x7f92926cdc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926cde00"/>
        <function-ref name="set" scoped="" ref="0x7f92926cc020"/>
        <function-ref name="clr" scoped="" ref="0x7f92926cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f92926c9760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f92926c9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926c9ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926c9c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926c9e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926c8020"/>
        <function-ref name="get" scoped="" ref="0x7f92926c81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926c8340"/>
        <function-ref name="set" scoped="" ref="0x7f92926c84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f92926c8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f92926d0e60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f92926d0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926cf210"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926cf3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926cf530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926cf6c0"/>
        <function-ref name="get" scoped="" ref="0x7f92926cf850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926cf9e0"/>
        <function-ref name="set" scoped="" ref="0x7f92926cfb70"/>
        <function-ref name="clr" scoped="" ref="0x7f92926cfd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f92926cc440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f92926cc440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926cc7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926cc950"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926ccae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926ccc70"/>
        <function-ref name="get" scoped="" ref="0x7f92926cce00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926cb020"/>
        <function-ref name="set" scoped="" ref="0x7f92926cb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f92926cb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f92926c88f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f92926c88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926c8c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926c8e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926c7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926c71b0"/>
        <function-ref name="get" scoped="" ref="0x7f92926c7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926c74d0"/>
        <function-ref name="set" scoped="" ref="0x7f92926c7660"/>
        <function-ref name="clr" scoped="" ref="0x7f92926c77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92918ccc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92918ccc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92918cb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92918cb230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92918cb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92918cb550"/>
        <function-ref name="get" scoped="" ref="0x7f92918cb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92918cb870"/>
        <function-ref name="set" scoped="" ref="0x7f92918cba00"/>
        <function-ref name="clr" scoped="" ref="0x7f92918cbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92918c9e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92918c9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92918c81c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92918c8350"/>
        <function-ref name="toggle" scoped="" ref="0x7f92918c84e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92918c8670"/>
        <function-ref name="get" scoped="" ref="0x7f92918c8800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92918c8990"/>
        <function-ref name="set" scoped="" ref="0x7f92918c8b20"/>
        <function-ref name="clr" scoped="" ref="0x7f92918c8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92918c50a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92918c50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92918c5420"/>
        <function-ref name="isInput" scoped="" ref="0x7f92918c55b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92918c5740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92918c58d0"/>
        <function-ref name="get" scoped="" ref="0x7f92918c5a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92918c5bf0"/>
        <function-ref name="set" scoped="" ref="0x7f92918c5d80"/>
        <function-ref name="clr" scoped="" ref="0x7f92918c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92918c23f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92918c23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92918c2770"/>
        <function-ref name="isInput" scoped="" ref="0x7f92918c2900"/>
        <function-ref name="toggle" scoped="" ref="0x7f92918c2a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92918c2c20"/>
        <function-ref name="get" scoped="" ref="0x7f92918c2db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92918c0020"/>
        <function-ref name="set" scoped="" ref="0x7f92918c01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f92918c0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92918be6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92918be6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92918bea50"/>
        <function-ref name="isInput" scoped="" ref="0x7f92918bebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92918bed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92918bd020"/>
        <function-ref name="get" scoped="" ref="0x7f92918bd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92918bd340"/>
        <function-ref name="set" scoped="" ref="0x7f92918bd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f92918bd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92918bb9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92918bb9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92918bbd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f92918ba020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92918ba1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92918ba340"/>
        <function-ref name="get" scoped="" ref="0x7f92918ba4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92918ba660"/>
        <function-ref name="set" scoped="" ref="0x7f92918ba7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f92918ba980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92918b8e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92918b8e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92918b71c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92918b7350"/>
        <function-ref name="toggle" scoped="" ref="0x7f92918b74e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92918b7670"/>
        <function-ref name="get" scoped="" ref="0x7f92918b7800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92918b7990"/>
        <function-ref name="set" scoped="" ref="0x7f92918b7b20"/>
        <function-ref name="clr" scoped="" ref="0x7f92918b7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92918b40a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92918b40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92918b4420"/>
        <function-ref name="isInput" scoped="" ref="0x7f92918b45b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92918b4740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92918b48d0"/>
        <function-ref name="get" scoped="" ref="0x7f92918b4a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92918b4bf0"/>
        <function-ref name="set" scoped="" ref="0x7f92918b4d80"/>
        <function-ref name="clr" scoped="" ref="0x7f92918b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f92926bf440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f92926bf440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926bf7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926bf950"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926bfae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926bfc70"/>
        <function-ref name="get" scoped="" ref="0x7f92926bfe00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926bd020"/>
        <function-ref name="set" scoped="" ref="0x7f92926bd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f92926bd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f92926bb8f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f92926bb8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926bbc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926bbe00"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926ba020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926ba1b0"/>
        <function-ref name="get" scoped="" ref="0x7f92926ba340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926ba4d0"/>
        <function-ref name="set" scoped="" ref="0x7f92926ba660"/>
        <function-ref name="clr" scoped="" ref="0x7f92926ba7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f92926c1020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f92926c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926c13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926c1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926c16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926c1850"/>
        <function-ref name="get" scoped="" ref="0x7f92926c19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926c1b70"/>
        <function-ref name="set" scoped="" ref="0x7f92926c1d00"/>
        <function-ref name="clr" scoped="" ref="0x7f92926c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f92926bd5d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f92926bd5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926bd950"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926bdae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926bdc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926bde00"/>
        <function-ref name="get" scoped="" ref="0x7f92926bc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926bc1b0"/>
        <function-ref name="set" scoped="" ref="0x7f92926bc340"/>
        <function-ref name="clr" scoped="" ref="0x7f92926bc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f92926baa80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f92926baa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926bae00"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926b9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926b91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926b9340"/>
        <function-ref name="get" scoped="" ref="0x7f92926b94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926b9660"/>
        <function-ref name="set" scoped="" ref="0x7f92926b97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f92926b9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f92926c02b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f92926c02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926c0630"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926c07c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926c0950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926c0ae0"/>
        <function-ref name="get" scoped="" ref="0x7f92926c0c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926c0e00"/>
        <function-ref name="set" scoped="" ref="0x7f92926bf020"/>
        <function-ref name="clr" scoped="" ref="0x7f92926bf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f92926bc760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f92926bc760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926bcae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926bcc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926bce00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926bb020"/>
        <function-ref name="get" scoped="" ref="0x7f92926bb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926bb340"/>
        <function-ref name="set" scoped="" ref="0x7f92926bb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f92926bb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f92926b9c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f92926b9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926b8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926b81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926b8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926b84d0"/>
        <function-ref name="get" scoped="" ref="0x7f92926b8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926b87f0"/>
        <function-ref name="set" scoped="" ref="0x7f92926b8980"/>
        <function-ref name="clr" scoped="" ref="0x7f92926b8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291861c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291861c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92918600a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291860230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92918603c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291860550"/>
        <function-ref name="get" scoped="" ref="0x7f92918606e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291860870"/>
        <function-ref name="set" scoped="" ref="0x7f9291860a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291860b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929185ee20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929185ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929185d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929185d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f929185d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929185d670"/>
        <function-ref name="get" scoped="" ref="0x7f929185d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929185d990"/>
        <function-ref name="set" scoped="" ref="0x7f929185db20"/>
        <function-ref name="clr" scoped="" ref="0x7f929185dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929185a0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929185a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929185a420"/>
        <function-ref name="isInput" scoped="" ref="0x7f929185a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929185a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929185a8d0"/>
        <function-ref name="get" scoped="" ref="0x7f929185aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929185abf0"/>
        <function-ref name="set" scoped="" ref="0x7f929185ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f9291859020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92918573f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92918573f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291857770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291857900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291857a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291857c20"/>
        <function-ref name="get" scoped="" ref="0x7f9291857db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291856020"/>
        <function-ref name="set" scoped="" ref="0x7f92918561b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291856340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92918546d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92918546d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291854a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291854be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291854d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291852020"/>
        <function-ref name="get" scoped="" ref="0x7f92918521b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291852340"/>
        <function-ref name="set" scoped="" ref="0x7f92918524d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291852660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92918509b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92918509b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291850d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f929184f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f929184f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929184f340"/>
        <function-ref name="get" scoped="" ref="0x7f929184f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929184f660"/>
        <function-ref name="set" scoped="" ref="0x7f929184f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f929184f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929184de20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929184de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929184c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929184c350"/>
        <function-ref name="toggle" scoped="" ref="0x7f929184c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929184c670"/>
        <function-ref name="get" scoped="" ref="0x7f929184c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929184c990"/>
        <function-ref name="set" scoped="" ref="0x7f929184cb20"/>
        <function-ref name="clr" scoped="" ref="0x7f929184ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92918490a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92918490a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291849420"/>
        <function-ref name="isInput" scoped="" ref="0x7f92918495b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291849740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92918498d0"/>
        <function-ref name="get" scoped="" ref="0x7f9291849a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291849bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9291849d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9291848020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92926b0260" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92926b0260"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926b05e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92926b0770"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926b0900"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92926b0a90"/>
        <function-ref name="get" scoped="" ref="0x7f92926b0c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926b0db0"/>
        <function-ref name="set" scoped="" ref="0x7f929269a020"/>
        <function-ref name="clr" scoped="" ref="0x7f929269a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9292696d00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9292696d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926950a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292695230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926953c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292695550"/>
        <function-ref name="get" scoped="" ref="0x7f92926956e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292695870"/>
        <function-ref name="set" scoped="" ref="0x7f9292695a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9292695b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92926916d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92926916d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292691a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292691be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292691d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929268f020"/>
        <function-ref name="get" scoped="" ref="0x7f929268f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929268f340"/>
        <function-ref name="set" scoped="" ref="0x7f929268f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f929268f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929268b160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929268b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929268b4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929268b670"/>
        <function-ref name="toggle" scoped="" ref="0x7f929268b800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929268b990"/>
        <function-ref name="get" scoped="" ref="0x7f929268bb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929268bcb0"/>
        <function-ref name="set" scoped="" ref="0x7f929268be40"/>
        <function-ref name="clr" scoped="" ref="0x7f929268a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9292686c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9292686c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926850a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292685230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926853c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292685550"/>
        <function-ref name="get" scoped="" ref="0x7f92926856e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292685870"/>
        <function-ref name="set" scoped="" ref="0x7f9292685a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9292685b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92926816d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92926816d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292681a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292681be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292681d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929267f020"/>
        <function-ref name="get" scoped="" ref="0x7f929267f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929267f340"/>
        <function-ref name="set" scoped="" ref="0x7f929267f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f929267f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929267b270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929267b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929267b5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929267b780"/>
        <function-ref name="toggle" scoped="" ref="0x7f929267b910"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929267baa0"/>
        <function-ref name="get" scoped="" ref="0x7f929267bc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929267bdc0"/>
        <function-ref name="set" scoped="" ref="0x7f929267a020"/>
        <function-ref name="clr" scoped="" ref="0x7f929267a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9292676d00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9292676d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926750a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292675230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926753c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292675550"/>
        <function-ref name="get" scoped="" ref="0x7f92926756e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292675870"/>
        <function-ref name="set" scoped="" ref="0x7f9292675a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9292675b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92926716d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92926716d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292671a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292671be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292671d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292670020"/>
        <function-ref name="get" scoped="" ref="0x7f92926701b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292670340"/>
        <function-ref name="set" scoped="" ref="0x7f92926704d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292670660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929266b160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929266b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929266b4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929266b670"/>
        <function-ref name="toggle" scoped="" ref="0x7f929266b800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929266b990"/>
        <function-ref name="get" scoped="" ref="0x7f929266bb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929266bcb0"/>
        <function-ref name="set" scoped="" ref="0x7f929266be40"/>
        <function-ref name="clr" scoped="" ref="0x7f929266a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9292666c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9292666c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926650a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292665230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926653c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292665550"/>
        <function-ref name="get" scoped="" ref="0x7f92926656e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292665870"/>
        <function-ref name="set" scoped="" ref="0x7f9292665a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9292665b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92926616d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92926616d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292661a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292661be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292661d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292660020"/>
        <function-ref name="get" scoped="" ref="0x7f92926601b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292660340"/>
        <function-ref name="set" scoped="" ref="0x7f92926604d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292660660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929265b160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929265b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929265b4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929265b670"/>
        <function-ref name="toggle" scoped="" ref="0x7f929265b800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929265b990"/>
        <function-ref name="get" scoped="" ref="0x7f929265bb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929265bcb0"/>
        <function-ref name="set" scoped="" ref="0x7f929265be40"/>
        <function-ref name="clr" scoped="" ref="0x7f929265a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9292656c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9292656c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926550a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292655230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926553c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292655550"/>
        <function-ref name="get" scoped="" ref="0x7f92926556e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292655870"/>
        <function-ref name="set" scoped="" ref="0x7f9292655a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9292655b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA" ref="0x7f929261fc40" loc="7:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA" scoped="" ref="0x7f929261fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929261c020"/>
        <function-ref name="clear" scoped="" ref="0x7f929261c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929261c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929261c4d0"/>
        <function-ref name="read" scoped="" ref="0x7f929261c660"/>
        <function-ref name="write" scoped="" ref="0x7f929261c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f929261c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL" ref="0x7f9292612870" loc="18:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL" scoped="" ref="0x7f9292612870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292612bf0"/>
        <function-ref name="clear" scoped="" ref="0x7f9292612d80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292611020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926111b0"/>
        <function-ref name="read" scoped="" ref="0x7f9292611340"/>
        <function-ref name="write" scoped="" ref="0x7f92926114d0"/>
        <function-ref name="set" scoped="" ref="0x7f9292611660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD" ref="0x7f929261ae80" loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD" scoped="" ref="0x7f929261ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292619220"/>
        <function-ref name="clear" scoped="" ref="0x7f92926193b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292619540"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92926196d0"/>
        <function-ref name="read" scoped="" ref="0x7f9292619860"/>
        <function-ref name="write" scoped="" ref="0x7f92926199f0"/>
        <function-ref name="set" scoped="" ref="0x7f9292619b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG" ref="0x7f92926161d0" loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG" scoped="" ref="0x7f92926161d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292616550"/>
        <function-ref name="clear" scoped="" ref="0x7f92926166e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292616870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292616a00"/>
        <function-ref name="read" scoped="" ref="0x7f9292616b90"/>
        <function-ref name="write" scoped="" ref="0x7f9292616d20"/>
        <function-ref name="set" scoped="" ref="0x7f9292615020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ" ref="0x7f9292614550" loc="16:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ" scoped="" ref="0x7f9292614550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926148d0"/>
        <function-ref name="clear" scoped="" ref="0x7f9292614a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292614bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292614d80"/>
        <function-ref name="read" scoped="" ref="0x7f9292613020"/>
        <function-ref name="write" scoped="" ref="0x7f92926131b0"/>
        <function-ref name="set" scoped="" ref="0x7f9292613340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB" ref="0x7f929261cd20" loc="8:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB" scoped="" ref="0x7f929261cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929261b0e0"/>
        <function-ref name="clear" scoped="" ref="0x7f929261b270"/>
        <function-ref name="toggle" scoped="" ref="0x7f929261b400"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929261b590"/>
        <function-ref name="read" scoped="" ref="0x7f929261b720"/>
        <function-ref name="write" scoped="" ref="0x7f929261b8b0"/>
        <function-ref name="set" scoped="" ref="0x7f929261ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE" ref="0x7f9292618020" loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE" scoped="" ref="0x7f9292618020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92926183a0"/>
        <function-ref name="clear" scoped="" ref="0x7f9292618530"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926186c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292618850"/>
        <function-ref name="read" scoped="" ref="0x7f92926189e0"/>
        <function-ref name="write" scoped="" ref="0x7f9292618b70"/>
        <function-ref name="set" scoped="" ref="0x7f9292618d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH" ref="0x7f92926153c0" loc="15:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH" scoped="" ref="0x7f92926153c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292615740"/>
        <function-ref name="clear" scoped="" ref="0x7f92926158d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292615a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292615bf0"/>
        <function-ref name="read" scoped="" ref="0x7f9292615d80"/>
        <function-ref name="write" scoped="" ref="0x7f9292614020"/>
        <function-ref name="set" scoped="" ref="0x7f92926141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK" ref="0x7f92926136e0" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK" scoped="" ref="0x7f92926136e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292613a60"/>
        <function-ref name="clear" scoped="" ref="0x7f9292613bf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292613d80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292612020"/>
        <function-ref name="read" scoped="" ref="0x7f92926121b0"/>
        <function-ref name="write" scoped="" ref="0x7f9292612340"/>
        <function-ref name="set" scoped="" ref="0x7f92926124d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC" ref="0x7f929261bde0" loc="9:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC" scoped="" ref="0x7f929261bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929261a180"/>
        <function-ref name="clear" scoped="" ref="0x7f929261a310"/>
        <function-ref name="toggle" scoped="" ref="0x7f929261a4a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929261a630"/>
        <function-ref name="read" scoped="" ref="0x7f929261a7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929261a950"/>
        <function-ref name="set" scoped="" ref="0x7f929261aae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF" ref="0x7f9292617100" loc="12:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF" scoped="" ref="0x7f9292617100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292617480"/>
        <function-ref name="clear" scoped="" ref="0x7f9292617610"/>
        <function-ref name="toggle" scoped="" ref="0x7f92926177a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292617930"/>
        <function-ref name="read" scoped="" ref="0x7f9292617ac0"/>
        <function-ref name="write" scoped="" ref="0x7f9292617c50"/>
        <function-ref name="set" scoped="" ref="0x7f9292617de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f929260dc90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortAP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f929260dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92925f80a0"/>
        <function-ref name="clear" scoped="" ref="0x7f92925f8230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92925f83c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92925f8550"/>
        <function-ref name="read" scoped="" ref="0x7f92925f86e0"/>
        <function-ref name="write" scoped="" ref="0x7f92925f8870"/>
        <function-ref name="set" scoped="" ref="0x7f92925f8a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f92925f4390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortBP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f92925f4390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92925f4710"/>
        <function-ref name="clear" scoped="" ref="0x7f92925f48a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92925f4a30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92925f4bc0"/>
        <function-ref name="read" scoped="" ref="0x7f92925f4d50"/>
        <function-ref name="write" scoped="" ref="0x7f92925f3020"/>
        <function-ref name="set" scoped="" ref="0x7f92925f31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f92925ef910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f92925ef910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92925efc90"/>
        <function-ref name="clear" scoped="" ref="0x7f92925efe20"/>
        <function-ref name="toggle" scoped="" ref="0x7f92925ee020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92925ee1b0"/>
        <function-ref name="read" scoped="" ref="0x7f92925ee340"/>
        <function-ref name="write" scoped="" ref="0x7f92925ee4d0"/>
        <function-ref name="set" scoped="" ref="0x7f92925ee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f92925ebcd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f92925ebcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92925ea0a0"/>
        <function-ref name="clear" scoped="" ref="0x7f92925ea230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92925ea3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92925ea550"/>
        <function-ref name="read" scoped="" ref="0x7f92925ea6e0"/>
        <function-ref name="write" scoped="" ref="0x7f92925ea870"/>
        <function-ref name="set" scoped="" ref="0x7f92925eaa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f92925e5390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortEP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f92925e5390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92925e5710"/>
        <function-ref name="clear" scoped="" ref="0x7f92925e58a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92925e5a30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92925e5bc0"/>
        <function-ref name="read" scoped="" ref="0x7f92925e5d50"/>
        <function-ref name="write" scoped="" ref="0x7f92925e4020"/>
        <function-ref name="set" scoped="" ref="0x7f92925e41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f92925e0910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortFP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f92925e0910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92925e0c90"/>
        <function-ref name="clear" scoped="" ref="0x7f92925e0e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f92925df020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92925df1b0"/>
        <function-ref name="read" scoped="" ref="0x7f92925df340"/>
        <function-ref name="write" scoped="" ref="0x7f92925df4d0"/>
        <function-ref name="set" scoped="" ref="0x7f92925df660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f92925dccd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortGP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f92925dccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92925db0a0"/>
        <function-ref name="clear" scoped="" ref="0x7f92925db230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92925db3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92925db550"/>
        <function-ref name="read" scoped="" ref="0x7f92925db6e0"/>
        <function-ref name="write" scoped="" ref="0x7f92925db870"/>
        <function-ref name="set" scoped="" ref="0x7f92925dba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f92925d7c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortHP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f92925d7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92925d60a0"/>
        <function-ref name="clear" scoped="" ref="0x7f92925d6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92925d63c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92925d6550"/>
        <function-ref name="read" scoped="" ref="0x7f92925d66e0"/>
        <function-ref name="write" scoped="" ref="0x7f92925d6870"/>
        <function-ref name="set" scoped="" ref="0x7f92925d6a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f92925d2c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortJP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f92925d2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92925d10a0"/>
        <function-ref name="clear" scoped="" ref="0x7f92925d1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92925d13c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92925d1550"/>
        <function-ref name="read" scoped="" ref="0x7f92925d16e0"/>
        <function-ref name="write" scoped="" ref="0x7f92925d1870"/>
        <function-ref name="set" scoped="" ref="0x7f92925d1a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f92925cec90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortKP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f92925cec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92925cd0a0"/>
        <function-ref name="clear" scoped="" ref="0x7f92925cd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92925cd3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92925cd550"/>
        <function-ref name="read" scoped="" ref="0x7f92925cd6e0"/>
        <function-ref name="write" scoped="" ref="0x7f92925cd870"/>
        <function-ref name="set" scoped="" ref="0x7f92925cda00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f92925c9c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortLP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f92925c9c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92925c80a0"/>
        <function-ref name="clear" scoped="" ref="0x7f92925c8230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92925c83c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92925c8550"/>
        <function-ref name="read" scoped="" ref="0x7f92925c86e0"/>
        <function-ref name="write" scoped="" ref="0x7f92925c8870"/>
        <function-ref name="set" scoped="" ref="0x7f92925c8a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f92925bd2e0" loc="40:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f92925bd2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e995c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9292e99930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f92925bc110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f92925b0330" loc="9:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <component-ref qname="Enc28j60C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f92925b0330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f92925b06b0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f92925b0840"/>
        <function-ref name="start" scoped="" ref="0x7f92925b09d0"/>
        <function-ref name="stop" scoped="" ref="0x7f92925b0b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Enc28j60Control" ref="0x7f929257aba0" loc="10:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <component-ref qname="Enc28j60C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Enc28j60Control" scoped="" ref="0x7f929257aba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Enc28j60Control"/>
      </instance>
      <interface-functions>
        <function-ref name="linkChange" scoped="" ref="0x7f92925ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mac" ref="0x7f92928896f0" loc="8:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <component-ref qname="Enc28j60C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7f92928896f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292889a70"/>
        <function-ref name="received" scoped="" ref="0x7f9292889c00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292889d90"/>
        <function-ref name="getMac" scoped="" ref="0x7f92925b0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="intPin" ref="0x7f9292576cf0" loc="13:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="intPin" scoped="" ref="0x7f9292576cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92925750a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292575230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92925753c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292575550"/>
        <function-ref name="get" scoped="" ref="0x7f92925756e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292575870"/>
        <function-ref name="set" scoped="" ref="0x7f9292575a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9292575b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f9292572cf0" loc="17:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f9292572cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f929256c0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f929256c230"/>
        <function-ref name="start" scoped="" ref="0x7f929256c3c0"/>
        <function-ref name="stop" scoped="" ref="0x7f929256c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Enc28j60Control" ref="0x7f929256c880" loc="18:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Enc28j60Control" scoped="" ref="0x7f929256c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Enc28j60Control"/>
      </instance>
      <interface-functions>
        <function-ref name="linkChange" scoped="" ref="0x7f929256cc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f929256b430" loc="15:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f929256b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f929256b7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mac" ref="0x7f92925aeb00" loc="10:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7f92925aeb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92925aee80"/>
        <function-ref name="received" scoped="" ref="0x7f9292578030"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92925781c0"/>
        <function-ref name="getMac" scoped="" ref="0x7f9292578350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ssETH" ref="0x7f92925786c0" loc="11:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ssETH" scoped="" ref="0x7f92925786c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292578a40"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292578bd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292578d60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292577020"/>
        <function-ref name="get" scoped="" ref="0x7f92925771b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292577340"/>
        <function-ref name="set" scoped="" ref="0x7f92925774d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292577660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="rstETH" ref="0x7f92925779d0" loc="12:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="rstETH" scoped="" ref="0x7f92925779d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292577d50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292576020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92925761b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292576340"/>
        <function-ref name="get" scoped="" ref="0x7f92925764d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292576660"/>
        <function-ref name="set" scoped="" ref="0x7f92925767f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9292576980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="intETH" ref="0x7f929256e620" loc="14:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="intETH" scoped="" ref="0x7f929256e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929256e9a0"/>
        <function-ref name="fired" scoped="" ref="0x7f929256eb30"/>
        <function-ref name="disable" scoped="" ref="0x7f929256ecc0"/>
        <function-ref name="edge" scoped="" ref="0x7f929256ee50"/>
        <function-ref name="enable" scoped="" ref="0x7f9292573020"/>
        <function-ref name="getValue" scoped="" ref="0x7f92925731b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="checkInterruptflag" ref="0x7f92925365d0" loc="179:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="checkInterruptflag" scoped="" ref="0x7f92925365d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9292536950"/>
        <function-ref name="runTask" scoped="" ref="0x7f9292536ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f9292572020" loc="16:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9292572020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f92925723a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9292572530"/>
        <function-ref name="request" scoped="" ref="0x7f92925726c0"/>
        <function-ref name="granted" scoped="" ref="0x7f9292572850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f92925729e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f92924f5e60" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f92924f5e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292500210"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92925003a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f9292501b00" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f9292501b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f9292501e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9292506300" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9292506300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292506680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f92924fc400" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f92924fc400"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f92924fc780"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f92924fc910"/>
        <function-ref name="splitRead" scoped="" ref="0x7f92924fcaa0"/>
        <function-ref name="write" scoped="" ref="0x7f92924fcc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9292500bd0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9292500bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f92924fb020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f92924fb1b0"/>
        <function-ref name="request" scoped="" ref="0x7f92924fb340"/>
        <function-ref name="granted" scoped="" ref="0x7f92924fb4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f92924fb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiControl" ref="0x7f92925014a0" loc="84:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiControl" scoped="" ref="0x7f92925014a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setClock" scoped="" ref="0x7f9292501820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f92924cf510" loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f92924cf510"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f92924cf890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f92924abde0" loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f92924abde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f92924aa180"/>
        <function-ref name="runTask" scoped="" ref="0x7f92924aa310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f92924f05f0" loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f92924f05f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92924f0970"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92924f0b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f92924d2740" loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f92924d2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f92924d2ac0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f92924d2c50"/>
        <function-ref name="request" scoped="" ref="0x7f92924d2de0"/>
        <function-ref name="granted" scoped="" ref="0x7f92924d0020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f92924d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f92924f1340" loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f92924f1340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f92924f16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f92924f2670" loc="94:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f92924f2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f92924f29f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f92924d3340" loc="102:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f92924d3340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f92924d36c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f92924ecca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f92924d39e0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f92924ece30"/>
        <function-ref name="initMaster" scoped="" ref="0x7f92924d3d00"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f92924ed020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f92924ed1b0"/>
        <function-ref name="read" scoped="" ref="0x7f92924ed340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f92924ed4d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f92924ed660"/>
        <function-ref name="setClock" scoped="" ref="0x7f92924ed7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f92924ed980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f92924edb10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f92924edda0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f92924ec020"/>
        <function-ref name="write" scoped="" ref="0x7f92924ec1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f92924ec340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f92924ec4d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f92924ec660"/>
        <function-ref name="getClock" scoped="" ref="0x7f92924ec7f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f92924ec980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f92924d3850"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f92924d3b70"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f92924ecb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f92924f1980" loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f92924f1980"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f92924f1d00"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f92924f0020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f92924f01b0"/>
        <function-ref name="write" scoped="" ref="0x7f92924f0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f92924ef320" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f92924ef320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f92924ef6a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f92924ef830"/>
        <function-ref name="request" scoped="" ref="0x7f92924ef9c0"/>
        <function-ref name="granted" scoped="" ref="0x7f92924efb50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f92924efce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f92924cdcd0" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f92924cdcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f92924cf0a0"/>
        <function-ref name="userId" scoped="" ref="0x7f92924cf230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiControl" ref="0x7f92924f2cb0" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiControl" scoped="" ref="0x7f92924f2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setClock" scoped="" ref="0x7f92924f10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f929247e100" loc="76:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f929247e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f929247e480"/>
        <function-ref name="sleep" scoped="" ref="0x7f929247c980"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f929247e7a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f929247cb10"/>
        <function-ref name="initMaster" scoped="" ref="0x7f929247eac0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f929247ec50"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f929247ede0"/>
        <function-ref name="read" scoped="" ref="0x7f929247d020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f929247d1b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f929247d340"/>
        <function-ref name="setClock" scoped="" ref="0x7f929247d4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929247d660"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f929247d7f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f929247da80"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f929247dc10"/>
        <function-ref name="write" scoped="" ref="0x7f929247dda0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f929247c020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f929247c1b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f929247c340"/>
        <function-ref name="getClock" scoped="" ref="0x7f929247c4d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f929247c660"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f929247e610"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f929247e930"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f929247c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f929246f7f0" loc="81:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f929246f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929246fb70"/>
        <function-ref name="isInput" scoped="" ref="0x7f929246fd00"/>
        <function-ref name="toggle" scoped="" ref="0x7f929246e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929246e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f929246e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929246e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f929246e660"/>
        <function-ref name="clr" scoped="" ref="0x7f929246e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f9292472330" loc="79:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f9292472330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92924726b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292472840"/>
        <function-ref name="toggle" scoped="" ref="0x7f92924729d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292472b60"/>
        <function-ref name="get" scoped="" ref="0x7f9292472cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292472e80"/>
        <function-ref name="set" scoped="" ref="0x7f9292470030"/>
        <function-ref name="clr" scoped="" ref="0x7f92924701c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f9292473020" loc="78:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f9292473020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92924733a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9292473530"/>
        <function-ref name="toggle" scoped="" ref="0x7f92924736c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292473850"/>
        <function-ref name="get" scoped="" ref="0x7f92924739e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9292473b70"/>
        <function-ref name="set" scoped="" ref="0x7f9292473d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9292472020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f9292471770" loc="75:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9292471770"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9292471af0"/>
        <function-ref name="stop" scoped="" ref="0x7f9292471c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f929246eb30" loc="82:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f929246eb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f929246d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f9292477060" loc="74:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f9292477060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f92924773e0"/>
        <function-ref name="sleep" scoped="" ref="0x7f9292475980"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f9292477700"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9292475b10"/>
        <function-ref name="initMaster" scoped="" ref="0x7f9292477a20"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f9292477bb0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f9292477d40"/>
        <function-ref name="read" scoped="" ref="0x7f9292476020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f92924761b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f9292476340"/>
        <function-ref name="setClock" scoped="" ref="0x7f92924764d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9292476660"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f92924767f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f9292476a80"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f9292476c10"/>
        <function-ref name="write" scoped="" ref="0x7f9292476da0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f9292475020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f92924751b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f9292475340"/>
        <function-ref name="getClock" scoped="" ref="0x7f92924754d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f9292475660"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f9292477570"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f9292477890"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f92924757f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f92924704e0" loc="80:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f92924704e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9292470860"/>
        <function-ref name="isInput" scoped="" ref="0x7f92924709f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9292470b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9292470d10"/>
        <function-ref name="get" scoped="" ref="0x7f929246f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929246f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f929246f340"/>
        <function-ref name="clr" scoped="" ref="0x7f929246f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f92923c53a0" loc="86:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f92923c53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f92923c5740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f92923c58d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f92923c4570" loc="89:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f92923c4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f92923c4910"/>
        <function-ref name="configure" scoped="" ref="0x7f92923c4aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f92923c6520" loc="85:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f92923c6520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f92923c68c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f92923c6a50"/>
        <function-ref name="request" scoped="" ref="0x7f92923c6be0"/>
        <function-ref name="granted" scoped="" ref="0x7f92923c6d70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f92923c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f92923c5b20" loc="87:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f92923c5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f92923c4020"/>
        <function-ref name="userId" scoped="" ref="0x7f92923c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f92917224c0" loc="44:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f92917224c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9291722840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f9291722ad0" loc="45:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f9291722ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9291722e50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9291721020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f92917211b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9291721340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f929171f850" loc="52:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f929171f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f929171fbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929171fd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f929171e910" loc="56:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929171e910"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f929171ecb0"/>
        <function-ref name="configure" scoped="" ref="0x7f929171ee40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f929171d120" loc="57:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f929171d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f929171d4a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f929171d630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f929171d7c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f929171d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f92917209d0" loc="51:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f92917209d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9291720d70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929171f020"/>
        <function-ref name="request" scoped="" ref="0x7f929171f1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f929171f340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929171f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f929171e020" loc="53:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929171e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f929171e3a0"/>
        <function-ref name="userId" scoped="" ref="0x7f929171e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f929171dc20" loc="68:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f929171dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929171b020"/>
        <function-ref name="runTask" scoped="" ref="0x7f929171b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7f92923b4b70" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7f92923b4b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f92923b3020"/>
        <function-ref name="fired" scoped="" ref="0x7f92923b31b0"/>
        <function-ref name="disable" scoped="" ref="0x7f92923b3340"/>
        <function-ref name="edge" scoped="" ref="0x7f92923b34d0"/>
        <function-ref name="enable" scoped="" ref="0x7f92923b3660"/>
        <function-ref name="getValue" scoped="" ref="0x7f92923b37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f92923bab70" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f92923bab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f92923b9020"/>
        <function-ref name="fired" scoped="" ref="0x7f92923b91b0"/>
        <function-ref name="disable" scoped="" ref="0x7f92923b9340"/>
        <function-ref name="edge" scoped="" ref="0x7f92923b94d0"/>
        <function-ref name="enable" scoped="" ref="0x7f92923b9660"/>
        <function-ref name="getValue" scoped="" ref="0x7f92923b97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7f92923b6b70" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7f92923b6b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f92923b5020"/>
        <function-ref name="fired" scoped="" ref="0x7f92923b51b0"/>
        <function-ref name="disable" scoped="" ref="0x7f92923b5340"/>
        <function-ref name="edge" scoped="" ref="0x7f92923b54d0"/>
        <function-ref name="enable" scoped="" ref="0x7f92923b5660"/>
        <function-ref name="getValue" scoped="" ref="0x7f92923b57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7f92923b3b70" loc="52:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7f92923b3b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f92923b2020"/>
        <function-ref name="fired" scoped="" ref="0x7f92923b21b0"/>
        <function-ref name="disable" scoped="" ref="0x7f92923b2340"/>
        <function-ref name="edge" scoped="" ref="0x7f92923b24d0"/>
        <function-ref name="enable" scoped="" ref="0x7f92923b2660"/>
        <function-ref name="getValue" scoped="" ref="0x7f92923b27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f92923b9b70" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f92923b9b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f92923b8020"/>
        <function-ref name="fired" scoped="" ref="0x7f92923b81b0"/>
        <function-ref name="disable" scoped="" ref="0x7f92923b8340"/>
        <function-ref name="edge" scoped="" ref="0x7f92923b84d0"/>
        <function-ref name="enable" scoped="" ref="0x7f92923b8660"/>
        <function-ref name="getValue" scoped="" ref="0x7f92923b87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7f92923b5b70" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7f92923b5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f92923b4020"/>
        <function-ref name="fired" scoped="" ref="0x7f92923b41b0"/>
        <function-ref name="disable" scoped="" ref="0x7f92923b4340"/>
        <function-ref name="edge" scoped="" ref="0x7f92923b44d0"/>
        <function-ref name="enable" scoped="" ref="0x7f92923b4660"/>
        <function-ref name="getValue" scoped="" ref="0x7f92923b47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f92923bdb20" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f92923bdb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f92923ba020"/>
        <function-ref name="fired" scoped="" ref="0x7f92923ba1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f92923ba340"/>
        <function-ref name="edge" scoped="" ref="0x7f92923ba4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f92923ba660"/>
        <function-ref name="getValue" scoped="" ref="0x7f92923ba7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f92923b8b70" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f92923b8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f92923b6020"/>
        <function-ref name="fired" scoped="" ref="0x7f92923b61b0"/>
        <function-ref name="disable" scoped="" ref="0x7f92923b6340"/>
        <function-ref name="edge" scoped="" ref="0x7f92923b64d0"/>
        <function-ref name="enable" scoped="" ref="0x7f92923b6660"/>
        <function-ref name="getValue" scoped="" ref="0x7f92923b67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7f92923ab830" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7f92923ab830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f92923abbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f92923ae230" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f92923ae230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f92923ae5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7f92923ad8d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7f92923ad8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f92923adc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7f92923aa020" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7f92923aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f92923aa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f92923ae9b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f92923ae9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f92923aed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7f92923ab0b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7f92923ab0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f92923ab430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f92923aca00" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f92923aca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f92923acd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7f92923ad150" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7f92923ad150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f92923ad4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f929238d060" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f929238d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929238d3e0"/>
        <function-ref name="fired" scoped="" ref="0x7f929238d570"/>
        <function-ref name="disable" scoped="" ref="0x7f929238d700"/>
        <function-ref name="edge" scoped="" ref="0x7f929238d890"/>
        <function-ref name="enable" scoped="" ref="0x7f929238da20"/>
        <function-ref name="getValue" scoped="" ref="0x7f929238dbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f929238de80" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f929238de80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9292378220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9292376da0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9292376da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9292375180"/>
        <function-ref name="fired" scoped="" ref="0x7f9292375310"/>
        <function-ref name="disable" scoped="" ref="0x7f92923754a0"/>
        <function-ref name="edge" scoped="" ref="0x7f9292375630"/>
        <function-ref name="enable" scoped="" ref="0x7f92923757c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9292375950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9292375c20" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9292375c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9292374020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9292372c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9292372c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f92923700a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9292370230"/>
        <function-ref name="disable" scoped="" ref="0x7f92923703c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9292370550"/>
        <function-ref name="enable" scoped="" ref="0x7f92923706e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9292370870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9292370b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9292370b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929236f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f929236dc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f929236dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929236c0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f929236c230"/>
        <function-ref name="disable" scoped="" ref="0x7f929236c3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f929236c550"/>
        <function-ref name="enable" scoped="" ref="0x7f929236c6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f929236c870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f929236cb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f929236cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929236b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9292369c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9292369c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f92923680a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9292368230"/>
        <function-ref name="disable" scoped="" ref="0x7f92923683c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9292368550"/>
        <function-ref name="enable" scoped="" ref="0x7f92923686e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9292368870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9292368b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9292368b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9292367020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9292364c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9292364c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f92923630a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9292363230"/>
        <function-ref name="disable" scoped="" ref="0x7f92923633c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9292363550"/>
        <function-ref name="enable" scoped="" ref="0x7f92923636e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9292363870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9292363b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9292363b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9292362020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9292360c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9292360c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929235f0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f929235f230"/>
        <function-ref name="disable" scoped="" ref="0x7f929235f3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f929235f550"/>
        <function-ref name="enable" scoped="" ref="0x7f929235f6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f929235f870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f929235fb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f929235fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929235e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f929235cc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f929235cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929235b0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f929235b230"/>
        <function-ref name="disable" scoped="" ref="0x7f929235b3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f929235b550"/>
        <function-ref name="enable" scoped="" ref="0x7f929235b6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f929235b870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f929235bb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f929235bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9292359020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpSend" ref="0x7f92923491f0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <component-ref qname="DatabaseC.UdpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpSend" scoped="" ref="0x7f92923491f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292349570"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292349700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpReceive" ref="0x7f9292349990" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <component-ref qname="DatabaseC.UdpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7f9292349990"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9292349d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f9292344710" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <component-ref qname="UdpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9292344710"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9292f513a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9292f513a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9292cd0770"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f9292cd0da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292343390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92923438a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpReceive" ref="0x7f9292342330" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <component-ref qname="UdpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7f9292342330"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f92923426b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7f92923409d0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="UdpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f92923409d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292340d50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929233f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7f929233f2b0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="UdpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f929233f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f929233f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7f92916af0c0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="UdpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f92916af0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92916af440"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92916af5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpQueue" ref="0x7f92916af860" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="UdpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7f92916af860"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92916afbe0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92916afd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f929233eb90" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f929233eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9292cd0770"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f9292cd0da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929233b7b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929233bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpSend" ref="0x7f929233ad80" loc="13:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f929233ad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292339180"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292339310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpPacket" ref="0x7f92923384a0" loc="16:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpPacket" scoped="" ref="0x7f92923384a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacket" scoped="" ref="0x7f9292338820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpReceive" ref="0x7f929233a730" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7f929233a730"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f929233aab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpSend" ref="0x7f9292339c70" loc="15:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f9292339c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292338020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92923381b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpReceive" ref="0x7f9292339600" loc="14:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f9292339600"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f9292339980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7f929233c630" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="UdpTransceiverC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f929233c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f929233c9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7f929233de60" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="UdpTransceiverC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f929233de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929233c210"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929233c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpQueue" ref="0x7f92916a7440" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="UdpTransceiverC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7f92916a7440"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92916a77c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92916a7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7f92916a8b10" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="UdpTransceiverC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f92916a8b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92916a7020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92916a71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpSend" ref="0x7f92916b6c50" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
      <component-ref qname="DatabaseC.UdpC.UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpSend" scoped="" ref="0x7f92916b6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92916b5020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92916b51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UdpQueue" ref="0x7f92916b5440" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
      <component-ref qname="DatabaseC.UdpC.UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpQueue" scoped="" ref="0x7f92916b5440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f92916b57c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92916b5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpQueue" ref="0x7f92923111d0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <component-ref qname="UdpQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpQueue" scoped="" ref="0x7f92923111d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292311550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92923116e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f929230c620" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="UdpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f929230c620"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9292f513a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9292f513a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9292cd0770"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f9292cd0da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929230b390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929230b8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f929230f790" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="UdpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f929230f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9292cd0770"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f9292cd0da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929230e8c0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f929230e3b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929230ed90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f9291699dd0" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="UdpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f9291699dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9292cd0770"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f9292cd0da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9291698a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9291697020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f929169b0b0" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="UdpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f929169b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9292cd0770"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f9292cd0da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9291699220"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f929169bca0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92916996f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f92916974e0" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="UdpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f92916974e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9291697860"/>
        <function-ref name="runTask" scoped="" ref="0x7f92916979f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f9292307bb0" loc="13:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueP.nc">
      <component-ref qname="UdpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f9292307bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f9292cd0770"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f9292cd0da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292306cf0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f92923067e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f9292304220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpQueue" ref="0x7f92923071d0" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueP.nc">
      <component-ref qname="UdpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpQueue" scoped="" ref="0x7f92923071d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f9292307550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f92923076e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f92922f5cd0" loc="42:../tinyos_ws18/tos/system/PoolC.nc">
      <component-ref qname="DatabaseC.UdpMsgPool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f92922f5cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:130" alignment="I:1"><struct-ref name="udp_msg" ref="0x7f9292ce52e0"/>
            <typename><typedef-ref name="udp_msg_t" ref="0x7f9292ce5c20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f92922cfe10"/>
        <function-ref name="maxSize" scoped="" ref="0x7f92922cf2a0"/>
        <function-ref name="empty" scoped="" ref="0x7f92922d0940"/>
        <function-ref name="put" scoped="" ref="0x7f92922cf720"/>
        <function-ref name="size" scoped="" ref="0x7f92922d0dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f9291684a90" loc="56:../tinyos_ws18/tos/system/PoolP.nc">
      <component-ref qname="DatabaseC.UdpMsgPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f9291684a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:130" alignment="I:1"><struct-ref name="udp_msg" ref="0x7f9292ce52e0"/>
            <typename><typedef-ref name="udp_msg_t" ref="0x7f9292ce5c20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9291682b90"/>
        <function-ref name="maxSize" scoped="" ref="0x7f9291682020"/>
        <function-ref name="empty" scoped="" ref="0x7f92916836b0"/>
        <function-ref name="put" scoped="" ref="0x7f92916824a0"/>
        <function-ref name="size" scoped="" ref="0x7f9291683b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f92916843a0" loc="55:../tinyos_ws18/tos/system/PoolP.nc">
      <component-ref qname="DatabaseC.UdpMsgPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f92916843a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9291684720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f92922ca720" loc="43:../tinyos_ws18/tos/system/QueueC.nc">
      <component-ref qname="DatabaseC.UdpSendQ"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f92922ca720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:130" alignment="I:1"><struct-ref name="udp_msg" ref="0x7f9292ce52e0"/>
              <typename><typedef-ref name="udp_msg_t" ref="0x7f9292ce5c20"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f92922ae5f0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f92922ac3a0"/>
        <function-ref name="element" scoped="" ref="0x7f92922aca10"/>
        <function-ref name="full" scoped="" ref="0x7f92922af810"/>
        <function-ref name="maxSize" scoped="" ref="0x7f92922ae170"/>
        <function-ref name="dequeue" scoped="" ref="0x7f92922aeca0"/>
        <function-ref name="empty" scoped="" ref="0x7f92922af390"/>
        <function-ref name="size" scoped="" ref="0x7f92922afc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f92922aad10" loc="43:../tinyos_ws18/tos/system/QueueC.nc">
      <component-ref qname="DatabaseC.UdpRecvQ"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f92922aad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:130" alignment="I:1"><struct-ref name="udp_msg" ref="0x7f9292ce52e0"/>
              <typename><typedef-ref name="udp_msg_t" ref="0x7f9292ce5c20"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f92922a7ba0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f92922a6950"/>
        <function-ref name="element" scoped="" ref="0x7f92922a5020"/>
        <function-ref name="full" scoped="" ref="0x7f92922a9dc0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f92922a7720"/>
        <function-ref name="dequeue" scoped="" ref="0x7f92922a62a0"/>
        <function-ref name="empty" scoped="" ref="0x7f92922a9940"/>
        <function-ref name="size" scoped="" ref="0x7f92922a72a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929229e850" loc="14:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f929229e850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929229ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7f929229ee70" loc="15:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7f929229ee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f9292299020"/>
        <function-ref name="initDone" scoped="" ref="0x7f929229a3b0"/>
        <function-ref name="setVolume" scoped="" ref="0x7f929229a540"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f929229a6d0"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f929229a860"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f929229a9f0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f929229ab80"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f929229ad10"/>
        <function-ref name="seek" scoped="" ref="0x7f929229a220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="seek" ref="0x7f92922662a0" loc="184:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="seek" scoped="" ref="0x7f92922662a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9292266720"/>
        <function-ref name="runTask" scoped="" ref="0x7f92922668b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SDIOPin" ref="0x7f929227ccc0" loc="30:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SDIOPin" scoped="" ref="0x7f929227ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929227b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929227b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f929227b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929227b550"/>
        <function-ref name="get" scoped="" ref="0x7f929227b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929227b870"/>
        <function-ref name="set" scoped="" ref="0x7f929227ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f929227bb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="INTPin" ref="0x7f929227a020" loc="31:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="INTPin" scoped="" ref="0x7f929227a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929227a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929227a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f929227a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929227a850"/>
        <function-ref name="get" scoped="" ref="0x7f929227a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929227ab70"/>
        <function-ref name="set" scoped="" ref="0x7f929227ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f9292279020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Int" ref="0x7f9292295750" loc="25:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int" scoped="" ref="0x7f9292295750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9292295ad0"/>
        <function-ref name="fired" scoped="" ref="0x7f9292295c60"/>
        <function-ref name="disable" scoped="" ref="0x7f9292295df0"/>
        <function-ref name="edge" scoped="" ref="0x7f9292294020"/>
        <function-ref name="enable" scoped="" ref="0x7f92922941b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9292294340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f92922846f0" loc="27:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f92922846f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9292290020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f92922902e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f92922923d0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9292283880"/>
        <function-ref name="write" scoped="" ref="0x7f9292291020"/>
        <function-ref name="readDone" scoped="" ref="0x7f9292291c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init" ref="0x7f92922692a0" loc="182:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="init" scoped="" ref="0x7f92922692a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9292269620"/>
        <function-ref name="runTask" scoped="" ref="0x7f92922697b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="decodeRDS" ref="0x7f92922652a0" loc="185:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="decodeRDS" scoped="" ref="0x7f92922652a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9292265620"/>
        <function-ref name="runTask" scoped="" ref="0x7f92922657b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9292299c10" loc="20:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9292299c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292296020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7f92922946a0" loc="26:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7f92922946a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9292294a20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9292294bb0"/>
        <function-ref name="request" scoped="" ref="0x7f9292294d40"/>
        <function-ref name="granted" scoped="" ref="0x7f9292293020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f92922931b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTPin" ref="0x7f929227da60" loc="29:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTPin" scoped="" ref="0x7f929227da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929227dde0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929227c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f929227c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929227c340"/>
        <function-ref name="get" scoped="" ref="0x7f929227c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929227c660"/>
        <function-ref name="set" scoped="" ref="0x7f929227c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f929227c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7f92922962c0" loc="21:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7f92922962c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f9292295340"/>
        <function-ref name="initDone" scoped="" ref="0x7f92922967d0"/>
        <function-ref name="setVolume" scoped="" ref="0x7f9292296960"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f9292296af0"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f9292296c80"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f9292296e10"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9292295020"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f92922951b0"/>
        <function-ref name="seek" scoped="" ref="0x7f9292296640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f92922792a0" loc="32:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f92922792a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f9292278340"/>
        <function-ref name="drawRect" scoped="" ref="0x7f92922797b0"/>
        <function-ref name="drawLine" scoped="" ref="0x7f9292279940"/>
        <function-ref name="setPixel" scoped="" ref="0x7f9292279ad0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f9292279c60"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f9292279df0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f9292278020"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f9292279620"/>
        <function-ref name="drawText" scoped="" ref="0x7f92922781b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9292282620" loc="28:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9292282620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929227ec40"/>
        <function-ref name="fired" scoped="" ref="0x7f92922801e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f929227e020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9292280ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f929227d590"/>
        <function-ref name="gett0" scoped="" ref="0x7f929227d110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9292280660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9292281390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f929227e630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9292281860"/>
        <function-ref name="stop" scoped="" ref="0x7f9292281d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tune" ref="0x7f92922682a0" loc="183:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tune" scoped="" ref="0x7f92922682a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9292268620"/>
        <function-ref name="runTask" scoped="" ref="0x7f92922687b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929219f9f0" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f929219f9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929219fd70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9291fbc020"/>
        <function-ref name="request" scoped="" ref="0x7f9291fbc1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f9291fbc340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9291fbc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f9291fbc880" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9291fbc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9292290020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f92922902e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9291fbb500"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9291fb89b0"/>
        <function-ref name="write" scoped="" ref="0x7f9291fba150"/>
        <function-ref name="readDone" scoped="" ref="0x7f9291fbad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f92921949b0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f92921949b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9292194d30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9292191020"/>
        <function-ref name="request" scoped="" ref="0x7f92921911b0"/>
        <function-ref name="granted" scoped="" ref="0x7f9292191340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f92921914d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f929218f020" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f929218f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9292290020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f92922902e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929218fc50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f929218c150"/>
        <function-ref name="write" scoped="" ref="0x7f929218e8c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f929218d510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9292121bf0" loc="92:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9292121bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9292120020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f92921201b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f929211e930" loc="96:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929211e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f929211ecd0"/>
        <function-ref name="configure" scoped="" ref="0x7f929211ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f9292120400" loc="93:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9292120400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9292120780"/>
        <function-ref name="requested" scoped="" ref="0x7f9292120910"/>
        <function-ref name="granted" scoped="" ref="0x7f9292120aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9292120c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9292120dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9292122e60" loc="91:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9292122e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9292121230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f92921213c0"/>
        <function-ref name="request" scoped="" ref="0x7f9292121550"/>
        <function-ref name="granted" scoped="" ref="0x7f92921216e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9292121870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f929211e060" loc="94:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929211e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f929211e3e0"/>
        <function-ref name="userId" scoped="" ref="0x7f929211e570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929164dc20" loc="44:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f929164dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929164c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f929164c2b0" loc="45:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f929164c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f929164c630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f929164c7c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f929164c950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f929164cae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f92916483a0" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f92916483a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9291648740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f92916488d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9291646210" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9291646210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f92916465b0"/>
        <function-ref name="configure" scoped="" ref="0x7f9291646740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f92916469d0" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f92916469d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9291646d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9291645020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f92916451b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9291645340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f9291648b20" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9291648b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9291647020"/>
        <function-ref name="requested" scoped="" ref="0x7f92916471b0"/>
        <function-ref name="granted" scoped="" ref="0x7f9291647340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f92916474d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9291647660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9291645590" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9291645590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9291645910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9291645aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f9291645c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9291645dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9291644020"/>
        <function-ref name="get" scoped="" ref="0x7f92916441b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9291644340"/>
        <function-ref name="led0On" scoped="" ref="0x7f9291644980"/>
        <function-ref name="set" scoped="" ref="0x7f9291644660"/>
        <function-ref name="led2On" scoped="" ref="0x7f92916444d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f92916447f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f92916494d0" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f92916494d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9291649870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9291649a00"/>
        <function-ref name="request" scoped="" ref="0x7f9291649b90"/>
        <function-ref name="granted" scoped="" ref="0x7f9291649d20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9291648020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f92916478b0" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f92916478b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9291647c30"/>
        <function-ref name="userId" scoped="" ref="0x7f9291647dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f9291644c50" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f9291644c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9291643020"/>
        <function-ref name="runTask" scoped="" ref="0x7f92916431b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f929211acb0" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f929211acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f929210d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f929210d2f0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f929210d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929210d670"/>
        <function-ref name="requested" scoped="" ref="0x7f929210d800"/>
        <function-ref name="granted" scoped="" ref="0x7f929210d990"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929210db20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929210dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f929211a550" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f929211a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f929211a8d0"/>
        <function-ref name="stop" scoped="" ref="0x7f929211aa60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f929210c020" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929210c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f929210c3a0"/>
        <function-ref name="userId" scoped="" ref="0x7f929210c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7f92920c88e0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f92920c88e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f92920c8c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f92920cdc40" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f92920cdc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9292290020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f92922902e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f92920cc8a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f92920cad20"/>
        <function-ref name="write" scoped="" ref="0x7f92920cb4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f92920ca110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f92920c7020" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f92920c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f92920c73a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f92920c7530"/>
        <function-ref name="led1On" scoped="" ref="0x7f92920c76c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f92920c7850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f92920c79e0"/>
        <function-ref name="get" scoped="" ref="0x7f92920c7b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f92920c7d00"/>
        <function-ref name="led2On" scoped="" ref="0x7f92920c64d0"/>
        <function-ref name="set" scoped="" ref="0x7f92920c61b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f92920c6020"/>
        <function-ref name="led0On" scoped="" ref="0x7f92920c6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f92920d3020" loc="41:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f92920d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f92920d33c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f92920d3550"/>
        <function-ref name="request" scoped="" ref="0x7f92920d36e0"/>
        <function-ref name="granted" scoped="" ref="0x7f92920d3870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f92920d3a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f92920d2020" loc="42:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f92920d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9292290020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f92922902e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f92920d2c70"/>
        <function-ref name="writeDone" scoped="" ref="0x7f92920ce170"/>
        <function-ref name="write" scoped="" ref="0x7f92920d18c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f92920d0510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f92920cee40" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f92920cee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f92920cd210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f92920cd3a0"/>
        <function-ref name="request" scoped="" ref="0x7f92920cd530"/>
        <function-ref name="granted" scoped="" ref="0x7f92920cd6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f92920cd850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7f92920548e0" loc="79:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f92920548e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f9292054c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f9292053020" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f9292053020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f92920533a0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f9292053530"/>
        <function-ref name="setStart" scoped="" ref="0x7f92920536c0"/>
        <function-ref name="status" scoped="" ref="0x7f9292053850"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f92920539e0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9292053b70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f9292053d00"/>
        <function-ref name="read" scoped="" ref="0x7f9292052020"/>
        <function-ref name="init" scoped="" ref="0x7f92920521b0"/>
        <function-ref name="enableAck" scoped="" ref="0x7f9292052340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f92920524d0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f9292052660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f92920527f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f9292052a80"/>
        <function-ref name="enable" scoped="" ref="0x7f9292052c10"/>
        <function-ref name="write" scoped="" ref="0x7f9292052da0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f9292051020"/>
        <function-ref name="off" scoped="" ref="0x7f92920511b0"/>
        <function-ref name="setStop" scoped="" ref="0x7f9292051340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f92920514d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f9292051660"/>
        <function-ref name="hasStop" scoped="" ref="0x7f92920517f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7f9292051ac0" loc="82:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f9292051ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9292051e40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f929204f020"/>
        <function-ref name="led1On" scoped="" ref="0x7f929204f1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f929204f340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f929204f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f929204f660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f929204f7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f929204fe30"/>
        <function-ref name="set" scoped="" ref="0x7f929204fb10"/>
        <function-ref name="led2Off" scoped="" ref="0x7f929204f980"/>
        <function-ref name="led0On" scoped="" ref="0x7f929204fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7f929204e160" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f929204e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f929204e4e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f929204e670"/>
        <function-ref name="led1On" scoped="" ref="0x7f929204e800"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f929204e990"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f929204eb20"/>
        <function-ref name="get" scoped="" ref="0x7f929204ecb0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f929204ee40"/>
        <function-ref name="led2On" scoped="" ref="0x7f929204d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f929204d1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f929204d020"/>
        <function-ref name="led0On" scoped="" ref="0x7f929204d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f929204d7a0" loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f929204d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929204db20"/>
        <function-ref name="runTask" scoped="" ref="0x7f929204dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f9292059340" loc="77:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9292059340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f92920596c0"/>
        <function-ref name="stop" scoped="" ref="0x7f9292059850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f9292059c00" loc="78:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9292059c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9292290020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f92922902e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f92920578a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9292055d20"/>
        <function-ref name="write" scoped="" ref="0x7f92920564d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f9292055110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f92920470e0" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f92920470e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f9292047460"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f92920475f0"/>
        <function-ref name="setStart" scoped="" ref="0x7f9292047780"/>
        <function-ref name="status" scoped="" ref="0x7f9292047910"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f9292047aa0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9292047c30"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f9292047dc0"/>
        <function-ref name="read" scoped="" ref="0x7f9292046020"/>
        <function-ref name="init" scoped="" ref="0x7f92920461b0"/>
        <function-ref name="enableAck" scoped="" ref="0x7f9292046340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f92920464d0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f9292046660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f92920467f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f9292046a80"/>
        <function-ref name="enable" scoped="" ref="0x7f9292046c10"/>
        <function-ref name="write" scoped="" ref="0x7f9292046da0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f9292045020"/>
        <function-ref name="off" scoped="" ref="0x7f92920451b0"/>
        <function-ref name="setStop" scoped="" ref="0x7f9292045340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f92920454d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f9292045660"/>
        <function-ref name="hasStop" scoped="" ref="0x7f92920457f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f9292044a70" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f9292044a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f9292044df0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f9292041020"/>
        <function-ref name="setStart" scoped="" ref="0x7f92920411b0"/>
        <function-ref name="status" scoped="" ref="0x7f9292041340"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f92920414d0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9292041660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f92920417f0"/>
        <function-ref name="read" scoped="" ref="0x7f9292041980"/>
        <function-ref name="init" scoped="" ref="0x7f9292041b10"/>
        <function-ref name="enableAck" scoped="" ref="0x7f9292041ca0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f9292041e30"/>
        <function-ref name="hasStart" scoped="" ref="0x7f9292040020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f92920401b0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f9292040440"/>
        <function-ref name="enable" scoped="" ref="0x7f92920405d0"/>
        <function-ref name="write" scoped="" ref="0x7f9292040760"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f92920408f0"/>
        <function-ref name="off" scoped="" ref="0x7f9292040a80"/>
        <function-ref name="setStop" scoped="" ref="0x7f9292040c10"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f9292040da0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f929203f020"/>
        <function-ref name="hasStop" scoped="" ref="0x7f929203f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7f929203f540" loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7f929203f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929203f8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929203fa50"/>
        <function-ref name="toggle" scoped="" ref="0x7f929203fbe0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929203fd70"/>
        <function-ref name="get" scoped="" ref="0x7f929203e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929203e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f929203e340"/>
        <function-ref name="clr" scoped="" ref="0x7f929203e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7f929203e810" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7f929203e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929203eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f929203ed20"/>
        <function-ref name="toggle" scoped="" ref="0x7f929203d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929203d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f929203d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929203d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f929203d660"/>
        <function-ref name="clr" scoped="" ref="0x7f929203d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f92920074a0" loc="46:../tinyos_ws18/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f92920074a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9292007820"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f92920079b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f9292007b40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9292007cd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9292007e60"/>
        <function-ref name="get" scoped="" ref="0x7f9292004020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f92920041b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f92920047f0"/>
        <function-ref name="set" scoped="" ref="0x7f9292004340"/>
        <function-ref name="led0On" scoped="" ref="0x7f92920044d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f9292004660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f9291fff550" loc="50:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f9291fff550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291fff8d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291fffa60"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291fffbf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291fffd80"/>
        <function-ref name="get" scoped="" ref="0x7f9291ffe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291ffe1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9291ffe340"/>
        <function-ref name="clr" scoped="" ref="0x7f9291ffe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f92920037c0" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f92920037c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9292003b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f9291ffe7f0" loc="51:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f9291ffe7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291ffeb70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291ffed00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291ffd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291ffd1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9291ffd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291ffd4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9291ffd660"/>
        <function-ref name="clr" scoped="" ref="0x7f9291ffd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f9292003dc0" loc="47:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9292003dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9292000180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9292000310"/>
        <function-ref name="led1On" scoped="" ref="0x7f92920004a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9292000630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f92920007c0"/>
        <function-ref name="get" scoped="" ref="0x7f9292000950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9292000ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9291fff1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9292000c70"/>
        <function-ref name="led0On" scoped="" ref="0x7f9292000e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f9291fff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f9291ffdb10" loc="52:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f9291ffdb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291ffc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291ffc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291ffc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291ffc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9291ffc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291ffc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9291ffc980"/>
        <function-ref name="clr" scoped="" ref="0x7f9291ffcb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f9291fe11d0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f9291fe11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291fe1550"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291fe16e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291fe1870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291fe1a00"/>
        <function-ref name="get" scoped="" ref="0x7f9291fe1b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291fe1d20"/>
        <function-ref name="set" scoped="" ref="0x7f9291fe0020"/>
        <function-ref name="clr" scoped="" ref="0x7f9291fe01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f9291fe0510" loc="45:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f9291fe0510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291fe0890"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291fe0a20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291fe0bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291fe0d40"/>
        <function-ref name="get" scoped="" ref="0x7f9291fdf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291fdf1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9291fdf340"/>
        <function-ref name="clr" scoped="" ref="0x7f9291fdf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f9291fddab0" loc="48:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9291fddab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9291fdde30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f9291fdf830" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f9291fdf830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291fdfbb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291fdfd40"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291fdd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291fdd1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9291fdd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291fdd4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9291fdd660"/>
        <function-ref name="clr" scoped="" ref="0x7f9291fdd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9291fd5340" loc="46:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9291fd5340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9291fd56c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f9291fd5980" loc="47:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9291fd5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9291fd5d00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9291fd4020"/>
        <function-ref name="led1On" scoped="" ref="0x7f9291fd41b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9291fd4340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9291fd44d0"/>
        <function-ref name="get" scoped="" ref="0x7f9291fd4660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9291fd47f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9291fd4e30"/>
        <function-ref name="set" scoped="" ref="0x7f9291fd4980"/>
        <function-ref name="led0On" scoped="" ref="0x7f9291fd4b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f9291fd4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9291fb6b80" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="FMClickC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9291fb6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9291fb1110"/>
        <function-ref name="fired" scoped="" ref="0x7f9291fb45f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9291fb34a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9291fb3020"/>
        <function-ref name="getdt" scoped="" ref="0x7f9291fb1a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f9291fb1590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9291fb4a70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9291fb5790"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9291fb3ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9291fb5c60"/>
        <function-ref name="stop" scoped="" ref="0x7f9291fb4170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f9291f72cb0" loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f9291f72cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f71610"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f717a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f71930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f71ac0"/>
        <function-ref name="get" scoped="" ref="0x7f9291f71c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f71de0"/>
        <function-ref name="set" scoped="" ref="0x7f9291f70020"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f701b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f9291f8e350" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f9291f8e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f8e6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f8e860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f8e9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f8eb80"/>
        <function-ref name="get" scoped="" ref="0x7f9291f8ed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f8d020"/>
        <function-ref name="set" scoped="" ref="0x7f9291f8d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f8d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f9291f82350" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f9291f82350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f826d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f82860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f829f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f82b80"/>
        <function-ref name="get" scoped="" ref="0x7f9291f82d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f81020"/>
        <function-ref name="set" scoped="" ref="0x7f9291f811b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f81340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f9291f78cb0" loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f9291f78cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f770a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f77230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f773c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f77550"/>
        <function-ref name="get" scoped="" ref="0x7f9291f776e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f77870"/>
        <function-ref name="set" scoped="" ref="0x7f9291f77a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f77b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f9291f6b060" loc="108:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f9291f6b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f6b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f6b570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f6b700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f6b890"/>
        <function-ref name="get" scoped="" ref="0x7f9291f6ba20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f6bbb0"/>
        <function-ref name="set" scoped="" ref="0x7f9291f6bd40"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f6a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH2" ref="0x7f9291f68990" loc="112:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH2" scoped="" ref="0x7f9291f68990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f68d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f67020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f671b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f67340"/>
        <function-ref name="get" scoped="" ref="0x7f9291f674d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f67660"/>
        <function-ref name="set" scoped="" ref="0x7f9291f677f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f67980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH7" ref="0x7f9291f61990" loc="117:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH7" scoped="" ref="0x7f9291f61990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f61d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f60020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f601b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f60340"/>
        <function-ref name="get" scoped="" ref="0x7f9291f604d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f60660"/>
        <function-ref name="set" scoped="" ref="0x7f9291f607f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f60980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ6" ref="0x7f9291f58020" loc="125:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ6" scoped="" ref="0x7f9291f58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f583a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f58530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f586c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f58850"/>
        <function-ref name="get" scoped="" ref="0x7f9291f589e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f58b70"/>
        <function-ref name="set" scoped="" ref="0x7f9291f58d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK0" ref="0x7f9291f56670" loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK0" scoped="" ref="0x7f9291f56670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f569f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f56b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f56d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f55020"/>
        <function-ref name="get" scoped="" ref="0x7f9291f551b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f55340"/>
        <function-ref name="set" scoped="" ref="0x7f9291f554d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f55660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL2" ref="0x7f9291f4a670" loc="139:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL2" scoped="" ref="0x7f9291f4a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f4a9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f4ab80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f4ad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f49020"/>
        <function-ref name="get" scoped="" ref="0x7f9291f491b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f49340"/>
        <function-ref name="set" scoped="" ref="0x7f9291f494d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f49660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f9291fa6350" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f9291fa6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291fa66d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291fa6860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291fa69f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291fa6b80"/>
        <function-ref name="get" scoped="" ref="0x7f9291fa6d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291fa5020"/>
        <function-ref name="set" scoped="" ref="0x7f9291fa51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291fa5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f9291f7a670" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f9291f7a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f7a9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f7ab80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f7ad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f79020"/>
        <function-ref name="get" scoped="" ref="0x7f9291f791b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f79340"/>
        <function-ref name="set" scoped="" ref="0x7f9291f794d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f79660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f9291fa4990" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f9291fa4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291fa4d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291fa3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291fa31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291fa3340"/>
        <function-ref name="get" scoped="" ref="0x7f9291fa34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291fa3660"/>
        <function-ref name="set" scoped="" ref="0x7f9291fa37f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291fa3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f9291f97990" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f9291f97990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f97d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f96020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f961b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f96340"/>
        <function-ref name="get" scoped="" ref="0x7f9291f964d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f96660"/>
        <function-ref name="set" scoped="" ref="0x7f9291f967f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f96980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f9291f8bcb0" loc="80:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f9291f8bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f8a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f8a230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f8a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f8a550"/>
        <function-ref name="get" scoped="" ref="0x7f9291f8a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f8a870"/>
        <function-ref name="set" scoped="" ref="0x7f9291f8aa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f8ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f9291f7ecb0" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f9291f7ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f7d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f7d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f7d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f7d550"/>
        <function-ref name="get" scoped="" ref="0x7f9291f7d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f7d870"/>
        <function-ref name="set" scoped="" ref="0x7f9291f7da00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f7db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f9291fac4e0" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f9291fac4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291fac860"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291fac9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291facb80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291facd10"/>
        <function-ref name="get" scoped="" ref="0x7f9291fab020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291fab1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9291fab340"/>
        <function-ref name="clr" scoped="" ref="0x7f9291fab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f9291fa0350" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f9291fa0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291fa06d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291fa0860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291fa09f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291fa0b80"/>
        <function-ref name="get" scoped="" ref="0x7f9291fa0d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f9f020"/>
        <function-ref name="set" scoped="" ref="0x7f9291f9f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f9f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f9291f93350" loc="72:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f9291f93350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f936d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f93860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f939f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f93b80"/>
        <function-ref name="get" scoped="" ref="0x7f9291f93d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f92020"/>
        <function-ref name="set" scoped="" ref="0x7f9291f921b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f92340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f9291f87670" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f9291f87670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f879f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f87b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f87d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f86020"/>
        <function-ref name="get" scoped="" ref="0x7f9291f861b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f86340"/>
        <function-ref name="set" scoped="" ref="0x7f9291f864d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f86660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f9291f74670" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f9291f74670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f749f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f74b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f74d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f73020"/>
        <function-ref name="get" scoped="" ref="0x7f9291f731b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f73340"/>
        <function-ref name="set" scoped="" ref="0x7f9291f734d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f73660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f9291f6eb20" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f9291f6eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f6d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f6d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f6d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f6d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9291f6d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f6d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9291f6d980"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f6db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH0" ref="0x7f9291f6a350" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH0" scoped="" ref="0x7f9291f6a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f6a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f6a860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f6a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f6ab80"/>
        <function-ref name="get" scoped="" ref="0x7f9291f6ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f69020"/>
        <function-ref name="set" scoped="" ref="0x7f9291f691b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f69340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f9291f85cb0" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f9291f85cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f840a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f84230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f843c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f84550"/>
        <function-ref name="get" scoped="" ref="0x7f9291f846e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f84870"/>
        <function-ref name="set" scoped="" ref="0x7f9291f84a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f84b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH5" ref="0x7f9291f64350" loc="115:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH5" scoped="" ref="0x7f9291f64350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f646d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f64860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f649f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f64b80"/>
        <function-ref name="get" scoped="" ref="0x7f9291f64d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f62020"/>
        <function-ref name="set" scoped="" ref="0x7f9291f621b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f62340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ1" ref="0x7f9291f5e020" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ1" scoped="" ref="0x7f9291f5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f5e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f5e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f5e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f5e850"/>
        <function-ref name="get" scoped="" ref="0x7f9291f5e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f5eb70"/>
        <function-ref name="set" scoped="" ref="0x7f9291f5ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ4" ref="0x7f9291f5b990" loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ4" scoped="" ref="0x7f9291f5b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f5bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f5a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f5a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f5a340"/>
        <function-ref name="get" scoped="" ref="0x7f9291f5a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f5a660"/>
        <function-ref name="set" scoped="" ref="0x7f9291f5a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f5a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK3" ref="0x7f9291f52020" loc="131:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK3" scoped="" ref="0x7f9291f52020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f523a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f52530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f526c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f52850"/>
        <function-ref name="get" scoped="" ref="0x7f9291f529e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f52b70"/>
        <function-ref name="set" scoped="" ref="0x7f9291f52d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK6" ref="0x7f9291f4f990" loc="134:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK6" scoped="" ref="0x7f9291f4f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f4fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f4e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f4e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f4e340"/>
        <function-ref name="get" scoped="" ref="0x7f9291f4e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f4e660"/>
        <function-ref name="set" scoped="" ref="0x7f9291f4e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f4e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL0" ref="0x7f9291f4c020" loc="137:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL0" scoped="" ref="0x7f9291f4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f4c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f4c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f4c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f4c850"/>
        <function-ref name="get" scoped="" ref="0x7f9291f4c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f4cb70"/>
        <function-ref name="set" scoped="" ref="0x7f9291f4cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f4b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL5" ref="0x7f9291f45020" loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL5" scoped="" ref="0x7f9291f45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f453a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f45530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f456c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f45850"/>
        <function-ref name="get" scoped="" ref="0x7f9291f459e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f45b70"/>
        <function-ref name="set" scoped="" ref="0x7f9291f45d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f9291fa9e40" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f9291fa9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291fa81e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291fa8370"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291fa8500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291fa8690"/>
        <function-ref name="get" scoped="" ref="0x7f9291fa8820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291fa89b0"/>
        <function-ref name="set" scoped="" ref="0x7f9291fa8b40"/>
        <function-ref name="clr" scoped="" ref="0x7f9291fa8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f9291f9ccb0" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f9291f9ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f9b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f9b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f9b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f9b550"/>
        <function-ref name="get" scoped="" ref="0x7f9291f9b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f9b870"/>
        <function-ref name="set" scoped="" ref="0x7f9291f9ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f9bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f9291f704e0" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f9291f704e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f70860"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f709f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f70b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f70d10"/>
        <function-ref name="get" scoped="" ref="0x7f9291f6f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f6f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9291f6f340"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f6f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f9291f99350" loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f9291f99350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f996d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f99860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f999f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f99b80"/>
        <function-ref name="get" scoped="" ref="0x7f9291f99d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f98020"/>
        <function-ref name="set" scoped="" ref="0x7f9291f981b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f98340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f9291f8d670" loc="78:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f9291f8d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f8d9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f8db80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f8dd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f8c020"/>
        <function-ref name="get" scoped="" ref="0x7f9291f8c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f8c340"/>
        <function-ref name="set" scoped="" ref="0x7f9291f8c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f8c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f9291f81670" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f9291f81670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f819f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f81b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f81d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f7f020"/>
        <function-ref name="get" scoped="" ref="0x7f9291f7f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f7f340"/>
        <function-ref name="set" scoped="" ref="0x7f9291f7f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f7f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f9291f76020" loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f9291f76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f763a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f76530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f766c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f76850"/>
        <function-ref name="get" scoped="" ref="0x7f9291f769e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f76b70"/>
        <function-ref name="set" scoped="" ref="0x7f9291f76d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH3" ref="0x7f9291f67cb0" loc="113:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH3" scoped="" ref="0x7f9291f67cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f660a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f66230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f663c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f66550"/>
        <function-ref name="get" scoped="" ref="0x7f9291f666e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f66870"/>
        <function-ref name="set" scoped="" ref="0x7f9291f66a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f66b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ7" ref="0x7f9291f57350" loc="126:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ7" scoped="" ref="0x7f9291f57350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f576d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f57860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f579f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f57b80"/>
        <function-ref name="get" scoped="" ref="0x7f9291f57d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f56020"/>
        <function-ref name="set" scoped="" ref="0x7f9291f561b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f56340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK1" ref="0x7f9291f55990" loc="129:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK1" scoped="" ref="0x7f9291f55990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f55d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f54020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f541b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f54340"/>
        <function-ref name="get" scoped="" ref="0x7f9291f544d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f54660"/>
        <function-ref name="set" scoped="" ref="0x7f9291f547f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f54980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL3" ref="0x7f9291f49990" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL3" scoped="" ref="0x7f9291f49990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f49d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f48020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f481b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f48340"/>
        <function-ref name="get" scoped="" ref="0x7f9291f484d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f48660"/>
        <function-ref name="set" scoped="" ref="0x7f9291f487f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f48980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ2" ref="0x7f9291f5d350" loc="121:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ2" scoped="" ref="0x7f9291f5d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f5d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f5d860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f5d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f5db80"/>
        <function-ref name="get" scoped="" ref="0x7f9291f5dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f5c020"/>
        <function-ref name="set" scoped="" ref="0x7f9291f5c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f5c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f9291fa5670" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f9291fa5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291fa59f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291fa5b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291fa5d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291fa4020"/>
        <function-ref name="get" scoped="" ref="0x7f9291fa41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291fa4340"/>
        <function-ref name="set" scoped="" ref="0x7f9291fa44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291fa4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK4" ref="0x7f9291f51350" loc="132:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK4" scoped="" ref="0x7f9291f51350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f516d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f51860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f519f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f51b80"/>
        <function-ref name="get" scoped="" ref="0x7f9291f51d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f50020"/>
        <function-ref name="set" scoped="" ref="0x7f9291f501b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f50340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL6" ref="0x7f9291f44350" loc="143:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL6" scoped="" ref="0x7f9291f44350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f446d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f44860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f449f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f44b80"/>
        <function-ref name="get" scoped="" ref="0x7f9291f44d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f43020"/>
        <function-ref name="set" scoped="" ref="0x7f9291f431b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f43340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f9291fa3cb0" loc="59:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f9291fa3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291fa20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291fa2230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291fa23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291fa2550"/>
        <function-ref name="get" scoped="" ref="0x7f9291fa26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291fa2870"/>
        <function-ref name="set" scoped="" ref="0x7f9291fa2a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291fa2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f9291f96cb0" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f9291f96cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f950a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f95230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f953c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f95550"/>
        <function-ref name="get" scoped="" ref="0x7f9291f956e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f95870"/>
        <function-ref name="set" scoped="" ref="0x7f9291f95a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f95b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f9291f89020" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f9291f89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f893a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f89530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f896c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f89850"/>
        <function-ref name="get" scoped="" ref="0x7f9291f899e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f89b70"/>
        <function-ref name="set" scoped="" ref="0x7f9291f89d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f9291f7c020" loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f9291f7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f7c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f7c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f7c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f7c850"/>
        <function-ref name="get" scoped="" ref="0x7f9291f7c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f7cb70"/>
        <function-ref name="set" scoped="" ref="0x7f9291f7cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f7b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f9291fab800" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f9291fab800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291fabb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291fabd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291faa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291faa1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9291faa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291faa4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9291faa660"/>
        <function-ref name="clr" scoped="" ref="0x7f9291faa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f9291f9f670" loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f9291f9f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f9faf0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f9fc80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f9fe10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f9e020"/>
        <function-ref name="get" scoped="" ref="0x7f9291f9e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f9e340"/>
        <function-ref name="set" scoped="" ref="0x7f9291f9e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f9e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f9291f92670" loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f9291f92670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f929f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f92b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f92d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f91020"/>
        <function-ref name="get" scoped="" ref="0x7f9291f911b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f91340"/>
        <function-ref name="set" scoped="" ref="0x7f9291f914d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f91660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f9291f73990" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f9291f73990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f73d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f72020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f721b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f72340"/>
        <function-ref name="get" scoped="" ref="0x7f9291f724d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f72660"/>
        <function-ref name="set" scoped="" ref="0x7f9291f727f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f72980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH1" ref="0x7f9291f69670" loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH1" scoped="" ref="0x7f9291f69670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f699f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f69b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f69d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f68020"/>
        <function-ref name="get" scoped="" ref="0x7f9291f681b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f68340"/>
        <function-ref name="set" scoped="" ref="0x7f9291f684d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f68660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f9291f90cb0" loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f9291f90cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f8f410"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f8f5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f8f730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f8f8c0"/>
        <function-ref name="get" scoped="" ref="0x7f9291f8fa50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f8fbe0"/>
        <function-ref name="set" scoped="" ref="0x7f9291f8fd70"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f9291f83020" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f9291f83020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f833a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f83530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f836c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f83850"/>
        <function-ref name="get" scoped="" ref="0x7f9291f839e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f83b70"/>
        <function-ref name="set" scoped="" ref="0x7f9291f83d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f82020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f9291f79990" loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f9291f79990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f79d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f78020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f781b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f78340"/>
        <function-ref name="get" scoped="" ref="0x7f9291f784d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f78660"/>
        <function-ref name="set" scoped="" ref="0x7f9291f787f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f78980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f9291f6de40" loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f9291f6de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f6c1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f6c370"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f6c500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f6c690"/>
        <function-ref name="get" scoped="" ref="0x7f9291f6c820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f6c9b0"/>
        <function-ref name="set" scoped="" ref="0x7f9291f6cb40"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f6ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH6" ref="0x7f9291f62670" loc="116:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH6" scoped="" ref="0x7f9291f62670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f629f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f62b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f62d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f61020"/>
        <function-ref name="get" scoped="" ref="0x7f9291f611b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f61340"/>
        <function-ref name="set" scoped="" ref="0x7f9291f614d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f61660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ5" ref="0x7f9291f5acb0" loc="124:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ5" scoped="" ref="0x7f9291f5acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f590a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f59230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f593c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f59550"/>
        <function-ref name="get" scoped="" ref="0x7f9291f596e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f59870"/>
        <function-ref name="set" scoped="" ref="0x7f9291f59a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f59b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK7" ref="0x7f9291f4ecb0" loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK7" scoped="" ref="0x7f9291f4ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f4d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f4d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f4d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f4d550"/>
        <function-ref name="get" scoped="" ref="0x7f9291f4d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f4d870"/>
        <function-ref name="set" scoped="" ref="0x7f9291f4da00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f4db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL1" ref="0x7f9291f4b350" loc="138:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL1" scoped="" ref="0x7f9291f4b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f4b6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f4b860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f4b9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f4bb80"/>
        <function-ref name="get" scoped="" ref="0x7f9291f4bd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f4a020"/>
        <function-ref name="set" scoped="" ref="0x7f9291f4a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f4a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f9291fa7060" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f9291fa7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291fa73e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291fa7570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291fa7700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291fa7890"/>
        <function-ref name="get" scoped="" ref="0x7f9291fa7a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291fa7bb0"/>
        <function-ref name="set" scoped="" ref="0x7f9291fa7d40"/>
        <function-ref name="clr" scoped="" ref="0x7f9291fa6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f9291f9a020" loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f9291f9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f9a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f9a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f9a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f9a850"/>
        <function-ref name="get" scoped="" ref="0x7f9291f9a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f9ab70"/>
        <function-ref name="set" scoped="" ref="0x7f9291f9ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f9291f7b350" loc="94:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f9291f7b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f7b6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f7b860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f7b9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f7bb80"/>
        <function-ref name="get" scoped="" ref="0x7f9291f7bd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f7a020"/>
        <function-ref name="set" scoped="" ref="0x7f9291f7a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f7a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f9291f98670" loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f9291f98670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f989f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f98b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f98d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f97020"/>
        <function-ref name="get" scoped="" ref="0x7f9291f971b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f97340"/>
        <function-ref name="set" scoped="" ref="0x7f9291f974d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f97660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f9291f8c990" loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f9291f8c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f8cd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f8b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f8b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f8b340"/>
        <function-ref name="get" scoped="" ref="0x7f9291f8b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f8b660"/>
        <function-ref name="set" scoped="" ref="0x7f9291f8b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f8b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f9291f7f990" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f9291f7f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f7fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f7e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f7e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f7e340"/>
        <function-ref name="get" scoped="" ref="0x7f9291f7e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f7e660"/>
        <function-ref name="set" scoped="" ref="0x7f9291f7e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f7e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f9291f75350" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f9291f75350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f756d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f75860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f759f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f75b80"/>
        <function-ref name="get" scoped="" ref="0x7f9291f75d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f74020"/>
        <function-ref name="set" scoped="" ref="0x7f9291f741b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f74340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f9291fad1e0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f9291fad1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291fad560"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291fad6f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291fad880"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291fada10"/>
        <function-ref name="get" scoped="" ref="0x7f9291fadba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291fadd30"/>
        <function-ref name="set" scoped="" ref="0x7f9291fac020"/>
        <function-ref name="clr" scoped="" ref="0x7f9291fac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f9291fa1020" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f9291fa1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291fa13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291fa1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291fa16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291fa1850"/>
        <function-ref name="get" scoped="" ref="0x7f9291fa19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291fa1b70"/>
        <function-ref name="set" scoped="" ref="0x7f9291fa1d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291fa0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f9291f94020" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f9291f94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f943a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f94530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f946c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f94850"/>
        <function-ref name="get" scoped="" ref="0x7f9291f949e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f94b70"/>
        <function-ref name="set" scoped="" ref="0x7f9291f94d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f9291f88350" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f9291f88350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f886d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f88860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f889f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f88b80"/>
        <function-ref name="get" scoped="" ref="0x7f9291f88d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f87020"/>
        <function-ref name="set" scoped="" ref="0x7f9291f871b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f87340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f9291f6f800" loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f9291f6f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f6fb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f6fd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f6e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f6e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9291f6e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f6e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9291f6e660"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f6e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH4" ref="0x7f9291f65020" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH4" scoped="" ref="0x7f9291f65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f653a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f65530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f656c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f65850"/>
        <function-ref name="get" scoped="" ref="0x7f9291f659e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f65b70"/>
        <function-ref name="set" scoped="" ref="0x7f9291f65d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ0" ref="0x7f9291f60cb0" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ0" scoped="" ref="0x7f9291f60cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f5f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f5f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f5f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f5f550"/>
        <function-ref name="get" scoped="" ref="0x7f9291f5f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f5f870"/>
        <function-ref name="set" scoped="" ref="0x7f9291f5fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f5fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f9291f86990" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f9291f86990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f86d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f85020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f851b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f85340"/>
        <function-ref name="get" scoped="" ref="0x7f9291f854d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f85660"/>
        <function-ref name="set" scoped="" ref="0x7f9291f857f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f85980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ3" ref="0x7f9291f5c670" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ3" scoped="" ref="0x7f9291f5c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f5c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f5cb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f5cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f5b020"/>
        <function-ref name="get" scoped="" ref="0x7f9291f5b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f5b340"/>
        <function-ref name="set" scoped="" ref="0x7f9291f5b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f5b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK2" ref="0x7f9291f54cb0" loc="130:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK2" scoped="" ref="0x7f9291f54cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f530a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f53230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f533c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f53550"/>
        <function-ref name="get" scoped="" ref="0x7f9291f536e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f53870"/>
        <function-ref name="set" scoped="" ref="0x7f9291f53a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f53b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK5" ref="0x7f9291f50670" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK5" scoped="" ref="0x7f9291f50670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f509f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f50b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f50d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f4f020"/>
        <function-ref name="get" scoped="" ref="0x7f9291f4f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f4f340"/>
        <function-ref name="set" scoped="" ref="0x7f9291f4f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f4f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL4" ref="0x7f9291f48cb0" loc="141:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL4" scoped="" ref="0x7f9291f48cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f460a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f46230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f463c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f46550"/>
        <function-ref name="get" scoped="" ref="0x7f9291f466e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f46870"/>
        <function-ref name="set" scoped="" ref="0x7f9291f46a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f46b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL7" ref="0x7f9291f43670" loc="144:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL7" scoped="" ref="0x7f9291f43670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f439f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f43b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f43d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f42020"/>
        <function-ref name="get" scoped="" ref="0x7f9291f421b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f42340"/>
        <function-ref name="set" scoped="" ref="0x7f9291f424d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f42660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f9291f91990" loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f9291f91990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f91d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f90020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f901b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f90340"/>
        <function-ref name="get" scoped="" ref="0x7f9291f904d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f90660"/>
        <function-ref name="set" scoped="" ref="0x7f9291f907f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f90980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f9291faab20" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f9291faab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291fa9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291fa91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291fa9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291fa94d0"/>
        <function-ref name="get" scoped="" ref="0x7f9291fa9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291fa97f0"/>
        <function-ref name="set" scoped="" ref="0x7f9291fa9980"/>
        <function-ref name="clr" scoped="" ref="0x7f9291fa9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f9291f9e990" loc="63:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f9291f9e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f9ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f9c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f9c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f9c340"/>
        <function-ref name="get" scoped="" ref="0x7f9291f9c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f9c660"/>
        <function-ref name="set" scoped="" ref="0x7f9291f9c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f9c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9291f3da80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9291f3da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f3de00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f3c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f3c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f3c340"/>
        <function-ref name="get" scoped="" ref="0x7f9291f3c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f3c660"/>
        <function-ref name="set" scoped="" ref="0x7f9291f3c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f3c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9291f38020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9291f38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f383a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f38530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f386c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f38850"/>
        <function-ref name="get" scoped="" ref="0x7f9291f389e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f38b70"/>
        <function-ref name="set" scoped="" ref="0x7f9291f38d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9291f3f7a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9291f3f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f3fb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f3fcb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f3fe40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f3e020"/>
        <function-ref name="get" scoped="" ref="0x7f9291f3e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f3e340"/>
        <function-ref name="set" scoped="" ref="0x7f9291f3e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f3e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9291f3cc10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9291f3cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f3a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f3a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f3a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f3a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9291f3a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f3a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9291f3a980"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f3ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9291f372b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9291f372b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f37630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f377c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f37950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f37ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9291f37c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f37e00"/>
        <function-ref name="set" scoped="" ref="0x7f9291f36020"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9291f3e8f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9291f3e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f3ec70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f3ee00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f3d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f3d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9291f3d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f3d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9291f3d660"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f3d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9291f3ada0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9291f3ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f39180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f39310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f394a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f39630"/>
        <function-ref name="get" scoped="" ref="0x7f9291f397c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f39950"/>
        <function-ref name="set" scoped="" ref="0x7f9291f39ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f39c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9291f36440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9291f36440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f367c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f36950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f36ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f36c70"/>
        <function-ref name="get" scoped="" ref="0x7f9291f36e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f35020"/>
        <function-ref name="set" scoped="" ref="0x7f9291f351b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f35340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929156db00" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929156db00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929156de80"/>
        <function-ref name="isInput" scoped="" ref="0x7f929156c030"/>
        <function-ref name="toggle" scoped="" ref="0x7f929156c1c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929156c350"/>
        <function-ref name="get" scoped="" ref="0x7f929156c4e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929156c670"/>
        <function-ref name="set" scoped="" ref="0x7f929156c800"/>
        <function-ref name="clr" scoped="" ref="0x7f929156c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929156ae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929156ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92915691c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291569350"/>
        <function-ref name="toggle" scoped="" ref="0x7f92915694e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291569670"/>
        <function-ref name="get" scoped="" ref="0x7f9291569800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291569990"/>
        <function-ref name="set" scoped="" ref="0x7f9291569b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9291569cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92915660a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92915660a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291566420"/>
        <function-ref name="isInput" scoped="" ref="0x7f92915665b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291566740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92915668d0"/>
        <function-ref name="get" scoped="" ref="0x7f9291566a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291566bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9291566d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9291565020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92915633f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92915633f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291563770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291563900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291563a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291563c20"/>
        <function-ref name="get" scoped="" ref="0x7f9291563db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291562020"/>
        <function-ref name="set" scoped="" ref="0x7f92915621b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291562340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92915606d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92915606d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291560a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291560be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291560d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929155e020"/>
        <function-ref name="get" scoped="" ref="0x7f929155e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929155e340"/>
        <function-ref name="set" scoped="" ref="0x7f929155e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f929155e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929155c9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929155c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929155cd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f929155b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f929155b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929155b340"/>
        <function-ref name="get" scoped="" ref="0x7f929155b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929155b660"/>
        <function-ref name="set" scoped="" ref="0x7f929155b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f929155b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291559e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291559e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92915581c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291558350"/>
        <function-ref name="toggle" scoped="" ref="0x7f92915584e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291558670"/>
        <function-ref name="get" scoped="" ref="0x7f9291558800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291558990"/>
        <function-ref name="set" scoped="" ref="0x7f9291558b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9291558cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92915550a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92915550a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291555420"/>
        <function-ref name="isInput" scoped="" ref="0x7f92915555b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291555740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92915558d0"/>
        <function-ref name="get" scoped="" ref="0x7f9291555a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291555bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9291555d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9291554020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9291f2dda0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9291f2dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f2c180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f2c310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f2c4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f2c630"/>
        <function-ref name="get" scoped="" ref="0x7f9291f2c7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f2c950"/>
        <function-ref name="set" scoped="" ref="0x7f9291f2cae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f2cc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9291f29440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9291f29440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f297c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f29950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f29ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f29c70"/>
        <function-ref name="get" scoped="" ref="0x7f9291f29e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f28020"/>
        <function-ref name="set" scoped="" ref="0x7f9291f281b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f28340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9291f30a20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9291f30a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f30da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f2e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f2e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f2e340"/>
        <function-ref name="get" scoped="" ref="0x7f9291f2e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f2e660"/>
        <function-ref name="set" scoped="" ref="0x7f9291f2e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f2e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9291f2b020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9291f2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f2b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f2b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f2b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f2b850"/>
        <function-ref name="get" scoped="" ref="0x7f9291f2b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f2bb70"/>
        <function-ref name="set" scoped="" ref="0x7f9291f2bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f2a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9291f285d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9291f285d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f28950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f28ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f28c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f28e00"/>
        <function-ref name="get" scoped="" ref="0x7f9291f27020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f271b0"/>
        <function-ref name="set" scoped="" ref="0x7f9291f27340"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f274d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9291f2ec10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9291f2ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f2d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f2d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f2d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f2d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9291f2d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f2d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9291f2d980"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f2db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9291f2a2b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9291f2a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f2a630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f2a7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f2a950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f2aae0"/>
        <function-ref name="get" scoped="" ref="0x7f9291f2ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f2ae00"/>
        <function-ref name="set" scoped="" ref="0x7f9291f29020"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9291f27760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9291f27760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f27ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f27c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f27e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f26020"/>
        <function-ref name="get" scoped="" ref="0x7f9291f261b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f26340"/>
        <function-ref name="set" scoped="" ref="0x7f9291f264d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f26660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92914fdc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92914fdc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92914fc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92914fc230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92914fc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92914fc550"/>
        <function-ref name="get" scoped="" ref="0x7f92914fc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92914fc870"/>
        <function-ref name="set" scoped="" ref="0x7f92914fca00"/>
        <function-ref name="clr" scoped="" ref="0x7f92914fcb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92914fae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92914fae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92914f91c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92914f9350"/>
        <function-ref name="toggle" scoped="" ref="0x7f92914f94e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92914f9670"/>
        <function-ref name="get" scoped="" ref="0x7f92914f9800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92914f9990"/>
        <function-ref name="set" scoped="" ref="0x7f92914f9b20"/>
        <function-ref name="clr" scoped="" ref="0x7f92914f9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92914f60a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92914f60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92914f6420"/>
        <function-ref name="isInput" scoped="" ref="0x7f92914f65b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92914f6740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92914f68d0"/>
        <function-ref name="get" scoped="" ref="0x7f92914f6a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92914f6bf0"/>
        <function-ref name="set" scoped="" ref="0x7f92914f6d80"/>
        <function-ref name="clr" scoped="" ref="0x7f92914f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92914f33f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92914f33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92914f3770"/>
        <function-ref name="isInput" scoped="" ref="0x7f92914f3900"/>
        <function-ref name="toggle" scoped="" ref="0x7f92914f3a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92914f3c20"/>
        <function-ref name="get" scoped="" ref="0x7f92914f3db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92914f2020"/>
        <function-ref name="set" scoped="" ref="0x7f92914f21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f92914f2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92914f06d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92914f06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92914f0a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f92914f0be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92914f0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92914ef020"/>
        <function-ref name="get" scoped="" ref="0x7f92914ef1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92914ef340"/>
        <function-ref name="set" scoped="" ref="0x7f92914ef4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f92914ef660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92914ed9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92914ed9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92914edd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f92914eb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92914eb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92914eb340"/>
        <function-ref name="get" scoped="" ref="0x7f92914eb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92914eb660"/>
        <function-ref name="set" scoped="" ref="0x7f92914eb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f92914eb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92914e9e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92914e9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92914e81c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92914e8350"/>
        <function-ref name="toggle" scoped="" ref="0x7f92914e84e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92914e8670"/>
        <function-ref name="get" scoped="" ref="0x7f92914e8800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92914e8990"/>
        <function-ref name="set" scoped="" ref="0x7f92914e8b20"/>
        <function-ref name="clr" scoped="" ref="0x7f92914e8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92914e50a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92914e50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92914e5420"/>
        <function-ref name="isInput" scoped="" ref="0x7f92914e55b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92914e5740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92914e58d0"/>
        <function-ref name="get" scoped="" ref="0x7f92914e5a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92914e5bf0"/>
        <function-ref name="set" scoped="" ref="0x7f92914e5d80"/>
        <function-ref name="clr" scoped="" ref="0x7f92914e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9291f1d020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9291f1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f1d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f1d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f1d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f1d850"/>
        <function-ref name="get" scoped="" ref="0x7f9291f1d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f1db70"/>
        <function-ref name="set" scoped="" ref="0x7f9291f1dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f1c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9291f1a5d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9291f1a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f1a950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f1aae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f1ac70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f1ae00"/>
        <function-ref name="get" scoped="" ref="0x7f9291f19020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f191b0"/>
        <function-ref name="set" scoped="" ref="0x7f9291f19340"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f194d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9291f20d30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9291f20d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f1f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f1f270"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f1f400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f1f590"/>
        <function-ref name="get" scoped="" ref="0x7f9291f1f720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f1f8b0"/>
        <function-ref name="set" scoped="" ref="0x7f9291f1fa40"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f1fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9291f1c2b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9291f1c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f1c630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f1c7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f1c950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f1cae0"/>
        <function-ref name="get" scoped="" ref="0x7f9291f1cc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f1ce00"/>
        <function-ref name="set" scoped="" ref="0x7f9291f1b020"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f1b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9291f19760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9291f19760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f19ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f19c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f19e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f18020"/>
        <function-ref name="get" scoped="" ref="0x7f9291f181b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f18340"/>
        <function-ref name="set" scoped="" ref="0x7f9291f184d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f18660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9291f1fe60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9291f1fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f1e210"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f1e3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f1e530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f1e6c0"/>
        <function-ref name="get" scoped="" ref="0x7f9291f1e850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f1e9e0"/>
        <function-ref name="set" scoped="" ref="0x7f9291f1eb70"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f1ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9291f1b440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9291f1b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f1b7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f1b950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f1bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f1bc70"/>
        <function-ref name="get" scoped="" ref="0x7f9291f1be00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f1a020"/>
        <function-ref name="set" scoped="" ref="0x7f9291f1a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f1a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9291f188f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9291f188f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f18c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f18e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f17020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f171b0"/>
        <function-ref name="get" scoped="" ref="0x7f9291f17340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f174d0"/>
        <function-ref name="set" scoped="" ref="0x7f9291f17660"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f177f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291492c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291492c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92914910a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291491230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92914913c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291491550"/>
        <function-ref name="get" scoped="" ref="0x7f92914916e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291491870"/>
        <function-ref name="set" scoped="" ref="0x7f9291491a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291491b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929148fe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929148fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929148e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929148e350"/>
        <function-ref name="toggle" scoped="" ref="0x7f929148e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929148e670"/>
        <function-ref name="get" scoped="" ref="0x7f929148e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929148e990"/>
        <function-ref name="set" scoped="" ref="0x7f929148eb20"/>
        <function-ref name="clr" scoped="" ref="0x7f929148ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929148b0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929148b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929148b420"/>
        <function-ref name="isInput" scoped="" ref="0x7f929148b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929148b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929148b8d0"/>
        <function-ref name="get" scoped="" ref="0x7f929148ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929148bbf0"/>
        <function-ref name="set" scoped="" ref="0x7f929148bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f929148a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92914883f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92914883f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291488770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291488900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291488a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291488c20"/>
        <function-ref name="get" scoped="" ref="0x7f9291488db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291487020"/>
        <function-ref name="set" scoped="" ref="0x7f92914871b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291487340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92914856d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92914856d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291485a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291485be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291485d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291484020"/>
        <function-ref name="get" scoped="" ref="0x7f92914841b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291484340"/>
        <function-ref name="set" scoped="" ref="0x7f92914844d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291484660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92914829b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92914829b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291482d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291480020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92914801b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291480340"/>
        <function-ref name="get" scoped="" ref="0x7f92914804d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291480660"/>
        <function-ref name="set" scoped="" ref="0x7f92914807f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291480980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929147ee20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929147ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929147d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929147d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f929147d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929147d670"/>
        <function-ref name="get" scoped="" ref="0x7f929147d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929147d990"/>
        <function-ref name="set" scoped="" ref="0x7f929147db20"/>
        <function-ref name="clr" scoped="" ref="0x7f929147dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929147a0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929147a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929147a420"/>
        <function-ref name="isInput" scoped="" ref="0x7f929147a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929147a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929147a8d0"/>
        <function-ref name="get" scoped="" ref="0x7f929147aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929147abf0"/>
        <function-ref name="set" scoped="" ref="0x7f929147ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f9291479020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9291f0e440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9291f0e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f0e7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f0e950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f0eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f0ec70"/>
        <function-ref name="get" scoped="" ref="0x7f9291f0ee00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f0d020"/>
        <function-ref name="set" scoped="" ref="0x7f9291f0d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f0d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9291f0b8f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9291f0b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f0bc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f0be00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f09020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f091b0"/>
        <function-ref name="get" scoped="" ref="0x7f9291f09340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f094d0"/>
        <function-ref name="set" scoped="" ref="0x7f9291f09660"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f097f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9291f10020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9291f10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f103a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f10530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f106c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f10850"/>
        <function-ref name="get" scoped="" ref="0x7f9291f109e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f10b70"/>
        <function-ref name="set" scoped="" ref="0x7f9291f10d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9291f0d5d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9291f0d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f0d950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f0dae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f0dc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f0de00"/>
        <function-ref name="get" scoped="" ref="0x7f9291f0c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f0c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9291f0c340"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f0c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9291f09a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9291f09a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f09e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f08020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f081b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f08340"/>
        <function-ref name="get" scoped="" ref="0x7f9291f084d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f08660"/>
        <function-ref name="set" scoped="" ref="0x7f9291f087f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f08980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9291f0f2b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9291f0f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f0f630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f0f7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f0f950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f0fae0"/>
        <function-ref name="get" scoped="" ref="0x7f9291f0fc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f0fe00"/>
        <function-ref name="set" scoped="" ref="0x7f9291f0e020"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9291f0c760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9291f0c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f0cae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f0cc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f0ce00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f0b020"/>
        <function-ref name="get" scoped="" ref="0x7f9291f0b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f0b340"/>
        <function-ref name="set" scoped="" ref="0x7f9291f0b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f0b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9291f08c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9291f08c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f07020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f071b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f07340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f074d0"/>
        <function-ref name="get" scoped="" ref="0x7f9291f07660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f077f0"/>
        <function-ref name="set" scoped="" ref="0x7f9291f07980"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f07b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291427c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291427c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92914260a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291426230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92914263c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291426550"/>
        <function-ref name="get" scoped="" ref="0x7f92914266e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291426870"/>
        <function-ref name="set" scoped="" ref="0x7f9291426a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291426b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291424e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291424e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92914231c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291423350"/>
        <function-ref name="toggle" scoped="" ref="0x7f92914234e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291423670"/>
        <function-ref name="get" scoped="" ref="0x7f9291423800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291423990"/>
        <function-ref name="set" scoped="" ref="0x7f9291423b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9291423cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92914200a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92914200a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291420420"/>
        <function-ref name="isInput" scoped="" ref="0x7f92914205b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291420740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92914208d0"/>
        <function-ref name="get" scoped="" ref="0x7f9291420a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291420bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9291420d80"/>
        <function-ref name="clr" scoped="" ref="0x7f929141f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929141d3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929141d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929141d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f929141d900"/>
        <function-ref name="toggle" scoped="" ref="0x7f929141da90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929141dc20"/>
        <function-ref name="get" scoped="" ref="0x7f929141ddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929141c020"/>
        <function-ref name="set" scoped="" ref="0x7f929141c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f929141c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929141a6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929141a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929141aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f929141abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929141ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291419020"/>
        <function-ref name="get" scoped="" ref="0x7f92914191b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291419340"/>
        <function-ref name="set" scoped="" ref="0x7f92914194d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291419660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92914179b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92914179b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291417d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291416020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92914161b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291416340"/>
        <function-ref name="get" scoped="" ref="0x7f92914164d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291416660"/>
        <function-ref name="set" scoped="" ref="0x7f92914167f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291416980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291414e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291414e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92914121c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291412350"/>
        <function-ref name="toggle" scoped="" ref="0x7f92914124e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291412670"/>
        <function-ref name="get" scoped="" ref="0x7f9291412800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291412990"/>
        <function-ref name="set" scoped="" ref="0x7f9291412b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9291412cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929140f0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929140f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929140f420"/>
        <function-ref name="isInput" scoped="" ref="0x7f929140f5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929140f740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929140f8d0"/>
        <function-ref name="get" scoped="" ref="0x7f929140fa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929140fbf0"/>
        <function-ref name="set" scoped="" ref="0x7f929140fd80"/>
        <function-ref name="clr" scoped="" ref="0x7f929140e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9291eff760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9291eff760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291effae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291effc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291effe00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291efd020"/>
        <function-ref name="get" scoped="" ref="0x7f9291efd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291efd340"/>
        <function-ref name="set" scoped="" ref="0x7f9291efd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291efd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9291efbc10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9291efbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291efa020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291efa1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291efa340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291efa4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9291efa660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291efa7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9291efa980"/>
        <function-ref name="clr" scoped="" ref="0x7f9291efab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9291f013f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9291f013f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f01770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f01900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f01a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f01c20"/>
        <function-ref name="get" scoped="" ref="0x7f9291f01db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291f00020"/>
        <function-ref name="set" scoped="" ref="0x7f9291f001b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291f00340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9291efd8f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9291efd8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291efdc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291efde00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291efc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291efc1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9291efc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291efc4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9291efc660"/>
        <function-ref name="clr" scoped="" ref="0x7f9291efc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9291efada0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9291efada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291ef9180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291ef9310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291ef94a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291ef9630"/>
        <function-ref name="get" scoped="" ref="0x7f9291ef97c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291ef9950"/>
        <function-ref name="set" scoped="" ref="0x7f9291ef9ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291ef9c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9291f005d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9291f005d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291f00950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291f00ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291f00c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291f00e00"/>
        <function-ref name="get" scoped="" ref="0x7f9291eff020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291eff1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9291eff340"/>
        <function-ref name="clr" scoped="" ref="0x7f9291eff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9291efca80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9291efca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291efce00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291efb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291efb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291efb340"/>
        <function-ref name="get" scoped="" ref="0x7f9291efb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291efb660"/>
        <function-ref name="set" scoped="" ref="0x7f9291efb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291efb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9291ef8020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9291ef8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291ef83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291ef8530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291ef86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291ef8850"/>
        <function-ref name="get" scoped="" ref="0x7f9291ef89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291ef8b70"/>
        <function-ref name="set" scoped="" ref="0x7f9291ef8d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291ef7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92913bcc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92913bcc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92913bb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92913bb230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92913bb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92913bb550"/>
        <function-ref name="get" scoped="" ref="0x7f92913bb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92913bb870"/>
        <function-ref name="set" scoped="" ref="0x7f92913bba00"/>
        <function-ref name="clr" scoped="" ref="0x7f92913bbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92913b9e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92913b9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92913b81c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92913b8350"/>
        <function-ref name="toggle" scoped="" ref="0x7f92913b84e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92913b8670"/>
        <function-ref name="get" scoped="" ref="0x7f92913b8800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92913b8990"/>
        <function-ref name="set" scoped="" ref="0x7f92913b8b20"/>
        <function-ref name="clr" scoped="" ref="0x7f92913b8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92913b50a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92913b50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92913b5420"/>
        <function-ref name="isInput" scoped="" ref="0x7f92913b55b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92913b5740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92913b58d0"/>
        <function-ref name="get" scoped="" ref="0x7f92913b5a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92913b5bf0"/>
        <function-ref name="set" scoped="" ref="0x7f92913b5d80"/>
        <function-ref name="clr" scoped="" ref="0x7f92913b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92913b23f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92913b23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92913b2770"/>
        <function-ref name="isInput" scoped="" ref="0x7f92913b2900"/>
        <function-ref name="toggle" scoped="" ref="0x7f92913b2a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92913b2c20"/>
        <function-ref name="get" scoped="" ref="0x7f92913b2db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92913b1020"/>
        <function-ref name="set" scoped="" ref="0x7f92913b11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f92913b1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92913af6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92913af6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92913afa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f92913afbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92913afd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92913ae020"/>
        <function-ref name="get" scoped="" ref="0x7f92913ae1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92913ae340"/>
        <function-ref name="set" scoped="" ref="0x7f92913ae4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f92913ae660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92913ac9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92913ac9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92913acd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f92913ab020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92913ab1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92913ab340"/>
        <function-ref name="get" scoped="" ref="0x7f92913ab4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92913ab660"/>
        <function-ref name="set" scoped="" ref="0x7f92913ab7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f92913ab980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92913a9e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92913a9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92913a71c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f92913a7350"/>
        <function-ref name="toggle" scoped="" ref="0x7f92913a74e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92913a7670"/>
        <function-ref name="get" scoped="" ref="0x7f92913a7800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92913a7990"/>
        <function-ref name="set" scoped="" ref="0x7f92913a7b20"/>
        <function-ref name="clr" scoped="" ref="0x7f92913a7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92913a40a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92913a40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92913a4420"/>
        <function-ref name="isInput" scoped="" ref="0x7f92913a45b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f92913a4740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f92913a48d0"/>
        <function-ref name="get" scoped="" ref="0x7f92913a4a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f92913a4bf0"/>
        <function-ref name="set" scoped="" ref="0x7f92913a4d80"/>
        <function-ref name="clr" scoped="" ref="0x7f92913a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9291eefa80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9291eefa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291eefe00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291eee020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291eee1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291eee340"/>
        <function-ref name="get" scoped="" ref="0x7f9291eee4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291eee660"/>
        <function-ref name="set" scoped="" ref="0x7f9291eee7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291eee980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9291eeb020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9291eeb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291eeb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291eeb530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291eeb6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291eeb850"/>
        <function-ref name="get" scoped="" ref="0x7f9291eeb9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291eebb70"/>
        <function-ref name="set" scoped="" ref="0x7f9291eebd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291eea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9291ef17a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9291ef17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291ef1b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291ef1cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291ef1e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291ef0020"/>
        <function-ref name="get" scoped="" ref="0x7f9291ef01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291ef0340"/>
        <function-ref name="set" scoped="" ref="0x7f9291ef04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291ef0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9291eeec10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9291eeec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291eed020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291eed1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291eed340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291eed4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9291eed660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291eed7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9291eed980"/>
        <function-ref name="clr" scoped="" ref="0x7f9291eedb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9291eea2b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9291eea2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291eea630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291eea7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291eea950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291eeaae0"/>
        <function-ref name="get" scoped="" ref="0x7f9291eeac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291eeae00"/>
        <function-ref name="set" scoped="" ref="0x7f9291ee9020"/>
        <function-ref name="clr" scoped="" ref="0x7f9291ee91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9291ef08f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9291ef08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291ef0c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291ef0e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291eef020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291eef1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9291eef340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291eef4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9291eef660"/>
        <function-ref name="clr" scoped="" ref="0x7f9291eef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9291eedda0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9291eedda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291eec180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291eec310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291eec4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291eec630"/>
        <function-ref name="get" scoped="" ref="0x7f9291eec7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291eec950"/>
        <function-ref name="set" scoped="" ref="0x7f9291eecae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291eecc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9291ee9440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9291ee9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291ee97c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291ee9950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291ee9ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291ee9c70"/>
        <function-ref name="get" scoped="" ref="0x7f9291ee9e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291ee8020"/>
        <function-ref name="set" scoped="" ref="0x7f9291ee81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291ee8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291351c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291351c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f92913500a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291350230"/>
        <function-ref name="toggle" scoped="" ref="0x7f92913503c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291350550"/>
        <function-ref name="get" scoped="" ref="0x7f92913506e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291350870"/>
        <function-ref name="set" scoped="" ref="0x7f9291350a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291350b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929134ee20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929134ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929134d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929134d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f929134d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929134d670"/>
        <function-ref name="get" scoped="" ref="0x7f929134d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929134d990"/>
        <function-ref name="set" scoped="" ref="0x7f929134db20"/>
        <function-ref name="clr" scoped="" ref="0x7f929134dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929134a0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929134a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929134a420"/>
        <function-ref name="isInput" scoped="" ref="0x7f929134a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929134a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929134a8d0"/>
        <function-ref name="get" scoped="" ref="0x7f929134aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929134abf0"/>
        <function-ref name="set" scoped="" ref="0x7f929134ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f9291349020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92913473f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92913473f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291347770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291347900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291347a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291347c20"/>
        <function-ref name="get" scoped="" ref="0x7f9291347db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291346020"/>
        <function-ref name="set" scoped="" ref="0x7f92913461b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291346340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92913446d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92913446d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291344a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291344be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291344d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291343020"/>
        <function-ref name="get" scoped="" ref="0x7f92913431b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291343340"/>
        <function-ref name="set" scoped="" ref="0x7f92913434d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291343660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f92913419b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f92913419b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291341d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291340020"/>
        <function-ref name="toggle" scoped="" ref="0x7f92913401b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291340340"/>
        <function-ref name="get" scoped="" ref="0x7f92913404d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291340660"/>
        <function-ref name="set" scoped="" ref="0x7f92913407f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291340980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929133ee20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929133ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929133d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929133d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f929133d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929133d670"/>
        <function-ref name="get" scoped="" ref="0x7f929133d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929133d990"/>
        <function-ref name="set" scoped="" ref="0x7f929133db20"/>
        <function-ref name="clr" scoped="" ref="0x7f929133dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929133a0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f929133a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929133a420"/>
        <function-ref name="isInput" scoped="" ref="0x7f929133a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929133a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929133a8d0"/>
        <function-ref name="get" scoped="" ref="0x7f929133aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929133abf0"/>
        <function-ref name="set" scoped="" ref="0x7f929133ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f9291338020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291ee2e20" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291ee2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291ee11c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291ee1350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291ee14e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291ee1670"/>
        <function-ref name="get" scoped="" ref="0x7f9291ee1800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291ee1990"/>
        <function-ref name="set" scoped="" ref="0x7f9291ee1b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9291ee1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291edd9b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291edd9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291eddd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291edb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291edb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291edb340"/>
        <function-ref name="get" scoped="" ref="0x7f9291edb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291edb660"/>
        <function-ref name="set" scoped="" ref="0x7f9291edb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291edb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291ed76d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291ed76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291ed7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291ed7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291ed7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291ed6020"/>
        <function-ref name="get" scoped="" ref="0x7f9291ed61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291ed6340"/>
        <function-ref name="set" scoped="" ref="0x7f9291ed64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291ed6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291ed1160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291ed1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291ed14e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291ed1670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291ed1800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291ed1990"/>
        <function-ref name="get" scoped="" ref="0x7f9291ed1b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291ed1cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9291ed1e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9291ed0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291ecdc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291ecdc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291ecc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291ecc230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291ecc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291ecc550"/>
        <function-ref name="get" scoped="" ref="0x7f9291ecc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291ecc870"/>
        <function-ref name="set" scoped="" ref="0x7f9291ecca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291eccb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291ec76d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291ec76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291ec7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291ec7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291ec7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291ec6020"/>
        <function-ref name="get" scoped="" ref="0x7f9291ec61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291ec6340"/>
        <function-ref name="set" scoped="" ref="0x7f9291ec64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291ec6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291ec1270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291ec1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291ec15f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291ec1780"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291ec1910"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291ec1aa0"/>
        <function-ref name="get" scoped="" ref="0x7f9291ec1c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291ec1dc0"/>
        <function-ref name="set" scoped="" ref="0x7f9291ec0020"/>
        <function-ref name="clr" scoped="" ref="0x7f9291ec01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291ebdd00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291ebdd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291ebc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291ebc230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291ebc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291ebc550"/>
        <function-ref name="get" scoped="" ref="0x7f9291ebc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291ebc870"/>
        <function-ref name="set" scoped="" ref="0x7f9291ebca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291ebcb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291eb76d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291eb76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291eb7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291eb7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291eb7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291eb6020"/>
        <function-ref name="get" scoped="" ref="0x7f9291eb61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291eb6340"/>
        <function-ref name="set" scoped="" ref="0x7f9291eb64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291eb6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291eb1160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291eb1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291eb14e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291eb1670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291eb1800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291eb1990"/>
        <function-ref name="get" scoped="" ref="0x7f9291eb1b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291eb1cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9291eb1e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9291eb0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291eadc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291eadc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291eac0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291eac230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291eac3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291eac550"/>
        <function-ref name="get" scoped="" ref="0x7f9291eac6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291eac870"/>
        <function-ref name="set" scoped="" ref="0x7f9291eaca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291eacb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291ea76d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291ea76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291ea7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291ea7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291ea7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291ea6020"/>
        <function-ref name="get" scoped="" ref="0x7f9291ea61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291ea6340"/>
        <function-ref name="set" scoped="" ref="0x7f9291ea64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291ea6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291ea1160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291ea1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291ea14e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291ea1670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291ea1800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291ea1990"/>
        <function-ref name="get" scoped="" ref="0x7f9291ea1b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291ea1cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9291ea1e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9291ea0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e9dc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e9dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e9c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e9c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e9c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e9c550"/>
        <function-ref name="get" scoped="" ref="0x7f9291e9c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e9c870"/>
        <function-ref name="set" scoped="" ref="0x7f9291e9ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e9cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e80020" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e80020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e803a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e80530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e806c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e80850"/>
        <function-ref name="get" scoped="" ref="0x7f9291e809e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e80b70"/>
        <function-ref name="set" scoped="" ref="0x7f9291e80d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e7c6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e7c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e7ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e7cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e7cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e7b020"/>
        <function-ref name="get" scoped="" ref="0x7f9291e7b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e7b340"/>
        <function-ref name="set" scoped="" ref="0x7f9291e7b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e7b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e77c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e77c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e760a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e76230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e763c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e76550"/>
        <function-ref name="get" scoped="" ref="0x7f9291e766e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e76870"/>
        <function-ref name="set" scoped="" ref="0x7f9291e76a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e76b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e71180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e71180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e71500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e71690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e71820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e719b0"/>
        <function-ref name="get" scoped="" ref="0x7f9291e71b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e71cd0"/>
        <function-ref name="set" scoped="" ref="0x7f9291e71e60"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e70020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e6d830" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e6d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e6dbb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e6dd40"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e6c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e6c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9291e6c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e6c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9291e6c660"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e6c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e68e20" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e68e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e671c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e67350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e674e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e67670"/>
        <function-ref name="get" scoped="" ref="0x7f9291e67800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e67990"/>
        <function-ref name="set" scoped="" ref="0x7f9291e67b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e67cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e63460" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e63460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e637e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e63970"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e63b00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e63c90"/>
        <function-ref name="get" scoped="" ref="0x7f9291e63e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e61020"/>
        <function-ref name="set" scoped="" ref="0x7f9291e611b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e61340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e5e9b0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e5e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e5ed30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e5d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e5d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e5d340"/>
        <function-ref name="get" scoped="" ref="0x7f9291e5d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e5d660"/>
        <function-ref name="set" scoped="" ref="0x7f9291e5d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e5d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e58160" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e58160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e584e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e58670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e58800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e58990"/>
        <function-ref name="get" scoped="" ref="0x7f9291e58b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e58cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9291e58e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e546d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e546d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e54a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e54be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e54d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e52020"/>
        <function-ref name="get" scoped="" ref="0x7f9291e521b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e52340"/>
        <function-ref name="set" scoped="" ref="0x7f9291e524d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e52660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e4fc90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e4fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e4e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e4e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e4e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e4e550"/>
        <function-ref name="get" scoped="" ref="0x7f9291e4e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e4e870"/>
        <function-ref name="set" scoped="" ref="0x7f9291e4ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e4eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e49180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e49180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e49500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e49690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e49820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e499b0"/>
        <function-ref name="get" scoped="" ref="0x7f9291e49b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e49cd0"/>
        <function-ref name="set" scoped="" ref="0x7f9291e49e60"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e456d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e456d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e45a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e45be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e45d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e44020"/>
        <function-ref name="get" scoped="" ref="0x7f9291e441b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e44340"/>
        <function-ref name="set" scoped="" ref="0x7f9291e444d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e44660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e40c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e40c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e3f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e3f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e3f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e3f550"/>
        <function-ref name="get" scoped="" ref="0x7f9291e3f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e3f870"/>
        <function-ref name="set" scoped="" ref="0x7f9291e3fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e3fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e3a180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e3a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e3a500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e3a690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e3a820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e3a9b0"/>
        <function-ref name="get" scoped="" ref="0x7f9291e3ab40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e3acd0"/>
        <function-ref name="set" scoped="" ref="0x7f9291e3ae60"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e39020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e366d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e366d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e36a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e36be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e36d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e35020"/>
        <function-ref name="get" scoped="" ref="0x7f9291e351b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e35340"/>
        <function-ref name="set" scoped="" ref="0x7f9291e354d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e35660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e31c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e31c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e300a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e30230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e303c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e30550"/>
        <function-ref name="get" scoped="" ref="0x7f9291e306e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e30870"/>
        <function-ref name="set" scoped="" ref="0x7f9291e30a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e30b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e2b180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e2b180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e2b500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e2b690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e2b820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e2b9b0"/>
        <function-ref name="get" scoped="" ref="0x7f9291e2bb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e2bcd0"/>
        <function-ref name="set" scoped="" ref="0x7f9291e2be60"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e2a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e276d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e276d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e27a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e27be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e27d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e26020"/>
        <function-ref name="get" scoped="" ref="0x7f9291e261b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e26340"/>
        <function-ref name="set" scoped="" ref="0x7f9291e264d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e26660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e22c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e22c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e210a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e21230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e213c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e21550"/>
        <function-ref name="get" scoped="" ref="0x7f9291e216e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e21870"/>
        <function-ref name="set" scoped="" ref="0x7f9291e21a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e21b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e1c180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e1c180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e1c500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e1c690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e1c820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e1c9b0"/>
        <function-ref name="get" scoped="" ref="0x7f9291e1cb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e1ccd0"/>
        <function-ref name="set" scoped="" ref="0x7f9291e1ce60"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e1b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e186d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e186d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e18a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e18be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e18d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e17020"/>
        <function-ref name="get" scoped="" ref="0x7f9291e171b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e17340"/>
        <function-ref name="set" scoped="" ref="0x7f9291e174d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e17660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e13c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e13c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e120a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e12230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e123c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e12550"/>
        <function-ref name="get" scoped="" ref="0x7f9291e126e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e12870"/>
        <function-ref name="set" scoped="" ref="0x7f9291e12a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e12b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e0d180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e0d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e0d500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e0d690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e0d820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e0d9b0"/>
        <function-ref name="get" scoped="" ref="0x7f9291e0db40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e0dcd0"/>
        <function-ref name="set" scoped="" ref="0x7f9291e0de60"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e096d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e096d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e09a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e09be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e09d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e08020"/>
        <function-ref name="get" scoped="" ref="0x7f9291e081b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e08340"/>
        <function-ref name="set" scoped="" ref="0x7f9291e084d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e08660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291e04c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291e04c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291e030a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291e03230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291e033c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291e03550"/>
        <function-ref name="get" scoped="" ref="0x7f9291e036e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291e03870"/>
        <function-ref name="set" scoped="" ref="0x7f9291e03a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291e03b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291dfe180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291dfe180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291dfe500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291dfe690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291dfe820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291dfe9b0"/>
        <function-ref name="get" scoped="" ref="0x7f9291dfeb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291dfecd0"/>
        <function-ref name="set" scoped="" ref="0x7f9291dfee60"/>
        <function-ref name="clr" scoped="" ref="0x7f9291dfd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291dfa6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291dfa6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291dfaa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291dfabe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291dfad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291df9020"/>
        <function-ref name="get" scoped="" ref="0x7f9291df91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291df9340"/>
        <function-ref name="set" scoped="" ref="0x7f9291df94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291df9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291df40a0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291df40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291df4420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291df45b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291df4740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291df48d0"/>
        <function-ref name="get" scoped="" ref="0x7f9291df4a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291df4bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9291df4d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9291df3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291df06d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291df06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291df0a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291df0be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291df0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291dee020"/>
        <function-ref name="get" scoped="" ref="0x7f9291dee1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291dee340"/>
        <function-ref name="set" scoped="" ref="0x7f9291dee4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9291dee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291debc90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291debc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291dea0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291dea230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291dea3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291dea550"/>
        <function-ref name="get" scoped="" ref="0x7f9291dea6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291dea870"/>
        <function-ref name="set" scoped="" ref="0x7f9291deaa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9291deab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9291de5180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9291de5180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291de5500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291de5690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291de5820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291de59b0"/>
        <function-ref name="get" scoped="" ref="0x7f9291de5b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291de5cd0"/>
        <function-ref name="set" scoped="" ref="0x7f9291de5e60"/>
        <function-ref name="clr" scoped="" ref="0x7f9291de4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PS2" ref="0x7f9291d95e60" loc="12:PS2/PS2C.nc">
      <component-ref qname="PS2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PS2" scoped="" ref="0x7f9291d95e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9291d92210"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f9291d923a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClockIRQ" ref="0x7f9291d5fd90" loc="22:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClockIRQ" scoped="" ref="0x7f9291d5fd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9291d65180"/>
        <function-ref name="fired" scoped="" ref="0x7f9291d65310"/>
        <function-ref name="disable" scoped="" ref="0x7f9291d654a0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9291d65630"/>
        <function-ref name="reset" scoped="" ref="0x7f9291d657c0"/>
        <function-ref name="setMask" scoped="" ref="0x7f9291d65950"/>
        <function-ref name="enable" scoped="" ref="0x7f9291d65ae0"/>
        <function-ref name="getPins" scoped="" ref="0x7f9291d65c70"/>
        <function-ref name="getMask" scoped="" ref="0x7f9291d65e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClockPin" ref="0x7f9291d641c0" loc="23:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClockPin" scoped="" ref="0x7f9291d641c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291d64540"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291d646d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291d64860"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291d649f0"/>
        <function-ref name="get" scoped="" ref="0x7f9291d64b80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291d64d10"/>
        <function-ref name="set" scoped="" ref="0x7f9291d5d020"/>
        <function-ref name="clr" scoped="" ref="0x7f9291d5d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataPin" ref="0x7f9291d5d4f0" loc="24:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataPin" scoped="" ref="0x7f9291d5d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291d5d870"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291d5da00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291d5db90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291d5dd20"/>
        <function-ref name="get" scoped="" ref="0x7f9291d5c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291d5c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9291d5c340"/>
        <function-ref name="clr" scoped="" ref="0x7f9291d5c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PS2" ref="0x7f9291d67860" loc="19:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PS2" scoped="" ref="0x7f9291d67860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9291d67be0"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f9291d67d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x7f9291d8bca0" loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtmegaPinChange2C.nc">
      <component-ref qname="HplAtmegaPinChange2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x7f9291d8bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9291d350a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9291d35230"/>
        <function-ref name="disable" scoped="" ref="0x7f9291d353c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9291d35550"/>
        <function-ref name="reset" scoped="" ref="0x7f9291d356e0"/>
        <function-ref name="setMask" scoped="" ref="0x7f9291d35870"/>
        <function-ref name="enable" scoped="" ref="0x7f9291d35a00"/>
        <function-ref name="getPins" scoped="" ref="0x7f9291d35b90"/>
        <function-ref name="getMask" scoped="" ref="0x7f9291d35d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f9291d204d0" loc="14:VolumeAdc/VolumeAdcC.nc">
      <component-ref qname="VolumeAdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f9291d204d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9291d1d110"/>
        <function-ref name="readDone" scoped="" ref="0x7f9291d1d590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f9291d18020" loc="17:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9291d18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9291d183a0"/>
        <function-ref name="configure" scoped="" ref="0x7f9291d18530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumePin" ref="0x7f9291d188e0" loc="19:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumePin" scoped="" ref="0x7f9291d188e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9291d18c60"/>
        <function-ref name="isInput" scoped="" ref="0x7f9291d18df0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9291d17020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9291d171b0"/>
        <function-ref name="get" scoped="" ref="0x7f9291d17340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9291d174d0"/>
        <function-ref name="set" scoped="" ref="0x7f9291d17660"/>
        <function-ref name="clr" scoped="" ref="0x7f9291d177f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcConfig" ref="0x7f9291d15540" loc="16:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f9291d15540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f9291d158c0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9291d15a50"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f9291d15be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9291bc7c10" loc="25:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9291bc7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9291bc6020"/>
        <function-ref name="configure" scoped="" ref="0x7f9291bc61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f9291bc9be0" loc="22:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f9291bc9be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9291bc8860"/>
        <function-ref name="readDone" scoped="" ref="0x7f9291bc8ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f9291bc7320" loc="24:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f9291bc7320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f9291bc76a0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9291bc7830"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f9291bc79c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f9291d07df0" loc="19:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f9291d07df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9291d03a80"/>
        <function-ref name="readDone" scoped="" ref="0x7f9291d02020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f9291cfee60" loc="20:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f9291cfee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9291d01ac0"/>
        <function-ref name="readDone" scoped="" ref="0x7f9291cfd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f9291cfcb50" loc="24:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9291cfcb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9291cfb020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9291cfb1b0"/>
        <function-ref name="request" scoped="" ref="0x7f9291cfb340"/>
        <function-ref name="granted" scoped="" ref="0x7f9291cfb4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9291cfb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f9291cfdc30" loc="23:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f9291cfdc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f9291cfc020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9291cfc1b0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f9291cfc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9291cf4af0" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9291cf4af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9291cf4e70"/>
        <function-ref name="configure" scoped="" ref="0x7f9291cf0030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcSingle" ref="0x7f9291cf1dd0" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f9291cf1dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f9291cf5180"/>
        <function-ref name="cancel" scoped="" ref="0x7f9291cf5310"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9291cf54a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9291cf88c0" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9291cf88c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9291cf8c40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9291cf8dd0"/>
        <function-ref name="request" scoped="" ref="0x7f9291cf7020"/>
        <function-ref name="granted" scoped="" ref="0x7f9291cf71b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9291cf7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcMultiple" ref="0x7f9291cebc90" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f9291cebc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f9291cf40a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9291cf4230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm1280Adc" ref="0x7f9291ce5020" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f9291ce5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f9291ce53a0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f9291ce5530"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f9291ce56c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9291ce5850"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f9291ce59e0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f9291ce5b70"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f9291ce5d00"/>
        <function-ref name="isComplete" scoped="" ref="0x7f9291ce4020"/>
        <function-ref name="cancel" scoped="" ref="0x7f9291ce41b0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f9291ce4340"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f9291ce44d0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f9291ce4660"/>
        <function-ref name="startConversion" scoped="" ref="0x7f9291ce47f0"/>
        <function-ref name="isStarted" scoped="" ref="0x7f9291ce4a80"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f9291ce4c10"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f9291ce4da0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f9291cd6020"/>
        <function-ref name="getValue" scoped="" ref="0x7f9291cd61b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9291cd6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcSingle" ref="0x7f9291ce7020" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f9291ce7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f9291ce73a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9291ce7530"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9291ce76c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9291ce8150" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9291ce8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9291ce84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f9291cd6630" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9291cd6630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f9291cd69b0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f9291cd6b40"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f9291cd6cd0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f9291cd6e60"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f9291cd5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f9291ce87c0" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9291ce87c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9291ce8b40"/>
        <function-ref name="stop" scoped="" ref="0x7f9291ce8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcMultiple" ref="0x7f9291ce79d0" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f9291ce79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f9291ce7d50"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9291ce6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1280Adc" ref="0x7f9291ce9d30" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <component-ref qname="HplAtm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f9291ce9d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f9291ca30e0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f9291ca3270"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f9291ca3400"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9291ca3590"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f9291ca3720"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f9291ca38b0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f9291ca3a40"/>
        <function-ref name="isComplete" scoped="" ref="0x7f9291ca3bd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9291ca3d60"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f9291ca2020"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f9291ca21b0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f9291ca2340"/>
        <function-ref name="startConversion" scoped="" ref="0x7f9291ca24d0"/>
        <function-ref name="isStarted" scoped="" ref="0x7f9291ca2760"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f9291ca28f0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f9291ca2a80"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f9291ca2c10"/>
        <function-ref name="getValue" scoped="" ref="0x7f9291ca2da0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9291ca1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f9291c9c7f0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
      <component-ref qname="HplAtm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f9291c9c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f9291c9cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1280Adc" ref="0x7f9291c9e200" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
      <component-ref qname="HplAtm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f9291c9e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f9291c9e580"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f9291c9e710"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f9291c9e8a0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9291c9ea30"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f9291c9ebc0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f9291c9ed50"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f9291c9d020"/>
        <function-ref name="isComplete" scoped="" ref="0x7f9291c9d1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f9291c9d340"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f9291c9d4d0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f9291c9d660"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f9291c9d7f0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f9291c9d980"/>
        <function-ref name="isStarted" scoped="" ref="0x7f9291c9dc10"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f9291c9dda0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f9291c9c020"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f9291c9c1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9291c9c340"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9291c9c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9291c33c00" loc="92:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9291c33c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9291c31020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9291c311b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9291c30930" loc="96:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9291c30930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9291c30cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f9291c30e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f9291c31400" loc="93:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9291c31400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9291c31780"/>
        <function-ref name="requested" scoped="" ref="0x7f9291c31910"/>
        <function-ref name="granted" scoped="" ref="0x7f9291c31aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9291c31c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9291c31dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9291c34e70" loc="91:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9291c34e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9291c33240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9291c333d0"/>
        <function-ref name="request" scoped="" ref="0x7f9291c33560"/>
        <function-ref name="granted" scoped="" ref="0x7f9291c336f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9291c33880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9291c30060" loc="94:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9291c30060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9291c303e0"/>
        <function-ref name="userId" scoped="" ref="0x7f9291c30570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929114fc00" loc="44:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f929114fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929114e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f929114e2b0" loc="45:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f929114e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f929114e630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f929114e7c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f929114e950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f929114eae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f929114b3a0" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f929114b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f929114b740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929114b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9291148210" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9291148210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f92911485b0"/>
        <function-ref name="configure" scoped="" ref="0x7f9291148740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f92911489d0" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f92911489d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9291148d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9291147020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f92911471b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9291147340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f929114bb20" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f929114bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929114a020"/>
        <function-ref name="requested" scoped="" ref="0x7f929114a1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f929114a340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929114a4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929114a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9291147590" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9291147590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9291147910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9291147aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f9291147c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9291147dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9291146020"/>
        <function-ref name="get" scoped="" ref="0x7f92911461b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9291146340"/>
        <function-ref name="led0On" scoped="" ref="0x7f9291146980"/>
        <function-ref name="set" scoped="" ref="0x7f9291146660"/>
        <function-ref name="led2On" scoped="" ref="0x7f92911464d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f92911467f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929114c4d0" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f929114c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929114c870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929114ca00"/>
        <function-ref name="request" scoped="" ref="0x7f929114cb90"/>
        <function-ref name="granted" scoped="" ref="0x7f929114cd20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929114b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f929114a8b0" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929114a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f929114ac30"/>
        <function-ref name="userId" scoped="" ref="0x7f929114adc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f9291146c50" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f9291146c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9291145020"/>
        <function-ref name="runTask" scoped="" ref="0x7f92911451b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f9291c2c780" loc="72:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f9291c2c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f9291c2cb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f9291c2cd50" loc="73:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9291c2cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9291c22100"/>
        <function-ref name="requested" scoped="" ref="0x7f9291c22290"/>
        <function-ref name="granted" scoped="" ref="0x7f9291c22420"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9291c225b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9291c22740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f9291c2c020" loc="70:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9291c2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9291c2c3a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9291c2c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f9291c22990" loc="74:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9291c22990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9291c22d10"/>
        <function-ref name="userId" scoped="" ref="0x7f9291c21020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f9291113dc0" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f9291113dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f9291112180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f92911123d0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f92911123d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9291112750"/>
        <function-ref name="requested" scoped="" ref="0x7f92911128e0"/>
        <function-ref name="granted" scoped="" ref="0x7f9291112a70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9291112c00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9291112d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f9291113660" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9291113660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f92911139e0"/>
        <function-ref name="stop" scoped="" ref="0x7f9291113b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f9291111020" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9291111020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f92911113a0"/>
        <function-ref name="userId" scoped="" ref="0x7f9291111530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f9291c13740" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f9291c13740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e995c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9292e99930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f9291c115b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcSingle" ref="0x7f9291c159f0" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f9291c159f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f9291c15d70"/>
        <function-ref name="cancel" scoped="" ref="0x7f9291c14020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f9291c141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f9291c19410" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f9291c19410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9291c18020"/>
        <function-ref name="readDone" scoped="" ref="0x7f9291c184a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f9291c161d0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f9291c161d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9291c16e00"/>
        <function-ref name="readDone" scoped="" ref="0x7f9291c15340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f9291c14a10" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f9291c14a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f9291c14d90"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9291c13020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f9291c131b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7f9291c01820" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7f9291c01820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9291c01ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9291c01d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f9291bec150" loc="24:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f9291bec150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9291becd60"/>
        <function-ref name="readDone" scoped="" ref="0x7f9291bd3260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f9291bd3af0" loc="26:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f9291bd3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9291bd2750"/>
        <function-ref name="readDone" scoped="" ref="0x7f9291bd2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f9291bd1300" loc="27:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9291bd1300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9291bd16a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9291bd1830"/>
        <function-ref name="request" scoped="" ref="0x7f9291bd19c0"/>
        <function-ref name="granted" scoped="" ref="0x7f9291bd1b50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9291bd1ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9291d1eb00" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioScannerAppC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9291d1eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292e9b1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9292e9b510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9291bbf110"/>
        <function-ref name="fired" scoped="" ref="0x7f9291bc25b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9291bc04a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9291bc0020"/>
        <function-ref name="getdt" scoped="" ref="0x7f9291bbfa10"/>
        <function-ref name="gett0" scoped="" ref="0x7f9291bbf590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9291bc2a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9291bc3750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9291bc0ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9291bc3c20"/>
        <function-ref name="stop" scoped="" ref="0x7f9291bc2130"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../tinyos_ws18/tos/interfaces/Init.nc">
      <documentation loc="34:../tinyos_ws18/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f9292dc1740" loc="62:../tinyos_ws18/tos/interfaces/Init.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../tinyos_ws18/tos/interfaces/Boot.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f9292dc2350" loc="60:../tinyos_ws18/tos/interfaces/Boot.nc">
        <documentation loc="51:../tinyos_ws18/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f9292db9b70" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f9292db98f0" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f9292dbc070" loc="31:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f9292dbcaf0" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f9292dbc870" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f9292dba630" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f9292dba3b0" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f9292db9020" loc="53:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../tinyos_ws18/tos/interfaces/Scheduler.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f9292f506c0" loc="57:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="54:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f9292f4f6a0" loc="72:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f9292f50e30" loc="65:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="59:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f9292f47a30" loc="67:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f9292f452b0" loc="75:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../tinyos_ws18/tos/interfaces/McuSleep.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f9292e4dd40" loc="76:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f9292e2d940" loc="62:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f9292ecc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f9292e2e1f0" loc="52:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Database" loc="23:Database/Database.nc">
      <function command="" provided="0" name="getChannelList" ref="0x7f9292d6e2a0" loc="40:Database/Database.nc">
        <documentation loc="34:Database/Database.nc">
          <short>&#10; Request the channel list from the database server&#10; Received channels will be signaled through receivedChannelEntry&#10; </short>
          <long>&#10; Request the channel list from the database server&#10; Received channels will be signaled through receivedChannelEntry&#10; @param onlyFavorites tells server to send only the channels with a&#10;        registered quickDial number, if not zero&#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="onlyFavorites" ref="0x7f9292d6e020" loc="40:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedChannelEntry" ref="0x7f9292d6c360" loc="59:Database/Database.nc">
        <documentation loc="54:Database/Database.nc">
          <short>&#10; Received highscore entry from the server.</short>
          <long>&#10; Received highscore entry from the server.&#10; @param id The channel index from the database store&#10; @param channel The channel information, see channelInfo typedef&#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
            <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7f9292d712b0"/>
              <typename><typedef-ref name="channelInfo" ref="0x7f9292d718e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f9292d6dd10" loc="59:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f9292d6c0d0" loc="59:Database/Database.nc">
            <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7f9292d712b0"/>
              <typename><typedef-ref name="channelInfo" ref="0x7f9292d718e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="saveChannel" ref="0x7f9292d70720" loc="31:Database/Database.nc">
        <documentation loc="25:Database/Database.nc">
          <short>&#10; Save a new channel, or change properties of an existing one.</short>
          <long>&#10; Save a new channel, or change properties of an existing one.&#10; @param id The channel index from the database store, 0xFF to autoselect,&#10;           must be between 0 and 15 if passed manually&#10; @param channel The channel information, see channelInfo typedef&#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7f9292d712b0"/>
                <typename><typedef-ref name="channelInfo" ref="0x7f9292d718e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f9292d700d0" loc="31:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f9292d70490" loc="31:Database/Database.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7f9292d712b0"/>
                <typename><typedef-ref name="channelInfo" ref="0x7f9292d718e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="savedChannel" ref="0x7f9292d6b130" loc="67:Database/Database.nc">
        <documentation loc="61:Database/Database.nc">
          <short>&#10; Server proceesed our request to save a Channel&#10; </short>
          <long>&#10; Server proceesed our request to save a Channel&#10; @param id The channel index from the database store, the one we passed&#10;           or the which was choosen if 0xFF was passed.&#10; @param result 0 = OK, 1 = No free index (only ID auto choose), 2 = DB error &#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f9292d6cb20" loc="67:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
          <variable name="result" ref="0x7f9292d6ce70" loc="67:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f9292d6ed60" loc="46:Database/Database.nc">
        <documentation loc="42:Database/Database.nc">
          <short>&#10; Request the channel list from the database server&#10; Received channels will be signaled through receivedChannelEntry&#10;</short>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f9292d6eae0" loc="46:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="purgeChannelList" ref="0x7f9292d6d550" loc="52:Database/Database.nc">
        <documentation loc="48:Database/Database.nc">
          <short>&#10; Request that the Database purges all channels and their state&#10; Received channels will be signaled through receivedChannelEntry&#10;</short>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../tinyos_ws18/tos/interfaces/Read.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f9292d69b40" loc="49:../tinyos_ws18/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f9292d69b40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f9292d5b420" loc="55:../tinyos_ws18/tos/interfaces/Read.nc">
        <documentation loc="50:../tinyos_ws18/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f9292d5a2b0" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f9292d69b40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f9292d5bba0" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f9292d5a020" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f9292d69b40"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PS2" loc="1:PS2/PS2.nc">
      <function command="" provided="0" name="init" ref="0x7f9292d5d020" loc="4:PS2/PS2.nc">
        <interfacedef-ref qname="PS2"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedChar" ref="0x7f9292d5d9c0" loc="7:PS2/PS2.nc">
        <interfacedef-ref qname="PS2"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="chr" ref="0x7f9292d5d740" loc="7:PS2/PS2.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FMClick" loc="19:FMClick/FMClick.nc">
      <function command="" provided="0" name="seek" ref="0x7f9292d66a20" loc="22:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f9292d73e40"/>
              <typename><typedef-ref name="seekmode_t" ref="0x7f9292d688e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f9292d667a0" loc="22:FMClick/FMClick.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f9292d73e40"/>
              <typename><typedef-ref name="seekmode_t" ref="0x7f9292d688e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x7f9292d64de0" loc="30:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="res" ref="0x7f9292d64b60" loc="30:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setVolume" ref="0x7f9292d65ac0" loc="26:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7f9292d65840" loc="26:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rdsReceived" ref="0x7f9292d60020" loc="36:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f9292d68b70"/>
              <typename><typedef-ref name="RDSType" ref="0x7f9292d67600"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f9292d619a0" loc="36:FMClick/FMClick.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f9292d68b70"/>
              <typename><typedef-ref name="RDSType" ref="0x7f9292d67600"/></typename>
            </type-tag>
          </variable>
          <variable name="buf" ref="0x7f9292d61cc0" loc="36:FMClick/FMClick.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveRDS" ref="0x7f9292d644c0" loc="28:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f9292d64240" loc="28:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="tuneComplete" ref="0x7f9292d627f0" loc="32:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f9292d62570" loc="32:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f9292d651b0" loc="24:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="seekComplete" ref="0x7f9292d612a0" loc="34:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f9292d61020" loc="34:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tune" ref="0x7f9292d660b0" loc="20:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f9292d67db0" loc="20:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Glcd" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
      <function command="" provided="0" name="drawTextPgm" ref="0x7f9292d74620" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="109:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawTextPgm&#10;&#10; </short>
          <long>&#10; drawTextPgm&#10;&#10; @param text stored in program memory&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7f9292d76bf0" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7f9292d74020" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9292d74380" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawRect" ref="0x7f9292d792d0" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw rectangle&#10;&#10; </short>
          <long>&#10; Draw rectangle&#10;&#10; @param upper left x&#10; @param upper left y&#10; @param lower right x&#10; @param lower right y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7f9292d7b560" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7f9292d7b8d0" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7f9292d7bc60" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7f9292d79020" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawLine" ref="0x7f9292d7cd40" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="45:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw line&#10;&#10; </short>
          <long>&#10; Draw line&#10;&#10; @param first point x&#10; @param first point y&#10; @param second point x&#10; @param second point y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7f9292d7c020" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7f9292d7c390" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7f9292d7c720" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7f9292d7ca90" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x7f9292d80b60" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="12:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Set pixel&#10;&#10; </short>
          <long>&#10; Set pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9292d80570" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9292d808d0" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="invertPixel" ref="0x7f9292d7d710" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="34:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Invert pixel&#10;&#10; </short>
          <long>&#10; Invert pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9292d7d120" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9292d7d480" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPixel" ref="0x7f9292d7e940" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="23:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Clear pixel&#10;&#10; </short>
          <long>&#10; Clear pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9292d7e350" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9292d7e6b0" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawEllipse" ref="0x7f9292d788a0" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw ellipse&#10;&#10; </short>
          <long>&#10; Draw ellipse&#10;&#10; @param center x&#10; @param center y&#10; @param radius horizontal&#10; @param radius vertical&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9292d79ac0" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9292d79e20" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_h" ref="0x7f9292d78240" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_v" ref="0x7f9292d785f0" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawText" ref="0x7f9292d76450" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="97:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawText&#10;&#10; </short>
          <long>&#10; drawText&#10;&#10; @param text&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7f9292d77ac0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7f9292d77e20" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9292d761b0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="fill" ref="0x7f9292d77350" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="87:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Fill Display with pattern&#10;&#10; </short>
          <long>&#10; Fill Display with pattern&#10;&#10; @param pattern&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x7f9292d770d0" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9292d598b0" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9292d598b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f9292d507c0" loc="136:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="132:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9292d54020" loc="83:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f9292d52da0" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f9292d527d0" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f9292d52b10" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f9292d52020" loc="98:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="94:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f9292d4f8a0" loc="151:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="146:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f9292d4f020" loc="144:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="138:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f9292d54800" loc="92:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="86:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f9292d56450" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9292d561d0" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f9292d51dc0" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="116:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f9292d517f0" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f9292d51b30" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f9292d55020" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9292d56c90" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9292d55820" loc="78:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../tinyos_ws18/tos/interfaces/Queue.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f9292cb9cb0" loc="43:../tinyos_ws18/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f9292cb9cb0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f9292cb3490" loc="80:../tinyos_ws18/tos/interfaces/Queue.nc">
        <documentation loc="74:../tinyos_ws18/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f9292cb9cb0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f9292cb0020" loc="97:../tinyos_ws18/tos/interfaces/Queue.nc">
        <documentation loc="90:../tinyos_ws18/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f9292cb9cb0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f9292cb2c80" loc="97:../tinyos_ws18/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f9292cb9cb0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f92938f7b50"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x7f92938f7b50"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f9292caf020" loc="108:../tinyos_ws18/tos/interfaces/Queue.nc">
        <documentation loc="99:../tinyos_ws18/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f9292cb9cb0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f9292cb0d10" loc="108:../tinyos_ws18/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f9292cb6d40" loc="57:../tinyos_ws18/tos/interfaces/Queue.nc">
        <documentation loc="52:../tinyos_ws18/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f9292cb4ce0" loc="72:../tinyos_ws18/tos/interfaces/Queue.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f9292cb20e0" loc="88:../tinyos_ws18/tos/interfaces/Queue.nc">
        <documentation loc="82:../tinyos_ws18/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f9292cb9cb0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f9292cb65d0" loc="50:../tinyos_ws18/tos/interfaces/Queue.nc">
        <documentation loc="45:../tinyos_ws18/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f9292cb44e0" loc="65:../tinyos_ws18/tos/interfaces/Queue.nc">
        <documentation loc="59:../tinyos_ws18/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpControl" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="setGateway" ref="0x7f9292cc9d00" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="gateway" ref="0x7f9292cc9a80" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGateway" ref="0x7f9292cc6610" loc="14:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
              <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetmask" ref="0x7f9292cc76f0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="netmask" ref="0x7f9292cc7470" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIp" ref="0x7f9292cc7e40" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
              <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetmask" ref="0x7f9292cc6d90" loc="15:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
              <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setIp" ref="0x7f9292cc9350" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ip" ref="0x7f9292cc90d0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UdpSend" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
      <function command="" provided="0" name="send" ref="0x7f9292ccd2d0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
        <interfacedef-ref qname="UdpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f9292ccf5c0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dstPort" ref="0x7f9292ccf930" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9292ccfcb0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9292ccd020" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9292ccdc10" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
        <interfacedef-ref qname="UdpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9292ccd990" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../tinyos_ws18/tos/interfaces/SplitControl.nc">
      <documentation loc="72:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f9292cc27f0" loc="113:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="106:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9292cc2570" loc="113:../tinyos_ws18/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f9292cc1cd0" loc="138:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="132:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9292cc1a50" loc="138:../tinyos_ws18/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9292cccb60" loc="104:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="89:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9292cc1070" loc="130:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="115:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UdpReceive" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7f9292ccbe70" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
        <interfacedef-ref qname="UdpReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcIp" ref="0x7f9292ccb190" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="srcPort" ref="0x7f9292ccb500" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9292ccb880" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9292ccbbc0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:../tinyos_ws18/tos/interfaces/Pool.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f9292cbf2c0" loc="50:../tinyos_ws18/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f9292cbf2c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f9292cbb480" loc="97:../tinyos_ws18/tos/interfaces/Pool.nc">
        <documentation loc="91:../tinyos_ws18/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f9292cbf2c0"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f9292cbeca0" loc="80:../tinyos_ws18/tos/interfaces/Pool.nc">
        <documentation loc="74:../tinyos_ws18/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f9292cbfb70" loc="61:../tinyos_ws18/tos/interfaces/Pool.nc">
        <documentation loc="52:../tinyos_ws18/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x7f9292cbc740" loc="89:../tinyos_ws18/tos/interfaces/Pool.nc">
        <documentation loc="82:../tinyos_ws18/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f9292cbf2c0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f9292cbc4c0" loc="89:../tinyos_ws18/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f9292cbf2c0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f9292cbe420" loc="72:../tinyos_ws18/tos/interfaces/Pool.nc">
        <documentation loc="63:../tinyos_ws18/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketSender" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <typedef name="item_type_t" ref="0x7f9292c25800" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
          <interfacedef-ref qname="PacketSender"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="item_type_t" scoped="" ref="0x7f9292c25800"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x7f9292c22390" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
        <interfacedef-ref qname="PacketSender"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_type_t" scoped="" ref="0x7f9292c25800"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7f9292c22110" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_type_t" scoped="" ref="0x7f9292c25800"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9292c22cd0" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
        <interfacedef-ref qname="PacketSender"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9292c22a50" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpPacket" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpPacket.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpPacket.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPacket" ref="0x7f9292c1c850" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpPacket.nc">
        <interfacedef-ref qname="IpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:540" alignment="I:1"><struct-ref ref="0x7f9292cdab80"/>
              <typename><typedef-ref name="ip_packet_t" ref="0x7f9292cd8020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpReceive" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7f9292c1d060" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
        <interfacedef-ref qname="IpReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcIp" ref="0x7f9292c1e6e0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f9292c1ea60" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9292c1eda0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LlcReceive" loc="8:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7f9292c0dd40" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
        <interfacedef-ref qname="LlcReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f9292c17b30"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f9292c16020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcMac" ref="0x7f9292c0d730" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f9292c17b30"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f9292c16020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f9292c0dab0" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LlcSend" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9292c0b980" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
        <interfacedef-ref qname="LlcSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f9292c17b30"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f9292c16020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstMac" ref="0x7f9292c0b020" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f9292c17b30"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f9292c16020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f9292c0b3a0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9292c0b6e0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9292c0a2e0" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
        <interfacedef-ref qname="LlcSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9292c0a060" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Arp" loc="10:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
      <function command="" provided="0" name="resolve" ref="0x7f9292c01bc0" loc="11:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
        <interfacedef-ref qname="Arp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ip" ref="0x7f9292c01940" loc="11:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resolved" ref="0x7f9292bff580" loc="12:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
        <interfacedef-ref qname="Arp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f9292c17b30"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f9292c16020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="macPtr" ref="0x7f9292bff300" loc="12:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f9292c17b30"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f9292c16020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MacControl" loc="10:../tinyos_ws18/tos/lib_ecs/llc/MacControl.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMac" ref="0x7f9292bbde70" loc="11:../tinyos_ws18/tos/lib_ecs/llc/MacControl.nc">
        <interfacedef-ref qname="MacControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f9292c17b30"/>
              <typename><typedef-ref name="mac_addr_t" ref="0x7f9292c16020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mac" loc="10:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9292bbbab0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7f9292c14830"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7f9292c14c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9292bbb4e0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7f9292c14830"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7f9292c14c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9292bbb820" loc="11:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="received" ref="0x7f9292bbadb0" loc="13:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7f9292c14830"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7f9292c14c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9292bbab30" loc="13:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7f9292c14830"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7f9292c14c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9292bba410" loc="12:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9292bba190" loc="12:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMac" ref="0x7f9292bb8550" loc="14:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f9292c17b30"/>
              <typename><typedef-ref name="mac_addr_t" ref="0x7f9292c16020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LlcQueue" loc="8:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9292b9b9d0" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
        <interfacedef-ref qname="LlcQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f9292c17b30"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f9292c16020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstMac" ref="0x7f9292b9ec80" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f9292c17b30"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f9292c16020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etherType" ref="0x7f9292b9b060" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9292b9b3e0" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9292b9b720" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9292b99350" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
        <interfacedef-ref qname="LlcQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9292b990d0" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketQueue" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <typedef name="item_type" ref="0x7f9292b8d810" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
          <interfacedef-ref qname="PacketQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="item_type" scoped="" ref="0x7f9292b8d810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x7f9292b8ace0" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <interfacedef-ref qname="PacketQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x7f9292b8aa60" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getBuffer" ref="0x7f9292b8a3d0" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <interfacedef-ref qname="PacketQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="item_type" scoped="" ref="0x7f9292b8d810"/></type-var>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x7f9292b8a110" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9292b899b0" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <interfacedef-ref qname="PacketQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x7f9292b893d0" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f9292b89720" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9292ae1100" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9292ae1100"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f9292ae1a20" loc="61:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f929386c170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9292acf020" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9292acf020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f9292acf260" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9292acf260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f9292acfb80" loc="64:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9292acf260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f9292acec80" loc="76:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f9292ace420" loc="71:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f9292acc420" loc="82:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="78:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9292adc690" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9292adc690"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f9292adc8d0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9292adc8d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f9292ad54a0" loc="109:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="105:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9292adc8d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9292ad84e0" loc="78:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f9292ad6ae0" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="90:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9292adc8d0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9292adc8d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f9292ad6510" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9292adc8d0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f9292ad6850" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9292adc8d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f9292ad8cc0" loc="88:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="81:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f9292ad5c90" loc="116:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="111:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9292adc8d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9292ad94d0" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9292adc8d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9292ad9250" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9292adc8d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9292ad9d00" loc="73:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="68:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f9292a9fb20" loc="89:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f9292aa18e0" loc="85:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f9292aa35a0" loc="79:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f9292a9f350" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9292a9f0d0" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f9292aa1110" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f9292aa2e30" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f9292a9e5c0" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f9292a9e340" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f9292aa3d40" loc="80:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f9292aa2710" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f9292aa2490" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280TimerSync" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
      <documentation loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changedto Sync for Atm1280&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer2Synchronous" ref="0x7f9292a918e0" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Turn on timer 2 synchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBBusy" ref="0x7f9292a8e9c0" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f9292a8f910" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f9292a8f0e0" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f9292a8d270" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f9292a8e190" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f9292a92620" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f9292e7e4d0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f9292e7e8f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f9292a910b0" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f9292e7e4d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f9292e7e8f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9292a92de0" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f9292e7e4d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f9292e7e8f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f9292a9c0d0" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9292a9c0d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f9292a989f0" loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9292a9bbf0" loc="58:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9292a9ca10" loc="48:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9292a9c0d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f9292a99390" loc="62:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f9292a971f0" loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9292a9b440" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9292a9c0d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f9292a9b1c0" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9292a9c0d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9292a99b00" loc="65:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9292a98270" loc="68:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f9292ab37b0" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9292ab37b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f9292aab070" loc="98:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f9292aac0e0" loc="87:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9292ab0120" loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9292ab37b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f9292aaba50" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f9292aab7d0" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f9292aa9270" loc="110:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f9292aaea40" loc="75:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f9292aae2b0" loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f9292aac8a0" loc="93:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9292ab0ad0" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9292ab37b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f9292ab0850" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9292ab37b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9292aad1f0" loc="78:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9292aad940" loc="81:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IcmpReceive" loc="8:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7f9292910140" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
        <interfacedef-ref qname="IcmpReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcIp" ref="0x7f9292911460" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="code" ref="0x7f92929117a0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9292911b20" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9292911e60" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IcmpSend" loc="8:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9292914620" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
        <interfacedef-ref qname="IcmpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f9292915490" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0x7f92929157d0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
          <variable name="code" ref="0x7f9292915b10" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9292914020" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9292914360" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9292912020" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
        <interfacedef-ref qname="IcmpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9292914ce0" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpSend" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f9292906df0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
        <interfacedef-ref qname="IpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f9292906490" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f9292906810" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f9292906b50" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9292905770" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
        <interfacedef-ref qname="IpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f92929054f0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpQueue" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f92928fe990" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
        <interfacedef-ref qname="IpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f9292901c50" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="protocol" ref="0x7f92928fe020" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f92928fe3a0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f92928fe6e0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f92928fd350" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
        <interfacedef-ref qname="IpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f92928fd0d0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IcmpQueue" loc="8:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f92928b76d0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
        <interfacedef-ref qname="IcmpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f92928b8660" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0x7f92928b89a0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
          <variable name="code" ref="0x7f92928b8ce0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f92928b70d0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f92928b7410" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f92928b6040" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
        <interfacedef-ref qname="IcmpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f92928b7d90" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplKS0108" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <short>&#10; Hpl interface for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl interface for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="dataWrite" ref="0x7f929284c2b0" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="48:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write data&#10;&#10; </short>
          <long>&#10; Write data&#10;&#10; @param The controller to write to&#10; @param data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f929284ec40" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7f929284c020" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f9292850030" loc="15:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="10:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Initialize GLCD&#10; &#10; </short>
          <long>&#10; Initialize GLCD&#10; &#10; @return SUCCESS&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataRead" ref="0x7f929284e440" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="38:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read data&#10;&#10; </short>
          <long>&#10; Read data&#10;&#10; @param The controller to be read from&#10; &#10; @return data&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f929284e1c0" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlWrite" ref="0x7f929284f940" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write to controller&#10;&#10; </short>
          <long>&#10; Write to controller&#10;&#10; @param The controller to write to&#10; @param controller data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f929284f330" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7f929284f6b0" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlRead" ref="0x7f9292850ab0" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="17:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read controller state&#10;&#10; </short>
          <long>&#10; Read controller state&#10;&#10; @param The controller to be checked&#10; &#10; @return state of the controller&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f9292850830" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f92927d6e80" loc="44:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f92927d45d0" loc="45:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f92927d6070" loc="42:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f92927d3480" loc="47:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f92927d6770" loc="43:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f92927d4cf0" loc="46:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f92927d7270" loc="40:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f92927d7940" loc="41:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f92927c35f0" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f92927c35f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f92927c3830" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f92927c3830"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f92927c2390" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f92927c3830"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f92927c2110" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f92927c3830"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIOPort" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f92927cac10" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f92927ca990" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f92927c7020" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f92927c8c80" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f92927c7970" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f92927c76f0" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f92927ca2a0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f92927ca020" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f92927c6a10" loc="13:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f92927c62e0" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f92927c6060" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f92927c85b0" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f92927c8330" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Enc28j60Control" loc="11:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60Control.nc">
      <function event="" provided="0" name="linkChange" ref="0x7f929257a900" loc="12:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60Control.nc">
        <interfacedef-ref qname="Enc28j60Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f92925ab700"/>
              <typename><typedef-ref name="link_status_t" ref="0x7f92925aa020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7f929257a680" loc="12:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60Control.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f92925ab700"/>
              <typename><typedef-ref name="link_status_t" ref="0x7f92925aa020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../tinyos_ws18/tos/interfaces/SpiByte.nc">
      <documentation loc="34:../tinyos_ws18/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f929256b0b0" loc="45:../tinyos_ws18/tos/interfaces/SpiByte.nc">
        <documentation loc="40:../tinyos_ws18/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f9292573de0" loc="45:../tinyos_ws18/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f9292571830" loc="56:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f929256e2b0" loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f92925710e0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f9292570a60" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f92925707e0" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f9292574960" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f9292570020" loc="63:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../tinyos_ws18/tos/interfaces/Resource.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f9292568120" loc="120:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f9292569120" loc="97:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="90:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f929256a770" loc="88:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f9292569910" loc="102:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="99:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f9292568b80" loc="128:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="122:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f92924fa600" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f9292504bb0" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f92924fa020" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f92924fa360" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f92924f9b80" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f92924f8e50" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f92924f9220" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f92924f9560" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f92924f98d0" loc="83:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f92924ff0b0" loc="62:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9292505dc0" loc="62:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f92924fd4d0" loc="74:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f92924fd250" loc="74:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f92924ff920" loc="68:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f92924fc020" loc="81:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f92924fdce0" loc="81:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiControl" loc="8:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
      <function command="" provided="0" name="setClock" ref="0x7f9292501020" loc="26:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
        <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
          <short>&#10; Control Spi speed&#10; &#10; IMPORTANT NOTE: Speed is reset to default after each resource release.</short>
          <long>&#10; Control Spi speed&#10; &#10; IMPORTANT NOTE: Speed is reset to default after each resource release.&#10; &#10;&#10; @param speed Spi speed in Fosc/speed&#10;&#10;    SPI_SPEED_4   - Set to Fosc/4&#10;    SPI_SPEED_16  - Set to Fosc/16&#10;    SPI_SPEED_64  - Set to Fosc/64&#10;    SPI_SPEED_128 - Set to Fosc/128&#10;    SPI_SPEED_2   - Set to Fosc/2&#10;    SPI_SPEED_8   - Set to Fosc/8&#10;    SPI_SPEED_32  - Set to Fosc/32&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f9292506d10"/>
              <typename><typedef-ref name="spi_speed_t" ref="0x7f9292502540"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f9292502d60" loc="26:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f9292506d10"/>
              <typename><typedef-ref name="spi_speed_t" ref="0x7f9292502540"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f92924e3cc0" loc="86:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f92924d9a70" loc="126:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f92924dd4a0" loc="117:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f92924d8530" loc="128:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f92924d82b0" loc="128:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f92924e3510" loc="83:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f92924da020" loc="122:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f92924dbd50" loc="122:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f92924dfb50" loc="113:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f92924df8d0" loc="113:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f92924e2c70" loc="97:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f92924d3020" loc="141:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f92924d4d00" loc="141:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f92924de350" loc="114:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f92924d6690" loc="131:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f92924d6410" loc="131:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f92924d5610" loc="136:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f92924d92e0" loc="125:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f92924d9060" loc="125:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f92924d45d0" loc="140:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f92924dde60" loc="119:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f92924ddbe0" loc="119:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f92924e1680" loc="103:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f92924e1400" loc="103:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f92924decd0" loc="116:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f92924dea50" loc="116:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f92924da890" loc="123:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f92924d8ca0" loc="129:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f92924d6df0" loc="132:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f92924d5dc0" loc="138:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f92924db610" loc="120:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f92924e24a0" loc="89:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f92924df0b0" loc="109:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f92924e1e00" loc="109:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f92924cd0e0" loc="90:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f92924cd940" loc="98:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f9292474ab0" loc="95:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9292471350" loc="105:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f929241d270" loc="53:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f929241dba0" loc="61:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f9292419b70" loc="65:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f9292419350" loc="59:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f9292410c10" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f929241acb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f9292410990" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f929241acb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f9292415c50" loc="53:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f92924117a0" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f929241acb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f9292411520" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f929241acb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f92924100e0" loc="70:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f929241acb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f92923ac680" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UdpQueue" loc="8:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f929231a620" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
        <interfacedef-ref qname="UdpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f929231c4d0" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f9292cddce0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f9292cdc180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="srcPort" ref="0x7f929231c840" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
          <variable name="dstPort" ref="0x7f929231cbb0" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f929231a020" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f929231a360" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f9292319020" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
        <interfacedef-ref qname="UdpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f929231ace0" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7f929228f790" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7f929228f790"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f929228eda0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f92922906c0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f929228e0d0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f92922906c0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f929228e420" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f929228e770" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f929228eaf0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f92922879a0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9292286c70" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f9292287020" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f9292287370" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f92922876f0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f929228ccf0" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f92922906c0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f929228c020" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f92922906c0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f929228c370" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f929228c6c0" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f929228ca40" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f9292289cf0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9292289020" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f9292289370" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f92922896c0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9292289a40" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f92921806c0" loc="56:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f929217f850" loc="73:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f9292184dd0" loc="46:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f929217f020" loc="65:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f929217e1f0" loc="81:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../tinyos_ws18/tos/interfaces/Leds.nc">
      <documentation loc="33:../tinyos_ws18/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f929216a390" loc="61:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f929216ab40" loc="67:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="63:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f9292169350" loc="72:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f92921682b0" loc="83:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="79:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f9292167a20" loc="100:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="96:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9292165270" loc="117:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="103:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f9292169ae0" loc="77:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="74:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9292165de0" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="120:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f9292165b60" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f929216bbd0" loc="56:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f9292168a90" loc="89:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="86:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f9292167270" loc="94:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="91:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f9292115770" loc="62:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7f92920f92b0" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7f92920b8bc0" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7f92920b7350" loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7f92920b54a0" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f92920b5220" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7f92920b84a0" loc="52:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7f92920b3da0" loc="65:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f92920aeb30" loc="84:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f92920b1790" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f92920b1510" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f92920ab420" loc="89:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f92920b9660" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7f92920b93e0" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7f92920b3670" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f92920b33f0" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f92920b0070" loc="68:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7f92920b5be0" loc="61:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f92920af070" loc="75:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7f92920b7aa0" loc="56:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f92920ae3f0" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f92920ae170" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f92920accc0" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f92920aca40" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7f92920b0870" loc="72:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7f92920b9d30" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7f92920b4580" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f92920b4300" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7f92920afa90" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f92920af810" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f92920ac350" loc="85:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7f92920b4cb0" loc="63:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x7f9291d62270" loc="43:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9291d66ad0" loc="40:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f9291d61800" loc="54:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f9291d60020" loc="57:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f9291d62980" loc="46:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x7f9291d5f2a0" loc="65:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f9291d5f020" loc="65:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f9291d610e0" loc="51:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x7f9291d5fa30" loc="70:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x7f9291d607b0" loc="62:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcConfig" loc="19:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
      <documentation loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7f9291d16940" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM1280_ADC_VREF_xxx values from Atm1280Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f9291d160e0" loc="25:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="20:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM1280_ADC_SNGL_xxx&#10;   or ATM1280_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7f9291d151f0" loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM1280_ADC_PRESCALE_xxx values from Atm1280Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../tinyos_ws18/tos/interfaces/ReadNow.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f9291d02d30" loc="52:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f9291d02d30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f9291cff660" loc="58:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f9291cfe400" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f9291d02d30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f9291cffe20" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9292f493a0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f9291cfe170" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f9291d02d30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcSingle" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
      <documentation loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega1280 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega1280 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f9291cf2020" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM1280_ADC_VREF_xxx constants in Atm1280ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM1280_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega1280 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f9291cf3270" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f9291cf35f0" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f9291cf3970" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f9291cf3ce0" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f9291cf19a0" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f9291cf10c0" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9291cf2aa0" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f9291cf2de0" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcMultiple" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
      <documentation loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm1280ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f9291cee830" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM1280_ADC_VREF_xxx constants in Atm1280ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM1280_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f9291cefad0" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f9291cefe50" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f9291cee210" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f9291cee580" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f9291ceb6c0" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <documentation loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9291cec4b0" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f9291cec7f0" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f9291cecb50" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7f9291ceb020" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7f9291ceb400" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280Adc" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <short>&#10; HPL interface to the Atmega1280 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega1280 A/D conversion subsystem. Please see the&#10; Atmega1280 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega1280 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7f9291cdb480" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7f9291ce2020" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292ea7eb0"/>
            <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f9292ea63a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7f9291cd8850" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM1280_ADC_PRESCALE_xxx&#10;   values from Atm1280Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f9291cd85d0" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929386ead0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f9291cdbd20" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="118:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7f9291ce0de0" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7f9291ce2a80" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292ea7eb0"/>
              <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f9292ea63a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7f9291ce2800" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9292ea7eb0"/>
              <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f9292ea63a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7f9291cdfd20" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7f9291cdad40" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f9291cd7070" loc="150:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7f9291cdf570" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7f9291cddca0" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7f9291cdd520" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f9291cdc4c0" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7f9291cda530" loc="127:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9292f53500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7f9291ce1dc0" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f9292ea0cb0"/>
              <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f9292e9f440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7f9291ce1b40" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f9292ea0cb0"/>
              <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f9292e9f440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7f9291cdccf0" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7f9291ce1350" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f9292ea0cb0"/>
            <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f9292e9f440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f9291ce0620" loc="75:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f9291cd7c00" loc="156:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="152:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9291cd7980" loc="156:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f929386d610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
